{
  "details": "MessengerRegistry is a contract to register openly distributed Messengers",
  "events": {
    "MessengerRegistered(address,address)": {
      "details": "event to log a new registered messenger",
      "params": {
        "messenger": "1. address of the registered messenger",
        "owner": "2. address of the owner"
      }
    }
  },
  "kind": "dev",
  "methods": {
    "registerMessenger(address,address)": {
      "details": "function to register a new Messenger",
      "params": {
        "_messengerAddress": "1. address of the messenger",
        "_ownerAddress": "2. address of the owner"
      }
    },
    "setSLARegistry()": {
      "details": "sets the SLARegistry contract address and can only be called once"
    }
  },
  "stateVariables": {
    "messengerOwners": {
      "details": "(messengerAddress=>ownerAddress) to register the owner of a Messenger"
    },
    "ownerMessengers": {
      "details": "(userAddress=>messengerAddress[]) to register the messengers of an owner"
    },
    "registeredMessengers": {
      "details": "(messengerAddress=>bool) to check if the Messenger was"
    },
    "slaRegistry": {
      "details": "(userAddress=>messengerAddress[]) to register the owner of a Messenger"
    }
  },
  "title": "MessengerRegistry",
  "version": 1
}
