{
	"compiler": {
		"version": "0.6.6+commit.6c089d02"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_owner",
						"type": "address"
					},
					{
						"internalType": "bytes32[]",
						"name": "_SLONames",
						"type": "bytes32[]"
					},
					{
						"internalType": "contract SLO[]",
						"name": "_SLOs",
						"type": "address[]"
					},
					{
						"internalType": "uint256",
						"name": "_stake",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "_ipfsHash",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "_sliInterval",
						"type": "uint256"
					},
					{
						"internalType": "contract bDSLAToken",
						"name": "_tokenAddress",
						"type": "address"
					},
					{
						"internalType": "uint256[]",
						"name": "_sla_period_starts",
						"type": "uint256[]"
					},
					{
						"internalType": "uint256[]",
						"name": "_sla_period_ends",
						"type": "uint256[]"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "period_index",
						"type": "uint256"
					}
				],
				"name": "NewPeriodAdded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_timestamp",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_value",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_periodId",
						"type": "uint256"
					}
				],
				"name": "SLICreated",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "SLIs",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "periodId",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "SLOs",
				"outputs": [
					{
						"internalType": "contract SLO",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					}
				],
				"name": "addAllowedTokens",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_sla_period_start",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_sla_period_end",
						"type": "uint256"
					}
				],
				"name": "addNewPeriod",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "allowedTokens",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "bDSLA",
				"outputs": [
					{
						"internalType": "contract bDSLAToken",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_period",
						"type": "uint256"
					}
				],
				"name": "claimCompensation",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_period",
						"type": "uint256"
					}
				],
				"name": "claimReward",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getDetails",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "bytes32[]",
						"name": "",
						"type": "bytes32[]"
					},
					{
						"internalType": "contract SLO[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_periodId",
						"type": "uint256"
					}
				],
				"name": "getPeriodData",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "periodStart",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "periodEnd",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_SLOName",
						"type": "bytes32"
					}
				],
				"name": "getSLI",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "timestamp",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "value",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "periodId",
								"type": "uint256"
							}
						],
						"internalType": "struct SLA.SLI[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getSliInterval",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_period",
						"type": "uint256"
					}
				],
				"name": "getUserTotalValue",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "ipfsHash",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "periods",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "sla_period_start",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "sla_period_end",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "claimed_reward",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "claimed",
						"type": "bool"
					},
					{
						"internalType": "enum Staking.Status",
						"name": "status",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_SLOName",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "_value",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_periodId",
						"type": "uint256"
					}
				],
				"name": "registerSLI",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "registry",
				"outputs": [
					{
						"internalType": "contract SLARegistry",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "stake",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_period",
						"type": "uint256"
					}
				],
				"name": "stakeTokens",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "stakers",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "stakersCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalStaked",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "uniqueTokensStaked",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "validator",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_period",
						"type": "uint256"
					}
				],
				"name": "withdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_period",
						"type": "uint256"
					}
				],
				"name": "withdrawAndStake",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "SLA is a service level agreement contract used for service downtime compensation",
			"methods": {
				"constructor": {
					"details": "constructor",
					"params": {
						"_SLONames": "the names of the service level objectives in a bytes32 array",
						"_SLOs": "an array with the service level objective addresses",
						"_ipfsHash": "the ipfs hash that stores extra information about the agreement",
						"_owner": "the owner of the service level agreement",
						"_stake": "the amount required to stake when subscribing to the agreement"
					}
				},
				"getDetails()": {
					"details": "external view function that returns all agreement information"
				},
				"getSLI(bytes32)": {
					"details": "external function to get SLI",
					"params": {
						"_SLOName": "the name of the SLO in bytes32"
					}
				},
				"getSliInterval()": {
					"details": "external view function that returns the sliInterval value"
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"registerSLI(bytes32,uint256,uint256)": {
					"details": "external function to register SLI's and check them against the SLO's",
					"params": {
						"_SLOName": "the name of the SLO in bytes32",
						"_periodId": "the id of the given period",
						"_value": "the value of the SLI to check"
					}
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"stakersCount()": {
					"details": "public view function that returns the total amount of stakers     "
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"title": "SLA"
		},
		"userdoc": {
			"methods": {}
		}
	},
	"settings": {
		"compilationTarget": {
			"localhost/contracts/SLA/SLA.sol": "SLA"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/GSN/Context.sol": {
			"keccak256": "0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183",
			"urls": [
				"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a",
				"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP"
			]
		},
		"@openzeppelin/contracts/access/AccessControl.sol": {
			"keccak256": "0x92f7900d382761c7faefeaced81c6b4f1aae909ed0551803bfe8f27101956360",
			"urls": [
				"bzz-raw://407c0864143968542e5cf5aa7556916d2cf292b201e3dadb65662e9a3aa24187",
				"dweb:/ipfs/QmSnXzYAUaGLGr7uofRbgQraTJvatbjQLBPhyYiMd18oUJ"
			]
		},
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc",
			"urls": [
				"bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3",
				"dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba"
			]
		},
		"@openzeppelin/contracts/math/SafeMath.sol": {
			"keccak256": "0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806",
			"urls": [
				"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5",
				"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV"
			]
		},
		"@openzeppelin/contracts/presets/ERC20PresetMinterPauser.sol": {
			"keccak256": "0xe30213b0851987b0455057cdfb65660c05805cbb05b12c0d61b0ff7a99cc36cc",
			"urls": [
				"bzz-raw://1c61711ecc3ad53890dded63c27909a315ba3053c553be29acaa239bc6a7a0cf",
				"dweb:/ipfs/QmQjriBzSyAYQTm4NfWpnnoH8RhZrayyXm2zvpeHkxQnAk"
			]
		},
		"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
			"keccak256": "0x91e0bd6a6762d2a1700dab0849de8422611355100576c4beef1e80d82a4104a0",
			"urls": [
				"bzz-raw://73bbd77af0a8b07255d2ffa20728bcf13b116007c9ddac5d37046cfabb0e1e02",
				"dweb:/ipfs/QmRgZgWCWCSMTTaok6o4QvWA6MgB4goS8qpb3sN7bAvaZ9"
			]
		},
		"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol": {
			"keccak256": "0x657b0d90be17331364211d74359df2a734fac864f6e88c80de7626fa33090ffb",
			"urls": [
				"bzz-raw://09cca25fefa2354a424d55a97930c76b11dc50697ba62c85d7affc27a37e830c",
				"dweb:/ipfs/QmPTQBYXxQDSNmMKqwe4WnM8E7NwnpLnkFLSRH8hZRvrVK"
			]
		},
		"@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol": {
			"keccak256": "0xbab4a97af2a6810a8ffc187205dfb331284949ea5b30caa5b9052828853bb149",
			"urls": [
				"bzz-raw://f53c98e31ed415c2a6f03d99809cd4f2f5fff92a13ee85022922a09df82ee459",
				"dweb:/ipfs/QmXiv4ysuQSRfoXqPpwA1QCreEnqfkrHDGyJTmifoni7dK"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385",
			"urls": [
				"bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017",
				"dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5"
			]
		},
		"@openzeppelin/contracts/utils/Address.sol": {
			"keccak256": "0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390",
			"urls": [
				"bzz-raw://774e78a9ff32792cc95db4d2ceaf3a7965bb7f0bea5e6cb7cff182b450d44b37",
				"dweb:/ipfs/QmRRMC4uj7eAcLW7chynA3sNEYULMFazdLwQHKHQPyzAbA"
			]
		},
		"@openzeppelin/contracts/utils/EnumerableSet.sol": {
			"keccak256": "0xb2a11b236f073662f5a196995863f51c11d006bf7c3de158b316dfa1506c4b79",
			"urls": [
				"bzz-raw://8651649cf0b9efa18c3b01c030276fa320d41adbdc286833417e7f36e357b2f3",
				"dweb:/ipfs/QmafhM2Nd1aP43QVB1eRRZaqRXQKswNfQcWi8U8xjrxCfN"
			]
		},
		"@openzeppelin/contracts/utils/Pausable.sol": {
			"keccak256": "0x5d1b1dcbc0396f44c1c8d554857f71e3187503bf1e54062bf9ec6782e21f3a08",
			"urls": [
				"bzz-raw://9aa7fa580393aab7ca3d9f606f5ab7434d51e1c0f3632a593fca82c80ef8cc4c",
				"dweb:/ipfs/QmRy84N7QfkwBM2AeR7UB5G1PPHdRLi6s1iyzAwCzevcHe"
			]
		},
		"localhost/contracts/SLA/SLA.sol": {
			"keccak256": "0xbf98b1597830d9acd3414c66e32421392a078b387f48db59fd4200d60ffcf927",
			"urls": [
				"bzz-raw://f2ec7e38cece8d1ec4d319cd0c2bcb8dcb17a74fe8879385ae5c55e9217cb2aa",
				"dweb:/ipfs/QmPZ65966UTd9mjCfbjcEP61nCjPdZudK6jEbLjq2QfotB"
			]
		},
		"localhost/contracts/SLA/Staking.sol": {
			"keccak256": "0xb5c998970686eec942b328d8b926b686a37c463cd05a8dd1960369c12c234b43",
			"urls": [
				"bzz-raw://3e90011e1fcf51c27a30b18324f32cd770ff08bba4d9818cb7898186ac51264a",
				"dweb:/ipfs/QmToMp1cxJwRN3DBDeNPz6LkwHG3UMxaYMHRqHzvWvkYR1"
			]
		},
		"localhost/contracts/SLARegistry.sol": {
			"keccak256": "0xcb92afaaf8d16201d0964445c41dd8f17ec4becdc362439b7b0fc381b5f19744",
			"urls": [
				"bzz-raw://666351c238242c9223bf4199830830a453f4c94f35fc9a73747b62055904f0e2",
				"dweb:/ipfs/QmfENQYjHTwBLZBqPDBtoZvagbsYxmCEGmBg84fx7jgwu6"
			]
		},
		"localhost/contracts/SLO/SLO.sol": {
			"keccak256": "0x774c489bdeabb39817df2bfa7ee80f26e45960373daa50ee5e9308453c6b3144",
			"urls": [
				"bzz-raw://88e8337296f4cc676ed4699ac02c8ef2ec8fc91d1a613197ee582ea338cb700c",
				"dweb:/ipfs/QmeoeyH6349GTGrZm9repEEEvZVR34cTdWQvbTYHTHCxaE"
			]
		},
		"localhost/contracts/bDSLA/bDSLAToken.sol": {
			"keccak256": "0xfde7f4cc126dda54526b5de0f3731b106d624028c892dbd9a4695ec186112aa6",
			"urls": [
				"bzz-raw://6a55d2581456dc3989e930fa26d5d41dd62932c7c8cbe1064da98efc8c0befc6",
				"dweb:/ipfs/QmQxZH3kT73aiozHvw72ZNtCA1x75NPKdpGZbx42HbCKH6"
			]
		},
		"localhost/contracts/interfaces/IMessenger.sol": {
			"keccak256": "0x0d3e37a96f73f69ff83b5f390344819b9d99f2b2eba9f6ae84600133ee0501dc",
			"urls": [
				"bzz-raw://c390fb6fb02a2d5f286f5319de111570d90d64daca2d21fa8e3a699191480a84",
				"dweb:/ipfs/QmeF9WfqVaftbFcSaLPeySHoPesVvbZ5w5JGxgnNrjzHap"
			]
		}
	},
	"version": 1
}