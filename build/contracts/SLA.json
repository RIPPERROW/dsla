{
  "contractName": "SLA",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "bytes32[]",
          "name": "_SLONames",
          "type": "bytes32[]"
        },
        {
          "internalType": "contract SLO[]",
          "name": "_SLOs",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "_stake",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_ipfsHash",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_sliInterval",
          "type": "uint256"
        },
        {
          "internalType": "contract bDSLAToken",
          "name": "_tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "_sla_period_starts",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_sla_period_ends",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "period_index",
          "type": "uint256"
        }
      ],
      "name": "NewPeriodAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_periodId",
          "type": "uint256"
        }
      ],
      "name": "SLICreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "SLIs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "periodId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "SLONames",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "SLOs",
      "outputs": [
        {
          "internalType": "contract SLO",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "addAllowedTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_sla_period_start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_sla_period_end",
          "type": "uint256"
        }
      ],
      "name": "addNewPeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allowedTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowedTokensMapping",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bDSLA",
      "outputs": [
        {
          "internalType": "contract bDSLAToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_period",
          "type": "uint256"
        }
      ],
      "name": "claimCompensation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_period",
          "type": "uint256"
        }
      ],
      "name": "claimReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_periodId",
          "type": "uint256"
        }
      ],
      "name": "getPeriodData",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "periodStart",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "periodEnd",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getTokenStake",
      "outputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "stake",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "getTokenStakeLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_period",
          "type": "uint256"
        }
      ],
      "name": "getUserTotalValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ipfsHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "periods",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "sla_period_start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sla_period_end",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "claimed_reward",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "claimed",
          "type": "bool"
        },
        {
          "internalType": "enum Staking.Status",
          "name": "status",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "internalType": "contract SLARegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_period",
          "type": "uint256"
        }
      ],
      "name": "stakeTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakersCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "uniqueTokensStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userStakedTokens",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userStakedTokensIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "userStakes",
      "outputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "stake",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "validator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_period",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_period",
          "type": "uint256"
        }
      ],
      "name": "withdrawAndStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_SLOName",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_periodId",
          "type": "uint256"
        }
      ],
      "name": "registerSLI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_SLOName",
          "type": "bytes32"
        }
      ],
      "name": "getSLI",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "periodId",
              "type": "uint256"
            }
          ],
          "internalType": "struct SLA.SLI[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSliInterval",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDetails",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        },
        {
          "internalType": "contract SLO[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"_SLONames\",\"type\":\"bytes32[]\"},{\"internalType\":\"contract SLO[]\",\"name\":\"_SLOs\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_stake\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_ipfsHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_sliInterval\",\"type\":\"uint256\"},{\"internalType\":\"contract bDSLAToken\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_sla_period_starts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_sla_period_ends\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"period_index\",\"type\":\"uint256\"}],\"name\":\"NewPeriodAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_periodId\",\"type\":\"uint256\"}],\"name\":\"SLICreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"SLIs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"periodId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"SLONames\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"SLOs\",\"outputs\":[{\"internalType\":\"contract SLO\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"addAllowedTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_sla_period_start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sla_period_end\",\"type\":\"uint256\"}],\"name\":\"addNewPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allowedTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowedTokensMapping\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bDSLA\",\"outputs\":[{\"internalType\":\"contract bDSLAToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"claimCompensation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDetails\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"contract SLO[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_periodId\",\"type\":\"uint256\"}],\"name\":\"getPeriodData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"periodStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"periodEnd\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_SLOName\",\"type\":\"bytes32\"}],\"name\":\"getSLI\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"periodId\",\"type\":\"uint256\"}],\"internalType\":\"struct SLA.SLI[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSliInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getTokenStake\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getTokenStakeLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"getUserTotalValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ipfsHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"periods\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sla_period_start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sla_period_end\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimed_reward\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"claimed\",\"type\":\"bool\"},{\"internalType\":\"enum Staking.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_SLOName\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_periodId\",\"type\":\"uint256\"}],\"name\":\"registerSLI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract SLARegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"stakeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakersCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"uniqueTokensStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userStakedTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userStakedTokensIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userStakes\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"validator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"withdrawAndStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"SLA is a service level agreement contract used for service downtime compensation\",\"events\":{\"SLICreated(uint256,uint256,uint256)\":{\"details\":\"event for SLI creation logging\",\"params\":{\"_periodId\":\"3. the id of the given period\",\"_timestamp\":\"1. the time the SLI has been registered\",\"_value\":\"2. the value of the SLI\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_SLONames\":\"2. array of the names of the service level objectives in bytes32\",\"_SLOs\":\"3. array of service level objective contract addressess service level objective breach\",\"_ipfsHash\":\"5. string with the ipfs hash that contains extra information about the service level agreement\",\"_owner\":\"1. address of the owner of the service level agreement\",\"_sla_period_ends\":\"9. array with the values for the \\\"end\\\" of every period\",\"_sla_period_starts\":\"8. array with the values for the \\\"start\\\" of every period\",\"_sliInterval\":\"6. uint the interval in seconds between requesting a new SLI\",\"_stake\":\"4. uint of the amount required to stake when signing the service level agreement\",\"_tokenAddress\":\"7. address of the DSLA token to be unlocked for staking\"}},\"getDetails()\":{\"details\":\"external view function that returns all agreement information\",\"returns\":{\"_0\":\"address owner\",\"_1\":\"string ipfsHash\",\"_2\":\"uint256 amount necessary to stake\",\"_3\":\"bytes32[] aasdad\",\"_4\":\"SL[] aasdad\"}},\"getSLI(bytes32)\":{\"details\":\"external function to get SLIs of certain _SLO\",\"params\":{\"_SLOName\":\"1. the name of the SLO in bytes32\"},\"returns\":{\"_0\":\"SLI[] array of SLIs associated to the input SLOs\"}},\"getSliInterval()\":{\"details\":\"external view function that returns the sliInterval value\",\"returns\":{\"_0\":\"uint256 value of the sliInterval\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"registerSLI(bytes32,uint256,uint256)\":{\"details\":\"external function to register SLI's and check them against the SLO's\",\"params\":{\"_SLOName\":\"1. the name of the SLO in bytes32\",\"_periodId\":\"3. the id of the given period\",\"_value\":\"2. the value of the SLI to check\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"stakersCount()\":{\"details\":\"public view function that returns the total amount of stakers\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"SLIs\":{\"details\":\"mapping to get SLI structs from SLO names in bytes32\"},\"SLONames\":{\"details\":\"array storing the names of the SLO's of this agreement\"},\"SLOs\":{\"details\":\"mapping to get SLO addresses from SLO names in bytes32\"},\"ipfsHash\":{\"details\":\"The ipfs hash that stores extra information about the agreement\"},\"registry\":{\"details\":\"The address of the registry contract\"},\"sliInterval\":{\"details\":\"The time between SLI registration\"},\"stake\":{\"details\":\"The required amount to stake when subscribing to the agreement\"}},\"title\":\"SLA\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLA/SLA.sol\":\"SLA\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/Messenger.sol\":{\"keccak256\":\"0xaf84fe6167ddc93f4c354d14136f10a6963dd1c1dfb178a788d490dfa4979388\",\"urls\":[\"bzz-raw://d84bb9e12396919529b929b2b7a0b40f0f95f6e9f7ae0622707680d2f80bab39\",\"dweb:/ipfs/QmVPUpzVefxYKKidX94ioBE16K3yFLrc4G23qw5M4bLJuL\"]},\"/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLA/SLA.sol\":{\"keccak256\":\"0xf9877038d53cd448d197a97eb0aa1f05f53664219813511adacdfce4ce9306ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bac62f806d7b90b5e18b0c24ac017c4d6cca126114f9747cdca7b39092369848\",\"dweb:/ipfs/QmbrCU79oLhML8jcHSN4WkAi5A3aZKnXYDyvHDVSFLheTy\"]},\"/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLA/Staking.sol\":{\"keccak256\":\"0xdfdaa39e77663d2e5d506559b182dc80c7e919f2b8f2d0cfa32f96e146c0a2e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b80e42c851d86642e6a0afadf0488288e79edf7e2d69aec7969d63c6868db011\",\"dweb:/ipfs/QmVhYkzYGG6G2GDs4tjiogUBRduQyZ5uRQCMdpDP81c9s6\"]},\"/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLARegistry.sol\":{\"keccak256\":\"0x0e5f2c7740517098d74c540b00ac9810fba4c5b77487e3b6d7ab65166802cf16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9140b2da8980e31d0e01f1b6e665d687279ddd983369f9dcc6424f4f6de6c17c\",\"dweb:/ipfs/Qmdy2iSHm6NB77Wfkj8ja3cLWzvq4SRzzHXHbR7XPMHKrH\"]},\"/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLO/SLO.sol\":{\"keccak256\":\"0xe27a739a70cb7c1ade780276d0d1a5b794e9e35cb049839daf74a359901ce2bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11bd0d84b2b7c9182d8f93f96623e08728adf71777ab79150f21c5e95340580f\",\"dweb:/ipfs/QmaYKHgYX185PPvAJugk7RFe79AcxdpP8UaVWNUkuNs3xQ\"]},\"/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/StringUtils.sol\":{\"keccak256\":\"0xed67dd7772841b09f0a00e6e191f42746f078e0907d38964c7d164ac32e0a7ef\",\"urls\":[\"bzz-raw://b5df848099351c5c9883d690eaaee2e79e1a31552d80f0fc8cd33902f9f01daa\",\"dweb:/ipfs/QmPDQp8CwK1bHyNkwBJPgNz2nqkvx6Fwh3jDrJoojwCB5u\"]},\"/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/bDSLA/bDSLAToken.sol\":{\"keccak256\":\"0x935ff32e24401d6a99292539dff3fefcb399a0591a5c56e79869e5cb71340f47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a3a65b7a9b74e296ae7a94a44318a28d5bc7776eab6eeeeafc2222b96951d8f\",\"dweb:/ipfs/QmcsSPLgWoTuhWWQLjjkS9UdW5N5V75TSRwoYkzY25WzCR\"]},\"@chainlink/contracts/src/v0.6/Chainlink.sol\":{\"keccak256\":\"0x7048bfd6e6fe4e60ea4af01ed44fc0494cec75df75c6b542a6f08ed34c66d39e\",\"urls\":[\"bzz-raw://37efc6a4665b537657283652d75919ec8dd3d48d85150b5285041bc9614fec11\",\"dweb:/ipfs/QmWKgeJEj222kNefTkauHwM5x58KTxSGgcbLseH9Fq8jed\"]},\"@chainlink/contracts/src/v0.6/ChainlinkClient.sol\":{\"keccak256\":\"0xd06166f7798c4c8cbd0e2dc642450c9bca39157c688ae95dbe079f666cc44dfa\",\"urls\":[\"bzz-raw://672af493da8e01492532d7ca8660362d015f317114e405aa55c85cff24aee31c\",\"dweb:/ipfs/QmNZdB2jVwwswrLFr83toTtHM5MPSugKeUdxrxfCJ4mP4K\"]},\"@chainlink/contracts/src/v0.6/interfaces/ChainlinkRequestInterface.sol\":{\"keccak256\":\"0x4b41b021bf58c429891ff291637de29be54741565105de82238dac9f6ecee374\",\"urls\":[\"bzz-raw://84681ff65b31b2e2c6977289661733c0f22409965b9057140f56f8a9ff185048\",\"dweb:/ipfs/QmS4TQJDSHQiKNwQ4LkSCVp7LjuRQwp6gem3271vtCwz9k\"]},\"@chainlink/contracts/src/v0.6/interfaces/ENSInterface.sol\":{\"keccak256\":\"0xf4998e886147b298eda28b4eacbdc90c58ba63ba475469651f2072e188dd5a64\",\"urls\":[\"bzz-raw://c1e2334294a816b7eda9de280e39b9463ebde2db8b242410eb991b2f623b47d4\",\"dweb:/ipfs/QmNY5bajahfFRmhBgcMVQ7712zHKxc6HkuN7LaiKtpjb7t\"]},\"@chainlink/contracts/src/v0.6/interfaces/LinkTokenInterface.sol\":{\"keccak256\":\"0xdbf46b45a4c9f38ba71a0391aed0e7b108854b619f292d907ae537228868bda6\",\"urls\":[\"bzz-raw://3ae40466809630c4731e2e3a697d6885727c577aaf260766c8a2f534ad3f6ee8\",\"dweb:/ipfs/QmTzpN5yP4Y5jvQ1ohfXFrce3sjzUiSChYJgZj9VvhVohG\"]},\"@chainlink/contracts/src/v0.6/interfaces/PointerInterface.sol\":{\"keccak256\":\"0x6458d82762d4f13c020a13efdbd9bf14500e147df707184a693aea91449c2f4f\",\"urls\":[\"bzz-raw://735950f3a544fc6ef2db92405597169bfb5fdb9df83623c0d99fd3d85de8690d\",\"dweb:/ipfs/QmZHxb5Qr7Kw9DHAg4VwEADue9ffNyyhbiyEZ15A5mANUN\"]},\"@chainlink/contracts/src/v0.6/vendor/BufferChainlink.sol\":{\"keccak256\":\"0xe4aa364f56414c4326ffe12c1121d591be6ad168afb42b24a823f6d76299dd63\",\"urls\":[\"bzz-raw://e3e91a0eddb6fc6c53acdfbd59771deff1678330128d3c98014c668763efb45e\",\"dweb:/ipfs/Qmbt5VNT2W2oCN44536JGNuHqAJdmYGqzEFcHvy8W1tAsY\"]},\"@chainlink/contracts/src/v0.6/vendor/CBORChainlink.sol\":{\"keccak256\":\"0xbb4d8257c1af348cac9828ee531428b148bb726517357fe6a80279ac45b658b5\",\"urls\":[\"bzz-raw://8c8c5da0358946437fac595591367066b8d6e5f58414c027a79a093e1f3241c1\",\"dweb:/ipfs/QmNQ5TPzaPEbj5kaX17YLuZEmhv8NGfoCrUVK3s6gQuHdA\"]},\"@chainlink/contracts/src/v0.6/vendor/ENSResolver.sol\":{\"keccak256\":\"0xdddea29d7407c1dbd1e130d885fc1a0934e98f0a7cc9f4d5bfd002bb2cfbcf82\",\"urls\":[\"bzz-raw://c4c764d69c47754d7b219fab558bf4be2a6444470ede7aa0ab1e446aea01dbda\",\"dweb:/ipfs/QmWp2CNUw9xt8ir2P3LhGHuydUsAXnyZ382U2BUjhoYPvy\"]},\"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":{\"keccak256\":\"0x5e6948bb332468d8ef0704b4259babc8aef7ce5969d5997c16db8ad806222a0a\",\"urls\":[\"bzz-raw://8e2bbda1e1168401d0105cc86bf5302000e8555ebb9b235cd68c148916a452e5\",\"dweb:/ipfs/QmbTjbpJr8VfdWfgBknbQov1MGkXXPMysb7eD8bobGAcBV\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x92f7900d382761c7faefeaced81c6b4f1aae909ed0551803bfe8f27101956360\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://407c0864143968542e5cf5aa7556916d2cf292b201e3dadb65662e9a3aa24187\",\"dweb:/ipfs/QmSnXzYAUaGLGr7uofRbgQraTJvatbjQLBPhyYiMd18oUJ\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3\",\"dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"@openzeppelin/contracts/presets/ERC20PresetMinterPauser.sol\":{\"keccak256\":\"0xe30213b0851987b0455057cdfb65660c05805cbb05b12c0d61b0ff7a99cc36cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c61711ecc3ad53890dded63c27909a315ba3053c553be29acaa239bc6a7a0cf\",\"dweb:/ipfs/QmQjriBzSyAYQTm4NfWpnnoH8RhZrayyXm2zvpeHkxQnAk\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x91e0bd6a6762d2a1700dab0849de8422611355100576c4beef1e80d82a4104a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73bbd77af0a8b07255d2ffa20728bcf13b116007c9ddac5d37046cfabb0e1e02\",\"dweb:/ipfs/QmRgZgWCWCSMTTaok6o4QvWA6MgB4goS8qpb3sN7bAvaZ9\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0x657b0d90be17331364211d74359df2a734fac864f6e88c80de7626fa33090ffb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09cca25fefa2354a424d55a97930c76b11dc50697ba62c85d7affc27a37e830c\",\"dweb:/ipfs/QmPTQBYXxQDSNmMKqwe4WnM8E7NwnpLnkFLSRH8hZRvrVK\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol\":{\"keccak256\":\"0xbab4a97af2a6810a8ffc187205dfb331284949ea5b30caa5b9052828853bb149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f53c98e31ed415c2a6f03d99809cd4f2f5fff92a13ee85022922a09df82ee459\",\"dweb:/ipfs/QmXiv4ysuQSRfoXqPpwA1QCreEnqfkrHDGyJTmifoni7dK\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017\",\"dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://774e78a9ff32792cc95db4d2ceaf3a7965bb7f0bea5e6cb7cff182b450d44b37\",\"dweb:/ipfs/QmRRMC4uj7eAcLW7chynA3sNEYULMFazdLwQHKHQPyzAbA\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xb2a11b236f073662f5a196995863f51c11d006bf7c3de158b316dfa1506c4b79\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8651649cf0b9efa18c3b01c030276fa320d41adbdc286833417e7f36e357b2f3\",\"dweb:/ipfs/QmafhM2Nd1aP43QVB1eRRZaqRXQKswNfQcWi8U8xjrxCfN\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0x5d1b1dcbc0396f44c1c8d554857f71e3187503bf1e54062bf9ec6782e21f3a08\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9aa7fa580393aab7ca3d9f606f5ab7434d51e1c0f3632a593fca82c80ef8cc4c\",\"dweb:/ipfs/QmRy84N7QfkwBM2AeR7UB5G1PPHdRLi6s1iyzAwCzevcHe\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620032b1380380620032b183398101604081905262000034916200076c565b8282828b60006200004462000274565b600080546001600160a01b0319166001600160a01b03831690811782556040519293509160008051602062003291833981519152908290a3508151835114620000aa5760405162461bcd60e51b8152600401620000a190620008fe565b60405180910390fd5b600180546001600160a01b038087166001600160a01b031992831617808455600480548086019091557f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180548416918316919091179055825481166000908152600560205260408120805460ff191690941790935560028054918516919092161790555b83518110156200017c57620001738482815181106200014a57fe5b60200260200101518483815181106200015f57fe5b60200260200101516200027860201b60201c565b6001016200012f565b505050505060058751106200019057600080fd5b86518851146200019f57600080fd5b60005b87518110156200021357878181518110620001b957fe5b6020026020010151601060008b8481518110620001d257fe5b602090810291909101810151825281019190915260400160002080546001600160a01b0319166001600160a01b0392909216919091179055600101620001a2565b506200021f89620003c7565b8751620002349060129060208b0190620004f6565b50600c86905584516200024f90600e90602088019062000546565b5050600f80546001600160a01b031916331790555050600d555062000a0f9350505050565b3390565b62000282620005b8565b828152602081018281526000608083018181526006805460018101825592819052845192027ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f810192835592517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4084015560408401517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4184015560608401517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d42909301805493151560ff199094169390931780845590518493909161ff0019166101008360028111156200037257fe5b021790555050506200039960016006805490506200047460201b62001be51790919060201c565b6040517ff791e873e3b67fe74b29aeede7bcbbdaa59c4b64e542571183cd837aa56f6ac990600090a2505050565b620003d162000274565b6000546001600160a01b03908116911614620004015760405162461bcd60e51b8152600401620000a19062000947565b6001600160a01b0381166200042a5760405162461bcd60e51b8152600401620000a190620008b8565b600080546040516001600160a01b03808516939216916000805160206200329183398151915291a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000620004be83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250620004c760201b60201c565b90505b92915050565b60008184841115620004ee5760405162461bcd60e51b8152600401620000a1919062000883565b505050900390565b82805482825590600052602060002090810192821562000534579160200282015b828111156200053457825182559160200191906001019062000517565b5062000542929150620005f4565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200058957805160ff191683800117855562000534565b828001600101855582156200053457918201828111156200053457825182559160200191906001019062000517565b6040518060a0016040528060008152602001600081526020016000815260200160001515815260200160006002811115620005ef57fe5b905290565b5b80821115620005425760008155600101620005f5565b8051620004c181620009f6565b600082601f83011262000629578081fd5b8151620006406200063a82620009a3565b6200097c565b8181529150602080830190848101818402860182018710156200066257600080fd5b60005b84811015620006835781518452928201929082019060010162000665565b505050505092915050565b600082601f8301126200069f578081fd5b8151620006b06200063a82620009a3565b818152915060208083019084810181840286018201871015620006d257600080fd5b60005b8481101562000683578151620006eb81620009f6565b84529282019290820190600101620006d5565b600082601f8301126200070f578081fd5b81516001600160401b0381111562000725578182fd5b6200073a601f8201601f19166020016200097c565b91508082528360208285010111156200075257600080fd5b62000765816020840160208601620009c3565b5092915050565b60008060008060008060008060006101208a8c0312156200078b578485fd5b620007978b8b6200060b565b60208b01519099506001600160401b0380821115620007b4578687fd5b620007c28d838e0162000618565b995060408c0151915080821115620007d8578687fd5b620007e68d838e016200068e565b985060608c0151975060808c015191508082111562000803578687fd5b620008118d838e01620006fe565b965060a08c01519550620008298d60c08e016200060b565b945060e08c01519150808211156200083f578384fd5b6200084d8d838e0162000618565b93506101008c015191508082111562000864578283fd5b50620008738c828d0162000618565b9150509295985092959850929598565b6000602082528251806020840152620008a4816040850160208701620009c3565b601f01601f19169190910160400192915050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526029908201527f506c6561736520636865636b2074686520706172616d73206f6620796f757220604082015268706572696f6473202160b81b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6040518181016001600160401b03811182821017156200099b57600080fd5b604052919050565b60006001600160401b03821115620009b9578081fd5b5060209081020190565b60005b83811015620009e0578181015183820152602001620009c6565b83811115620009f0576000848401525b50505050565b6001600160a01b038116811462000a0c57600080fd5b50565b6128728062000a1f6000396000f3fe608060405234801561001057600080fd5b50600436106101dc5760003560e01c806394199c6111610105578063ea4a11041161009d578063ea4a1104146103dd578063ec04de4814610401578063f10bd77214610414578063f2fde38b14610427578063f34ed40d1461043a578063f3fef3a31461044d578063fbbf93a014610460578063fc875ece14610479578063fd5e6dd11461049a576101dc565b806394199c6114610337578063a2e80c5e14610359578063ae169a5014610361578063b0227b4714610374578063b5d5b5fa14610387578063b83e02341461039a578063c623674f146103ad578063cec534d6146103c2578063e7ab816a146103d5576101dc565b806357ac94f01161017857806357ac94f0146102b55780635e5f2e26146102d65780635f4efaba146102e9578063715018a6146102f157806375fdf2a9146102f95780637b1039991461030c578063817b1cd214610314578063869c39251461031c5780638da5cb5b1461032f576101dc565b806302e8b893146101e15780630e1fcf341461020a578063105237cf1461021f578063171e44ea1461023f5780631934d0e8146102525780632eac9787146102655780633a4b66f1146102855780633a5381b51461028d57806353e85fd5146102a2575b600080fd5b6101f46101ef3660046121eb565b6104ad565b60405161020191906123f6565b60405180910390f35b61021d610218366004612203565b61053e565b005b61023261022d366004612118565b61058a565b604051610201919061244f565b61021d61024d366004612118565b61059f565b610232610260366004612134565b610674565b610278610273366004612134565b610694565b604051610201919061245a565b6102786106b1565b6102956106b7565b60405161020191906122fa565b61021d6102b03660046121eb565b6106c6565b6102c86102c336600461216c565b610940565b604051610201929190612332565b6102956102e43660046121eb565b6109c0565b6102956109e7565b61021d6109f6565b61021d610307366004612197565b610a75565b610295610dd5565b610278610de4565b61021d61032a366004612224565b610dea565b610295611035565b61034a610345366004612203565b611044565b604051610201939291906127d7565b610278611083565b61021d61036f3660046121eb565b611089565b6102956103823660046121eb565b611263565b6102c861039536600461216c565b61127e565b6102786103a8366004612118565b6112c1565b6103b56112d3565b6040516102019190612463565b61021d6103d036600461226b565b611361565b610278611551565b6103f06103eb3660046121eb565b611557565b6040516102019594939291906127ed565b61027861040f366004612118565b61159a565b61027861042236600461216c565b6115b5565b61021d610435366004612118565b611678565b6102786104483660046121eb565b61172e565b61021d61045b36600461216c565b61174c565b6104686119be565b60405161020195949392919061234b565b61048c6104873660046121eb565b611b8e565b6040516102019291906127c9565b6102956104a83660046121eb565b611bd8565b606060116000838152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561053257838290600052602060002090600302016040518060600160405290816000820154815260200160018201548152602001600282015481525050815260200190600101906104e2565b5050505090505b919050565b610546611c2e565b6000546001600160a01b0390811691161461057c5760405162461bcd60e51b8152600401610573906126d8565b60405180910390fd5b6105868282611c32565b5050565b60056020526000908152604090205460ff1681565b6105a7611c2e565b6000546001600160a01b039081169116146105d45760405162461bcd60e51b8152600401610573906126d8565b6001600160a01b03811660009081526005602052604090205460ff161561060d5760405162461bcd60e51b8152600401610573906125e6565b6004805460018181019092557f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b039093166001600160a01b031990931683179055600091825260056020526040909120805460ff19169091179055565b600a60209081526000928352604080842090915290825290205460ff1681565b600960209081526000928352604080842090915290825290205481565b600c5481565b6002546001600160a01b031681565b80600681815481106106d457fe5b90600052602060002090600602016000015442101580156107135750600681815481106106fd57fe5b9060005260206000209060060201600101544211155b61071c57600080fd5b6002546001600160a01b03163314156107475760405162461bcd60e51b815260040161057390612580565b60026006838154811061075657fe5b906000526020600020906006020160030160019054906101000a900460ff16600281111561078057fe5b1461079d5760405162461bcd60e51b8152600401610573906124da565b600682815481106107aa57fe5b6000918252602080832033845260056006909302019190910190526040902054156107e75760405162461bcd60e51b81526004016105739061276c565b60006107f333846115b5565b9050600061080d600a610807846003611d6c565b90611da6565b600b5490915061081d9083611be5565b600b81905550816006858154811061083157fe5b600091825260208083203380855260069390930201600501905260409182902092909255600154905163a9059cbb60e01b81526001600160a01b039091169163a9059cbb9161088591908690600401612332565b602060405180830381600087803b15801561089f57600080fd5b505af11580156108b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d791906121cb565b50600154604051630852cd8d60e31b81526001600160a01b03909116906342966c689061090890849060040161245a565b600060405180830381600087803b15801561092257600080fd5b505af1158015610936573d6000803e3d6000fd5b5050505050505050565b6001600160a01b038216600090815260086020526040812080548291908490811061096757fe5b600091825260208083206002909202909101546001600160a01b038781168452600890925260409092208054919092169190859081106109a357fe5b906000526020600020906002020160010154915091509250929050565b600481815481106109cd57fe5b6000918252602090912001546001600160a01b0316905081565b6001546001600160a01b031681565b6109fe611c2e565b6000546001600160a01b03908116911614610a2b5760405162461bcd60e51b8152600401610573906126d8565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6002546001600160a01b0316331415610aa05760405162461bcd60e51b815260040161057390612580565b6001600160a01b038316600090815260056020526040902054839060ff161515600114610adf5760405162461bcd60e51b8152600401610573906126aa565b600060068381548110610aee57fe5b600091825260208083206001600160a01b03891684526004600690930201919091018152604080832033845290915290205411610b3d5760405162461bcd60e51b8152600401610573906125af565b6040516323b872dd60e01b81526001600160a01b038516906323b872dd90610b6d9033903090889060040161230e565b602060405180830381600087803b158015610b8757600080fd5b505af1158015610b9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bbf91906121cb565b50610c098360068481548110610bd157fe5b600091825260208083206001600160a01b038a1684526004600690930201919091018152604080832033845290915290205490611de8565b60068381548110610c1657fe5b600091825260208083206001600160a01b038916845260046006909302019190910181526040808320338452909152902055600b54610c559084611de8565b600b55610c628484611e0d565b600060068381548110610c7157fe5b600091825260208083206001600160a01b0389168452600692830201600401815260408084203385529091528220546003548254919450610cd892909187908110610cb857fe5b906000526020600020906006020160020154611da690919063ffffffff16565b9050600060068581548110610ce957fe5b600091825260208083206001600160a01b038b16845260046006909302019190910181526040808320338452909152902055600b54610d289083611be5565b600b556001546001600160a01b031663a9059cbb33610d478585611be5565b6040518363ffffffff1660e01b8152600401610d64929190612332565b602060405180830381600087803b158015610d7e57600080fd5b505af1158015610d92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db691906121cb565b50600154610dcd906001600160a01b031683611f38565b505050505050565b600f546001600160a01b031681565b600b5481565b600f60009054906101000a90046001600160a01b03166001600160a01b0316633cb747bf6040518163ffffffff1660e01b815260040160206040518083038186803b158015610e3857600080fd5b505afa158015610e4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e70919061224f565b6001600160a01b0316336001600160a01b031614610e8d57600080fd5b600083815260116020908152604080832081516060810183524280825281850188815282850188815284546001818101875595895296909720925160039096029092019485559051918401919091559251600290920191909155517fc95987c1992805ee34bdc915e017cceae36ba1c156b9911fa7e691e6435eb46e91610f1791859085906127d7565b60405180910390a16000838152601060205260409081902054905163868d08f760e01b81526001600160a01b039091169063868d08f790610f5c90859060040161245a565b60206040518083038186803b158015610f7457600080fd5b505afa158015610f88573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fac91906121cb565b610ff257600260068281548110610fbf57fe5b60009182526020909120600360069092020101805461ff001916610100836002811115610fe857fe5b0217905550611030565b60016006828154811061100157fe5b60009182526020909120600360069092020101805461ff00191661010083600281111561102a57fe5b02179055505b505050565b6000546001600160a01b031690565b6011602052816000526040600020818154811061105d57fe5b600091825260209091206003909102018054600182015460029092015490935090915083565b60035490565b806006818154811061109757fe5b90600052602060002090600602016000015442101580156110d65750600681815481106110c057fe5b9060005260206000209060060201600101544211155b6110df57600080fd5b6002546001600160a01b031633146111095760405162461bcd60e51b815260040161057390612739565b60016006838154811061111857fe5b906000526020600020906006020160030160019054906101000a900460ff16600281111561114257fe5b1461115f5760405162461bcd60e51b8152600401610573906124ad565b6006828154811061116c57fe5b600091825260209091206003600690920201015460ff16156111a05760405162461bcd60e51b815260040161057390612613565b600654600b546000916111b39190611da6565b905060006111c7600a610807846003611d6c565b600b549091506111d79083611be5565b600b8190555081600685815481106111eb57fe5b90600052602060002090600602016002018190555060016006858154811061120f57fe5b60009182526020909120600690910201600301805460ff191691151591909117905560015460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906108859033908690600401612332565b6010602052600090815260409020546001600160a01b031681565b6008602052816000526040600020818154811061129757fe5b6000918252602090912060029091020180546001909101546001600160a01b039091169250905082565b60076020526000908152604090205481565b600e805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156113595780601f1061132e57610100808354040283529160200191611359565b820191906000526020600020905b81548152906001019060200180831161133c57829003601f168201915b505050505081565b6001600160a01b038216600090815260056020526040902054829060ff1615156001146113a05760405162461bcd60e51b8152600401610573906126aa565b600084116113c05760405162461bcd60e51b81526004016105739061270d565b6113cb338484611f98565b6040516323b872dd60e01b81526001600160a01b038416906323b872dd906113fb9033903090899060040161230e565b602060405180830381600087803b15801561141557600080fd5b505af1158015611429573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061144d91906121cb565b50611497846006848154811061145f57fe5b600091825260208083206001600160a01b03891684526004600690930201919091018152604080832033845290915290205490611de8565b600683815481106114a457fe5b600091825260208083206001600160a01b038816845260046006909302019190910181526040808320338452909152902055600b546114e39085611de8565b600b55336000908152600760205260409020546001141561154157600380546001810182556000919091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b031916331790555b61154b8385611e0d565b50505050565b600d5490565b6006818154811061156457fe5b60009182526020909120600690910201805460018201546002830154600390930154919350919060ff8082169161010090041685565b6001600160a01b031660009081526008602052604090205490565b6001600160a01b0382166000908152600760205260408120546115ea5760405162461bcd60e51b815260040161057390612476565b6000805b60045481101561166e576116646006858154811061160857fe5b906000526020600020906006020160040160006004848154811061162857fe5b60009182526020808320909101546001600160a01b0390811684528382019490945260409283018220938a168252929092529020548390611de8565b91506001016115ee565b5090505b92915050565b611680611c2e565b6000546001600160a01b039081169116146116ad5760405162461bcd60e51b8152600401610573906126d8565b6001600160a01b0381166116d35760405162461bcd60e51b815260040161057390612503565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6012818154811061173b57fe5b600091825260209091200154905081565b6002546001600160a01b03163314156117775760405162461bcd60e51b815260040161057390612580565b6001600160a01b038216600090815260056020526040902054829060ff1615156001146117b65760405162461bcd60e51b8152600401610573906126aa565b6000600683815481106117c557fe5b600091825260208083206001600160a01b038816845260046006909302019190910181526040808320338452909152902054116118145760405162461bcd60e51b8152600401610573906125af565b60006006838154811061182357fe5b600091825260208083206001600160a01b038816845260069283020160040181526040808420338552909152822054600354825491945061186a92909187908110610cb857fe5b905060006006858154811061187b57fe5b600091825260208083206001600160a01b038a16845260046006909302019190910181526040808320338452909152902055600b546118ba9083611be5565b600b556001600160a01b03851663a9059cbb336118d78585611be5565b6040518363ffffffff1660e01b81526004016118f4929190612332565b602060405180830381600087803b15801561190e57600080fd5b505af1158015611922573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061194691906121cb565b5033600090815260076020526040902054611962906001611be5565b3360009081526007602052604090208190556119ad57600061198333612021565b90506003818154811061199257fe5b600091825260209091200180546001600160a01b0319169055505b6119b78583611f38565b5050505050565b600060606000606080606060128054905067ffffffffffffffff811180156119e557600080fd5b50604051908082528060200260200182016040528015611a0f578160200160208202803683370190505b50905060005b601254811015611a89576010600060128381548110611a3057fe5b9060005260206000200154815260200190815260200160002060009054906101000a90046001600160a01b0316828281518110611a6957fe5b6001600160a01b0390921660209283029190910190910152600101611a15565b50611a92611035565b600c54600e805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292939260129287928691830182828015611b235780601f10611af857610100808354040283529160200191611b23565b820191906000526020600020905b815481529060010190602001808311611b0657829003601f168201915b5050505050935081805480602002602001604051908101604052809291908181526020018280548015611b7557602002820191906000526020600020905b815481526020019060010190808311611b61575b5050505050915095509550955095509550509091929394565b60008060068381548110611b9e57fe5b90600052602060002090600602016000015460068481548110611bbd57fe5b90600052602060002090600602016001015491509150915091565b600381815481106109cd57fe5b6000611c2783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061207a565b9392505050565b3390565b611c3a6120dd565b828152602081018281526000608083018181526006805460018101825592819052845192027ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f810192835592517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4084015560408401517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4184015560608401517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d42909301805493151560ff199094169390931780845590518493909161ff001916610100836002811115611d2957fe5b021790555050600654611d3e91506001611be5565b6040517ff791e873e3b67fe74b29aeede7bcbbdaa59c4b64e542571183cd837aa56f6ac990600090a2505050565b600082611d7b57506000611672565b82820282848281611d8857fe5b0414611c275760405162461bcd60e51b815260040161057390612669565b6000611c2783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506120a6565b600082820183811015611c275760405162461bcd60e51b815260040161057390612549565b336000908152600a602090815260408083206001600160a01b038616845290915290205460ff16611ed857336000818152600860209081526040808320815180830183526001600160a01b03888116808352828601898152845460018082018755868a52888a209551600290920290950180546001600160a01b0319169190941617835551918301919091558686529154600985528386208387528552838620600019919091019055948452600a83528184209084529091529020805460ff19169091179055610586565b3360008181526009602090815260408083206001600160a01b038716845282528083205493835260089091529020805461154b91849184908110611f1857fe5b906000526020600020906002020160010154611de890919063ffffffff16565b3360008181526009602090815260408083206001600160a01b038716845282528083205493835260089091529020805461154b91849184908110611f7857fe5b906000526020600020906002020160010154611be590919063ffffffff16565b600060068281548110611fa757fe5b600091825260208083206001600160a01b0387811685526006939093020160040181526040808420928816845291905290205411611030576001600160a01b038316600090815260076020526040902054612003906001611de8565b6001600160a01b038416600090815260076020526040902055505050565b6000805b60035481101561207057826001600160a01b03166003828154811061204657fe5b6000918252602090912001546001600160a01b03161415612068579050610539565b600101612025565b5060001992915050565b6000818484111561209e5760405162461bcd60e51b81526004016105739190612463565b505050900390565b600081836120c75760405162461bcd60e51b81526004016105739190612463565b5060008385816120d357fe5b0495945050505050565b6040518060a001604052806000815260200160008152602001600081526020016000151581526020016000600281111561211357fe5b905290565b600060208284031215612129578081fd5b8135611c2781612824565b60008060408385031215612146578081fd5b823561215181612824565b9150602083013561216181612824565b809150509250929050565b6000806040838503121561217e578182fd5b823561218981612824565b946020939093013593505050565b6000806000606084860312156121ab578081fd5b83356121b681612824565b95602085013595506040909401359392505050565b6000602082840312156121dc578081fd5b81518015158114611c27578182fd5b6000602082840312156121fc578081fd5b5035919050565b60008060408385031215612215578182fd5b50508035926020909101359150565b600080600060608486031215612238578283fd5b505081359360208301359350604090920135919050565b600060208284031215612260578081fd5b8151611c2781612824565b60008060006060848603121561227f578283fd5b83359250602084013561229181612824565b929592945050506040919091013590565b6001600160a01b03169052565b60008151808452815b818110156122d4576020818501810151868301820152016122b8565b818111156122e55782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b038616815260a06020808301829052600091612370908401886122af565b604084018790528381036060850152855180825282870191830190845b818110156123a95783518352928401929184019160010161238d565b505084810360808601528551808252908301915082860190845b818110156123e6576123d68484516122a2565b92840192918401916001016123c3565b50919a9950505050505050505050565b602080825282518282018190526000919060409081850190868401855b828110156124425781518051855286810151878601528501518585015260609093019290850190600101612413565b5091979650505050505050565b901515815260200190565b90815260200190565b600060208252611c2760208301846122af565b6020808252601d908201527f5573657220686173206e6f7420616e7920746f6b656e207374616b6564000000604082015260600190565b602080825260139082015272534c41206e6f7420726573706563746564202160681b604082015260600190565b6020808252600f908201526e534c4120726573706563746564202160881b604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b602080825260159082015274596f752061726520612076616c696461746f72202160581b604082015260600190565b6020808252601b908201527f7374616b696e672062616c616e63652063616e6e6f7420626520300000000000604082015260600190565b6020808252601390820152721d1bdad95b88185b1c9958591e481859191959606a1b604082015260600190565b60208082526036908201527f596f75206861766520616c726561647920636c61696d656420796f75722072656040820152757761726420666f72207468697320706572696f64202160501b606082015260800190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6040820152607760f81b606082015260800190565b6020808252601490820152731d1bdad95b881a5cc81b9bdd08185b1b1bddd95960621b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601290820152710616d6f756e742063616e6e6f7420626520360741b604082015260600190565b602080825260199082015278596f7520617265206e6f7420612076616c696461746f72202160381b604082015260600190565b6020808252603c908201527f596f75206861766520616c726561647920636c61696d656420796f757220636f60408201527f6d70656e736174696f6e20666f72207468697320706572696f64202100000000606082015260800190565b918252602082015260400190565b9283526020830191909152604082015260600190565b8581526020810185905260408101849052821515606082015260a081016003831061281457fe5b8260808301529695505050505050565b6001600160a01b038116811461283957600080fd5b5056fea2646970667358221220191ccda9421f174c4e65c65dd8029f0d92fc1fcb990ba3e917cdbd6599b32e0664736f6c634300060c00338be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
  "deployedBytecode": "",
  "immutableReferences": {},
  "sourceMap": "446:5131:2:-:0;;;2758:811;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3104:13;3119:18;3139:16;3157:6;865:17:22;885:12;:10;:12::i;:::-;907:6;:18;;-1:-1:-1;;;;;;907:18:22;-1:-1:-1;;;;;907:18:22;;;;;;;940:43;;-1:-1:-1;;907:18:22;;-1:-1:-1;907:18:22;;:6;;-1:-1:-1;;907:6:22;-1:-1:-1;;;;;940:43:22;907:6;;940:43;831:159;2631:16:3;:23;2602:18;:25;:52;2581:140;;;;-1:-1:-1;;;2581:140:3;;;;;;;:::i;:::-;;;;;;;;;2731:5;:33;;-1:-1:-1;;;;;2731:33:3;;;-1:-1:-1;;;;;;2731:33:3;;;;;;;2774:13;:34;;;;;;;;;;;;;;2801:5;;;2774:34;;;;;;2847:5;;;;-1:-1:-1;2818:36:3;;;:20;2774:34;2818:36;;;;:43;;-1:-1:-1;;2818:43:3;;;;;;;2871:9;:18;;;;;;;;;;;;2900:135;2924:18;:25;2920:1;:29;2900:135;;;2970:54;2981:18;3000:1;2981:21;;;;;;;;;;;;;;3004:16;3021:1;3004:19;;;;;;;;;;;;;;2970:10;;;:54;;:::i;:::-;2951:3;;2900:135;;;;2400:641;;;;3202:1:2::1;3187:5;:12;:16;3179:25;;;::::0;::::1;;3242:5;:12;3222:9;:16;:32;3214:41;;;::::0;::::1;;3271:9;3266:97;3290:5;:12;3286:1;:16;3266:97;;;3344:5;3350:1;3344:8;;;;;;;;;;;;;;3323:4;:18;3328:9;3338:1;3328:12;;;;;;;;;::::0;;::::1;::::0;;;;;;;3323:18;;;::::1;::::0;;;;;;-1:-1:-1;3323:18:2;:29;;-1:-1:-1;;;;;;3323:29:2::1;-1:-1:-1::0;;;;;3323:29:2;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;3304:3:2::1;3266:97;;;-1:-1:-1::0;3373:25:2::1;3391:6:::0;3373:17:::1;:25::i;:::-;3408:20:::0;;::::1;::::0;:8:::1;::::0;:20:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;3438:5:2::1;:14:::0;;;3462:20;;::::1;::::0;:8:::1;::::0;:20:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;;3492:8:2::1;:34:::0;;-1:-1:-1;;;;;;3492:34:2::1;3515:10;3492:34;::::0;;-1:-1:-1;;3536:11:2::1;:26:::0;-1:-1:-1;446:5131:2;;-1:-1:-1;;;;446:5131:2;590:104:20;677:10;590:104;:::o;10312:366:3:-;10415:21;;:::i;:::-;10447:44;;;10501:22;;;:40;;;-1:-1:-1;10551:14:3;;;:35;;;10597:7;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10597:21:3;;;;;;;;;;;;10447:44;;10597:21;;-1:-1:-1;;10597:21:3;;;;;;;;;;;;;;;;;;10649;10668:1;10649:7;:14;;;;:18;;;;;;:21;;;;:::i;:::-;10634:37;;;;;;;10312:366;;;:::o;1983:240:22:-;1280:12;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:22:22;;;:6;;:22;1262:67;;;;-1:-1:-1;;;1262:67:22;;;;;;;:::i;:::-;-1:-1:-1;;;;;2071:22:22;::::1;2063:73;;;::::0;-1:-1:-1;;;2063:73:22;;::::1;::::0;::::1;;;:::i;:::-;2172:6;::::0;;2151:38:::1;::::0;-1:-1:-1;;;;;;;2151:38:22;;::::1;::::0;2172:6;::::1;::::0;;;;-1:-1:-1;;2172:6:22;-1:-1:-1;;;;;2151:38:22;::::1;2199:6;:17:::0;;-1:-1:-1;;;;;;2199:17:22::1;-1:-1:-1::0;;;;;2199:17:22;;;::::1;::::0;;;::::1;::::0;;1983:240::o;1321:134:23:-;1379:7;1405:43;1409:1;1412;1405:43;;;;;;;;;;;;;;;;;:3;;;:43;;:::i;:::-;1398:50;;1321:134;;;;;:::o;1746:187::-;1832:7;1867:12;1859:6;;;;1851:29;;;;-1:-1:-1;;;1851:29:23;;;;;;;;:::i;:::-;-1:-1:-1;;;1902:5:23;;;1746:187::o;446:5131:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;446:5131:2;;;-1:-1:-1;446:5131:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;5:134:-1;83:13;;101:33;83:13;101:33;:::i;164:722::-;;292:3;285:4;277:6;273:17;269:27;259:2;;-1:-1;;300:12;259:2;340:6;334:13;362:80;377:64;434:6;377:64;:::i;:::-;362:80;:::i;:::-;470:21;;;353:89;-1:-1;514:4;527:14;;;;502:17;;;616;;;607:27;;;;604:36;-1:-1;601:2;;;653:1;;643:12;601:2;678:1;663:217;688:6;685:1;682:13;663:217;;;2509:13;;756:61;;831:14;;;;859;;;;710:1;703:9;663:217;;;667:14;;;;;252:634;;;;:::o;917:758::-;;1057:3;1050:4;1042:6;1038:17;1034:27;1024:2;;-1:-1;;1065:12;1024:2;1105:6;1099:13;1127:92;1142:76;1211:6;1142:76;:::i;1127:92::-;1247:21;;;1118:101;-1:-1;1291:4;1304:14;;;;1279:17;;;1393;;;1384:27;;;;1381:36;-1:-1;1378:2;;;1430:1;;1420:12;1378:2;1455:1;1440:229;1465:6;1462:1;1459:13;1440:229;;;2668:6;2662:13;2680:45;2719:5;2680:45;:::i;:::-;1533:73;;1620:14;;;;1648;;;;1487:1;1480:9;1440:229;;2917:444;;3030:3;3023:4;3015:6;3011:17;3007:27;2997:2;;-1:-1;;3038:12;2997:2;3072:13;;-1:-1;9944:30;;9941:2;;;-1:-1;;9977:12;9941:2;3100:65;10118:4;-1:-1;;10050:9;10031:17;;10027:33;10108:15;3100:65;:::i;:::-;3091:74;;3185:6;3178:5;3171:21;3289:3;10118:4;3280:6;3213;3271:16;;3268:25;3265:2;;;3306:1;;3296:12;3265:2;3316:39;3348:6;10118:4;3247:5;3243:16;10118:4;3213:6;3209:17;3316:39;:::i;:::-;;2990:371;;;;:::o;3510:2034::-;;;;;;;;;;3902:3;3890:9;3881:7;3877:23;3873:33;3870:2;;;-1:-1;;3909:12;3870:2;3971:64;4027:7;4003:22;3971:64;:::i;:::-;4093:2;4078:18;;4072:25;3961:74;;-1:-1;;4106:30;;;4103:2;;;-1:-1;;4139:12;4103:2;4169:89;4250:7;4241:6;4230:9;4226:22;4169:89;:::i;:::-;4159:99;;4316:2;4305:9;4301:18;4295:25;4281:39;;4117:18;4332:6;4329:30;4326:2;;;-1:-1;;4362:12;4326:2;4392:101;4485:7;4476:6;4465:9;4461:22;4392:101;:::i;:::-;4382:111;;4530:2;4584:9;4580:22;3447:13;4538:74;;4670:3;4659:9;4655:19;4649:26;4635:40;;4117:18;4687:6;4684:30;4681:2;;;-1:-1;;4717:12;4681:2;4747:74;4813:7;4804:6;4793:9;4789:22;4747:74;:::i;:::-;4737:84;;4858:3;4913:9;4909:22;3447:13;4867:74;;4997:83;5072:7;4978:3;5052:9;5048:22;4997:83;:::i;:::-;4987:93;;5138:3;5127:9;5123:19;5117:26;5103:40;;4117:18;5155:6;5152:30;5149:2;;;-1:-1;;5185:12;5149:2;5215:89;5296:7;5287:6;5276:9;5272:22;5215:89;:::i;:::-;5205:99;;5362:3;5351:9;5347:19;5341:26;5327:40;;4117:18;5379:6;5376:30;5373:2;;;-1:-1;;5409:12;5373:2;;5439:89;5520:7;5511:6;5500:9;5496:22;5439:89;:::i;:::-;5429:99;;;3864:1680;;;;;;;;;;;:::o;7017:310::-;;7164:2;7185:17;7178:47;5696:5;10228:12;10385:6;7164:2;7153:9;7149:18;10373:19;5790:52;5835:6;10413:14;7153:9;10413:14;7164:2;5816:5;5812:16;5790:52;:::i;:::-;10050:9;11397:14;-1:-1;;11393:28;5854:39;;;;10413:14;5854:39;;7135:192;-1:-1;;7135:192::o;7334:416::-;7534:2;7548:47;;;6130:2;7519:18;;;10373:19;6166:34;10413:14;;;6146:55;-1:-1;;;6221:12;;;6214:30;6263:12;;;7505:245::o;7757:416::-;7957:2;7971:47;;;6514:2;7942:18;;;10373:19;6550:34;10413:14;;;6530:55;-1:-1;;;6605:12;;;6598:33;6650:12;;;7928:245::o;8180:416::-;8380:2;8394:47;;;8365:18;;;10373:19;6937:34;10413:14;;;6917:55;6991:12;;;8351:245::o;8603:256::-;8665:2;8659:9;8691:17;;;8787:22;;;-1:-1;8751:34;;8748:62;8745:2;;;8823:1;;8813:12;8745:2;8665;8832:22;8643:216;;-1:-1;8643:216::o;8866:304::-;;-1:-1;9014:30;;9011:2;;;-1:-1;;9047:12;9011:2;-1:-1;9092:4;9080:17;;;9145:15;;8948:222::o;11053:268::-;11118:1;11125:101;11139:6;11136:1;11133:13;11125:101;;;11206:11;;;11200:18;11187:11;;;11180:39;11161:2;11154:10;11125:101;;;11241:6;11238:1;11235:13;11232:2;;;11118:1;11297:6;11292:3;11288:16;11281:27;11232:2;;11102:219;;;:::o;11434:117::-;-1:-1;;;;;10907:54;;11493:35;;11483:2;;11542:1;;11532:12;11483:2;11477:74;:::o;:::-;446:5131:2;;;;;;",
  "deployedSourceMap": "446:5131:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4503:107;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3069:174:3;;;;;;:::i;:::-;;:::i;:::-;;1073:52;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3291:226::-;;;;;;:::i;:::-;;:::i;1581:68::-;;;;;;:::i;:::-;;:::i;1423:84::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;594:20:2:-;;;:::i;868:24:3:-;;;:::i;:::-;;;;;;;:::i;8406:739::-;;;;;;:::i;:::-;;:::i;11276:274::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;990:30::-;;;;;;:::i;:::-;;:::i;839:23::-;;;:::i;1689:145:22:-;;;:::i;6461:1189:3:-;;;;;;:::i;:::-;;:::i;858:27:2:-;;;:::i;1708:26:3:-;;;:::i;3837:465:2:-;;;;;;:::i;:::-;;:::i;1066:77:22:-;;;:::i;1222:37:2:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;10781:92:3:-;;;:::i;7685:686::-;;;;;;:::i;:::-;;:::i;1114:35:2:-;;;;;;:::i;:::-;;:::i;1301:50:3:-;;;;;;:::i;:::-;;:::i;1186:53::-;;;;;;:::i;:::-;;:::i;779:22:2:-;;;:::i;:::-;;;;;;;:::i;4415:930:3:-;;;;;;:::i;:::-;;:::i;4751:93:2:-;;;:::i;1131:23:3:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;11146:124::-;;;;;;:::i;:::-;;:::i;9151:616::-;;;;;;:::i;:::-;;:::i;1983:240:22:-;;;;;;:::i;:::-;;:::i;1334:25:2:-;;;;;;:::i;:::-;;:::i;5375:1039:3:-;;;;;;:::i;:::-;;:::i;5109:466:2:-;;;:::i;:::-;;;;;;;;;;;:::i;10879:261:3:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;898:24::-;;;;;;:::i;:::-;;:::i;4503:107:2:-;4558:12;4589:4;:14;4594:8;4589:14;;;;;;;;;;;4582:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4503:107;;;;:::o;3069:174:3:-;1280:12:22;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:22:22;;;:6;;:22;1262:67;;;;-1:-1:-1;;;1262:67:22;;;;;;;:::i;:::-;;;;;;;;;3190:46:3::1;3201:17;3220:15;3190:10;:46::i;:::-;3069:174:::0;;:::o;1073:52::-;;;;;;;;;;;;;;;:::o;3291:226::-;1280:12:22;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:22:22;;;:6;;:22;1262:67;;;;-1:-1:-1;;;1262:67:22;;;;;;;:::i;:::-;-1:-1:-1;;;;;3368:28:3;::::1;;::::0;;;:20:::1;:28;::::0;;;;;::::1;;:37;3360:69;;;::::0;-1:-1:-1;;;3360:69:3;;::::1;::::0;::::1;;;:::i;:::-;3439:13;:26:::0;;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;;3439:26:3::1;-1:-1:-1::0;;;;;3439:26:3;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;3475:28:3;;;:20:::1;3439:26;3475:28:::0;;;;;:35;;-1:-1:-1;;3475:35:3::1;::::0;;::::1;::::0;;3291:226::o;1581:68::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1423:84::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;594:20:2:-;;;;:::o;868:24:3:-;;;-1:-1:-1;;;;;868:24:3;;:::o;8406:739::-;8486:7;2118;2126;2118:16;;;;;;;;;;;;;;;;;;:33;;;2099:15;:52;;:122;;;;;2190:7;2198;2190:16;;;;;;;;;;;;;;;;;;:31;;;2171:15;:50;;2099:122;2078:153;;;;;;1852:9:::1;::::0;-1:-1:-1;;;;;1852:9:3::1;1838:10;:23;;1830:57;;;::::0;-1:-1:-1;;;1830:57:3;;::::1;::::0;::::1;;;:::i;:::-;8578:19:::2;8551:7;8559;8551:16;;;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;:46;;;;;;;;;8530:108;;;::::0;-1:-1:-1;;;8530:108:3;;::::2;::::0;::::2;;;:::i;:::-;8669:7;8677;8669:16;;;;;;;;;::::0;;;::::2;::::0;;;8707:10:::2;8669:49:::0;;:37:::2;:16;::::0;;::::2;;:37:::0;;;::::2;:49:::0;;;;;;:54;8648:161:::2;;;::::0;-1:-1:-1;;;8648:161:3;;::::2;::::0;::::2;;;:::i;:::-;8820:20;8843:38;8861:10;8873:7;8843:17;:38::i;:::-;8820:61:::0;-1:-1:-1;8891:12:3::2;8906:27;8930:2;8906:19;8820:61:::0;8923:1:::2;8906:16;:19::i;:::-;:23:::0;::::2;:27::i;:::-;8958:11;::::0;8891:42;;-1:-1:-1;8958:29:3::2;::::0;8974:12;8958:15:::2;:29::i;:::-;8944:11;:43;;;;9049:12;8997:7;9005;8997:16;;;;;;;;;::::0;;;::::2;::::0;;;9035:10:::2;8997:49:::0;;;:16:::2;::::0;;;::::2;;:37;;:49:::0;;;;;;;:64;;;;9072:5:::2;::::0;:40;;-1:-1:-1;;;9072:40:3;;-1:-1:-1;;;;;9072:5:3;;::::2;::::0;-1:-1:-1;;9072:40:3::2;::::0;9035:10;9099:12;;9072:40:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;9122:5:3::2;::::0;:16:::2;::::0;-1:-1:-1;;;9122:16:3;;-1:-1:-1;;;;;9122:5:3;;::::2;::::0;:10:::2;::::0;:16:::2;::::0;9133:4;;9122:16:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;1897:1;;8406:739:::0;;:::o;11276:274::-;-1:-1:-1;;;;;11448:18:3;;11376:20;11448:18;;;:10;:18;;;;;:26;;11376:20;;11448:18;11467:6;;11448:26;;;;;;;;;;;;;;;;;;;;;;:39;-1:-1:-1;;;;;11501:18:3;;;;;:10;:18;;;;;;;:26;;11448:39;;;;;11501:18;11520:6;;11501:26;;;;;;;;;;;;;;;;:32;;;11427:116;;;;11276:274;;;;;:::o;990:30::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;990:30:3;;-1:-1:-1;990:30:3;:::o;839:23::-;;;-1:-1:-1;;;;;839:23:3;;:::o;1689:145:22:-;1280:12;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:22:22;;;:6;;:22;1262:67;;;;-1:-1:-1;;;1262:67:22;;;;;;;:::i;:::-;1795:1:::1;1779:6:::0;;1758:40:::1;::::0;-1:-1:-1;;;;;1779:6:22;;::::1;::::0;1758:40:::1;::::0;1795:1;;1758:40:::1;1825:1;1808:19:::0;;-1:-1:-1;;;;;;1808:19:22::1;::::0;;1689:145::o;6461:1189:3:-;1852:9;;-1:-1:-1;;;;;1852:9:3;1838:10;:23;;1830:57;;;;-1:-1:-1;;;1830:57:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;2315:28:3;::::1;;::::0;;;:20:::1;:28;::::0;;;;;;;::::1;;:36;;-1:-1:-1::0;2315:36:3::1;2307:69;;;::::0;-1:-1:-1;;;2307:69:3;;::::1;::::0;::::1;;;:::i;:::-;6742:1:::2;6688:7;6696;6688:16;;;;;;;;;::::0;;;::::2;::::0;;;-1:-1:-1;;;;;6688:39:3;::::2;::::0;;:16:::2;::::0;;;::::2;::::0;;::::2;:31;;:39:::0;;;;;;6728:10:::2;6688:51:::0;;;;;;;;:55:::2;6667:129;;;::::0;-1:-1:-1;;;6667:129:3;;::::2;::::0;::::2;;;:::i;:::-;6833:63;::::0;-1:-1:-1;;;6833:63:3;;-1:-1:-1;;;;;6833:27:3;::::2;::::0;-1:-1:-1;;6833:63:3::2;::::0;6861:10:::2;::::0;6881:4:::2;::::0;6888:7;;6833:63:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7014:90;7096:7;7014;7022;7014:16;;;;;;;;;::::0;;;::::2;::::0;;;-1:-1:-1;;;;;7014:52:3;::::2;::::0;;:16:::2;::::0;;;::::2;::::0;;::::2;:44;;:52:::0;;;;;;7067:10:::2;7014:64:::0;;;;;;;;;:81:::2;:90::i;:::-;6960:7;6968;6960:16;;;;;;;;;::::0;;;::::2;::::0;;;-1:-1:-1;;;;;6960:39:3;::::2;::::0;;:16:::2;::::0;;;::::2;::::0;;::::2;:31;;:39:::0;;;;;;7000:10:::2;6960:51:::0;;;;;;;:144;7128:11:::2;::::0;:24:::2;::::0;7144:7;7128:15:::2;:24::i;:::-;7114:11;:38:::0;7163::::2;7185:6:::0;7193:7;7163:21:::2;:38::i;:::-;7244:14;7261:7;7269;7261:16;;;;;;;;;::::0;;;::::2;::::0;;;-1:-1:-1;;;;;7261:39:3;::::2;::::0;;:16:::2;::::0;;::::2;;:31;;:39:::0;;;;;;7301:10:::2;7261:51:::0;;;;;;;;7395:7:::2;:14:::0;7359:16;;7261:51;;-1:-1:-1;7359:51:3::2;::::0;7395:14;;7367:7;;7359:16;::::2;;;;;;;;;;;;;;;:31;;;:35;;:51;;;;:::i;:::-;7322:88;;7475:1;7421:7;7429;7421:16;;;;;;;;;::::0;;;::::2;::::0;;;-1:-1:-1;;;;;7421:39:3;::::2;::::0;;:16:::2;::::0;;;::::2;::::0;;::::2;:31;;:39:::0;;;;;;7461:10:::2;7421:51:::0;;;;;;;:55;7500:11:::2;::::0;:23:::2;::::0;7516:6;7500:15:::2;:23::i;:::-;7486:11;:37:::0;7533:5:::2;::::0;-1:-1:-1;;;;;7533:5:3::2;:14;7548:10;7560:26;:6:::0;7571:14;7560:10:::2;:26::i;:::-;7533:54;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;7628:5:3::2;::::0;7598:45:::2;::::0;-1:-1:-1;;;;;7628:5:3::2;7636:6:::0;7598:21:::2;:45::i;:::-;2386:1;;1897::::1;6461:1189:::0;;;:::o;858:27:2:-;;;-1:-1:-1;;;;;858:27:2;;:::o;1708:26:3:-;;;;:::o;3837:465:2:-;1827:8;;:20;;;-1:-1:-1;;;1827:20:2;;;;-1:-1:-1;;;;;1827:8:2;;;;:18;;:20;;;;;;;;;;;;;;;:8;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1805:43:2;:10;:43;1797:52;;;;;;3974:14:::1;::::0;;;:4:::1;:14;::::0;;;;;;;3994:39;;::::1;::::0;::::1;::::0;;3998:15:::1;3994:39:::0;;;;;::::1;::::0;;;;;;;;;3974:60;;::::1;::::0;;::::1;::::0;;;;;;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;::::1;::::0;;;;;;::::1;::::0;;::::1;::::0;;;;4050:46;::::1;::::0;::::1;::::0;4015:6;;4023:9;;4050:46:::1;:::i;:::-;;;;;;;;4112:14;::::0;;;:4:::1;:14;::::0;;;;;;;:35;;-1:-1:-1;;;4112:35:2;;-1:-1:-1;;;;;4112:14:2;;::::1;::::0;-1:-1:-1;;4112:35:2::1;::::0;4140:6;;4112:35:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4107:189;;4191:19;4163:7;4171:9;4163:18;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:25;;:47:::0;;-1:-1:-1;;4163:47:2::1;;::::0;::::1;::::0;::::1;;;;;;;;;;;4107:189;;;4269:16;4241:7;4249:9;4241:18;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:25;;:44:::0;;-1:-1:-1;;4241:44:2::1;;::::0;::::1;::::0;::::1;;;;;;;;;;;4107:189;3837:465:::0;;;:::o;1066:77:22:-;1104:7;1130:6;-1:-1:-1;;;;;1130:6:22;;1066:77::o;1222:37:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1222:37:2;;-1:-1:-1;1222:37:2;:::o;10781:92:3:-;10852:7;:14;10781:92;:::o;7685:686::-;7759:7;2118;2126;2118:16;;;;;;;;;;;;;;;;;;:33;;;2099:15;:52;;:122;;;;;2190:7;2198;2190:16;;;;;;;;;;;;;;;;;;:31;;;2171:15;:50;;2099:122;2078:153;;;;;;1966:9:::1;::::0;-1:-1:-1;;;;;1966:9:3::1;1952:10;:23;1944:61;;;::::0;-1:-1:-1;;;1944:61:3;;::::1;::::0;::::1;;;:::i;:::-;7852:16:::2;7825:7;7833;7825:16;;;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;:43;;;;;;;;;7804:109;;;::::0;-1:-1:-1;;;7804:109:3;;::::2;::::0;::::2;;;:::i;:::-;7945:7;7953;7945:16;;;;;;;;;::::0;;;::::2;::::0;;;:24:::2;:16;::::0;;::::2;;:24;::::0;::::2;;7944:25;7923:126;;;::::0;-1:-1:-1;;;7923:126:3;;::::2;::::0;::::2;;;:::i;:::-;8093:7;:14:::0;8077:11:::2;::::0;8060:14:::2;::::0;8077:31:::2;::::0;:11;:15:::2;:31::i;:::-;8060:48:::0;-1:-1:-1;8118:12:3::2;8133:21;8151:2;8133:13;8060:48:::0;8144:1:::2;8133:10;:13::i;:21::-;8179:11;::::0;8118:36;;-1:-1:-1;8179:23:3::2;::::0;8195:6;8179:15:::2;:23::i;:::-;8165:11;:37;;;;8246:6;8212:7;8220;8212:16;;;;;;;;;;;;;;;;;;:31;;:40;;;;8289:4;8262:7;8270;8262:16;;;;;;;;;::::0;;;::::2;::::0;;;::::2;::::0;;::::2;;:24;;:31:::0;;-1:-1:-1;;8262:31:3::2;::::0;::::2;;::::0;;;::::2;::::0;;-1:-1:-1;8304:5:3;:34:::2;::::0;-1:-1:-1;;;8304:34:3;;-1:-1:-1;;;;;8304:5:3;;::::2;::::0;-1:-1:-1;;8304:34:3::2;::::0;8319:10:::2;::::0;8331:6;;8304:34:::2;;;:::i;1114:35:2:-:0;;;;;;;;;;;;-1:-1:-1;;;;;1114:35:2;;:::o;1301:50:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1301:50:3;;;;-1:-1:-1;1301:50:3;-1:-1:-1;1301:50:3;:::o;1186:53::-;;;;;;;;;;;;;:::o;779:22:2:-;;;;;;;;;;;;;;;-1:-1:-1;;779:22:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4415:930:3:-;-1:-1:-1;;;;;2315:28:3;;;;;;:20;:28;;;;;;;;;;:36;;-1:-1:-1;2315:36:3;2307:69;;;;-1:-1:-1;;;2307:69:3;;;;;;;:::i;:::-;4576:1:::1;4566:7;:11;4558:42;;;::::0;-1:-1:-1;;;4558:42:3;;::::1;::::0;::::1;;;:::i;:::-;4681:54;4707:10;4719:6;4727:7;4681:25;:54::i;:::-;4769:63;::::0;-1:-1:-1;;;4769:63:3;;-1:-1:-1;;;;;4769:27:3;::::1;::::0;-1:-1:-1;;4769:63:3::1;::::0;4797:10:::1;::::0;4817:4:::1;::::0;4824:7;;4769:63:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4950:90;5032:7;4950;4958;4950:16;;;;;;;;;::::0;;;::::1;::::0;;;-1:-1:-1;;;;;4950:52:3;::::1;::::0;;:16:::1;::::0;;;::::1;::::0;;::::1;:44;;:52:::0;;;;;;5003:10:::1;4950:64:::0;;;;;;;;;:81:::1;:90::i;:::-;4896:7;4904;4896:16;;;;;;;;;::::0;;;::::1;::::0;;;-1:-1:-1;;;;;4896:39:3;::::1;::::0;;:16:::1;::::0;;;::::1;::::0;;::::1;:31;;:39:::0;;;;;;4936:10:::1;4896:51:::0;;;;;;;:144;5064:11:::1;::::0;:24:::1;::::0;5080:7;5064:15:::1;:24::i;:::-;5050:11;:38:::0;5223:10:::1;5204:30;::::0;;;:18:::1;:30;::::0;;;;;5238:1:::1;5204:35;5200:90;;;5255:7;:24:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;5255:24:3;;;;;::::1;::::0;;-1:-1:-1;;;;;;5255:24:3::1;5268:10;5255:24;::::0;;5200:90:::1;5300:38;5322:6;5330:7;5300:21;:38::i;:::-;4415:930:::0;;;;:::o;4751:93:2:-;4826:11;;4751:93;:::o;1131:23:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1131:23:3;;;;;;;;;;;;:::o;11146:124::-;-1:-1:-1;;;;;11238:18:3;11212:7;11238:18;;;:10;:18;;;;;:25;;11146:124::o;9151:616::-;-1:-1:-1;;;;;9286:25:3;;9255:7;9286:25;;;:18;:25;;;;;;9278:71;;;;-1:-1:-1;;;9278:71:3;;;;;;;:::i;:::-;9359:18;9409:26;9391:343;9474:13;:20;9453:41;;9391:343;;;9566:157;9598:7;9606;9598:16;;;;;;;;;;;;;;;;;;:31;;:104;9651:13;9665:18;9651:33;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9651:33:3;;;9598:104;;;;;;;;;;;;;;;:111;;;;;;;;;;;;9566:10;;:14;:157::i;:::-;9553:170;-1:-1:-1;9508:20:3;;9391:343;;;-1:-1:-1;9750:10:3;-1:-1:-1;9151:616:3;;;;;:::o;1983:240:22:-;1280:12;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:22:22;;;:6;;:22;1262:67;;;;-1:-1:-1;;;1262:67:22;;;;;;;:::i;:::-;-1:-1:-1;;;;;2071:22:22;::::1;2063:73;;;::::0;-1:-1:-1;;;2063:73:22;;::::1;::::0;::::1;;;:::i;:::-;2172:6;::::0;;2151:38:::1;::::0;-1:-1:-1;;;;;2151:38:22;;::::1;::::0;2172:6;::::1;::::0;2151:38:::1;::::0;::::1;2199:6;:17:::0;;-1:-1:-1;;;;;;2199:17:22::1;-1:-1:-1::0;;;;;2199:17:22;;;::::1;::::0;;;::::1;::::0;;1983:240::o;1334:25:2:-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1334:25:2;:::o;5375:1039:3:-;1852:9;;-1:-1:-1;;;;;1852:9:3;1838:10;:23;;1830:57;;;;-1:-1:-1;;;1830:57:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;2315:28:3;::::1;;::::0;;;:20:::1;:28;::::0;;;;;;;::::1;;:36;;-1:-1:-1::0;2315:36:3::1;2307:69;;;::::0;-1:-1:-1;;;2307:69:3;;::::1;::::0;::::1;;;:::i;:::-;5629:1:::2;5575:7;5583;5575:16;;;;;;;;;::::0;;;::::2;::::0;;;-1:-1:-1;;;;;5575:39:3;::::2;::::0;;:16:::2;::::0;;;::::2;::::0;;::::2;:31;;:39:::0;;;;;;5615:10:::2;5575:51:::0;;;;;;;;:55:::2;5554:129;;;::::0;-1:-1:-1;;;5554:129:3;;::::2;::::0;::::2;;;:::i;:::-;5726:14;5743:7;5751;5743:16;;;;;;;;;::::0;;;::::2;::::0;;;-1:-1:-1;;;;;5743:39:3;::::2;::::0;;:16:::2;::::0;;::::2;;:31;;:39:::0;;;;;;5783:10:::2;5743:51:::0;;;;;;;;5877:7:::2;:14:::0;5841:16;;5743:51;;-1:-1:-1;5841:51:3::2;::::0;5877:14;;5849:7;;5841:16;::::2;;;;:51;5804:88;;5957:1;5903:7;5911;5903:16;;;;;;;;;::::0;;;::::2;::::0;;;-1:-1:-1;;;;;5903:39:3;::::2;::::0;;:16:::2;::::0;;;::::2;::::0;;::::2;:31;;:39:::0;;;;;;5943:10:::2;5903:51:::0;;;;;;;:55;5982:11:::2;::::0;:23:::2;::::0;5998:6;5982:15:::2;:23::i;:::-;5968:11;:37:::0;-1:-1:-1;;;;;6015:23:3;::::2;;6039:10;6051:26;:6:::0;6062:14;6051:10:::2;:26::i;:::-;6015:63;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;6193:10:3::2;6174:30;::::0;;;:18:::2;:30;::::0;;;;;:37:::2;::::0;6209:1:::2;6174:34;:37::i;:::-;6160:10;6141:30;::::0;;;:18:::2;:30;::::0;;;;:70;;;6222:138:::2;;6277:13;6293:21;6303:10;6293:9;:21::i;:::-;6277:37;;6335:7;6343:5;6335:14;;;;;;;;;::::0;;;::::2;::::0;;;::::2;6328:21:::0;;-1:-1:-1;;;;;;6328:21:3::2;::::0;;-1:-1:-1;6222:138:3::2;6370:37;6392:6;6400;6370:21;:37::i;:::-;2386:1;;1897::::1;5375:1039:::0;;:::o;5109:466:2:-;5191:7;5212:13;5239:7;5260:16;5290:12;5327:26;5366:8;:15;;;;5356:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5356:26:2;;5327:55;;5398:9;5393:107;5417:8;:15;5413:19;;5393:107;;;5472:4;:17;5477:8;5486:1;5477:11;;;;;;;;;;;;;;;;;;;;5472:17;;;;;;;;;;;;;5453:16;;-1:-1:-1;;;;;5472:17:2;;;;5453:13;;5467:1;;5453:16;;;;;;-1:-1:-1;;;;;5453:36:2;;;;:16;;;;;;;;;;;:36;-1:-1:-1;5434:3:2;5393:107;;;;5518:7;:5;:7::i;:::-;5537:5;;5527:8;5510:58;;;;;;;;;;;;;-1:-1:-1;;5510:58:2;;;;;;;;;;;;;;;;;;;;;;;;;;5527:8;;5537:5;5544:8;;5554:13;;5527:8;;5510:58;;5527:8;5510:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5109:466;;;;;:::o;10879:261:3:-;10966:19;10987:17;11041:7;11049:9;11041:18;;;;;;;;;;;;;;;;;;:35;;;11090:7;11098:9;11090:18;;;;;;;;;;;;;;;;;;:33;;;11020:113;;;;10879:261;;;:::o;898:24::-;;;;;;;;;;1321:134:23;1379:7;1405:43;1409:1;1412;1405:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1398:50;1321:134;-1:-1:-1;;;1321:134:23:o;590:104:20:-;677:10;590:104;:::o;10312:366:3:-;10415:21;;:::i;:::-;10447:44;;;10501:22;;;:40;;;-1:-1:-1;10551:14:3;;;:35;;;10597:7;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10597:21:3;;;;;;;;;;;;10447:44;;10597:21;;-1:-1:-1;;10597:21:3;;;;;;;;;;;;;;;-1:-1:-1;;10649:7:3;:14;:21;;-1:-1:-1;10668:1:3;10649:18;:21::i;:::-;10634:37;;;;;;;10312:366;;;:::o;2180:459:23:-;2238:7;2479:6;2475:45;;-1:-1:-1;2508:1:23;2501:8;;2475:45;2542:5;;;2546:1;2542;:5;:1;2565:5;;;;;:10;2557:56;;;;-1:-1:-1;;;2557:56:23;;;;;;;:::i;3101:130::-;3159:7;3185:39;3189:1;3192;3185:39;;;;;;;;;;;;;;;;;:3;:39::i;874:176::-;932:7;963:5;;;986:6;;;;978:46;;;;-1:-1:-1;;;978:46:23;;;;;;;:::i;3523:633:3:-;3627:10;3610:28;;;;:16;:28;;;;;;;;-1:-1:-1;;;;;3610:36:3;;;;;;;;;;;;3606:544;;3682:10;3671:22;;;;:10;:22;;;;;;;;3716:50;;;;;;;-1:-1:-1;;;;;3716:50:3;;;;;;;;;;;;3671:109;;-1:-1:-1;3671:109:3;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3671:109:3;;;;;;;;;;;;;;;;3818:22;;;:29;;3865:21;:33;;;;;:41;;;;;;;;-1:-1:-1;;3818:33:3;;;;3865:57;;3936:28;;;:16;:28;;;;;:36;;;;;;;;:43;;-1:-1:-1;;3936:43:3;;;;;;3606:544;;;4053:10;4010:18;4031:33;;;:21;:33;;;;;;;;-1:-1:-1;;;;;4031:41:3;;;;;;;;;;4086:22;;;:10;:22;;;;;:34;;:53;;4131:7;;4031:41;;4086:34;;;;;;;;;;;;;;;;:40;;;:44;;:53;;;;:::i;4162:215::-;4288:10;4245:18;4266:33;;;:21;:33;;;;;;;;-1:-1:-1;;;;;4266:41:3;;;;;;;;;;4317:22;;;:10;:22;;;;;:34;;:53;;4362:7;;4266:41;;4317:34;;;;;;;;;;;;;;;;:40;;;:44;;:53;;;;:::i;9773:280::-;9959:1;9909:7;9917;9909:16;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9909:39:3;;;;;:16;;;;;;:31;;:39;;;;;;:46;;;;;;;;;;;:51;9905:142;;-1:-1:-1;;;;;10004:25:3;;;;;;:18;:25;;;;;;:32;;-1:-1:-1;10004:29:3;:32::i;:::-;-1:-1:-1;;;;;9976:25:3;;;;;;:18;:25;;;;;:60;9773:280;;;:::o;10059:247::-;10116:7;;10135:135;10159:7;:14;10155:18;;10135:135;;;10198:7;:10;;-1:-1:-1;;;;;10198:19:3;;;:7;10206:1;;10198:10;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10198:10:3;:19;10194:66;;;10244:1;-1:-1:-1;10237:8:3;;10194:66;10175:3;;10135:135;;;-1:-1:-1;;;;10295:2:3;-1:-1:-1;;10059:247:3:o;1746:187:23:-;1832:7;1867:12;1859:6;;;;1851:29;;;;-1:-1:-1;;;1851:29:23;;;;;;;;:::i;:::-;-1:-1:-1;;;1902:5:23;;;1746:187::o;3713:272::-;3799:7;3833:12;3826:5;3818:28;;;;-1:-1:-1;;;3818:28:23;;;;;;;;:::i;:::-;;3856:9;3872:1;3868;:5;;;;;;;3713:272;-1:-1:-1;;;;;3713:272:23:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;726:241::-;;830:2;818:9;809:7;805:23;801:32;798:2;;;-1:-1;;836:12;798:2;85:6;72:20;97:33;124:5;97:33;:::i;974:366::-;;;1095:2;1083:9;1074:7;1070:23;1066:32;1063:2;;;-1:-1;;1101:12;1063:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;1153:63;-1:-1;1253:2;1292:22;;72:20;97:33;72:20;97:33;:::i;:::-;1261:63;;;;1057:283;;;;;:::o;1347:366::-;;;1468:2;1456:9;1447:7;1443:23;1439:32;1436:2;;;-1:-1;;1474:12;1436:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;1526:63;1626:2;1665:22;;;;656:20;;-1:-1;;;1430:283::o;1720:491::-;;;;1858:2;1846:9;1837:7;1833:23;1829:32;1826:2;;;-1:-1;;1864:12;1826:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;1916:63;2016:2;2055:22;;656:20;;-1:-1;2124:2;2163:22;;;656:20;;1820:391;-1:-1;;;1820:391::o;2218:257::-;;2330:2;2318:9;2309:7;2305:23;2301:32;2298:2;;;-1:-1;;2336:12;2298:2;223:6;217:13;33547:5;30898:13;30891:21;33525:5;33522:32;33512:2;;-1:-1;;33558:12;2482:241;;2586:2;2574:9;2565:7;2561:23;2557:32;2554:2;;;-1:-1;;2592:12;2554:2;-1:-1;344:20;;2548:175;-1:-1;2548:175::o;2730:366::-;;;2851:2;2839:9;2830:7;2826:23;2822:32;2819:2;;;-1:-1;;2857:12;2819:2;-1:-1;;344:20;;;3009:2;3048:22;;;656:20;;-1:-1;2813:283::o;3103:491::-;;;;3241:2;3229:9;3220:7;3216:23;3212:32;3209:2;;;-1:-1;;3247:12;3209:2;-1:-1;;344:20;;;3399:2;3438:22;;656:20;;-1:-1;3507:2;3546:22;;;656:20;;3203:391;-1:-1;3203:391::o;3601:297::-;;3733:2;3721:9;3712:7;3708:23;3704:32;3701:2;;;-1:-1;;3739:12;3701:2;515:6;509:13;527:50;571:5;527:50;:::i;4153:491::-;;;;4291:2;4279:9;4270:7;4266:23;4262:32;4259:2;;;-1:-1;;4297:12;4259:2;669:6;656:20;4349:63;;4449:2;4492:9;4488:22;72:20;97:33;124:5;97:33;:::i;:::-;4253:391;;4457:63;;-1:-1;;;4557:2;4596:22;;;;656:20;;4253:391::o;8710:166::-;-1:-1;;;;;31313:54;8801:70;;8795:81::o;9507:347::-;;9652:5;29114:12;30112:6;30107:3;30100:19;-1:-1;32925:101;32939:6;32936:1;32933:13;32925:101;;;30149:4;33006:11;;;;;33000:18;32987:11;;;;;32980:39;32954:10;32925:101;;;33041:6;33038:1;33035:13;33032:2;;;-1:-1;30149:4;33097:6;30144:3;33088:16;;33081:27;33032:2;-1:-1;33213:7;33197:14;-1:-1;;33193:28;9810:39;;;;30149:4;9810:39;;9599:255;-1:-1;;9599:255::o;15977:222::-;-1:-1;;;;;31313:54;;;;5894:37;;16104:2;16089:18;;16075:124::o;16206:460::-;-1:-1;;;;;31313:54;;;5753:58;;31313:54;;;;16569:2;16554:18;;5894:37;16652:2;16637:18;;8541:37;;;;16397:2;16382:18;;16368:298::o;16673:349::-;-1:-1;;;;;31313:54;;;;5753:58;;17008:2;16993:18;;8541:37;16836:2;16821:18;;16807:215::o;17029:1076::-;-1:-1;;;;;31313:54;;5894:37;;-1:-1;17519:2;17504:18;;;17497:48;;;-1:-1;;17559:78;;17385:19;;17623:6;17559:78;:::i;:::-;17716:2;17701:18;;8541:37;;;17758:20;;;17753:2;17738:18;;17731:48;29114:12;;30100:19;;;28620:14;;;;30140;;;-1:-1;6382:260;6407:6;6404:1;6401:13;6382:260;;;6468:13;;8541:37;;29693:14;;;;5178;;;;6429:1;6422:9;6382:260;;;-1:-1;;17940:20;;;17934:3;17919:19;;17912:49;29114:12;;30100:19;;;30140:14;;;;-1:-1;28620:14;;;;-1:-1;7152:284;7177:6;7174:1;7171:13;7152:284;;;5306:58;5360:3;7244:6;7238:13;5306:58;:::i;:::-;5384:14;;;;29693;;;;6429:1;7192:9;7152:284;;;-1:-1;17967:128;;17371:734;-1:-1;;;;;;;;;;17371:734::o;18452:450::-;18669:2;18683:47;;;29114:12;;18654:18;;;30100:19;;;18452:450;;18669:2;30140:14;;;;;;28620;;;18452:450;8019:320;8044:6;8041:1;8038:13;8019:320;;;8105:13;;15314:23;;8541:37;;15475:16;;;15469:23;15546:14;;;8541:37;15633:16;;15627:23;15704:14;;;8541:37;5655:4;5646:14;;;;29693;;;;8066:1;8059:9;8019:320;;;-1:-1;18736:156;;18640:262;-1:-1;;;;;;;18640:262::o;18909:210::-;30898:13;;30891:21;8434:34;;19030:2;19015:18;;19001:118::o;19126:222::-;8541:37;;;19253:2;19238:18;;19224:124::o;20144:310::-;;20291:2;20312:17;20305:47;20366:78;20291:2;20280:9;20276:18;20430:6;20366:78;:::i;20461:416::-;20661:2;20675:47;;;10086:2;20646:18;;;30100:19;10122:31;30140:14;;;10102:52;10173:12;;;20632:245::o;20884:416::-;21084:2;21098:47;;;10424:2;21069:18;;;30100:19;-1:-1;;;30140:14;;;10440:42;10501:12;;;21055:245::o;21307:416::-;21507:2;21521:47;;;10752:2;21492:18;;;30100:19;-1:-1;;;30140:14;;;10768:38;10825:12;;;21478:245::o;21730:416::-;21930:2;21944:47;;;11076:2;21915:18;;;30100:19;11112:34;30140:14;;;11092:55;-1:-1;;;11167:12;;;11160:30;11209:12;;;21901:245::o;22153:416::-;22353:2;22367:47;;;11460:2;22338:18;;;30100:19;11496:29;30140:14;;;11476:50;11545:12;;;22324:245::o;22576:416::-;22776:2;22790:47;;;11796:2;22761:18;;;30100:19;-1:-1;;;30140:14;;;11812:44;11875:12;;;22747:245::o;22999:416::-;23199:2;23213:47;;;12126:2;23184:18;;;30100:19;12162:29;30140:14;;;12142:50;12211:12;;;23170:245::o;23422:416::-;23622:2;23636:47;;;12462:2;23607:18;;;30100:19;-1:-1;;;30140:14;;;12478:42;12539:12;;;23593:245::o;23845:416::-;24045:2;24059:47;;;12790:2;24030:18;;;30100:19;12826:34;30140:14;;;12806:55;-1:-1;;;12881:12;;;12874:46;12939:12;;;24016:245::o;24268:416::-;24468:2;24482:47;;;13190:2;24453:18;;;30100:19;13226:34;30140:14;;;13206:55;-1:-1;;;13281:12;;;13274:25;13318:12;;;24439:245::o;24691:416::-;24891:2;24905:47;;;13569:2;24876:18;;;30100:19;-1:-1;;;30140:14;;;13585:43;13647:12;;;24862:245::o;25114:416::-;25314:2;25328:47;;;25299:18;;;30100:19;13934:34;30140:14;;;13914:55;13988:12;;;25285:245::o;25537:416::-;25737:2;25751:47;;;14239:2;25722:18;;;30100:19;-1:-1;;;30140:14;;;14255:41;14315:12;;;25708:245::o;25960:416::-;26160:2;26174:47;;;14566:2;26145:18;;;30100:19;-1:-1;;;30140:14;;;14582:48;14649:12;;;26131:245::o;26383:416::-;26583:2;26597:47;;;14900:2;26568:18;;;30100:19;14936:34;30140:14;;;14916:55;15005:30;14991:12;;;14984:52;15055:12;;;26554:245::o;27035:333::-;8541:37;;;27354:2;27339:18;;8541:37;27190:2;27175:18;;27161:207::o;27375:444::-;8541:37;;;27722:2;27707:18;;8541:37;;;;27805:2;27790:18;;8541:37;27558:2;27543:18;;27529:290::o;27826:672::-;8541:37;;;28232:2;28217:18;;8541:37;;;28315:2;28300:18;;8541:37;;;30898:13;;30891:21;28392:2;28377:18;;8434:34;28067:3;28052:19;;33313:1;33303:12;;33293:2;;33319:9;33293:2;32563:34;28483:3;28472:9;28468:19;9437:58;28038:460;;;;;;;;:::o;33342:117::-;-1:-1;;;;;31313:54;;33401:35;;33391:2;;33450:1;;33440:12;33391:2;33385:74;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\npragma experimental ABIEncoderV2;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\nimport \"../SLO/SLO.sol\";\nimport \"../SLARegistry.sol\";\nimport \"./Staking.sol\";\n\n/**\n * @title SLA\n * @dev SLA is a service level agreement contract used for service downtime\n * compensation\n */\ncontract SLA is Ownable, Staking {\n    using SafeMath for uint256;\n\n    /// @dev The required amount to stake when subscribing to the agreement\n    uint256 public stake;\n\n    /// @dev The time between SLI registration\n    uint256 private sliInterval;\n\n    /// @dev The ipfs hash that stores extra information about the agreement\n    string public ipfsHash;\n\n    /// @dev The address of the registry contract\n    SLARegistry public registry;\n\n    /// @dev Struct used for storing registered SLI's\n    struct SLI {\n        uint256 timestamp;\n        uint256 value;\n        uint256 periodId;\n    }\n\n    /// @dev mapping to get SLO addresses from SLO names in bytes32\n    mapping(bytes32 => SLO) public SLOs;\n\n    /// @dev mapping to get SLI structs from SLO names in bytes32\n    mapping(bytes32 => SLI[]) public SLIs;\n\n    /// @dev array storing the names of the SLO's of this agreement\n    bytes32[] public SLONames;\n\n    /**\n     * @dev event for SLI creation logging\n     * @param _timestamp 1. the time the SLI has been registered\n     * @param _value 2. the value of the SLI\n     * @param _periodId 3. the id of the given period\n     */\n    event SLICreated(uint256 _timestamp, uint256 _value, uint256 _periodId);\n\n    /**\n     * @dev throws if called by any address other than the messenger contract.\n     */\n    modifier onlyMessenger() {\n        require(msg.sender == address(registry.messenger()));\n        _;\n    }\n\n    /**\n     * @param _owner 1. address of the owner of the service level agreement\n     * @param _SLONames 2. array of the names of the service level objectives\n     * in bytes32\n     * @param _SLOs 3. array of service level objective contract addressess\n     * service level objective breach\n     * @param _stake 4. uint of the amount required to stake when signing the\n     * service level agreement\n     * @param _ipfsHash 5. string with the ipfs hash that contains extra\n     * information about the service level agreement\n     * @param _sliInterval 6. uint the interval in seconds between requesting a new SLI\n     * @param _tokenAddress 7. address of the DSLA token to be unlocked for staking\n     * @param _sla_period_starts 8. array with the values for the \"start\" of every period\n     * @param _sla_period_ends 9. array with the values for the \"end\" of every period\n     */\n    constructor(\n        address _owner,\n        bytes32[] memory _SLONames,\n        SLO[] memory _SLOs,\n        uint256 _stake,\n        string memory _ipfsHash,\n        uint256 _sliInterval,\n        bDSLAToken _tokenAddress,\n        uint256[] memory _sla_period_starts,\n        uint256[] memory _sla_period_ends\n    )\n        public\n        Staking(_tokenAddress, _sla_period_starts, _sla_period_ends, _owner)\n    {\n        require(_SLOs.length < 5);\n        require(_SLONames.length == _SLOs.length);\n\n        for (uint256 i = 0; i < _SLOs.length; i++) {\n            SLOs[_SLONames[i]] = _SLOs[i];\n        }\n\n        transferOwnership(_owner);\n        SLONames = _SLONames;\n        stake = _stake;\n        ipfsHash = _ipfsHash;\n        registry = SLARegistry(msg.sender);\n        sliInterval = _sliInterval;\n    }\n\n    /**\n     * @dev external function to register SLI's and check them against the SLO's\n     * @param _SLOName 1. the name of the SLO in bytes32\n     * @param _value 2. the value of the SLI to check\n     * @param _periodId 3. the id of the given period\n     */\n    function registerSLI(\n        bytes32 _SLOName,\n        uint256 _value,\n        uint256 _periodId\n    ) external onlyMessenger {\n        SLIs[_SLOName].push(SLI(block.timestamp, _value, _periodId));\n\n        emit SLICreated(block.timestamp, _value, _periodId);\n\n        if (!SLOs[_SLOName].isSLOHonored(_value)) {\n            periods[_periodId].status = Status.NotRespected;\n        } else {\n            periods[_periodId].status = Status.Respected;\n        }\n    }\n\n    /**\n     * @dev external function to get SLIs of certain _SLO\n     * @param _SLOName 1. the name of the SLO in bytes32\n     * @return SLI[] array of SLIs associated to the input SLOs\n     */\n    function getSLI(bytes32 _SLOName) public view returns (SLI[] memory) {\n        return SLIs[_SLOName];\n    }\n\n    /**\n     * @dev external view function that returns the sliInterval value\n     · @return uint256 value of the sliInterval\n     */\n    function getSliInterval() external view returns (uint256) {\n        return sliInterval;\n    }\n\n    /**\n     * @dev external view function that returns all agreement information\n     * @return address owner\n     * @return string ipfsHash\n     * @return uint256 amount necessary to stake\n     * @return bytes32[] aasdad\n     * @return SL[] aasdad\n     */\n\n    function getDetails()\n        external\n        view\n        returns (\n            address,\n            string memory,\n            uint256,\n            bytes32[] memory,\n            SLO[] memory\n        )\n    {\n        SLO[] memory _SLOAddresses = new SLO[](SLONames.length);\n\n        for (uint256 i = 0; i < SLONames.length; i++) {\n            _SLOAddresses[i] = SLOs[SLONames[i]];\n        }\n\n        return (owner(), ipfsHash, stake, SLONames, _SLOAddresses);\n    }\n}\n",
  "sourcePath": "/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLA/SLA.sol",
  "ast": {
    "absolutePath": "/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLA/SLA.sol",
    "exportedSymbols": {
      "SLA": [
        664
      ]
    },
    "id": 665,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 350,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:2"
      },
      {
        "id": 351,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 352,
        "nodeType": "ImportDirective",
        "scope": 665,
        "sourceUnit": 5207,
        "src": "91:52:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 353,
        "nodeType": "ImportDirective",
        "scope": 665,
        "sourceUnit": 6217,
        "src": "144:56:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 354,
        "nodeType": "ImportDirective",
        "scope": 665,
        "sourceUnit": 5403,
        "src": "201:51:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLO/SLO.sol",
        "file": "../SLO/SLO.sol",
        "id": 355,
        "nodeType": "ImportDirective",
        "scope": 665,
        "sourceUnit": 2279,
        "src": "253:24:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLARegistry.sol",
        "file": "../SLARegistry.sol",
        "id": 356,
        "nodeType": "ImportDirective",
        "scope": 665,
        "sourceUnit": 2148,
        "src": "278:28:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLA/Staking.sol",
        "file": "./Staking.sol",
        "id": 357,
        "nodeType": "ImportDirective",
        "scope": 665,
        "sourceUnit": 1791,
        "src": "307:23:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 359,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5206,
              "src": "462:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$5206",
                "typeString": "contract Ownable"
              }
            },
            "id": 360,
            "nodeType": "InheritanceSpecifier",
            "src": "462:7:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 361,
              "name": "Staking",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1790,
              "src": "471:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Staking_$1790",
                "typeString": "contract Staking"
              }
            },
            "id": 362,
            "nodeType": "InheritanceSpecifier",
            "src": "471:7:2"
          }
        ],
        "contractDependencies": [
          1790,
          4814,
          5206
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 358,
          "nodeType": "StructuredDocumentation",
          "src": "332:113:2",
          "text": " @title SLA\n @dev SLA is a service level agreement contract used for service downtime\n compensation"
        },
        "fullyImplemented": true,
        "id": 664,
        "linearizedBaseContracts": [
          664,
          1790,
          5206,
          4814
        ],
        "name": "SLA",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 365,
            "libraryName": {
              "contractScope": null,
              "id": 363,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5402,
              "src": "491:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$5402",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "485:27:2",
            "typeName": {
              "id": 364,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "504:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "documentation": {
              "id": 366,
              "nodeType": "StructuredDocumentation",
              "src": "518:71:2",
              "text": "@dev The required amount to stake when subscribing to the agreement"
            },
            "functionSelector": "3a4b66f1",
            "id": 368,
            "mutability": "mutable",
            "name": "stake",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 664,
            "src": "594:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 367,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "594:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 369,
              "nodeType": "StructuredDocumentation",
              "src": "621:42:2",
              "text": "@dev The time between SLI registration"
            },
            "id": 371,
            "mutability": "mutable",
            "name": "sliInterval",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 664,
            "src": "668:27:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 370,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "668:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 372,
              "nodeType": "StructuredDocumentation",
              "src": "702:72:2",
              "text": "@dev The ipfs hash that stores extra information about the agreement"
            },
            "functionSelector": "c623674f",
            "id": 374,
            "mutability": "mutable",
            "name": "ipfsHash",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 664,
            "src": "779:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 373,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "779:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 375,
              "nodeType": "StructuredDocumentation",
              "src": "808:45:2",
              "text": "@dev The address of the registry contract"
            },
            "functionSelector": "7b103999",
            "id": 377,
            "mutability": "mutable",
            "name": "registry",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 664,
            "src": "858:27:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SLARegistry_$2147",
              "typeString": "contract SLARegistry"
            },
            "typeName": {
              "contractScope": null,
              "id": 376,
              "name": "SLARegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2147,
              "src": "858:11:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SLARegistry_$2147",
                "typeString": "contract SLARegistry"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "SLA.SLI",
            "id": 384,
            "members": [
              {
                "constant": false,
                "id": 379,
                "mutability": "mutable",
                "name": "timestamp",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 384,
                "src": "967:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 378,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "967:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 381,
                "mutability": "mutable",
                "name": "value",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 384,
                "src": "994:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 380,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "994:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 383,
                "mutability": "mutable",
                "name": "periodId",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 384,
                "src": "1017:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 382,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1017:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "SLI",
            "nodeType": "StructDefinition",
            "scope": 664,
            "src": "946:94:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 385,
              "nodeType": "StructuredDocumentation",
              "src": "1046:63:2",
              "text": "@dev mapping to get SLO addresses from SLO names in bytes32"
            },
            "functionSelector": "b0227b47",
            "id": 389,
            "mutability": "mutable",
            "name": "SLOs",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 664,
            "src": "1114:35:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$2278_$",
              "typeString": "mapping(bytes32 => contract SLO)"
            },
            "typeName": {
              "id": 388,
              "keyType": {
                "id": 386,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1122:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1114:23:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$2278_$",
                "typeString": "mapping(bytes32 => contract SLO)"
              },
              "valueType": {
                "contractScope": null,
                "id": 387,
                "name": "SLO",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 2278,
                "src": "1133:3:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_SLO_$2278",
                  "typeString": "contract SLO"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 390,
              "nodeType": "StructuredDocumentation",
              "src": "1156:61:2",
              "text": "@dev mapping to get SLI structs from SLO names in bytes32"
            },
            "functionSelector": "94199c61",
            "id": 395,
            "mutability": "mutable",
            "name": "SLIs",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 664,
            "src": "1222:37:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$384_storage_$dyn_storage_$",
              "typeString": "mapping(bytes32 => struct SLA.SLI[])"
            },
            "typeName": {
              "id": 394,
              "keyType": {
                "id": 391,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1230:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1222:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$384_storage_$dyn_storage_$",
                "typeString": "mapping(bytes32 => struct SLA.SLI[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 392,
                  "name": "SLI",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 384,
                  "src": "1241:3:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SLI_$384_storage_ptr",
                    "typeString": "struct SLA.SLI"
                  }
                },
                "id": 393,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "1241:5:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_SLI_$384_storage_$dyn_storage_ptr",
                  "typeString": "struct SLA.SLI[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 396,
              "nodeType": "StructuredDocumentation",
              "src": "1266:63:2",
              "text": "@dev array storing the names of the SLO's of this agreement"
            },
            "functionSelector": "f34ed40d",
            "id": 399,
            "mutability": "mutable",
            "name": "SLONames",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 664,
            "src": "1334:25:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
              "typeString": "bytes32[]"
            },
            "typeName": {
              "baseType": {
                "id": 397,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1334:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "id": 398,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "1334:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                "typeString": "bytes32[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 400,
              "nodeType": "StructuredDocumentation",
              "src": "1366:218:2",
              "text": " @dev event for SLI creation logging\n @param _timestamp 1. the time the SLI has been registered\n @param _value 2. the value of the SLI\n @param _periodId 3. the id of the given period"
            },
            "id": 408,
            "name": "SLICreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 402,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_timestamp",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 408,
                  "src": "1606:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 401,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1606:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 404,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 408,
                  "src": "1626:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 403,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1626:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 406,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_periodId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 408,
                  "src": "1642:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 405,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1642:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1605:55:2"
            },
            "src": "1589:72:2"
          },
          {
            "body": {
              "id": 424,
              "nodeType": "Block",
              "src": "1787:80:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 412,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1805:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1805:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 416,
                                  "name": "registry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 377,
                                  "src": "1827:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SLARegistry_$2147",
                                    "typeString": "contract SLARegistry"
                                  }
                                },
                                "id": 417,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "messenger",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1824,
                                "src": "1827:18:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_Messenger_$291_$",
                                  "typeString": "function () view external returns (contract Messenger)"
                                }
                              },
                              "id": 418,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1827:20:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Messenger_$291",
                                "typeString": "contract Messenger"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Messenger_$291",
                                "typeString": "contract Messenger"
                              }
                            ],
                            "id": 415,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1819:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 414,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1819:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1819:29:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1805:43:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 411,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1797:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1797:52:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 422,
                  "nodeType": "ExpressionStatement",
                  "src": "1797:52:2"
                },
                {
                  "id": 423,
                  "nodeType": "PlaceholderStatement",
                  "src": "1859:1:2"
                }
              ]
            },
            "documentation": {
              "id": 409,
              "nodeType": "StructuredDocumentation",
              "src": "1667:90:2",
              "text": " @dev throws if called by any address other than the messenger contract."
            },
            "id": 425,
            "name": "onlyMessenger",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1784:2:2"
            },
            "src": "1762:105:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 522,
              "nodeType": "Block",
              "src": "3169:400:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 458,
                            "name": "_SLOs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 434,
                            "src": "3187:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_SLO_$2278_$dyn_memory_ptr",
                              "typeString": "contract SLO[] memory"
                            }
                          },
                          "id": 459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3187:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "35",
                          "id": 460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3202:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "src": "3187:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 457,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3179:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3179:25:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 463,
                  "nodeType": "ExpressionStatement",
                  "src": "3179:25:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 465,
                            "name": "_SLONames",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 431,
                            "src": "3222:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          "id": 466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3222:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 467,
                            "name": "_SLOs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 434,
                            "src": "3242:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_SLO_$2278_$dyn_memory_ptr",
                              "typeString": "contract SLO[] memory"
                            }
                          },
                          "id": 468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3242:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3222:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 464,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3214:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3214:41:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 471,
                  "nodeType": "ExpressionStatement",
                  "src": "3214:41:2"
                },
                {
                  "body": {
                    "id": 493,
                    "nodeType": "Block",
                    "src": "3309:54:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 483,
                              "name": "SLOs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 389,
                              "src": "3323:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$2278_$",
                                "typeString": "mapping(bytes32 => contract SLO)"
                              }
                            },
                            "id": 487,
                            "indexExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 484,
                                "name": "_SLONames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 431,
                                "src": "3328:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                }
                              },
                              "id": 486,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 485,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 473,
                                "src": "3338:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3328:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3323:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLO_$2278",
                              "typeString": "contract SLO"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 488,
                              "name": "_SLOs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 434,
                              "src": "3344:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_SLO_$2278_$dyn_memory_ptr",
                                "typeString": "contract SLO[] memory"
                              }
                            },
                            "id": 490,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 489,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 473,
                              "src": "3350:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3344:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLO_$2278",
                              "typeString": "contract SLO"
                            }
                          },
                          "src": "3323:29:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$2278",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 492,
                        "nodeType": "ExpressionStatement",
                        "src": "3323:29:2"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 476,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 473,
                      "src": "3286:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 477,
                        "name": "_SLOs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 434,
                        "src": "3290:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_SLO_$2278_$dyn_memory_ptr",
                          "typeString": "contract SLO[] memory"
                        }
                      },
                      "id": 478,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3290:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3286:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 494,
                  "initializationExpression": {
                    "assignments": [
                      473
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 473,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 494,
                        "src": "3271:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 472,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3271:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 475,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 474,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3283:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3271:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3304:3:2",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 480,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 473,
                        "src": "3304:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 482,
                    "nodeType": "ExpressionStatement",
                    "src": "3304:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "3266:97:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 496,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 428,
                        "src": "3391:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 495,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5205,
                      "src": "3373:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3373:25:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 498,
                  "nodeType": "ExpressionStatement",
                  "src": "3373:25:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 499,
                      "name": "SLONames",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 399,
                      "src": "3408:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                        "typeString": "bytes32[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 500,
                      "name": "_SLONames",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 431,
                      "src": "3419:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[] memory"
                      }
                    },
                    "src": "3408:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                      "typeString": "bytes32[] storage ref"
                    }
                  },
                  "id": 502,
                  "nodeType": "ExpressionStatement",
                  "src": "3408:20:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 503,
                      "name": "stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 368,
                      "src": "3438:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 504,
                      "name": "_stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 436,
                      "src": "3446:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3438:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 506,
                  "nodeType": "ExpressionStatement",
                  "src": "3438:14:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 507,
                      "name": "ipfsHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 374,
                      "src": "3462:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 508,
                      "name": "_ipfsHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 438,
                      "src": "3473:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3462:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 510,
                  "nodeType": "ExpressionStatement",
                  "src": "3462:20:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 511,
                      "name": "registry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 377,
                      "src": "3492:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLARegistry_$2147",
                        "typeString": "contract SLARegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 513,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3515:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3515:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 512,
                        "name": "SLARegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2147,
                        "src": "3503:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SLARegistry_$2147_$",
                          "typeString": "type(contract SLARegistry)"
                        }
                      },
                      "id": 515,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3503:23:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLARegistry_$2147",
                        "typeString": "contract SLARegistry"
                      }
                    },
                    "src": "3492:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SLARegistry_$2147",
                      "typeString": "contract SLARegistry"
                    }
                  },
                  "id": 517,
                  "nodeType": "ExpressionStatement",
                  "src": "3492:34:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 518,
                      "name": "sliInterval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 371,
                      "src": "3536:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 519,
                      "name": "_sliInterval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 440,
                      "src": "3550:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3536:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 521,
                  "nodeType": "ExpressionStatement",
                  "src": "3536:26:2"
                }
              ]
            },
            "documentation": {
              "id": 426,
              "nodeType": "StructuredDocumentation",
              "src": "1873:880:2",
              "text": " @param _owner 1. address of the owner of the service level agreement\n @param _SLONames 2. array of the names of the service level objectives\n in bytes32\n @param _SLOs 3. array of service level objective contract addressess\n service level objective breach\n @param _stake 4. uint of the amount required to stake when signing the\n service level agreement\n @param _ipfsHash 5. string with the ipfs hash that contains extra\n information about the service level agreement\n @param _sliInterval 6. uint the interval in seconds between requesting a new SLI\n @param _tokenAddress 7. address of the DSLA token to be unlocked for staking\n @param _sla_period_starts 8. array with the values for the \"start\" of every period\n @param _sla_period_ends 9. array with the values for the \"end\" of every period"
            },
            "id": 523,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 451,
                    "name": "_tokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 442,
                    "src": "3104:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_bDSLAToken_$2774",
                      "typeString": "contract bDSLAToken"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 452,
                    "name": "_sla_period_starts",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 445,
                    "src": "3119:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 453,
                    "name": "_sla_period_ends",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 448,
                    "src": "3139:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 454,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 428,
                    "src": "3157:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 455,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 450,
                  "name": "Staking",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1790,
                  "src": "3096:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Staking_$1790_$",
                    "typeString": "type(contract Staking)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3096:68:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 449,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 428,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 523,
                  "src": "2779:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 427,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2779:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 431,
                  "mutability": "mutable",
                  "name": "_SLONames",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 523,
                  "src": "2803:26:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 429,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2803:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 430,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2803:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 434,
                  "mutability": "mutable",
                  "name": "_SLOs",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 523,
                  "src": "2839:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_SLO_$2278_$dyn_memory_ptr",
                    "typeString": "contract SLO[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 432,
                      "name": "SLO",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 2278,
                      "src": "2839:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLO_$2278",
                        "typeString": "contract SLO"
                      }
                    },
                    "id": 433,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2839:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_SLO_$2278_$dyn_storage_ptr",
                      "typeString": "contract SLO[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 436,
                  "mutability": "mutable",
                  "name": "_stake",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 523,
                  "src": "2867:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 435,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2867:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 438,
                  "mutability": "mutable",
                  "name": "_ipfsHash",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 523,
                  "src": "2891:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 437,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2891:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 440,
                  "mutability": "mutable",
                  "name": "_sliInterval",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 523,
                  "src": "2924:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 439,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2924:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 442,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 523,
                  "src": "2954:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_bDSLAToken_$2774",
                    "typeString": "contract bDSLAToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 441,
                    "name": "bDSLAToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2774,
                    "src": "2954:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_bDSLAToken_$2774",
                      "typeString": "contract bDSLAToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 445,
                  "mutability": "mutable",
                  "name": "_sla_period_starts",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 523,
                  "src": "2988:35:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 443,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2988:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 444,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2988:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 448,
                  "mutability": "mutable",
                  "name": "_sla_period_ends",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 523,
                  "src": "3033:33:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 446,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3033:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 447,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3033:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2769:303:2"
            },
            "returnParameters": {
              "id": 456,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3169:0:2"
            },
            "scope": 664,
            "src": "2758:811:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 580,
              "nodeType": "Block",
              "src": "3964:338:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 540,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "3998:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 541,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3998:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 542,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 528,
                            "src": "4015:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 543,
                            "name": "_periodId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 530,
                            "src": "4023:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 539,
                          "name": "SLI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 384,
                          "src": "3994:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_SLI_$384_storage_ptr_$",
                            "typeString": "type(struct SLA.SLI storage pointer)"
                          }
                        },
                        "id": 544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3994:39:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SLI_$384_memory_ptr",
                          "typeString": "struct SLA.SLI memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SLI_$384_memory_ptr",
                          "typeString": "struct SLA.SLI memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 535,
                          "name": "SLIs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 395,
                          "src": "3974:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$384_storage_$dyn_storage_$",
                            "typeString": "mapping(bytes32 => struct SLA.SLI storage ref[] storage ref)"
                          }
                        },
                        "id": 537,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 536,
                          "name": "_SLOName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 526,
                          "src": "3979:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3974:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_SLI_$384_storage_$dyn_storage",
                          "typeString": "struct SLA.SLI storage ref[] storage ref"
                        }
                      },
                      "id": 538,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3974:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_SLI_$384_storage_$returns$__$",
                        "typeString": "function (struct SLA.SLI storage ref)"
                      }
                    },
                    "id": 545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3974:60:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 546,
                  "nodeType": "ExpressionStatement",
                  "src": "3974:60:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 548,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "4061:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4061:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 550,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 528,
                        "src": "4078:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 551,
                        "name": "_periodId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 530,
                        "src": "4086:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 547,
                      "name": "SLICreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 408,
                      "src": "4050:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256)"
                      }
                    },
                    "id": 552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4050:46:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 553,
                  "nodeType": "EmitStatement",
                  "src": "4045:51:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4111:36:2",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 558,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 528,
                          "src": "4140:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 554,
                            "name": "SLOs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 389,
                            "src": "4112:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$2278_$",
                              "typeString": "mapping(bytes32 => contract SLO)"
                            }
                          },
                          "id": 556,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 555,
                            "name": "_SLOName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 526,
                            "src": "4117:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4112:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$2278",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isSLOHonored",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2277,
                        "src": "4112:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view external returns (bool)"
                        }
                      },
                      "id": 559,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4112:35:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 578,
                    "nodeType": "Block",
                    "src": "4227:69:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 570,
                                "name": "periods",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 722,
                                "src": "4241:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Period_$700_storage_$dyn_storage",
                                  "typeString": "struct Staking.Period storage ref[] storage ref"
                                }
                              },
                              "id": 572,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 571,
                                "name": "_periodId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 530,
                                "src": "4249:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4241:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Period_$700_storage",
                                "typeString": "struct Staking.Period storage ref"
                              }
                            },
                            "id": 573,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 689,
                            "src": "4241:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$679",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 574,
                              "name": "Status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 679,
                              "src": "4269:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Status_$679_$",
                                "typeString": "type(enum Staking.Status)"
                              }
                            },
                            "id": 575,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Respected",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4269:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$679",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "src": "4241:44:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$679",
                            "typeString": "enum Staking.Status"
                          }
                        },
                        "id": 577,
                        "nodeType": "ExpressionStatement",
                        "src": "4241:44:2"
                      }
                    ]
                  },
                  "id": 579,
                  "nodeType": "IfStatement",
                  "src": "4107:189:2",
                  "trueBody": {
                    "id": 569,
                    "nodeType": "Block",
                    "src": "4149:72:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 561,
                                "name": "periods",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 722,
                                "src": "4163:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Period_$700_storage_$dyn_storage",
                                  "typeString": "struct Staking.Period storage ref[] storage ref"
                                }
                              },
                              "id": 563,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 562,
                                "name": "_periodId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 530,
                                "src": "4171:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4163:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Period_$700_storage",
                                "typeString": "struct Staking.Period storage ref"
                              }
                            },
                            "id": 564,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 689,
                            "src": "4163:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$679",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 565,
                              "name": "Status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 679,
                              "src": "4191:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Status_$679_$",
                                "typeString": "type(enum Staking.Status)"
                              }
                            },
                            "id": 566,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "NotRespected",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4191:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$679",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "src": "4163:47:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$679",
                            "typeString": "enum Staking.Status"
                          }
                        },
                        "id": 568,
                        "nodeType": "ExpressionStatement",
                        "src": "4163:47:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 524,
              "nodeType": "StructuredDocumentation",
              "src": "3575:257:2",
              "text": " @dev external function to register SLI's and check them against the SLO's\n @param _SLOName 1. the name of the SLO in bytes32\n @param _value 2. the value of the SLI to check\n @param _periodId 3. the id of the given period"
            },
            "functionSelector": "869c3925",
            "id": 581,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 533,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 532,
                  "name": "onlyMessenger",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 425,
                  "src": "3950:13:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3950:13:2"
              }
            ],
            "name": "registerSLI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 531,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 526,
                  "mutability": "mutable",
                  "name": "_SLOName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 581,
                  "src": "3867:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 525,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3867:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 528,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 581,
                  "src": "3893:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 527,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3893:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 530,
                  "mutability": "mutable",
                  "name": "_periodId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 581,
                  "src": "3917:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 529,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3917:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3857:83:2"
            },
            "returnParameters": {
              "id": 534,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3964:0:2"
            },
            "scope": 664,
            "src": "3837:465:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 594,
              "nodeType": "Block",
              "src": "4572:38:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 590,
                      "name": "SLIs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 395,
                      "src": "4589:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$384_storage_$dyn_storage_$",
                        "typeString": "mapping(bytes32 => struct SLA.SLI storage ref[] storage ref)"
                      }
                    },
                    "id": 592,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 591,
                      "name": "_SLOName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 584,
                      "src": "4594:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4589:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_SLI_$384_storage_$dyn_storage",
                      "typeString": "struct SLA.SLI storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 589,
                  "id": 593,
                  "nodeType": "Return",
                  "src": "4582:21:2"
                }
              ]
            },
            "documentation": {
              "id": 582,
              "nodeType": "StructuredDocumentation",
              "src": "4308:190:2",
              "text": " @dev external function to get SLIs of certain _SLO\n @param _SLOName 1. the name of the SLO in bytes32\n @return SLI[] array of SLIs associated to the input SLOs"
            },
            "functionSelector": "02e8b893",
            "id": 595,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSLI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 585,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 584,
                  "mutability": "mutable",
                  "name": "_SLOName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 595,
                  "src": "4519:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 583,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4519:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4518:18:2"
            },
            "returnParameters": {
              "id": 589,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 588,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 595,
                  "src": "4558:12:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_SLI_$384_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct SLA.SLI[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 586,
                      "name": "SLI",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 384,
                      "src": "4558:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SLI_$384_storage_ptr",
                        "typeString": "struct SLA.SLI"
                      }
                    },
                    "id": 587,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4558:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_SLI_$384_storage_$dyn_storage_ptr",
                      "typeString": "struct SLA.SLI[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4557:14:2"
            },
            "scope": 664,
            "src": "4503:107:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 603,
              "nodeType": "Block",
              "src": "4809:35:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 601,
                    "name": "sliInterval",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 371,
                    "src": "4826:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 600,
                  "id": 602,
                  "nodeType": "Return",
                  "src": "4819:18:2"
                }
              ]
            },
            "documentation": {
              "id": 596,
              "nodeType": "StructuredDocumentation",
              "src": "4616:130:2",
              "text": " @dev external view function that returns the sliInterval value\n· @return uint256 value of the sliInterval"
            },
            "functionSelector": "e7ab816a",
            "id": 604,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSliInterval",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 597,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4774:2:2"
            },
            "returnParameters": {
              "id": 600,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 599,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 604,
                  "src": "4800:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 598,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4800:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4799:9:2"
            },
            "scope": 664,
            "src": "4751:93:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 662,
              "nodeType": "Block",
              "src": "5317:258:2",
              "statements": [
                {
                  "assignments": [
                    623
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 623,
                      "mutability": "mutable",
                      "name": "_SLOAddresses",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 662,
                      "src": "5327:26:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_SLO_$2278_$dyn_memory_ptr",
                        "typeString": "contract SLO[]"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 621,
                          "name": "SLO",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 2278,
                          "src": "5327:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$2278",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 622,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "5327:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_SLO_$2278_$dyn_storage_ptr",
                          "typeString": "contract SLO[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 630,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 627,
                          "name": "SLONames",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 399,
                          "src": "5366:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                            "typeString": "bytes32[] storage ref"
                          }
                        },
                        "id": 628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5366:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "5356:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_SLO_$2278_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (contract SLO[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 624,
                          "name": "SLO",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 2278,
                          "src": "5360:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$2278",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 625,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "5360:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_SLO_$2278_$dyn_storage_ptr",
                          "typeString": "contract SLO[]"
                        }
                      }
                    },
                    "id": 629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5356:26:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_SLO_$2278_$dyn_memory_ptr",
                      "typeString": "contract SLO[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5327:55:2"
                },
                {
                  "body": {
                    "id": 652,
                    "nodeType": "Block",
                    "src": "5439:61:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 642,
                              "name": "_SLOAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 623,
                              "src": "5453:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_SLO_$2278_$dyn_memory_ptr",
                                "typeString": "contract SLO[] memory"
                              }
                            },
                            "id": 644,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 643,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 632,
                              "src": "5467:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5453:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLO_$2278",
                              "typeString": "contract SLO"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 645,
                              "name": "SLOs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 389,
                              "src": "5472:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$2278_$",
                                "typeString": "mapping(bytes32 => contract SLO)"
                              }
                            },
                            "id": 649,
                            "indexExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 646,
                                "name": "SLONames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 399,
                                "src": "5477:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                  "typeString": "bytes32[] storage ref"
                                }
                              },
                              "id": 648,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 647,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 632,
                                "src": "5486:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5477:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5472:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLO_$2278",
                              "typeString": "contract SLO"
                            }
                          },
                          "src": "5453:36:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$2278",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 651,
                        "nodeType": "ExpressionStatement",
                        "src": "5453:36:2"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 635,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 632,
                      "src": "5413:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 636,
                        "name": "SLONames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 399,
                        "src": "5417:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      "id": 637,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5417:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5413:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 653,
                  "initializationExpression": {
                    "assignments": [
                      632
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 632,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 653,
                        "src": "5398:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 631,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5398:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 634,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5410:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5398:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 640,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5434:3:2",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 639,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 632,
                        "src": "5434:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 641,
                    "nodeType": "ExpressionStatement",
                    "src": "5434:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "5393:107:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 654,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5142,
                          "src": "5518:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5518:7:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 656,
                        "name": "ipfsHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 374,
                        "src": "5527:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 657,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 368,
                        "src": "5537:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 658,
                        "name": "SLONames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 399,
                        "src": "5544:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 659,
                        "name": "_SLOAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 623,
                        "src": "5554:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_SLO_$2278_$dyn_memory_ptr",
                          "typeString": "contract SLO[] memory"
                        }
                      }
                    ],
                    "id": 660,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5517:51:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_string_storage_$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$_t_array$_t_contract$_SLO_$2278_$dyn_memory_ptr_$",
                      "typeString": "tuple(address,string storage ref,uint256,bytes32[] storage ref,contract SLO[] memory)"
                    }
                  },
                  "functionReturnParameters": 619,
                  "id": 661,
                  "nodeType": "Return",
                  "src": "5510:58:2"
                }
              ]
            },
            "documentation": {
              "id": 605,
              "nodeType": "StructuredDocumentation",
              "src": "4850:253:2",
              "text": " @dev external view function that returns all agreement information\n @return address owner\n @return string ipfsHash\n @return uint256 amount necessary to stake\n @return bytes32[] aasdad\n @return SL[] aasdad"
            },
            "functionSelector": "fbbf93a0",
            "id": 663,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDetails",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 606,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5128:2:2"
            },
            "returnParameters": {
              "id": 619,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 608,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 663,
                  "src": "5191:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 607,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5191:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 610,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 663,
                  "src": "5212:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 609,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5212:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 612,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 663,
                  "src": "5239:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 611,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5239:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 615,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 663,
                  "src": "5260:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 613,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "5260:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 614,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5260:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 618,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 663,
                  "src": "5290:12:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_SLO_$2278_$dyn_memory_ptr",
                    "typeString": "contract SLO[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 616,
                      "name": "SLO",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 2278,
                      "src": "5290:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLO_$2278",
                        "typeString": "contract SLO"
                      }
                    },
                    "id": 617,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5290:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_SLO_$2278_$dyn_storage_ptr",
                      "typeString": "contract SLO[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5177:135:2"
            },
            "scope": 664,
            "src": "5109:466:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 665,
        "src": "446:5131:2"
      }
    ],
    "src": "32:5546:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLA/SLA.sol",
    "exportedSymbols": {
      "SLA": [
        664
      ]
    },
    "id": 665,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 350,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:2"
      },
      {
        "id": 351,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 352,
        "nodeType": "ImportDirective",
        "scope": 665,
        "sourceUnit": 5207,
        "src": "91:52:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 353,
        "nodeType": "ImportDirective",
        "scope": 665,
        "sourceUnit": 6217,
        "src": "144:56:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 354,
        "nodeType": "ImportDirective",
        "scope": 665,
        "sourceUnit": 5403,
        "src": "201:51:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLO/SLO.sol",
        "file": "../SLO/SLO.sol",
        "id": 355,
        "nodeType": "ImportDirective",
        "scope": 665,
        "sourceUnit": 2279,
        "src": "253:24:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLARegistry.sol",
        "file": "../SLARegistry.sol",
        "id": 356,
        "nodeType": "ImportDirective",
        "scope": 665,
        "sourceUnit": 2148,
        "src": "278:28:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLA/Staking.sol",
        "file": "./Staking.sol",
        "id": 357,
        "nodeType": "ImportDirective",
        "scope": 665,
        "sourceUnit": 1791,
        "src": "307:23:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 359,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5206,
              "src": "462:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$5206",
                "typeString": "contract Ownable"
              }
            },
            "id": 360,
            "nodeType": "InheritanceSpecifier",
            "src": "462:7:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 361,
              "name": "Staking",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1790,
              "src": "471:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Staking_$1790",
                "typeString": "contract Staking"
              }
            },
            "id": 362,
            "nodeType": "InheritanceSpecifier",
            "src": "471:7:2"
          }
        ],
        "contractDependencies": [
          1790,
          4814,
          5206
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 358,
          "nodeType": "StructuredDocumentation",
          "src": "332:113:2",
          "text": " @title SLA\n @dev SLA is a service level agreement contract used for service downtime\n compensation"
        },
        "fullyImplemented": true,
        "id": 664,
        "linearizedBaseContracts": [
          664,
          1790,
          5206,
          4814
        ],
        "name": "SLA",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 365,
            "libraryName": {
              "contractScope": null,
              "id": 363,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5402,
              "src": "491:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$5402",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "485:27:2",
            "typeName": {
              "id": 364,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "504:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "documentation": {
              "id": 366,
              "nodeType": "StructuredDocumentation",
              "src": "518:71:2",
              "text": "@dev The required amount to stake when subscribing to the agreement"
            },
            "functionSelector": "3a4b66f1",
            "id": 368,
            "mutability": "mutable",
            "name": "stake",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 664,
            "src": "594:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 367,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "594:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 369,
              "nodeType": "StructuredDocumentation",
              "src": "621:42:2",
              "text": "@dev The time between SLI registration"
            },
            "id": 371,
            "mutability": "mutable",
            "name": "sliInterval",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 664,
            "src": "668:27:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 370,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "668:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 372,
              "nodeType": "StructuredDocumentation",
              "src": "702:72:2",
              "text": "@dev The ipfs hash that stores extra information about the agreement"
            },
            "functionSelector": "c623674f",
            "id": 374,
            "mutability": "mutable",
            "name": "ipfsHash",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 664,
            "src": "779:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 373,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "779:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 375,
              "nodeType": "StructuredDocumentation",
              "src": "808:45:2",
              "text": "@dev The address of the registry contract"
            },
            "functionSelector": "7b103999",
            "id": 377,
            "mutability": "mutable",
            "name": "registry",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 664,
            "src": "858:27:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SLARegistry_$2147",
              "typeString": "contract SLARegistry"
            },
            "typeName": {
              "contractScope": null,
              "id": 376,
              "name": "SLARegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2147,
              "src": "858:11:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SLARegistry_$2147",
                "typeString": "contract SLARegistry"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "SLA.SLI",
            "id": 384,
            "members": [
              {
                "constant": false,
                "id": 379,
                "mutability": "mutable",
                "name": "timestamp",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 384,
                "src": "967:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 378,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "967:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 381,
                "mutability": "mutable",
                "name": "value",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 384,
                "src": "994:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 380,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "994:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 383,
                "mutability": "mutable",
                "name": "periodId",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 384,
                "src": "1017:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 382,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1017:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "SLI",
            "nodeType": "StructDefinition",
            "scope": 664,
            "src": "946:94:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 385,
              "nodeType": "StructuredDocumentation",
              "src": "1046:63:2",
              "text": "@dev mapping to get SLO addresses from SLO names in bytes32"
            },
            "functionSelector": "b0227b47",
            "id": 389,
            "mutability": "mutable",
            "name": "SLOs",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 664,
            "src": "1114:35:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$2278_$",
              "typeString": "mapping(bytes32 => contract SLO)"
            },
            "typeName": {
              "id": 388,
              "keyType": {
                "id": 386,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1122:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1114:23:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$2278_$",
                "typeString": "mapping(bytes32 => contract SLO)"
              },
              "valueType": {
                "contractScope": null,
                "id": 387,
                "name": "SLO",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 2278,
                "src": "1133:3:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_SLO_$2278",
                  "typeString": "contract SLO"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 390,
              "nodeType": "StructuredDocumentation",
              "src": "1156:61:2",
              "text": "@dev mapping to get SLI structs from SLO names in bytes32"
            },
            "functionSelector": "94199c61",
            "id": 395,
            "mutability": "mutable",
            "name": "SLIs",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 664,
            "src": "1222:37:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$384_storage_$dyn_storage_$",
              "typeString": "mapping(bytes32 => struct SLA.SLI[])"
            },
            "typeName": {
              "id": 394,
              "keyType": {
                "id": 391,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1230:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1222:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$384_storage_$dyn_storage_$",
                "typeString": "mapping(bytes32 => struct SLA.SLI[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 392,
                  "name": "SLI",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 384,
                  "src": "1241:3:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SLI_$384_storage_ptr",
                    "typeString": "struct SLA.SLI"
                  }
                },
                "id": 393,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "1241:5:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_SLI_$384_storage_$dyn_storage_ptr",
                  "typeString": "struct SLA.SLI[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 396,
              "nodeType": "StructuredDocumentation",
              "src": "1266:63:2",
              "text": "@dev array storing the names of the SLO's of this agreement"
            },
            "functionSelector": "f34ed40d",
            "id": 399,
            "mutability": "mutable",
            "name": "SLONames",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 664,
            "src": "1334:25:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
              "typeString": "bytes32[]"
            },
            "typeName": {
              "baseType": {
                "id": 397,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1334:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "id": 398,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "1334:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                "typeString": "bytes32[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 400,
              "nodeType": "StructuredDocumentation",
              "src": "1366:218:2",
              "text": " @dev event for SLI creation logging\n @param _timestamp 1. the time the SLI has been registered\n @param _value 2. the value of the SLI\n @param _periodId 3. the id of the given period"
            },
            "id": 408,
            "name": "SLICreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 402,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_timestamp",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 408,
                  "src": "1606:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 401,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1606:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 404,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 408,
                  "src": "1626:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 403,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1626:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 406,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_periodId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 408,
                  "src": "1642:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 405,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1642:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1605:55:2"
            },
            "src": "1589:72:2"
          },
          {
            "body": {
              "id": 424,
              "nodeType": "Block",
              "src": "1787:80:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 412,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1805:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1805:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 416,
                                  "name": "registry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 377,
                                  "src": "1827:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SLARegistry_$2147",
                                    "typeString": "contract SLARegistry"
                                  }
                                },
                                "id": 417,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "messenger",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1824,
                                "src": "1827:18:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_Messenger_$291_$",
                                  "typeString": "function () view external returns (contract Messenger)"
                                }
                              },
                              "id": 418,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1827:20:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Messenger_$291",
                                "typeString": "contract Messenger"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Messenger_$291",
                                "typeString": "contract Messenger"
                              }
                            ],
                            "id": 415,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1819:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 414,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1819:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1819:29:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1805:43:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 411,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1797:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1797:52:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 422,
                  "nodeType": "ExpressionStatement",
                  "src": "1797:52:2"
                },
                {
                  "id": 423,
                  "nodeType": "PlaceholderStatement",
                  "src": "1859:1:2"
                }
              ]
            },
            "documentation": {
              "id": 409,
              "nodeType": "StructuredDocumentation",
              "src": "1667:90:2",
              "text": " @dev throws if called by any address other than the messenger contract."
            },
            "id": 425,
            "name": "onlyMessenger",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1784:2:2"
            },
            "src": "1762:105:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 522,
              "nodeType": "Block",
              "src": "3169:400:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 458,
                            "name": "_SLOs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 434,
                            "src": "3187:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_SLO_$2278_$dyn_memory_ptr",
                              "typeString": "contract SLO[] memory"
                            }
                          },
                          "id": 459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3187:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "35",
                          "id": 460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3202:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "src": "3187:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 457,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3179:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3179:25:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 463,
                  "nodeType": "ExpressionStatement",
                  "src": "3179:25:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 465,
                            "name": "_SLONames",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 431,
                            "src": "3222:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          "id": 466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3222:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 467,
                            "name": "_SLOs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 434,
                            "src": "3242:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_SLO_$2278_$dyn_memory_ptr",
                              "typeString": "contract SLO[] memory"
                            }
                          },
                          "id": 468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3242:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3222:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 464,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3214:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3214:41:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 471,
                  "nodeType": "ExpressionStatement",
                  "src": "3214:41:2"
                },
                {
                  "body": {
                    "id": 493,
                    "nodeType": "Block",
                    "src": "3309:54:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 483,
                              "name": "SLOs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 389,
                              "src": "3323:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$2278_$",
                                "typeString": "mapping(bytes32 => contract SLO)"
                              }
                            },
                            "id": 487,
                            "indexExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 484,
                                "name": "_SLONames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 431,
                                "src": "3328:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                }
                              },
                              "id": 486,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 485,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 473,
                                "src": "3338:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3328:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3323:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLO_$2278",
                              "typeString": "contract SLO"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 488,
                              "name": "_SLOs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 434,
                              "src": "3344:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_SLO_$2278_$dyn_memory_ptr",
                                "typeString": "contract SLO[] memory"
                              }
                            },
                            "id": 490,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 489,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 473,
                              "src": "3350:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3344:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLO_$2278",
                              "typeString": "contract SLO"
                            }
                          },
                          "src": "3323:29:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$2278",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 492,
                        "nodeType": "ExpressionStatement",
                        "src": "3323:29:2"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 476,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 473,
                      "src": "3286:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 477,
                        "name": "_SLOs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 434,
                        "src": "3290:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_SLO_$2278_$dyn_memory_ptr",
                          "typeString": "contract SLO[] memory"
                        }
                      },
                      "id": 478,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3290:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3286:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 494,
                  "initializationExpression": {
                    "assignments": [
                      473
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 473,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 494,
                        "src": "3271:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 472,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3271:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 475,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 474,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3283:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3271:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3304:3:2",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 480,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 473,
                        "src": "3304:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 482,
                    "nodeType": "ExpressionStatement",
                    "src": "3304:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "3266:97:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 496,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 428,
                        "src": "3391:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 495,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5205,
                      "src": "3373:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3373:25:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 498,
                  "nodeType": "ExpressionStatement",
                  "src": "3373:25:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 499,
                      "name": "SLONames",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 399,
                      "src": "3408:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                        "typeString": "bytes32[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 500,
                      "name": "_SLONames",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 431,
                      "src": "3419:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[] memory"
                      }
                    },
                    "src": "3408:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                      "typeString": "bytes32[] storage ref"
                    }
                  },
                  "id": 502,
                  "nodeType": "ExpressionStatement",
                  "src": "3408:20:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 503,
                      "name": "stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 368,
                      "src": "3438:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 504,
                      "name": "_stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 436,
                      "src": "3446:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3438:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 506,
                  "nodeType": "ExpressionStatement",
                  "src": "3438:14:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 507,
                      "name": "ipfsHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 374,
                      "src": "3462:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 508,
                      "name": "_ipfsHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 438,
                      "src": "3473:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3462:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 510,
                  "nodeType": "ExpressionStatement",
                  "src": "3462:20:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 511,
                      "name": "registry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 377,
                      "src": "3492:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLARegistry_$2147",
                        "typeString": "contract SLARegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 513,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3515:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3515:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 512,
                        "name": "SLARegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2147,
                        "src": "3503:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SLARegistry_$2147_$",
                          "typeString": "type(contract SLARegistry)"
                        }
                      },
                      "id": 515,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3503:23:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLARegistry_$2147",
                        "typeString": "contract SLARegistry"
                      }
                    },
                    "src": "3492:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SLARegistry_$2147",
                      "typeString": "contract SLARegistry"
                    }
                  },
                  "id": 517,
                  "nodeType": "ExpressionStatement",
                  "src": "3492:34:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 518,
                      "name": "sliInterval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 371,
                      "src": "3536:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 519,
                      "name": "_sliInterval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 440,
                      "src": "3550:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3536:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 521,
                  "nodeType": "ExpressionStatement",
                  "src": "3536:26:2"
                }
              ]
            },
            "documentation": {
              "id": 426,
              "nodeType": "StructuredDocumentation",
              "src": "1873:880:2",
              "text": " @param _owner 1. address of the owner of the service level agreement\n @param _SLONames 2. array of the names of the service level objectives\n in bytes32\n @param _SLOs 3. array of service level objective contract addressess\n service level objective breach\n @param _stake 4. uint of the amount required to stake when signing the\n service level agreement\n @param _ipfsHash 5. string with the ipfs hash that contains extra\n information about the service level agreement\n @param _sliInterval 6. uint the interval in seconds between requesting a new SLI\n @param _tokenAddress 7. address of the DSLA token to be unlocked for staking\n @param _sla_period_starts 8. array with the values for the \"start\" of every period\n @param _sla_period_ends 9. array with the values for the \"end\" of every period"
            },
            "id": 523,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 451,
                    "name": "_tokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 442,
                    "src": "3104:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_bDSLAToken_$2774",
                      "typeString": "contract bDSLAToken"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 452,
                    "name": "_sla_period_starts",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 445,
                    "src": "3119:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 453,
                    "name": "_sla_period_ends",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 448,
                    "src": "3139:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 454,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 428,
                    "src": "3157:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 455,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 450,
                  "name": "Staking",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1790,
                  "src": "3096:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Staking_$1790_$",
                    "typeString": "type(contract Staking)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3096:68:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 449,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 428,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 523,
                  "src": "2779:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 427,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2779:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 431,
                  "mutability": "mutable",
                  "name": "_SLONames",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 523,
                  "src": "2803:26:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 429,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2803:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 430,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2803:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 434,
                  "mutability": "mutable",
                  "name": "_SLOs",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 523,
                  "src": "2839:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_SLO_$2278_$dyn_memory_ptr",
                    "typeString": "contract SLO[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 432,
                      "name": "SLO",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 2278,
                      "src": "2839:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLO_$2278",
                        "typeString": "contract SLO"
                      }
                    },
                    "id": 433,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2839:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_SLO_$2278_$dyn_storage_ptr",
                      "typeString": "contract SLO[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 436,
                  "mutability": "mutable",
                  "name": "_stake",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 523,
                  "src": "2867:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 435,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2867:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 438,
                  "mutability": "mutable",
                  "name": "_ipfsHash",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 523,
                  "src": "2891:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 437,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2891:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 440,
                  "mutability": "mutable",
                  "name": "_sliInterval",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 523,
                  "src": "2924:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 439,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2924:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 442,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 523,
                  "src": "2954:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_bDSLAToken_$2774",
                    "typeString": "contract bDSLAToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 441,
                    "name": "bDSLAToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2774,
                    "src": "2954:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_bDSLAToken_$2774",
                      "typeString": "contract bDSLAToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 445,
                  "mutability": "mutable",
                  "name": "_sla_period_starts",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 523,
                  "src": "2988:35:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 443,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2988:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 444,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2988:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 448,
                  "mutability": "mutable",
                  "name": "_sla_period_ends",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 523,
                  "src": "3033:33:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 446,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3033:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 447,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3033:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2769:303:2"
            },
            "returnParameters": {
              "id": 456,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3169:0:2"
            },
            "scope": 664,
            "src": "2758:811:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 580,
              "nodeType": "Block",
              "src": "3964:338:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 540,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "3998:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 541,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3998:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 542,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 528,
                            "src": "4015:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 543,
                            "name": "_periodId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 530,
                            "src": "4023:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 539,
                          "name": "SLI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 384,
                          "src": "3994:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_SLI_$384_storage_ptr_$",
                            "typeString": "type(struct SLA.SLI storage pointer)"
                          }
                        },
                        "id": 544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3994:39:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SLI_$384_memory_ptr",
                          "typeString": "struct SLA.SLI memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SLI_$384_memory_ptr",
                          "typeString": "struct SLA.SLI memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 535,
                          "name": "SLIs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 395,
                          "src": "3974:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$384_storage_$dyn_storage_$",
                            "typeString": "mapping(bytes32 => struct SLA.SLI storage ref[] storage ref)"
                          }
                        },
                        "id": 537,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 536,
                          "name": "_SLOName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 526,
                          "src": "3979:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3974:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_SLI_$384_storage_$dyn_storage",
                          "typeString": "struct SLA.SLI storage ref[] storage ref"
                        }
                      },
                      "id": 538,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3974:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_SLI_$384_storage_$returns$__$",
                        "typeString": "function (struct SLA.SLI storage ref)"
                      }
                    },
                    "id": 545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3974:60:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 546,
                  "nodeType": "ExpressionStatement",
                  "src": "3974:60:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 548,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "4061:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4061:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 550,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 528,
                        "src": "4078:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 551,
                        "name": "_periodId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 530,
                        "src": "4086:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 547,
                      "name": "SLICreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 408,
                      "src": "4050:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256)"
                      }
                    },
                    "id": 552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4050:46:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 553,
                  "nodeType": "EmitStatement",
                  "src": "4045:51:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4111:36:2",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 558,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 528,
                          "src": "4140:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 554,
                            "name": "SLOs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 389,
                            "src": "4112:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$2278_$",
                              "typeString": "mapping(bytes32 => contract SLO)"
                            }
                          },
                          "id": 556,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 555,
                            "name": "_SLOName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 526,
                            "src": "4117:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4112:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$2278",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isSLOHonored",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2277,
                        "src": "4112:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view external returns (bool)"
                        }
                      },
                      "id": 559,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4112:35:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 578,
                    "nodeType": "Block",
                    "src": "4227:69:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 570,
                                "name": "periods",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 722,
                                "src": "4241:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Period_$700_storage_$dyn_storage",
                                  "typeString": "struct Staking.Period storage ref[] storage ref"
                                }
                              },
                              "id": 572,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 571,
                                "name": "_periodId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 530,
                                "src": "4249:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4241:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Period_$700_storage",
                                "typeString": "struct Staking.Period storage ref"
                              }
                            },
                            "id": 573,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 689,
                            "src": "4241:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$679",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 574,
                              "name": "Status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 679,
                              "src": "4269:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Status_$679_$",
                                "typeString": "type(enum Staking.Status)"
                              }
                            },
                            "id": 575,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Respected",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4269:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$679",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "src": "4241:44:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$679",
                            "typeString": "enum Staking.Status"
                          }
                        },
                        "id": 577,
                        "nodeType": "ExpressionStatement",
                        "src": "4241:44:2"
                      }
                    ]
                  },
                  "id": 579,
                  "nodeType": "IfStatement",
                  "src": "4107:189:2",
                  "trueBody": {
                    "id": 569,
                    "nodeType": "Block",
                    "src": "4149:72:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 561,
                                "name": "periods",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 722,
                                "src": "4163:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Period_$700_storage_$dyn_storage",
                                  "typeString": "struct Staking.Period storage ref[] storage ref"
                                }
                              },
                              "id": 563,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 562,
                                "name": "_periodId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 530,
                                "src": "4171:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4163:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Period_$700_storage",
                                "typeString": "struct Staking.Period storage ref"
                              }
                            },
                            "id": 564,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 689,
                            "src": "4163:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$679",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 565,
                              "name": "Status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 679,
                              "src": "4191:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Status_$679_$",
                                "typeString": "type(enum Staking.Status)"
                              }
                            },
                            "id": 566,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "NotRespected",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4191:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$679",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "src": "4163:47:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$679",
                            "typeString": "enum Staking.Status"
                          }
                        },
                        "id": 568,
                        "nodeType": "ExpressionStatement",
                        "src": "4163:47:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 524,
              "nodeType": "StructuredDocumentation",
              "src": "3575:257:2",
              "text": " @dev external function to register SLI's and check them against the SLO's\n @param _SLOName 1. the name of the SLO in bytes32\n @param _value 2. the value of the SLI to check\n @param _periodId 3. the id of the given period"
            },
            "functionSelector": "869c3925",
            "id": 581,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 533,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 532,
                  "name": "onlyMessenger",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 425,
                  "src": "3950:13:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3950:13:2"
              }
            ],
            "name": "registerSLI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 531,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 526,
                  "mutability": "mutable",
                  "name": "_SLOName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 581,
                  "src": "3867:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 525,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3867:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 528,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 581,
                  "src": "3893:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 527,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3893:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 530,
                  "mutability": "mutable",
                  "name": "_periodId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 581,
                  "src": "3917:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 529,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3917:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3857:83:2"
            },
            "returnParameters": {
              "id": 534,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3964:0:2"
            },
            "scope": 664,
            "src": "3837:465:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 594,
              "nodeType": "Block",
              "src": "4572:38:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 590,
                      "name": "SLIs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 395,
                      "src": "4589:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$384_storage_$dyn_storage_$",
                        "typeString": "mapping(bytes32 => struct SLA.SLI storage ref[] storage ref)"
                      }
                    },
                    "id": 592,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 591,
                      "name": "_SLOName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 584,
                      "src": "4594:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4589:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_SLI_$384_storage_$dyn_storage",
                      "typeString": "struct SLA.SLI storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 589,
                  "id": 593,
                  "nodeType": "Return",
                  "src": "4582:21:2"
                }
              ]
            },
            "documentation": {
              "id": 582,
              "nodeType": "StructuredDocumentation",
              "src": "4308:190:2",
              "text": " @dev external function to get SLIs of certain _SLO\n @param _SLOName 1. the name of the SLO in bytes32\n @return SLI[] array of SLIs associated to the input SLOs"
            },
            "functionSelector": "02e8b893",
            "id": 595,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSLI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 585,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 584,
                  "mutability": "mutable",
                  "name": "_SLOName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 595,
                  "src": "4519:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 583,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4519:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4518:18:2"
            },
            "returnParameters": {
              "id": 589,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 588,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 595,
                  "src": "4558:12:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_SLI_$384_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct SLA.SLI[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 586,
                      "name": "SLI",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 384,
                      "src": "4558:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SLI_$384_storage_ptr",
                        "typeString": "struct SLA.SLI"
                      }
                    },
                    "id": 587,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4558:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_SLI_$384_storage_$dyn_storage_ptr",
                      "typeString": "struct SLA.SLI[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4557:14:2"
            },
            "scope": 664,
            "src": "4503:107:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 603,
              "nodeType": "Block",
              "src": "4809:35:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 601,
                    "name": "sliInterval",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 371,
                    "src": "4826:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 600,
                  "id": 602,
                  "nodeType": "Return",
                  "src": "4819:18:2"
                }
              ]
            },
            "documentation": {
              "id": 596,
              "nodeType": "StructuredDocumentation",
              "src": "4616:130:2",
              "text": " @dev external view function that returns the sliInterval value\n· @return uint256 value of the sliInterval"
            },
            "functionSelector": "e7ab816a",
            "id": 604,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSliInterval",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 597,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4774:2:2"
            },
            "returnParameters": {
              "id": 600,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 599,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 604,
                  "src": "4800:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 598,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4800:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4799:9:2"
            },
            "scope": 664,
            "src": "4751:93:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 662,
              "nodeType": "Block",
              "src": "5317:258:2",
              "statements": [
                {
                  "assignments": [
                    623
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 623,
                      "mutability": "mutable",
                      "name": "_SLOAddresses",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 662,
                      "src": "5327:26:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_SLO_$2278_$dyn_memory_ptr",
                        "typeString": "contract SLO[]"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 621,
                          "name": "SLO",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 2278,
                          "src": "5327:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$2278",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 622,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "5327:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_SLO_$2278_$dyn_storage_ptr",
                          "typeString": "contract SLO[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 630,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 627,
                          "name": "SLONames",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 399,
                          "src": "5366:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                            "typeString": "bytes32[] storage ref"
                          }
                        },
                        "id": 628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5366:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "5356:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_SLO_$2278_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (contract SLO[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 624,
                          "name": "SLO",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 2278,
                          "src": "5360:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$2278",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 625,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "5360:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_SLO_$2278_$dyn_storage_ptr",
                          "typeString": "contract SLO[]"
                        }
                      }
                    },
                    "id": 629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5356:26:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_SLO_$2278_$dyn_memory_ptr",
                      "typeString": "contract SLO[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5327:55:2"
                },
                {
                  "body": {
                    "id": 652,
                    "nodeType": "Block",
                    "src": "5439:61:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 642,
                              "name": "_SLOAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 623,
                              "src": "5453:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_SLO_$2278_$dyn_memory_ptr",
                                "typeString": "contract SLO[] memory"
                              }
                            },
                            "id": 644,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 643,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 632,
                              "src": "5467:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5453:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLO_$2278",
                              "typeString": "contract SLO"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 645,
                              "name": "SLOs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 389,
                              "src": "5472:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$2278_$",
                                "typeString": "mapping(bytes32 => contract SLO)"
                              }
                            },
                            "id": 649,
                            "indexExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 646,
                                "name": "SLONames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 399,
                                "src": "5477:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                  "typeString": "bytes32[] storage ref"
                                }
                              },
                              "id": 648,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 647,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 632,
                                "src": "5486:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5477:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5472:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLO_$2278",
                              "typeString": "contract SLO"
                            }
                          },
                          "src": "5453:36:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$2278",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 651,
                        "nodeType": "ExpressionStatement",
                        "src": "5453:36:2"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 635,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 632,
                      "src": "5413:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 636,
                        "name": "SLONames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 399,
                        "src": "5417:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      "id": 637,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5417:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5413:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 653,
                  "initializationExpression": {
                    "assignments": [
                      632
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 632,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 653,
                        "src": "5398:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 631,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5398:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 634,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5410:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5398:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 640,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5434:3:2",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 639,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 632,
                        "src": "5434:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 641,
                    "nodeType": "ExpressionStatement",
                    "src": "5434:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "5393:107:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 654,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5142,
                          "src": "5518:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5518:7:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 656,
                        "name": "ipfsHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 374,
                        "src": "5527:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 657,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 368,
                        "src": "5537:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 658,
                        "name": "SLONames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 399,
                        "src": "5544:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 659,
                        "name": "_SLOAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 623,
                        "src": "5554:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_SLO_$2278_$dyn_memory_ptr",
                          "typeString": "contract SLO[] memory"
                        }
                      }
                    ],
                    "id": 660,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5517:51:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_string_storage_$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$_t_array$_t_contract$_SLO_$2278_$dyn_memory_ptr_$",
                      "typeString": "tuple(address,string storage ref,uint256,bytes32[] storage ref,contract SLO[] memory)"
                    }
                  },
                  "functionReturnParameters": 619,
                  "id": 661,
                  "nodeType": "Return",
                  "src": "5510:58:2"
                }
              ]
            },
            "documentation": {
              "id": 605,
              "nodeType": "StructuredDocumentation",
              "src": "4850:253:2",
              "text": " @dev external view function that returns all agreement information\n @return address owner\n @return string ipfsHash\n @return uint256 amount necessary to stake\n @return bytes32[] aasdad\n @return SL[] aasdad"
            },
            "functionSelector": "fbbf93a0",
            "id": 663,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDetails",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 606,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5128:2:2"
            },
            "returnParameters": {
              "id": 619,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 608,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 663,
                  "src": "5191:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 607,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5191:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 610,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 663,
                  "src": "5212:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 609,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5212:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 612,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 663,
                  "src": "5239:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 611,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5239:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 615,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 663,
                  "src": "5260:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 613,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "5260:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 614,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5260:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 618,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 663,
                  "src": "5290:12:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_SLO_$2278_$dyn_memory_ptr",
                    "typeString": "contract SLO[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 616,
                      "name": "SLO",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 2278,
                      "src": "5290:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLO_$2278",
                        "typeString": "contract SLO"
                      }
                    },
                    "id": 617,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5290:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_SLO_$2278_$dyn_storage_ptr",
                      "typeString": "contract SLO[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5177:135:2"
            },
            "scope": 664,
            "src": "5109:466:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 665,
        "src": "446:5131:2"
      }
    ],
    "src": "32:5546:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.5",
  "updatedAt": "2020-12-23T13:40:37.251Z",
  "devdoc": {
    "details": "SLA is a service level agreement contract used for service downtime compensation",
    "events": {
      "SLICreated(uint256,uint256,uint256)": {
        "details": "event for SLI creation logging",
        "params": {
          "_periodId": "3. the id of the given period",
          "_timestamp": "1. the time the SLI has been registered",
          "_value": "2. the value of the SLI"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "_SLONames": "2. array of the names of the service level objectives in bytes32",
          "_SLOs": "3. array of service level objective contract addressess service level objective breach",
          "_ipfsHash": "5. string with the ipfs hash that contains extra information about the service level agreement",
          "_owner": "1. address of the owner of the service level agreement",
          "_sla_period_ends": "9. array with the values for the \"end\" of every period",
          "_sla_period_starts": "8. array with the values for the \"start\" of every period",
          "_sliInterval": "6. uint the interval in seconds between requesting a new SLI",
          "_stake": "4. uint of the amount required to stake when signing the service level agreement",
          "_tokenAddress": "7. address of the DSLA token to be unlocked for staking"
        }
      },
      "getDetails()": {
        "details": "external view function that returns all agreement information",
        "returns": {
          "_0": "address owner",
          "_1": "string ipfsHash",
          "_2": "uint256 amount necessary to stake",
          "_3": "bytes32[] aasdad",
          "_4": "SL[] aasdad"
        }
      },
      "getSLI(bytes32)": {
        "details": "external function to get SLIs of certain _SLO",
        "params": {
          "_SLOName": "1. the name of the SLO in bytes32"
        },
        "returns": {
          "_0": "SLI[] array of SLIs associated to the input SLOs"
        }
      },
      "getSliInterval()": {
        "details": "external view function that returns the sliInterval value",
        "returns": {
          "_0": "uint256 value of the sliInterval"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "registerSLI(bytes32,uint256,uint256)": {
        "details": "external function to register SLI's and check them against the SLO's",
        "params": {
          "_SLOName": "1. the name of the SLO in bytes32",
          "_periodId": "3. the id of the given period",
          "_value": "2. the value of the SLI to check"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "stakersCount()": {
        "details": "public view function that returns the total amount of stakers"
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "stateVariables": {
      "SLIs": {
        "details": "mapping to get SLI structs from SLO names in bytes32"
      },
      "SLONames": {
        "details": "array storing the names of the SLO's of this agreement"
      },
      "SLOs": {
        "details": "mapping to get SLO addresses from SLO names in bytes32"
      },
      "ipfsHash": {
        "details": "The ipfs hash that stores extra information about the agreement"
      },
      "registry": {
        "details": "The address of the registry contract"
      },
      "sliInterval": {
        "details": "The time between SLI registration"
      },
      "stake": {
        "details": "The required amount to stake when subscribing to the agreement"
      }
    },
    "title": "SLA",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}