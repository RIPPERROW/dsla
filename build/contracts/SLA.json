{
  "contractName": "SLA",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "bytes32[]",
          "name": "_SLONames",
          "type": "bytes32[]"
        },
        {
          "internalType": "contract SLO[]",
          "name": "_SLOs",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "_stake",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_ipfsHash",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_sliInterval",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_baseTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "_sla_period_starts",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_sla_period_ends",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "period_index",
          "type": "uint256"
        }
      ],
      "name": "NewPeriodAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_periodId",
          "type": "uint256"
        }
      ],
      "name": "SLICreated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BaseToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "SLIs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "periodId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "SLONames",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "SLOs",
      "outputs": [
        {
          "internalType": "contract SLO",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "addAllowedTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_sla_period_start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_sla_period_end",
          "type": "uint256"
        }
      ],
      "name": "addNewPeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allowedTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowedTokensMapping",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_period",
          "type": "uint256"
        }
      ],
      "name": "claimCompensation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_period",
          "type": "uint256"
        }
      ],
      "name": "claimReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_periodId",
          "type": "uint256"
        }
      ],
      "name": "getPeriodData",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "periodStart",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "periodEnd",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getTokenStake",
      "outputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "stake",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "getTokenStakeLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_period",
          "type": "uint256"
        }
      ],
      "name": "getUserTotalValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ipfsHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "periods",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "sla_period_start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sla_period_end",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "claimed_reward",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "claimed",
          "type": "bool"
        },
        {
          "internalType": "enum Staking.Status",
          "name": "status",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "internalType": "contract SLARegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_period",
          "type": "uint256"
        }
      ],
      "name": "stakeTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakersCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokensPool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "uniqueTokensStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userStakedTokens",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userStakedTokensIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "userStakes",
      "outputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "stake",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "validator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_period",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_period",
          "type": "uint256"
        }
      ],
      "name": "withdrawAndStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_SLOName",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_periodId",
          "type": "uint256"
        }
      ],
      "name": "registerSLI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_SLOName",
          "type": "bytes32"
        }
      ],
      "name": "getSLI",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "periodId",
              "type": "uint256"
            }
          ],
          "internalType": "struct SLA.SLI[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSliInterval",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDetails",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        },
        {
          "internalType": "contract SLO[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"_SLONames\",\"type\":\"bytes32[]\"},{\"internalType\":\"contract SLO[]\",\"name\":\"_SLOs\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_stake\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_ipfsHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_sliInterval\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_baseTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_sla_period_starts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_sla_period_ends\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"period_index\",\"type\":\"uint256\"}],\"name\":\"NewPeriodAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_periodId\",\"type\":\"uint256\"}],\"name\":\"SLICreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BaseToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"SLIs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"periodId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"SLONames\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"SLOs\",\"outputs\":[{\"internalType\":\"contract SLO\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"addAllowedTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_sla_period_start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sla_period_end\",\"type\":\"uint256\"}],\"name\":\"addNewPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allowedTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowedTokensMapping\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"claimCompensation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDetails\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"contract SLO[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_periodId\",\"type\":\"uint256\"}],\"name\":\"getPeriodData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"periodStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"periodEnd\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_SLOName\",\"type\":\"bytes32\"}],\"name\":\"getSLI\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"periodId\",\"type\":\"uint256\"}],\"internalType\":\"struct SLA.SLI[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSliInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getTokenStake\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getTokenStakeLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"getUserTotalValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ipfsHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"periods\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sla_period_start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sla_period_end\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimed_reward\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"claimed\",\"type\":\"bool\"},{\"internalType\":\"enum Staking.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_SLOName\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_periodId\",\"type\":\"uint256\"}],\"name\":\"registerSLI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract SLARegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"stakeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakersCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokensPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"uniqueTokensStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userStakedTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userStakedTokensIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userStakes\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"validator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"withdrawAndStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"SLA is a service level agreement contract used for service downtime compensation\",\"events\":{\"SLICreated(uint256,uint256,uint256)\":{\"details\":\"event for SLI creation logging\",\"params\":{\"_periodId\":\"3. the id of the given period\",\"_timestamp\":\"1. the time the SLI has been registered\",\"_value\":\"2. the value of the SLI\"}}},\"kind\":\"dev\",\"methods\":{\"addAllowedTokens(address)\":{\"details\":\"add a token to ve allowed for staking\",\"params\":{\"_token\":\"1. address of the new allowed token\"}},\"addNewPeriod(uint256,uint256)\":{\"details\":\"add a new period to the array\",\"params\":{\"_sla_period_end\":\"2. uint256 of the end of the period\",\"_sla_period_start\":\"1. uint256 of the start of the period\"}},\"claimCompensation(uint256)\":{\"details\":\"claim from delegators\",\"params\":{\"_period\":\"1. period id to claim\"}},\"claimReward(uint256)\":{\"details\":\"claim from validators\",\"params\":{\"_period\":\"1. period id to claim\"}},\"constructor\":{\"params\":{\"_SLONames\":\"2. array of the names of the service level objectives in bytes32\",\"_SLOs\":\"3. array of service level objective contract addressess service level objective breach\",\"_baseTokenAddress\":\"7. address of the Base Token to be unlocked for staking\",\"_ipfsHash\":\"5. string with the ipfs hash that contains extra information about the service level agreement\",\"_owner\":\"1. address of the owner of the service level agreement\",\"_sla_period_ends\":\"9. array with the values for the \\\"end\\\" of every period\",\"_sla_period_starts\":\"8. array with the values for the \\\"start\\\" of every period\",\"_sliInterval\":\"6. uint the interval in seconds between requesting a new SLI\",\"_stake\":\"4. uint of the amount required to stake when signing the service level agreement\"}},\"getDetails()\":{\"details\":\"external view function that returns all agreement information\",\"returns\":{\"_0\":\"address owner\",\"_1\":\"string ipfsHash\",\"_2\":\"uint256 amount necessary to stake\",\"_3\":\"bytes32[] SLONames array\",\"_4\":\"SLO[] SLO addresses array\"}},\"getSLI(bytes32)\":{\"details\":\"external function to get SLIs of certain _SLO\",\"params\":{\"_SLOName\":\"1. the name of the SLO in bytes32\"},\"returns\":{\"_0\":\"SLI[] array of SLIs associated to the input SLOs\"}},\"getSliInterval()\":{\"details\":\"external view function that returns the sliInterval value\",\"returns\":{\"_0\":\"uint256 value of the sliInterval\"}},\"getTokenStake(address,uint256)\":{\"details\":\"returns the token stake according to index\",\"params\":{\"_index\":\"2. index of the TokenStake\",\"_owner\":\"1. owner of the stake\"}},\"getTokenStakeLength(address)\":{\"details\":\"returns the length of TokenStakes per user\",\"params\":{\"_owner\":\"1. owner of the stake\"}},\"getUserTotalValue(address,uint256)\":{\"details\":\"get the user total value staked\",\"params\":{\"_period\":\"2. period id to claim\",\"_user\":\"1. address of the user\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"registerSLI(bytes32,uint256,uint256)\":{\"details\":\"external function to register SLI's and check them against the SLO's\",\"params\":{\"_SLOName\":\"1. the name of the SLO in bytes32\",\"_periodId\":\"3. the id of the given period\",\"_value\":\"2. the value of the SLI to check\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"stakeTokens(uint256,address,uint256)\":{\"details\":\"increase the amount staked per token\",\"params\":{\"_amount\":\"1. amount to be staked\",\"_period\":\"3. period id to stake\",\"_token\":\"2. address of the token\"}},\"stakersCount()\":{\"details\":\"public view function that returns the total amount of stakers\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(address,uint256)\":{\"details\":\"withdraw staked tokens\",\"params\":{\"_period\":\"2. period id to withdraw\",\"_token\":\"1. address of the token\"}},\"withdrawAndStake(address,uint256,uint256)\":{\"details\":\"withdraw BaseToken and stake d Tokens\",\"params\":{\"_amount\":\"2. amount to withdraw\",\"_period\":\"3. period id to withdraw\",\"_token\":\"1. address of the token\"}}},\"stateVariables\":{\"SLIs\":{\"details\":\"mapping to get SLI structs from SLO names in bytes32\"},\"SLONames\":{\"details\":\"array storing the names of the SLO's of this agreement\"},\"SLOs\":{\"details\":\"mapping to get SLO addresses from SLO names in bytes32\"},\"ipfsHash\":{\"details\":\"The ipfs hash that stores extra information about the agreement\"},\"registry\":{\"details\":\"The address of the registry contract\"},\"sliInterval\":{\"details\":\"The time between SLI registration\"},\"stake\":{\"details\":\"The required amount to stake when subscribing to the agreement\"}},\"title\":\"SLA\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLA/SLA.sol\":\"SLA\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/Messenger.sol\":{\"keccak256\":\"0x546389407ec1f02e2ea5babf8f2b7ae498b04c2c1a440a28752ecd0bff9992a9\",\"urls\":[\"bzz-raw://a3fabec3ba7252a3281afdcf02e89e54b8b3c43b5ef947acc544370fa16467a0\",\"dweb:/ipfs/QmeMcTysfLakapdSMwJ2WD6tefrMK2dwTB7jgWD6z1czG9\"]},\"/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLA/SLA.sol\":{\"keccak256\":\"0xfd5268ec483968f3ced99ac67a52044f580a707d11b30b71197f45544f8f09cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2b91401ac6d51e3e12c6ed07d6498f34f4199cb8afd590e9fbcbfb8049082fa\",\"dweb:/ipfs/QmeLPVsMVKC3rU3M8RiU8oXQyW3TYoeZAfgHPuALKbUz1b\"]},\"/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLA/Staking.sol\":{\"keccak256\":\"0x1f1a60d0b8a91b5082ef5b4434b60d1cef3dd8c2d4b27bf5ec30a2f438f19a41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38475d7ac3fd508708bb55107ed1e504da2a3dc370528db40190a7ea70373be5\",\"dweb:/ipfs/QmXFDth2LnbDnaT18LLafa3Vs89GwHCXbFsb2XCKPKyssQ\"]},\"/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLARegistry.sol\":{\"keccak256\":\"0x84f7748a0e0ce22217e4ece478cf625b05a4ff937df06a154c8db08bebbae3cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://460bfc1531865e6c9e84bf72b94ae300ce1d3b889ad67ea2f95427530d678b58\",\"dweb:/ipfs/QmcfZhKoTEEXVhzM5asPT7ie1fJZZ9AiDjkR7bt4uiftyH\"]},\"/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLO/SLO.sol\":{\"keccak256\":\"0x8b65ee21bcc99350f76e11724268ee0341d15d0fae3bccf0e79434504768b2f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d7e756abbe5b65cb7a8158be59b156936ba55a33b1ac524c679bf1981fbc981\",\"dweb:/ipfs/QmUk7gHqh4XJmXqmu8QWhqbUDy8Bev9ZP74XPjkopfVb6q\"]},\"/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/StringUtils.sol\":{\"keccak256\":\"0xed67dd7772841b09f0a00e6e191f42746f078e0907d38964c7d164ac32e0a7ef\",\"urls\":[\"bzz-raw://b5df848099351c5c9883d690eaaee2e79e1a31552d80f0fc8cd33902f9f01daa\",\"dweb:/ipfs/QmPDQp8CwK1bHyNkwBJPgNz2nqkvx6Fwh3jDrJoojwCB5u\"]},\"@chainlink/contracts/src/v0.6/Chainlink.sol\":{\"keccak256\":\"0x7048bfd6e6fe4e60ea4af01ed44fc0494cec75df75c6b542a6f08ed34c66d39e\",\"urls\":[\"bzz-raw://37efc6a4665b537657283652d75919ec8dd3d48d85150b5285041bc9614fec11\",\"dweb:/ipfs/QmWKgeJEj222kNefTkauHwM5x58KTxSGgcbLseH9Fq8jed\"]},\"@chainlink/contracts/src/v0.6/ChainlinkClient.sol\":{\"keccak256\":\"0xd06166f7798c4c8cbd0e2dc642450c9bca39157c688ae95dbe079f666cc44dfa\",\"urls\":[\"bzz-raw://672af493da8e01492532d7ca8660362d015f317114e405aa55c85cff24aee31c\",\"dweb:/ipfs/QmNZdB2jVwwswrLFr83toTtHM5MPSugKeUdxrxfCJ4mP4K\"]},\"@chainlink/contracts/src/v0.6/interfaces/ChainlinkRequestInterface.sol\":{\"keccak256\":\"0x4b41b021bf58c429891ff291637de29be54741565105de82238dac9f6ecee374\",\"urls\":[\"bzz-raw://84681ff65b31b2e2c6977289661733c0f22409965b9057140f56f8a9ff185048\",\"dweb:/ipfs/QmS4TQJDSHQiKNwQ4LkSCVp7LjuRQwp6gem3271vtCwz9k\"]},\"@chainlink/contracts/src/v0.6/interfaces/ENSInterface.sol\":{\"keccak256\":\"0xf4998e886147b298eda28b4eacbdc90c58ba63ba475469651f2072e188dd5a64\",\"urls\":[\"bzz-raw://c1e2334294a816b7eda9de280e39b9463ebde2db8b242410eb991b2f623b47d4\",\"dweb:/ipfs/QmNY5bajahfFRmhBgcMVQ7712zHKxc6HkuN7LaiKtpjb7t\"]},\"@chainlink/contracts/src/v0.6/interfaces/LinkTokenInterface.sol\":{\"keccak256\":\"0xdbf46b45a4c9f38ba71a0391aed0e7b108854b619f292d907ae537228868bda6\",\"urls\":[\"bzz-raw://3ae40466809630c4731e2e3a697d6885727c577aaf260766c8a2f534ad3f6ee8\",\"dweb:/ipfs/QmTzpN5yP4Y5jvQ1ohfXFrce3sjzUiSChYJgZj9VvhVohG\"]},\"@chainlink/contracts/src/v0.6/interfaces/PointerInterface.sol\":{\"keccak256\":\"0x6458d82762d4f13c020a13efdbd9bf14500e147df707184a693aea91449c2f4f\",\"urls\":[\"bzz-raw://735950f3a544fc6ef2db92405597169bfb5fdb9df83623c0d99fd3d85de8690d\",\"dweb:/ipfs/QmZHxb5Qr7Kw9DHAg4VwEADue9ffNyyhbiyEZ15A5mANUN\"]},\"@chainlink/contracts/src/v0.6/vendor/BufferChainlink.sol\":{\"keccak256\":\"0xe4aa364f56414c4326ffe12c1121d591be6ad168afb42b24a823f6d76299dd63\",\"urls\":[\"bzz-raw://e3e91a0eddb6fc6c53acdfbd59771deff1678330128d3c98014c668763efb45e\",\"dweb:/ipfs/Qmbt5VNT2W2oCN44536JGNuHqAJdmYGqzEFcHvy8W1tAsY\"]},\"@chainlink/contracts/src/v0.6/vendor/CBORChainlink.sol\":{\"keccak256\":\"0xbb4d8257c1af348cac9828ee531428b148bb726517357fe6a80279ac45b658b5\",\"urls\":[\"bzz-raw://8c8c5da0358946437fac595591367066b8d6e5f58414c027a79a093e1f3241c1\",\"dweb:/ipfs/QmNQ5TPzaPEbj5kaX17YLuZEmhv8NGfoCrUVK3s6gQuHdA\"]},\"@chainlink/contracts/src/v0.6/vendor/ENSResolver.sol\":{\"keccak256\":\"0xdddea29d7407c1dbd1e130d885fc1a0934e98f0a7cc9f4d5bfd002bb2cfbcf82\",\"urls\":[\"bzz-raw://c4c764d69c47754d7b219fab558bf4be2a6444470ede7aa0ab1e446aea01dbda\",\"dweb:/ipfs/QmWp2CNUw9xt8ir2P3LhGHuydUsAXnyZ382U2BUjhoYPvy\"]},\"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":{\"keccak256\":\"0x5e6948bb332468d8ef0704b4259babc8aef7ce5969d5997c16db8ad806222a0a\",\"urls\":[\"bzz-raw://8e2bbda1e1168401d0105cc86bf5302000e8555ebb9b235cd68c148916a452e5\",\"dweb:/ipfs/QmbTjbpJr8VfdWfgBknbQov1MGkXXPMysb7eD8bobGAcBV\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3\",\"dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017\",\"dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200356938038062003569833981016040819052620000349162000796565b8282828b60006200004462000296565b600080546001600160a01b0319166001600160a01b03831690811782556040519293509160008051602062003549833981519152908290a3508151835114620000aa5760405162461bcd60e51b8152600401620000a19062000928565b60405180910390fd5b600480546001600160a01b038084166001600160a01b0319928316179092556001805492871692821683178155600680548083019091557ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f01805490921683179091556000918252600760205260408220805460ff191690911790555b835181101562000174576200016b8482815181106200014257fe5b60200260200101518483815181106200015757fe5b60200260200101516200029a60201b60201c565b60010162000127565b505050505060058751106200019d5760405162461bcd60e51b8152600401620000a190620009f5565b8651885114620001c15760405162461bcd60e51b8152600401620000a190620009a6565b60005b87518110156200023557878181518110620001db57fe5b6020026020010151601160008b8481518110620001f457fe5b602090810291909101810151825281019190915260400160002080546001600160a01b0319166001600160a01b0392909216919091179055600101620001c4565b506200024189620003f1565b8751620002569060139060208b019062000520565b50600d86905584516200027190600f90602088019062000570565b5050601080546001600160a01b031916331790555050600e555062000abf9350505050565b3390565b620002a4620005e2565b82815260208101828152600060808301818152600280546001810182559281905284517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace600690940293840190815593517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf84015560408501517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad084015560608501517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad1909301805460ff19169315159390931780845591518594939092909161ff0019909116906101009084908111156200039c57fe5b02179055505050620003c360016002805490506200049e60201b62001cc51790919060201c565b6040517ff791e873e3b67fe74b29aeede7bcbbdaa59c4b64e542571183cd837aa56f6ac990600090a2505050565b620003fb62000296565b6000546001600160a01b039081169116146200042b5760405162461bcd60e51b8152600401620000a19062000971565b6001600160a01b038116620004545760405162461bcd60e51b8152600401620000a190620008e2565b600080546040516001600160a01b03808516939216916000805160206200354983398151915291a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000620004e883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250620004f160201b60201c565b90505b92915050565b60008184841115620005185760405162461bcd60e51b8152600401620000a19190620008ad565b505050900390565b8280548282559060005260206000209081019282156200055e579160200282015b828111156200055e57825182559160200191906001019062000541565b506200056c9291506200061e565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620005b357805160ff19168380011785556200055e565b828001600101855582156200055e57918201828111156200055e57825182559160200191906001019062000541565b6040518060a00160405280600081526020016000815260200160008152602001600015158152602001600060028111156200061957fe5b905290565b5b808211156200056c57600081556001016200061f565b8051620004eb8162000aa6565b600082601f83011262000653578081fd5b81516200066a620006648262000a53565b62000a2c565b8181529150602080830190848101818402860182018710156200068c57600080fd5b60005b84811015620006ad578151845292820192908201906001016200068f565b505050505092915050565b600082601f830112620006c9578081fd5b8151620006da620006648262000a53565b818152915060208083019084810181840286018201871015620006fc57600080fd5b60005b84811015620006ad578151620007158162000aa6565b84529282019290820190600101620006ff565b600082601f83011262000739578081fd5b81516001600160401b038111156200074f578182fd5b62000764601f8201601f191660200162000a2c565b91508082528360208285010111156200077c57600080fd5b6200078f81602084016020860162000a73565b5092915050565b60008060008060008060008060006101208a8c031215620007b5578485fd5b620007c18b8b62000635565b60208b01519099506001600160401b0380821115620007de578687fd5b620007ec8d838e0162000642565b995060408c015191508082111562000802578687fd5b620008108d838e01620006b8565b985060608c0151975060808c01519150808211156200082d578687fd5b6200083b8d838e0162000728565b965060a08c01519550620008538d60c08e0162000635565b945060e08c015191508082111562000869578384fd5b620008778d838e0162000642565b93506101008c01519150808211156200088e578283fd5b506200089d8c828d0162000642565b9150509295985092959850929598565b6000602082528251806020840152620008ce81604085016020870162000a73565b601f01601f19169190910160400192915050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526029908201527f506c6561736520636865636b2074686520706172616d73206f6620796f757220604082015268706572696f6473202160b81b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602f908201527f5f534c4f4e616d657320616e64205f534c4f732073686f756c6420686176652060408201526e0e8d0ca40e6c2daca40d8cadccee8d608b1b606082015260800190565b60208082526017908201527f6d617820616d6f756e74206f6620534c4f732069732035000000000000000000604082015260600190565b6040518181016001600160401b038111828210171562000a4b57600080fd5b604052919050565b60006001600160401b0382111562000a69578081fd5b5060209081020190565b60005b8381101562000a9057818101518382015260200162000a76565b8381111562000aa0576000848401525b50505050565b6001600160a01b038116811462000abc57600080fd5b50565b612a7a8062000acf6000396000f3fe608060405234801561001057600080fd5b50600436106101f75760003560e01c806394199c6111610120578063ea4a1104116100b8578063f3fef3a31161007c578063f3fef3a314610468578063fbbf93a01461047b578063fc875ece14610494578063fd0d5534146104b5578063fd5e6dd1146104c8576101f7565b8063ea4a1104146103f8578063ec04de481461041c578063f10bd7721461042f578063f2fde38b14610442578063f34ed40d14610455576101f7565b806394199c6114610352578063a2e80c5e14610374578063ae169a501461037c578063b0227b471461038f578063b5d5b5fa146103a2578063b83e0234146103b5578063c623674f146103c8578063cec534d6146103dd578063e7ab816a146103f0576101f7565b806357ac94f01161019357806357ac94f0146102d05780635e5f2e26146102f1578063715018a61461030457806375fdf2a91461030c5780637b1039991461031f578063817b1cd214610327578063869c39251461032f5780638da5cb5b1461034257806390f817021461034a576101f7565b806302e8b893146101fc5780630e1fcf3414610225578063105237cf1461023a578063171e44ea1461025a5780631934d0e81461026d5780632eac9787146102805780633a4b66f1146102a05780633a5381b5146102a857806353e85fd5146102bd575b600080fd5b61020f61020a366004612386565b6104db565b60405161021c919061257b565b60405180910390f35b61023861023336600461239e565b61056c565b005b61024d6102483660046122b3565b6105b8565b60405161021c91906125d4565b6102386102683660046122b3565b6105cd565b61024d61027b3660046122cf565b6106a2565b61029361028e3660046122cf565b6106c2565b60405161021c91906125df565b6102936106df565b6102b06106e5565b60405161021c9190612485565b6102386102cb366004612386565b6106f4565b6102e36102de366004612307565b610a12565b60405161021c9291906124bd565b6102b06102ff366004612386565b610a92565b610238610ab9565b61023861031a366004612332565b610b38565b6102b0610e9b565b610293610eaa565b61023861033d3660046123bf565b610eb0565b6102b061110d565b6102b061111c565b61036561036036600461239e565b61112b565b60405161021c939291906129b3565b61029361116a565b61023861038a366004612386565b611170565b6102b061039d366004612386565b61134a565b6102e36103b0366004612307565b611365565b6102936103c33660046122b3565b6113a8565b6103d06113ba565b60405161021c91906125e8565b6102386103eb366004612406565b611448565b610293611638565b61040b610406366004612386565b61163e565b60405161021c9594939291906129c9565b61029361042a3660046122b3565b611681565b61029361043d366004612307565b61169c565b6102386104503660046122b3565b61174a565b610293610463366004612386565b611800565b610238610476366004612307565b61181e565b610483611a8c565b60405161021c9594939291906124d6565b6104a76104a2366004612386565b611c5c565b60405161021c9291906129a5565b6102936104c33660046122b3565b611ca6565b6102b06104d6366004612386565b611cb8565b606060126000838152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156105605783829060005260206000209060030201604051806060016040529081600082015481526020016001820154815260200160028201548152505081526020019060010190610510565b5050505090505b919050565b610574611d07565b6000546001600160a01b039081169116146105aa5760405162461bcd60e51b81526004016105a1906128b4565b60405180910390fd5b6105b48282611d0b565b5050565b60076020526000908152604090205460ff1681565b6105d5611d07565b6000546001600160a01b039081169116146106025760405162461bcd60e51b81526004016105a1906128b4565b6001600160a01b03811660009081526007602052604090205460ff161561063b5760405162461bcd60e51b81526004016105a1906127c2565b6006805460018181019092557ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b039093166001600160a01b031990931683179055600091825260076020526040909120805460ff19169091179055565b600b60209081526000928352604080842090915290825290205460ff1681565b600a60209081526000928352604080842090915290825290205481565b600d5481565b6004546001600160a01b031681565b806002818154811061070257fe5b906000526020600020906006020160000154421015801561074157506002818154811061072b57fe5b9060005260206000209060060201600101544211155b61074a57600080fd5b6004546001600160a01b03163314156107755760405162461bcd60e51b81526004016105a19061275c565b600280838154811061078357fe5b906000526020600020906006020160030160019054906101000a900460ff1660028111156107ad57fe5b146107ca5760405162461bcd60e51b81526004016105a190612671565b600282815481106107d757fe5b6000918252602080832033845260056006909302019190910190526040902054156108145760405162461bcd60e51b81526004016105a190612948565b6000610820338461169c565b9050600061083a600a610834846003611e4d565b90611e87565b60035490915061084a9083611cc5565b600381905550816002858154811061085e57fe5b600091825260208083203380855260069390930201600501905260409182902092909255600154905163a9059cbb60e01b81526001600160a01b039091169163a9059cbb916108b2919086906004016124bd565b602060405180830381600087803b1580156108cc57600080fd5b505af11580156108e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109049190612366565b50600154604080518082018252600d81526c6275726e2875696e743235362960981b602090910152516000916001600160a01b0316907f42966c689b5afe9b9b3f8a7103b2a19980d59629bfd6a20a60972312ed41d8369061096a9085906024016125df565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516109a89190612469565b6000604051808303816000865af19150503d80600081146109e5576040519150601f19603f3d011682016040523d82523d6000602084013e6109ea565b606091505b5050905080610a0b5760405162461bcd60e51b81526004016105a1906125fb565b5050505050565b6001600160a01b0382166000908152600960205260408120805482919084908110610a3957fe5b600091825260208083206002909202909101546001600160a01b03878116845260099092526040909220805491909216919085908110610a7557fe5b906000526020600020906002020160010154915091509250929050565b60068181548110610a9f57fe5b6000918252602090912001546001600160a01b0316905081565b610ac1611d07565b6000546001600160a01b03908116911614610aee5760405162461bcd60e51b81526004016105a1906128b4565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6004546001600160a01b0316331415610b635760405162461bcd60e51b81526004016105a19061275c565b6001600160a01b038316600090815260076020526040902054839060ff161515600114610ba25760405162461bcd60e51b81526004016105a190612886565b600060028381548110610bb157fe5b600091825260208083206001600160a01b03891684526004600690930201919091018152604080832033845290915290205411610c005760405162461bcd60e51b81526004016105a19061278b565b6040516323b872dd60e01b81526001600160a01b038516906323b872dd90610c3090339030908890600401612499565b602060405180830381600087803b158015610c4a57600080fd5b505af1158015610c5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c829190612366565b50610ccc8360028481548110610c9457fe5b600091825260208083206001600160a01b038a1684526004600690930201919091018152604080832033845290915290205490611ec9565b60028381548110610cd957fe5b600091825260208083206001600160a01b038916845260046006909302019190910181526040808320338452909152902055600354610d189084611ec9565b600355610d258484611eee565b600060028381548110610d3457fe5b600091825260208083206001600160a01b03891684526004600690930201919091018152604080832033845290915281205460055460028054929450610d9e9287908110610d7e57fe5b906000526020600020906006020160020154611e8790919063ffffffff16565b9050600060028581548110610daf57fe5b600091825260208083206001600160a01b038b16845260046006909302019190910181526040808320338452909152902055600354610dee9083611cc5565b6003556001546001600160a01b031663a9059cbb33610e0d8585611cc5565b6040518363ffffffff1660e01b8152600401610e2a9291906124bd565b602060405180830381600087803b158015610e4457600080fd5b505af1158015610e58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e7c9190612366565b50600154610e93906001600160a01b03168361208e565b505050505050565b6010546001600160a01b031681565b60035481565b601060009054906101000a90046001600160a01b03166001600160a01b0316633cb747bf6040518163ffffffff1660e01b815260040160206040518083038186803b158015610efe57600080fd5b505afa158015610f12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3691906123ea565b6001600160a01b0316336001600160a01b031614610f665760405162461bcd60e51b81526004016105a190612717565b600083815260126020908152604080832081516060810183524280825281850188815282850188815284546001818101875595895296909720925160039096029092019485559051918401919091559251600290920191909155517fc95987c1992805ee34bdc915e017cceae36ba1c156b9911fa7e691e6435eb46e91610ff091859085906129b3565b60405180910390a16000838152601160205260409081902054905163868d08f760e01b81526001600160a01b039091169063868d08f7906110359085906004016125df565b60206040518083038186803b15801561104d57600080fd5b505afa158015611061573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110859190612366565b6110ca57600280828154811061109757fe5b60009182526020909120600360069092020101805461ff0019166101008360028111156110c057fe5b0217905550611108565b6001600282815481106110d957fe5b60009182526020909120600360069092020101805461ff00191661010083600281111561110257fe5b02179055505b505050565b6000546001600160a01b031690565b6001546001600160a01b031681565b6012602052816000526040600020818154811061114457fe5b600091825260209091206003909102018054600182015460029092015490935090915083565b60055490565b806002818154811061117e57fe5b90600052602060002090600602016000015442101580156111bd5750600281815481106111a757fe5b9060005260206000209060060201600101544211155b6111c657600080fd5b6004546001600160a01b031633146111f05760405162461bcd60e51b81526004016105a190612915565b6001600283815481106111ff57fe5b906000526020600020906006020160030160019054906101000a900460ff16600281111561122957fe5b146112465760405162461bcd60e51b81526004016105a190612644565b6002828154811061125357fe5b600091825260209091206003600690920201015460ff16156112875760405162461bcd60e51b81526004016105a1906127ef565b60025460035460009161129a9190611e87565b905060006112ae600a610834846003611e4d565b6003549091506112be9083611cc5565b60038190555081600285815481106112d257fe5b9060005260206000209060060201600201819055506001600285815481106112f657fe5b60009182526020909120600690910201600301805460ff191691151591909117905560015460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906108b290339086906004016124bd565b6011602052600090815260409020546001600160a01b031681565b6009602052816000526040600020818154811061137e57fe5b6000918252602090912060029091020180546001909101546001600160a01b039091169250905082565b60086020526000908152604090205481565b600f805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156114405780601f1061141557610100808354040283529160200191611440565b820191906000526020600020905b81548152906001019060200180831161142357829003601f168201915b505050505081565b6001600160a01b038216600090815260076020526040902054829060ff1615156001146114875760405162461bcd60e51b81526004016105a190612886565b600084116114a75760405162461bcd60e51b81526004016105a1906128e9565b6114b2338484612133565b6040516323b872dd60e01b81526001600160a01b038416906323b872dd906114e290339030908990600401612499565b602060405180830381600087803b1580156114fc57600080fd5b505af1158015611510573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115349190612366565b5061157e846002848154811061154657fe5b600091825260208083206001600160a01b03891684526004600690930201919091018152604080832033845290915290205490611ec9565b6002838154811061158b57fe5b600091825260208083206001600160a01b0388168452600460069093020191909101815260408083203384529091529020556003546115ca9085611ec9565b600355336000908152600860205260409020546001141561162857600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b031916331790555b6116328385611eee565b50505050565b600e5490565b6002818154811061164b57fe5b60009182526020909120600690910201805460018201546002830154600390930154919350919060ff8082169161010090041685565b6001600160a01b031660009081526009602052604090205490565b6001600160a01b0382166000908152600860205260408120548190156117415760005b60065481101561173f57611735600285815481106116d957fe5b90600052602060002090600602016004016000600684815481106116f957fe5b60009182526020808320909101546001600160a01b0390811684528382019490945260409283018220938a168252929092529020548390611ec9565b91506001016116bf565b505b90505b92915050565b611752611d07565b6000546001600160a01b0390811691161461177f5760405162461bcd60e51b81526004016105a1906128b4565b6001600160a01b0381166117a55760405162461bcd60e51b81526004016105a19061269a565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6013818154811061180d57fe5b600091825260209091200154905081565b6004546001600160a01b03163314156118495760405162461bcd60e51b81526004016105a19061275c565b6001600160a01b038216600090815260076020526040902054829060ff1615156001146118885760405162461bcd60e51b81526004016105a190612886565b60006002838154811061189757fe5b600091825260208083206001600160a01b038816845260046006909302019190910181526040808320338452909152902054116118e65760405162461bcd60e51b81526004016105a19061278b565b6000600283815481106118f557fe5b600091825260208083206001600160a01b0388168452600460069093020191909101815260408083203384529091528120546005546002805492945061193f9287908110610d7e57fe5b905060006002858154811061195057fe5b600091825260208083206001600160a01b038a1684526004600690930201919091018152604080832033845290915290205560035461198f9083611cc5565b6003556001600160a01b03851663a9059cbb336119ac8585611cc5565b6040518363ffffffff1660e01b81526004016119c99291906124bd565b602060405180830381600087803b1580156119e357600080fd5b505af11580156119f7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a1b9190612366565b5033600090815260086020526040902054611a37906001611cc5565b336000908152600860205260409020819055611a82576000611a58336121bc565b905060058181548110611a6757fe5b600091825260209091200180546001600160a01b0319169055505b610a0b858361208e565b600060606000606080606060138054905067ffffffffffffffff81118015611ab357600080fd5b50604051908082528060200260200182016040528015611add578160200160208202803683370190505b50905060005b601354811015611b57576011600060138381548110611afe57fe5b9060005260206000200154815260200190815260200160002060009054906101000a90046001600160a01b0316828281518110611b3757fe5b6001600160a01b0390921660209283029190910190910152600101611ae3565b50611b6061110d565b600d54600f805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292939260139287928691830182828015611bf15780601f10611bc657610100808354040283529160200191611bf1565b820191906000526020600020905b815481529060010190602001808311611bd457829003601f168201915b5050505050935081805480602002602001604051908101604052809291908181526020018280548015611c4357602002820191906000526020600020905b815481526020019060010190808311611c2f575b5050505050915095509550955095509550509091929394565b60008060028381548110611c6c57fe5b90600052602060002090600602016000015460028481548110611c8b57fe5b90600052602060002090600602016001015491509150915091565b600c6020526000908152604090205481565b60058181548110610a9f57fe5b600061174183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612215565b3390565b611d13612278565b82815260208101828152600060808301818152600280546001810182559281905284517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace600690940293840190815593517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf84015560408501517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad084015560608501517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad1909301805460ff19169315159390931780845591518594939092909161ff001990911690610100908490811115611e0a57fe5b021790555050600254611e1f91506001611cc5565b6040517ff791e873e3b67fe74b29aeede7bcbbdaa59c4b64e542571183cd837aa56f6ac990600090a2505050565b600082611e5c57506000611744565b82820282848281611e6957fe5b04146117415760405162461bcd60e51b81526004016105a190612845565b600061174183836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612241565b6000828201838110156117415760405162461bcd60e51b81526004016105a1906126e0565b336000908152600b602090815260408083206001600160a01b038616845290915290205460ff16611fb957336000818152600960209081526040808320815180830183526001600160a01b03888116808352828601898152845460018082018755868a52888a209551600290920290950180546001600160a01b0319169190941617835551918301919091558686529154600a85528386208387528552838620600019919091019055948452600b83528184209084529091529020805460ff1916909117905561204b565b336000818152600a602090815260408083206001600160a01b038716845282528083205493835260099091529020805461201991849184908110611ff957fe5b906000526020600020906002020160010154611ec990919063ffffffff16565b33600090815260096020526040902080548390811061203457fe5b906000526020600020906002020160010181905550505b6001600160a01b0382166000908152600c602052604090205461206e9082611ec9565b6001600160a01b039092166000908152600c602052604090209190915550565b336000818152600a602090815260408083206001600160a01b03871684528252808320549383526009909152902080546120ee918491849081106120ce57fe5b906000526020600020906002020160010154611cc590919063ffffffff16565b506001600160a01b0383166000908152600c60205260409020546121129083611cc5565b6001600160a01b039093166000908152600c60205260409020929092555050565b60006002828154811061214257fe5b600091825260208083206001600160a01b0387811685526006939093020160040181526040808420928816845291905290205411611108576001600160a01b03831660009081526008602052604090205461219e906001611ec9565b6001600160a01b038416600090815260086020526040902055505050565b6000805b60055481101561220b57826001600160a01b0316600582815481106121e157fe5b6000918252602090912001546001600160a01b03161415612203579050610567565b6001016121c0565b5060001992915050565b600081848411156122395760405162461bcd60e51b81526004016105a191906125e8565b505050900390565b600081836122625760405162461bcd60e51b81526004016105a191906125e8565b50600083858161226e57fe5b0495945050505050565b6040518060a00160405280600081526020016000815260200160008152602001600015158152602001600060028111156122ae57fe5b905290565b6000602082840312156122c4578081fd5b813561174181612a2c565b600080604083850312156122e1578081fd5b82356122ec81612a2c565b915060208301356122fc81612a2c565b809150509250929050565b60008060408385031215612319578182fd5b823561232481612a2c565b946020939093013593505050565b600080600060608486031215612346578081fd5b833561235181612a2c565b95602085013595506040909401359392505050565b600060208284031215612377578081fd5b81518015158114611741578182fd5b600060208284031215612397578081fd5b5035919050565b600080604083850312156123b0578182fd5b50508035926020909101359150565b6000806000606084860312156123d3578283fd5b505081359360208301359350604090920135919050565b6000602082840312156123fb578081fd5b815161174181612a2c565b60008060006060848603121561241a578283fd5b83359250602084013561242c81612a2c565b929592945050506040919091013590565b60008151808452612455816020860160208601612a00565b601f01601f19169290920160200192915050565b6000825161247b818460208701612a00565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b600060018060a01b038088168352602060a0818501526124f960a085018961243d565b604085018890528481036060860152865180825282880191830190855b8181101561253257835183529284019291840191600101612516565b505085810360808701528651808252908301915082870190855b8181101561256a57825186168452928401929184019160010161254c565b50919b9a5050505050505050505050565b602080825282518282018190526000919060409081850190868401855b828110156125c75781518051855286810151878601528501518585015260609093019290850190600101612598565b5091979650505050505050565b901515815260200190565b90815260200190565b600060208252611741602083018461243d565b60208082526029908201527f42617365546f6b656e206275726e2070726f6365737320776173206e6f7420736040820152681d58d8d95cdcd99d5b60ba1b606082015260800190565b602080825260139082015272534c41206e6f7420726573706563746564202160681b604082015260600190565b6020808252600f908201526e534c4120726573706563746564202160881b604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b60208082526025908201527f4f6e6c79204d657373656e6765722063616e2063616c6c20746869732066756e6040820152643a31b4b7b760d91b606082015260800190565b602080825260159082015274596f752061726520612076616c696461746f72202160581b604082015260600190565b6020808252601b908201527f7374616b696e672062616c616e63652063616e6e6f7420626520300000000000604082015260600190565b6020808252601390820152721d1bdad95b88185b1c9958591e481859191959606a1b604082015260600190565b60208082526036908201527f596f75206861766520616c726561647920636c61696d656420796f75722072656040820152757761726420666f72207468697320706572696f64202160501b606082015260800190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6040820152607760f81b606082015260800190565b6020808252601490820152731d1bdad95b881a5cc81b9bdd08185b1b1bddd95960621b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601290820152710616d6f756e742063616e6e6f7420626520360741b604082015260600190565b602080825260199082015278596f7520617265206e6f7420612076616c696461746f72202160381b604082015260600190565b6020808252603c908201527f596f75206861766520616c726561647920636c61696d656420796f757220636f60408201527f6d70656e736174696f6e20666f72207468697320706572696f64202100000000606082015260800190565b918252602082015260400190565b9283526020830191909152604082015260600190565b8581526020810185905260408101849052821515606082015260a08101600383106129f057fe5b8260808301529695505050505050565b60005b83811015612a1b578181015183820152602001612a03565b838111156116325750506000910152565b6001600160a01b0381168114612a4157600080fd5b5056fea26469706673582212205700e91cbe1ce62a06af7c54feb1dbc80e665dba28bdbb69a230a0f51ccc292d64736f6c634300060c00338be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101f75760003560e01c806394199c6111610120578063ea4a1104116100b8578063f3fef3a31161007c578063f3fef3a314610468578063fbbf93a01461047b578063fc875ece14610494578063fd0d5534146104b5578063fd5e6dd1146104c8576101f7565b8063ea4a1104146103f8578063ec04de481461041c578063f10bd7721461042f578063f2fde38b14610442578063f34ed40d14610455576101f7565b806394199c6114610352578063a2e80c5e14610374578063ae169a501461037c578063b0227b471461038f578063b5d5b5fa146103a2578063b83e0234146103b5578063c623674f146103c8578063cec534d6146103dd578063e7ab816a146103f0576101f7565b806357ac94f01161019357806357ac94f0146102d05780635e5f2e26146102f1578063715018a61461030457806375fdf2a91461030c5780637b1039991461031f578063817b1cd214610327578063869c39251461032f5780638da5cb5b1461034257806390f817021461034a576101f7565b806302e8b893146101fc5780630e1fcf3414610225578063105237cf1461023a578063171e44ea1461025a5780631934d0e81461026d5780632eac9787146102805780633a4b66f1146102a05780633a5381b5146102a857806353e85fd5146102bd575b600080fd5b61020f61020a366004612386565b6104db565b60405161021c919061257b565b60405180910390f35b61023861023336600461239e565b61056c565b005b61024d6102483660046122b3565b6105b8565b60405161021c91906125d4565b6102386102683660046122b3565b6105cd565b61024d61027b3660046122cf565b6106a2565b61029361028e3660046122cf565b6106c2565b60405161021c91906125df565b6102936106df565b6102b06106e5565b60405161021c9190612485565b6102386102cb366004612386565b6106f4565b6102e36102de366004612307565b610a12565b60405161021c9291906124bd565b6102b06102ff366004612386565b610a92565b610238610ab9565b61023861031a366004612332565b610b38565b6102b0610e9b565b610293610eaa565b61023861033d3660046123bf565b610eb0565b6102b061110d565b6102b061111c565b61036561036036600461239e565b61112b565b60405161021c939291906129b3565b61029361116a565b61023861038a366004612386565b611170565b6102b061039d366004612386565b61134a565b6102e36103b0366004612307565b611365565b6102936103c33660046122b3565b6113a8565b6103d06113ba565b60405161021c91906125e8565b6102386103eb366004612406565b611448565b610293611638565b61040b610406366004612386565b61163e565b60405161021c9594939291906129c9565b61029361042a3660046122b3565b611681565b61029361043d366004612307565b61169c565b6102386104503660046122b3565b61174a565b610293610463366004612386565b611800565b610238610476366004612307565b61181e565b610483611a8c565b60405161021c9594939291906124d6565b6104a76104a2366004612386565b611c5c565b60405161021c9291906129a5565b6102936104c33660046122b3565b611ca6565b6102b06104d6366004612386565b611cb8565b606060126000838152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156105605783829060005260206000209060030201604051806060016040529081600082015481526020016001820154815260200160028201548152505081526020019060010190610510565b5050505090505b919050565b610574611d07565b6000546001600160a01b039081169116146105aa5760405162461bcd60e51b81526004016105a1906128b4565b60405180910390fd5b6105b48282611d0b565b5050565b60076020526000908152604090205460ff1681565b6105d5611d07565b6000546001600160a01b039081169116146106025760405162461bcd60e51b81526004016105a1906128b4565b6001600160a01b03811660009081526007602052604090205460ff161561063b5760405162461bcd60e51b81526004016105a1906127c2565b6006805460018181019092557ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b039093166001600160a01b031990931683179055600091825260076020526040909120805460ff19169091179055565b600b60209081526000928352604080842090915290825290205460ff1681565b600a60209081526000928352604080842090915290825290205481565b600d5481565b6004546001600160a01b031681565b806002818154811061070257fe5b906000526020600020906006020160000154421015801561074157506002818154811061072b57fe5b9060005260206000209060060201600101544211155b61074a57600080fd5b6004546001600160a01b03163314156107755760405162461bcd60e51b81526004016105a19061275c565b600280838154811061078357fe5b906000526020600020906006020160030160019054906101000a900460ff1660028111156107ad57fe5b146107ca5760405162461bcd60e51b81526004016105a190612671565b600282815481106107d757fe5b6000918252602080832033845260056006909302019190910190526040902054156108145760405162461bcd60e51b81526004016105a190612948565b6000610820338461169c565b9050600061083a600a610834846003611e4d565b90611e87565b60035490915061084a9083611cc5565b600381905550816002858154811061085e57fe5b600091825260208083203380855260069390930201600501905260409182902092909255600154905163a9059cbb60e01b81526001600160a01b039091169163a9059cbb916108b2919086906004016124bd565b602060405180830381600087803b1580156108cc57600080fd5b505af11580156108e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109049190612366565b50600154604080518082018252600d81526c6275726e2875696e743235362960981b602090910152516000916001600160a01b0316907f42966c689b5afe9b9b3f8a7103b2a19980d59629bfd6a20a60972312ed41d8369061096a9085906024016125df565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516109a89190612469565b6000604051808303816000865af19150503d80600081146109e5576040519150601f19603f3d011682016040523d82523d6000602084013e6109ea565b606091505b5050905080610a0b5760405162461bcd60e51b81526004016105a1906125fb565b5050505050565b6001600160a01b0382166000908152600960205260408120805482919084908110610a3957fe5b600091825260208083206002909202909101546001600160a01b03878116845260099092526040909220805491909216919085908110610a7557fe5b906000526020600020906002020160010154915091509250929050565b60068181548110610a9f57fe5b6000918252602090912001546001600160a01b0316905081565b610ac1611d07565b6000546001600160a01b03908116911614610aee5760405162461bcd60e51b81526004016105a1906128b4565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6004546001600160a01b0316331415610b635760405162461bcd60e51b81526004016105a19061275c565b6001600160a01b038316600090815260076020526040902054839060ff161515600114610ba25760405162461bcd60e51b81526004016105a190612886565b600060028381548110610bb157fe5b600091825260208083206001600160a01b03891684526004600690930201919091018152604080832033845290915290205411610c005760405162461bcd60e51b81526004016105a19061278b565b6040516323b872dd60e01b81526001600160a01b038516906323b872dd90610c3090339030908890600401612499565b602060405180830381600087803b158015610c4a57600080fd5b505af1158015610c5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c829190612366565b50610ccc8360028481548110610c9457fe5b600091825260208083206001600160a01b038a1684526004600690930201919091018152604080832033845290915290205490611ec9565b60028381548110610cd957fe5b600091825260208083206001600160a01b038916845260046006909302019190910181526040808320338452909152902055600354610d189084611ec9565b600355610d258484611eee565b600060028381548110610d3457fe5b600091825260208083206001600160a01b03891684526004600690930201919091018152604080832033845290915281205460055460028054929450610d9e9287908110610d7e57fe5b906000526020600020906006020160020154611e8790919063ffffffff16565b9050600060028581548110610daf57fe5b600091825260208083206001600160a01b038b16845260046006909302019190910181526040808320338452909152902055600354610dee9083611cc5565b6003556001546001600160a01b031663a9059cbb33610e0d8585611cc5565b6040518363ffffffff1660e01b8152600401610e2a9291906124bd565b602060405180830381600087803b158015610e4457600080fd5b505af1158015610e58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e7c9190612366565b50600154610e93906001600160a01b03168361208e565b505050505050565b6010546001600160a01b031681565b60035481565b601060009054906101000a90046001600160a01b03166001600160a01b0316633cb747bf6040518163ffffffff1660e01b815260040160206040518083038186803b158015610efe57600080fd5b505afa158015610f12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3691906123ea565b6001600160a01b0316336001600160a01b031614610f665760405162461bcd60e51b81526004016105a190612717565b600083815260126020908152604080832081516060810183524280825281850188815282850188815284546001818101875595895296909720925160039096029092019485559051918401919091559251600290920191909155517fc95987c1992805ee34bdc915e017cceae36ba1c156b9911fa7e691e6435eb46e91610ff091859085906129b3565b60405180910390a16000838152601160205260409081902054905163868d08f760e01b81526001600160a01b039091169063868d08f7906110359085906004016125df565b60206040518083038186803b15801561104d57600080fd5b505afa158015611061573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110859190612366565b6110ca57600280828154811061109757fe5b60009182526020909120600360069092020101805461ff0019166101008360028111156110c057fe5b0217905550611108565b6001600282815481106110d957fe5b60009182526020909120600360069092020101805461ff00191661010083600281111561110257fe5b02179055505b505050565b6000546001600160a01b031690565b6001546001600160a01b031681565b6012602052816000526040600020818154811061114457fe5b600091825260209091206003909102018054600182015460029092015490935090915083565b60055490565b806002818154811061117e57fe5b90600052602060002090600602016000015442101580156111bd5750600281815481106111a757fe5b9060005260206000209060060201600101544211155b6111c657600080fd5b6004546001600160a01b031633146111f05760405162461bcd60e51b81526004016105a190612915565b6001600283815481106111ff57fe5b906000526020600020906006020160030160019054906101000a900460ff16600281111561122957fe5b146112465760405162461bcd60e51b81526004016105a190612644565b6002828154811061125357fe5b600091825260209091206003600690920201015460ff16156112875760405162461bcd60e51b81526004016105a1906127ef565b60025460035460009161129a9190611e87565b905060006112ae600a610834846003611e4d565b6003549091506112be9083611cc5565b60038190555081600285815481106112d257fe5b9060005260206000209060060201600201819055506001600285815481106112f657fe5b60009182526020909120600690910201600301805460ff191691151591909117905560015460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906108b290339086906004016124bd565b6011602052600090815260409020546001600160a01b031681565b6009602052816000526040600020818154811061137e57fe5b6000918252602090912060029091020180546001909101546001600160a01b039091169250905082565b60086020526000908152604090205481565b600f805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156114405780601f1061141557610100808354040283529160200191611440565b820191906000526020600020905b81548152906001019060200180831161142357829003601f168201915b505050505081565b6001600160a01b038216600090815260076020526040902054829060ff1615156001146114875760405162461bcd60e51b81526004016105a190612886565b600084116114a75760405162461bcd60e51b81526004016105a1906128e9565b6114b2338484612133565b6040516323b872dd60e01b81526001600160a01b038416906323b872dd906114e290339030908990600401612499565b602060405180830381600087803b1580156114fc57600080fd5b505af1158015611510573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115349190612366565b5061157e846002848154811061154657fe5b600091825260208083206001600160a01b03891684526004600690930201919091018152604080832033845290915290205490611ec9565b6002838154811061158b57fe5b600091825260208083206001600160a01b0388168452600460069093020191909101815260408083203384529091529020556003546115ca9085611ec9565b600355336000908152600860205260409020546001141561162857600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b031916331790555b6116328385611eee565b50505050565b600e5490565b6002818154811061164b57fe5b60009182526020909120600690910201805460018201546002830154600390930154919350919060ff8082169161010090041685565b6001600160a01b031660009081526009602052604090205490565b6001600160a01b0382166000908152600860205260408120548190156117415760005b60065481101561173f57611735600285815481106116d957fe5b90600052602060002090600602016004016000600684815481106116f957fe5b60009182526020808320909101546001600160a01b0390811684528382019490945260409283018220938a168252929092529020548390611ec9565b91506001016116bf565b505b90505b92915050565b611752611d07565b6000546001600160a01b0390811691161461177f5760405162461bcd60e51b81526004016105a1906128b4565b6001600160a01b0381166117a55760405162461bcd60e51b81526004016105a19061269a565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6013818154811061180d57fe5b600091825260209091200154905081565b6004546001600160a01b03163314156118495760405162461bcd60e51b81526004016105a19061275c565b6001600160a01b038216600090815260076020526040902054829060ff1615156001146118885760405162461bcd60e51b81526004016105a190612886565b60006002838154811061189757fe5b600091825260208083206001600160a01b038816845260046006909302019190910181526040808320338452909152902054116118e65760405162461bcd60e51b81526004016105a19061278b565b6000600283815481106118f557fe5b600091825260208083206001600160a01b0388168452600460069093020191909101815260408083203384529091528120546005546002805492945061193f9287908110610d7e57fe5b905060006002858154811061195057fe5b600091825260208083206001600160a01b038a1684526004600690930201919091018152604080832033845290915290205560035461198f9083611cc5565b6003556001600160a01b03851663a9059cbb336119ac8585611cc5565b6040518363ffffffff1660e01b81526004016119c99291906124bd565b602060405180830381600087803b1580156119e357600080fd5b505af11580156119f7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a1b9190612366565b5033600090815260086020526040902054611a37906001611cc5565b336000908152600860205260409020819055611a82576000611a58336121bc565b905060058181548110611a6757fe5b600091825260209091200180546001600160a01b0319169055505b610a0b858361208e565b600060606000606080606060138054905067ffffffffffffffff81118015611ab357600080fd5b50604051908082528060200260200182016040528015611add578160200160208202803683370190505b50905060005b601354811015611b57576011600060138381548110611afe57fe5b9060005260206000200154815260200190815260200160002060009054906101000a90046001600160a01b0316828281518110611b3757fe5b6001600160a01b0390921660209283029190910190910152600101611ae3565b50611b6061110d565b600d54600f805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292939260139287928691830182828015611bf15780601f10611bc657610100808354040283529160200191611bf1565b820191906000526020600020905b815481529060010190602001808311611bd457829003601f168201915b5050505050935081805480602002602001604051908101604052809291908181526020018280548015611c4357602002820191906000526020600020905b815481526020019060010190808311611c2f575b5050505050915095509550955095509550509091929394565b60008060028381548110611c6c57fe5b90600052602060002090600602016000015460028481548110611c8b57fe5b90600052602060002090600602016001015491509150915091565b600c6020526000908152604090205481565b60058181548110610a9f57fe5b600061174183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612215565b3390565b611d13612278565b82815260208101828152600060808301818152600280546001810182559281905284517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace600690940293840190815593517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf84015560408501517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad084015560608501517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad1909301805460ff19169315159390931780845591518594939092909161ff001990911690610100908490811115611e0a57fe5b021790555050600254611e1f91506001611cc5565b6040517ff791e873e3b67fe74b29aeede7bcbbdaa59c4b64e542571183cd837aa56f6ac990600090a2505050565b600082611e5c57506000611744565b82820282848281611e6957fe5b04146117415760405162461bcd60e51b81526004016105a190612845565b600061174183836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612241565b6000828201838110156117415760405162461bcd60e51b81526004016105a1906126e0565b336000908152600b602090815260408083206001600160a01b038616845290915290205460ff16611fb957336000818152600960209081526040808320815180830183526001600160a01b03888116808352828601898152845460018082018755868a52888a209551600290920290950180546001600160a01b0319169190941617835551918301919091558686529154600a85528386208387528552838620600019919091019055948452600b83528184209084529091529020805460ff1916909117905561204b565b336000818152600a602090815260408083206001600160a01b038716845282528083205493835260099091529020805461201991849184908110611ff957fe5b906000526020600020906002020160010154611ec990919063ffffffff16565b33600090815260096020526040902080548390811061203457fe5b906000526020600020906002020160010181905550505b6001600160a01b0382166000908152600c602052604090205461206e9082611ec9565b6001600160a01b039092166000908152600c602052604090209190915550565b336000818152600a602090815260408083206001600160a01b03871684528252808320549383526009909152902080546120ee918491849081106120ce57fe5b906000526020600020906002020160010154611cc590919063ffffffff16565b506001600160a01b0383166000908152600c60205260409020546121129083611cc5565b6001600160a01b039093166000908152600c60205260409020929092555050565b60006002828154811061214257fe5b600091825260208083206001600160a01b0387811685526006939093020160040181526040808420928816845291905290205411611108576001600160a01b03831660009081526008602052604090205461219e906001611ec9565b6001600160a01b038416600090815260086020526040902055505050565b6000805b60055481101561220b57826001600160a01b0316600582815481106121e157fe5b6000918252602090912001546001600160a01b03161415612203579050610567565b6001016121c0565b5060001992915050565b600081848411156122395760405162461bcd60e51b81526004016105a191906125e8565b505050900390565b600081836122625760405162461bcd60e51b81526004016105a191906125e8565b50600083858161226e57fe5b0495945050505050565b6040518060a00160405280600081526020016000815260200160008152602001600015158152602001600060028111156122ae57fe5b905290565b6000602082840312156122c4578081fd5b813561174181612a2c565b600080604083850312156122e1578081fd5b82356122ec81612a2c565b915060208301356122fc81612a2c565b809150509250929050565b60008060408385031215612319578182fd5b823561232481612a2c565b946020939093013593505050565b600080600060608486031215612346578081fd5b833561235181612a2c565b95602085013595506040909401359392505050565b600060208284031215612377578081fd5b81518015158114611741578182fd5b600060208284031215612397578081fd5b5035919050565b600080604083850312156123b0578182fd5b50508035926020909101359150565b6000806000606084860312156123d3578283fd5b505081359360208301359350604090920135919050565b6000602082840312156123fb578081fd5b815161174181612a2c565b60008060006060848603121561241a578283fd5b83359250602084013561242c81612a2c565b929592945050506040919091013590565b60008151808452612455816020860160208601612a00565b601f01601f19169290920160200192915050565b6000825161247b818460208701612a00565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b600060018060a01b038088168352602060a0818501526124f960a085018961243d565b604085018890528481036060860152865180825282880191830190855b8181101561253257835183529284019291840191600101612516565b505085810360808701528651808252908301915082870190855b8181101561256a57825186168452928401929184019160010161254c565b50919b9a5050505050505050505050565b602080825282518282018190526000919060409081850190868401855b828110156125c75781518051855286810151878601528501518585015260609093019290850190600101612598565b5091979650505050505050565b901515815260200190565b90815260200190565b600060208252611741602083018461243d565b60208082526029908201527f42617365546f6b656e206275726e2070726f6365737320776173206e6f7420736040820152681d58d8d95cdcd99d5b60ba1b606082015260800190565b602080825260139082015272534c41206e6f7420726573706563746564202160681b604082015260600190565b6020808252600f908201526e534c4120726573706563746564202160881b604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b60208082526025908201527f4f6e6c79204d657373656e6765722063616e2063616c6c20746869732066756e6040820152643a31b4b7b760d91b606082015260800190565b602080825260159082015274596f752061726520612076616c696461746f72202160581b604082015260600190565b6020808252601b908201527f7374616b696e672062616c616e63652063616e6e6f7420626520300000000000604082015260600190565b6020808252601390820152721d1bdad95b88185b1c9958591e481859191959606a1b604082015260600190565b60208082526036908201527f596f75206861766520616c726561647920636c61696d656420796f75722072656040820152757761726420666f72207468697320706572696f64202160501b606082015260800190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6040820152607760f81b606082015260800190565b6020808252601490820152731d1bdad95b881a5cc81b9bdd08185b1b1bddd95960621b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601290820152710616d6f756e742063616e6e6f7420626520360741b604082015260600190565b602080825260199082015278596f7520617265206e6f7420612076616c696461746f72202160381b604082015260600190565b6020808252603c908201527f596f75206861766520616c726561647920636c61696d656420796f757220636f60408201527f6d70656e736174696f6e20666f72207468697320706572696f64202100000000606082015260800190565b918252602082015260400190565b9283526020830191909152604082015260600190565b8581526020810185905260408101849052821515606082015260a08101600383106129f057fe5b8260808301529695505050505050565b60005b83811015612a1b578181015183820152602001612a03565b838111156116325750506000910152565b6001600160a01b0381168114612a4157600080fd5b5056fea26469706673582212205700e91cbe1ce62a06af7c54feb1dbc80e665dba28bdbb69a230a0f51ccc292d64736f6c634300060c0033",
  "immutableReferences": {},
  "sourceMap": "446:5407:2:-:0;;;2837:986;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3197:17;3228:18;3260:16;3290:6;865:17:23;885:12;:10;:12::i;:::-;907:6;:18;;-1:-1:-1;;;;;;907:18:23;-1:-1:-1;;;;;907:18:23;;;;;;;940:43;;-1:-1:-1;;907:18:23;;-1:-1:-1;907:18:23;;:6;;-1:-1:-1;;907:6:23;-1:-1:-1;;;;;940:43:23;907:6;;940:43;831:159;3485:16:3;:23;3456:18;:25;:52;3435:140;;;;-1:-1:-1;;;3435:140:3;;;;;;;:::i;:::-;;;;;;;;;3585:9;:18;;-1:-1:-1;;;;;3585:18:3;;;-1:-1:-1;;;;;;3585:18:3;;;;;;;-1:-1:-1;3656:37:3;;;;;;;;;;;;3703:13;:37;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3750:39:3;;;:20;3703:37;3750:39;;;;:46;;-1:-1:-1;;3750:46:3;;;;;;3807:135;3831:18;:25;3827:1;:29;3807:135;;;3877:54;3888:18;3907:1;3888:21;;;;;;;;;;;;;;3911:16;3928:1;3911:19;;;;;;;;;;;;;;3877:10;;;:54;;:::i;:::-;3858:3;;3807:135;;;;3253:695;;;;3344:1:2::1;3329:5;:12;:16;3321:52;;;::::0;-1:-1:-1;;;3321:52:2;;::::1;::::0;::::1;;;:::i;:::-;3424:5;:12;3404:9;:16;:32;3383:126;;;::::0;-1:-1:-1;;;3383:126:2;;::::1;::::0;::::1;;;:::i;:::-;3525:9;3520:97;3544:5;:12;3540:1;:16;3520:97;;;3598:5;3604:1;3598:8;;;;;;;;;;;;;;3577:4;:18;3582:9;3592:1;3582:12;;;;;;;;;::::0;;::::1;::::0;;;;;;;3577:18;;;::::1;::::0;;;;;;-1:-1:-1;3577:18:2;:29;;-1:-1:-1;;;;;;3577:29:2::1;-1:-1:-1::0;;;;;3577:29:2;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;3558:3:2::1;3520:97;;;-1:-1:-1::0;3627:25:2::1;3645:6:::0;3627:17:::1;:25::i;:::-;3662:20:::0;;::::1;::::0;:8:::1;::::0;:20:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;3692:5:2::1;:14:::0;;;3716:20;;::::1;::::0;:8:::1;::::0;:20:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;;3746:8:2::1;:34:::0;;-1:-1:-1;;;;;;3746:34:2::1;3769:10;3746:34;::::0;;-1:-1:-1;;3790:11:2::1;:26:::0;-1:-1:-1;446:5407:2;;-1:-1:-1;;;;446:5407:2;590:104:21;677:10;590:104;:::o;13086:366:3:-;13189:21;;:::i;:::-;13221:44;;;13275:22;;;:40;;;-1:-1:-1;13325:14:3;;;:35;;;13371:7;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13371:21:3;;;;;;;;;;;;13221:44;;13371:21;;;;-1:-1:-1;;13371:21:3;;;;;;;;;;;;;;;;;;;;;;13423;13442:1;13423:7;:14;;;;:18;;;;;;:21;;;;:::i;:::-;13408:37;;;;;;;13086:366;;;:::o;1983:240:23:-;1280:12;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:22:23;;;:6;;:22;1262:67;;;;-1:-1:-1;;;1262:67:23;;;;;;;:::i;:::-;-1:-1:-1;;;;;2071:22:23;::::1;2063:73;;;::::0;-1:-1:-1;;;2063:73:23;;::::1;::::0;::::1;;;:::i;:::-;2172:6;::::0;;2151:38:::1;::::0;-1:-1:-1;;;;;;;2151:38:23;;::::1;::::0;2172:6;::::1;::::0;;;;-1:-1:-1;;2172:6:23;-1:-1:-1;;;;;2151:38:23;::::1;2199:6;:17:::0;;-1:-1:-1;;;;;;2199:17:23::1;-1:-1:-1::0;;;;;2199:17:23;;;::::1;::::0;;;::::1;::::0;;1983:240::o;1321:134:24:-;1379:7;1405:43;1409:1;1412;1405:43;;;;;;;;;;;;;;;;;:3;;;:43;;:::i;:::-;1398:50;;1321:134;;;;;:::o;1746:187::-;1832:7;1867:12;1859:6;;;;1851:29;;;;-1:-1:-1;;;1851:29:24;;;;;;;;:::i;:::-;-1:-1:-1;;;1902:5:24;;;1746:187::o;446:5407:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;446:5407:2;;;-1:-1:-1;446:5407:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;5:134:-1;83:13;;101:33;83:13;101:33;:::i;164:722::-;;292:3;285:4;277:6;273:17;269:27;259:2;;-1:-1;;300:12;259:2;340:6;334:13;362:80;377:64;434:6;377:64;:::i;:::-;362:80;:::i;:::-;470:21;;;353:89;-1:-1;514:4;527:14;;;;502:17;;;616;;;607:27;;;;604:36;-1:-1;601:2;;;653:1;;643:12;601:2;678:1;663:217;688:6;685:1;682:13;663:217;;;2509:13;;756:61;;831:14;;;;859;;;;710:1;703:9;663:217;;;667:14;;;;;252:634;;;;:::o;917:758::-;;1057:3;1050:4;1042:6;1038:17;1034:27;1024:2;;-1:-1;;1065:12;1024:2;1105:6;1099:13;1127:92;1142:76;1211:6;1142:76;:::i;1127:92::-;1247:21;;;1118:101;-1:-1;1291:4;1304:14;;;;1279:17;;;1393;;;1384:27;;;;1381:36;-1:-1;1378:2;;;1430:1;;1420:12;1378:2;1455:1;1440:229;1465:6;1462:1;1459:13;1440:229;;;2668:6;2662:13;2680:45;2719:5;2680:45;:::i;:::-;1533:73;;1620:14;;;;1648;;;;1487:1;1480:9;1440:229;;2738:444;;2851:3;2844:4;2836:6;2832:17;2828:27;2818:2;;-1:-1;;2859:12;2818:2;2893:13;;-1:-1;11298:30;;11295:2;;;-1:-1;;11331:12;11295:2;2921:65;11472:4;-1:-1;;11404:9;11385:17;;11381:33;11462:15;2921:65;:::i;:::-;2912:74;;3006:6;2999:5;2992:21;3110:3;11472:4;3101:6;3034;3092:16;;3089:25;3086:2;;;3127:1;;3117:12;3086:2;3137:39;3169:6;11472:4;3068:5;3064:16;11472:4;3034:6;3030:17;3137:39;:::i;:::-;;2811:371;;;;:::o;3331:1996::-;;;;;;;;;;3704:3;3692:9;3683:7;3679:23;3675:33;3672:2;;;-1:-1;;3711:12;3672:2;3773:64;3829:7;3805:22;3773:64;:::i;:::-;3895:2;3880:18;;3874:25;3763:74;;-1:-1;;3908:30;;;3905:2;;;-1:-1;;3941:12;3905:2;3971:89;4052:7;4043:6;4032:9;4028:22;3971:89;:::i;:::-;3961:99;;4118:2;4107:9;4103:18;4097:25;4083:39;;3919:18;4134:6;4131:30;4128:2;;;-1:-1;;4164:12;4128:2;4194:101;4287:7;4278:6;4267:9;4263:22;4194:101;:::i;:::-;4184:111;;4332:2;4386:9;4382:22;3268:13;4340:74;;4472:3;4461:9;4457:19;4451:26;4437:40;;3919:18;4489:6;4486:30;4483:2;;;-1:-1;;4519:12;4483:2;4549:74;4615:7;4606:6;4595:9;4591:22;4549:74;:::i;:::-;4539:84;;4660:3;4715:9;4711:22;3268:13;4669:74;;4799:64;4855:7;4780:3;4835:9;4831:22;4799:64;:::i;:::-;4789:74;;4921:3;4910:9;4906:19;4900:26;4886:40;;3919:18;4938:6;4935:30;4932:2;;;-1:-1;;4968:12;4932:2;4998:89;5079:7;5070:6;5059:9;5055:22;4998:89;:::i;:::-;4988:99;;5145:3;5134:9;5130:19;5124:26;5110:40;;3919:18;5162:6;5159:30;5156:2;;;-1:-1;;5192:12;5156:2;;5222:89;5303:7;5294:6;5283:9;5279:22;5222:89;:::i;:::-;5212:99;;;3666:1661;;;;;;;;;;;:::o;7525:310::-;;7672:2;7693:17;7686:47;5479:5;11582:12;11739:6;7672:2;7661:9;7657:18;11727:19;5573:52;5618:6;11767:14;7661:9;11767:14;7672:2;5599:5;5595:16;5573:52;:::i;:::-;11404:9;12634:14;-1:-1;;12630:28;5637:39;;;;11767:14;5637:39;;7643:192;-1:-1;;7643:192::o;7842:416::-;8042:2;8056:47;;;5913:2;8027:18;;;11727:19;5949:34;11767:14;;;5929:55;-1:-1;;;6004:12;;;5997:30;6046:12;;;8013:245::o;8265:416::-;8465:2;8479:47;;;6297:2;8450:18;;;11727:19;6333:34;11767:14;;;6313:55;-1:-1;;;6388:12;;;6381:33;6433:12;;;8436:245::o;8688:416::-;8888:2;8902:47;;;8873:18;;;11727:19;6720:34;11767:14;;;6700:55;6774:12;;;8859:245::o;9111:416::-;9311:2;9325:47;;;7025:2;9296:18;;;11727:19;7061:34;11767:14;;;7041:55;-1:-1;;;7116:12;;;7109:39;7167:12;;;9282:245::o;9534:416::-;9734:2;9748:47;;;7418:2;9719:18;;;11727:19;-1:-1;;;11767:14;;;7434:46;7499:12;;;9705:245::o;9957:256::-;10019:2;10013:9;10045:17;;;10141:22;;;-1:-1;10105:34;;10102:62;10099:2;;;10177:1;;10167:12;10099:2;10019;10186:22;9997:216;;-1:-1;9997:216::o;10220:304::-;;-1:-1;10368:30;;10365:2;;;-1:-1;;10401:12;10365:2;-1:-1;10446:4;10434:17;;;10499:15;;10302:222::o;12290:268::-;12355:1;12362:101;12376:6;12373:1;12370:13;12362:101;;;12443:11;;;12437:18;12424:11;;;12417:39;12398:2;12391:10;12362:101;;;12478:6;12475:1;12472:13;12469:2;;;12355:1;12534:6;12529:3;12525:16;12518:27;12469:2;;12339:219;;;:::o;12671:117::-;-1:-1;;;;;12144:54;;12730:35;;12720:2;;12779:1;;12769:12;12720:2;12714:74;:::o;:::-;446:5407:2;;;;;;",
  "deployedSourceMap": "446:5407:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4757:107;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4145:174:3;;;;;;:::i;:::-;;:::i;:::-;;1503:52;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4446:226::-;;;;;;:::i;:::-;;:::i;2067:68::-;;;;;;:::i;:::-;;:::i;1888:84::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;594:20:2:-;;;:::i;1214:24:3:-;;;:::i;:::-;;;;;;;:::i;10827:930::-;;;;;;:::i;:::-;;:::i;14320:274::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1410:30::-;;;;;;:::i;:::-;;:::i;1689:145:23:-;;;:::i;8558:1196:3:-;;;;;;:::i;:::-;;:::i;858:27:2:-;;;:::i;1132:26:3:-;;;:::i;4091:465:2:-;;;;;;:::i;:::-;;:::i;1066:77:23:-;;;:::i;958:23:3:-;;;:::i;1222:37:2:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;13548:92:3:-;;;:::i;9852:877::-;;;;;;:::i;:::-;;:::i;1114:35:2:-;;;;;;:::i;:::-;;:::i;1741:50:3:-;;;;;;:::i;:::-;;:::i;1623:53::-;;;;;;:::i;:::-;;:::i;779:22:2:-;;;:::i;:::-;;;;;;;:::i;6271:930:3:-;;;;;;:::i;:::-;;:::i;5005:93:2:-;;;:::i;1024:23:3:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;14028:124::-;;;;;;:::i;:::-;;:::i;11907:634::-;;;;;;:::i;:::-;;:::i;1983:240:23:-;;;;;;:::i;:::-;;:::i;1334:25:2:-;;;;;;:::i;:::-;;:::i;7347:1007:3:-;;;;;;:::i;:::-;;:::i;5385:466:2:-;;;:::i;:::-;;;;;;;;;;;:::i;13646:261:3:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;2222:45::-;;;;;;:::i;:::-;;:::i;1316:24::-;;;;;;:::i;:::-;;:::i;4757:107:2:-;4812:12;4843:4;:14;4848:8;4843:14;;;;;;;;;;;4836:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4757:107;;;;:::o;4145:174:3:-;1280:12:23;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:22:23;;;:6;;:22;1262:67;;;;-1:-1:-1;;;1262:67:23;;;;;;;:::i;:::-;;;;;;;;;4266:46:3::1;4277:17;4296:15;4266:10;:46::i;:::-;4145:174:::0;;:::o;1503:52::-;;;;;;;;;;;;;;;:::o;4446:226::-;1280:12:23;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:22:23;;;:6;;:22;1262:67;;;;-1:-1:-1;;;1262:67:23;;;;;;;:::i;:::-;-1:-1:-1;;;;;4523:28:3;::::1;;::::0;;;:20:::1;:28;::::0;;;;;::::1;;:37;4515:69;;;::::0;-1:-1:-1;;;4515:69:3;;::::1;::::0;::::1;;;:::i;:::-;4594:13;:26:::0;;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;;4594:26:3::1;-1:-1:-1::0;;;;;4594:26:3;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;4630:28:3;;;:20:::1;4594:26;4630:28:::0;;;;;:35;;-1:-1:-1;;4630:35:3::1;::::0;;::::1;::::0;;4446:226::o;2067:68::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1888:84::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;594:20:2:-;;;;:::o;1214:24:3:-;;;-1:-1:-1;;;;;1214:24:3;;:::o;10827:930::-;10907:7;2722;2730;2722:16;;;;;;;;;;;;;;;;;;:33;;;2703:15;:52;;:122;;;;;2794:7;2802;2794:16;;;;;;;;;;;;;;;;;;:31;;;2775:15;:50;;2703:122;2682:153;;;;;;2456:9:::1;::::0;-1:-1:-1;;;;;2456:9:3::1;2442:10;:23;;2434:57;;;::::0;-1:-1:-1;;;2434:57:3;;::::1;::::0;::::1;;;:::i;:::-;10999:19:::2;10972:7:::0;10980::::2;10972:16;;;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;:46;;;;;;;;;10951:108;;;::::0;-1:-1:-1;;;10951:108:3;;::::2;::::0;::::2;;;:::i;:::-;11090:7;11098;11090:16;;;;;;;;;::::0;;;::::2;::::0;;;11128:10:::2;11090:49:::0;;:37:::2;:16;::::0;;::::2;;:37:::0;;;::::2;:49:::0;;;;;;:54;11069:161:::2;;;::::0;-1:-1:-1;;;11069:161:3;;::::2;::::0;::::2;;;:::i;:::-;11241:20;11264:38;11282:10;11294:7;11264:17;:38::i;:::-;11241:61:::0;-1:-1:-1;11312:12:3::2;11327:27;11351:2;11327:19;11241:61:::0;11344:1:::2;11327:16;:19::i;:::-;:23:::0;::::2;:27::i;:::-;11379:11;::::0;11312:42;;-1:-1:-1;11379:29:3::2;::::0;11395:12;11379:15:::2;:29::i;:::-;11365:11;:43;;;;11470:12;11418:7;11426;11418:16;;;;;;;;;::::0;;;::::2;::::0;;;11456:10:::2;11418:49:::0;;;:16:::2;::::0;;;::::2;;:37;;:49:::0;;;;;;;:64;;;;11493:9:::2;::::0;:44;;-1:-1:-1;;;11493:44:3;;-1:-1:-1;;;;;11493:9:3;;::::2;::::0;-1:-1:-1;;11493:44:3::2;::::0;11456:10;11524:12;;11493:44:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;11587:9:3::2;::::0;869:22:::2;::::0;;;;::::2;::::0;;::::2;::::0;;-1:-1:-1;;;869:22:3::2;::::0;;::::2;::::0;11620:43;-1:-1:-1;;;;;;;11587:9:3::2;::::0;859:33;;11620:43:::2;::::0;11658:4;;11620:43:::2;;;:::i;:::-;;::::0;;-1:-1:-1;;11620:43:3;;::::2;::::0;;;;;;::::2;::::0;::::2;::::0;;-1:-1:-1;;;;;11620:43:3::2;-1:-1:-1::0;;;;;;11620:43:3;;;::::2;::::0;;;::::2;::::0;;;11579:98;;::::2;::::0;11620:43;11579:98:::2;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11547:130;;;11696:8;11688:62;;;::::0;-1:-1:-1;;;11688:62:3;;::::2;::::0;::::2;;;:::i;:::-;2501:1;;;10827:930:::0;;:::o;14320:274::-;-1:-1:-1;;;;;14492:18:3;;14420:20;14492:18;;;:10;:18;;;;;:26;;14420:20;;14492:18;14511:6;;14492:26;;;;;;;;;;;;;;;;;;;;;;:39;-1:-1:-1;;;;;14545:18:3;;;;;:10;:18;;;;;;;:26;;14492:39;;;;;14545:18;14564:6;;14545:26;;;;;;;;;;;;;;;;:32;;;14471:116;;;;14320:274;;;;;:::o;1410:30::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1410:30:3;;-1:-1:-1;1410:30:3;:::o;1689:145:23:-;1280:12;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:22:23;;;:6;;:22;1262:67;;;;-1:-1:-1;;;1262:67:23;;;;;;;:::i;:::-;1795:1:::1;1779:6:::0;;1758:40:::1;::::0;-1:-1:-1;;;;;1779:6:23;;::::1;::::0;1758:40:::1;::::0;1795:1;;1758:40:::1;1825:1;1808:19:::0;;-1:-1:-1;;;;;;1808:19:23::1;::::0;;1689:145::o;8558:1196:3:-;2456:9;;-1:-1:-1;;;;;2456:9:3;2442:10;:23;;2434:57;;;;-1:-1:-1;;;2434:57:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;2919:28:3;::::1;;::::0;;;:20:::1;:28;::::0;;;;;;;::::1;;:36;;-1:-1:-1::0;2919:36:3::1;2911:69;;;::::0;-1:-1:-1;;;2911:69:3;;::::1;::::0;::::1;;;:::i;:::-;8839:1:::2;8785:7;8793;8785:16;;;;;;;;;::::0;;;::::2;::::0;;;-1:-1:-1;;;;;8785:39:3;::::2;::::0;;:16:::2;::::0;;;::::2;::::0;;::::2;:31;;:39:::0;;;;;;8825:10:::2;8785:51:::0;;;;;;;;:55:::2;8764:129;;;::::0;-1:-1:-1;;;8764:129:3;;::::2;::::0;::::2;;;:::i;:::-;8930:63;::::0;-1:-1:-1;;;8930:63:3;;-1:-1:-1;;;;;8930:27:3;::::2;::::0;-1:-1:-1;;8930:63:3::2;::::0;8958:10:::2;::::0;8978:4:::2;::::0;8985:7;;8930:63:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9111:90;9193:7;9111;9119;9111:16;;;;;;;;;::::0;;;::::2;::::0;;;-1:-1:-1;;;;;9111:52:3;::::2;::::0;;:16:::2;::::0;;;::::2;::::0;;::::2;:44;;:52:::0;;;;;;9164:10:::2;9111:64:::0;;;;;;;;;:81:::2;:90::i;:::-;9057:7;9065;9057:16;;;;;;;;;::::0;;;::::2;::::0;;;-1:-1:-1;;;;;9057:39:3;::::2;::::0;;:16:::2;::::0;;;::::2;::::0;;::::2;:31;;:39:::0;;;;;;9097:10:::2;9057:51:::0;;;;;;;:144;9225:11:::2;::::0;:24:::2;::::0;9241:7;9225:15:::2;:24::i;:::-;9211:11;:38:::0;9260::::2;9282:6:::0;9290:7;9260:21:::2;:38::i;:::-;9340:14;9357:7;9365;9357:16;;;;;;;;;::::0;;;::::2;::::0;;;-1:-1:-1;;;;;9357:39:3;::::2;::::0;;:16:::2;::::0;;;::::2;::::0;;::::2;:31;;:39:::0;;;;;;9397:10:::2;9357:51:::0;;;;;;;;9491:7:::2;:14:::0;9455:7:::2;:16:::0;;9357:51;;-1:-1:-1;9455:51:3::2;::::0;9463:7;;9455:16;::::2;;;;;;;;;;;;;;;:31;;;:35;;:51;;;;:::i;:::-;9418:88;;9571:1;9517:7;9525;9517:16;;;;;;;;;::::0;;;::::2;::::0;;;-1:-1:-1;;;;;9517:39:3;::::2;::::0;;:16:::2;::::0;;;::::2;::::0;;::::2;:31;;:39:::0;;;;;;9557:10:::2;9517:51:::0;;;;;;;:55;9596:11:::2;::::0;:23:::2;::::0;9612:6;9596:15:::2;:23::i;:::-;9582:11;:37:::0;9629:9:::2;::::0;-1:-1:-1;;;;;9629:9:3::2;:18;9648:10;9660:26;:6:::0;9671:14;9660:10:::2;:26::i;:::-;9629:58;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;9728:9:3::2;::::0;9698:49:::2;::::0;-1:-1:-1;;;;;9728:9:3::2;9740:6:::0;9698:21:::2;:49::i;:::-;2990:1;;2501::::1;8558:1196:::0;;;:::o;858:27:2:-;;;-1:-1:-1;;;;;858:27:2;;:::o;1132:26:3:-;;;;:::o;4091:465:2:-;1840:8;;:20;;;-1:-1:-1;;;1840:20:2;;;;-1:-1:-1;;;;;1840:8:2;;;;:18;;:20;;;;;;;;;;;;;;;:8;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1818:43:2;:10;:43;1797:127;;;;-1:-1:-1;;;1797:127:2;;;;;;;:::i;:::-;4228:14:::1;::::0;;;:4:::1;:14;::::0;;;;;;;4248:39;;::::1;::::0;::::1;::::0;;4252:15:::1;4248:39:::0;;;;;::::1;::::0;;;;;;;;;4228:60;;::::1;::::0;;::::1;::::0;;;;;;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;::::1;::::0;;;;;;::::1;::::0;;::::1;::::0;;;;4304:46;::::1;::::0;::::1;::::0;4269:6;;4277:9;;4304:46:::1;:::i;:::-;;;;;;;;4366:14;::::0;;;:4:::1;:14;::::0;;;;;;;:35;;-1:-1:-1;;;4366:35:2;;-1:-1:-1;;;;;4366:14:2;;::::1;::::0;-1:-1:-1;;4366:35:2::1;::::0;4394:6;;4366:35:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4361:189;;4445:19;4417:7:::0;4425:9:::1;4417:18;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:25;;:47:::0;;-1:-1:-1;;4417:47:2::1;;::::0;::::1;::::0;::::1;;;;;;;;;;;4361:189;;;4523:16;4495:7;4503:9;4495:18;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:25;;:44:::0;;-1:-1:-1;;4495:44:2::1;;::::0;::::1;::::0;::::1;;;;;;;;;;;4361:189;4091:465:::0;;;:::o;1066:77:23:-;1104:7;1130:6;-1:-1:-1;;;;;1130:6:23;;1066:77::o;958:23:3:-;;;-1:-1:-1;;;;;958:23:3;;:::o;1222:37:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1222:37:2;;-1:-1:-1;1222:37:2;:::o;13548:92:3:-;13619:7;:14;13548:92;:::o;9852:877::-;9926:7;2722;2730;2722:16;;;;;;;;;;;;;;;;;;:33;;;2703:15;:52;;:122;;;;;2794:7;2802;2794:16;;;;;;;;;;;;;;;;;;:31;;;2775:15;:50;;2703:122;2682:153;;;;;;2570:9:::1;::::0;-1:-1:-1;;;;;2570:9:3::1;2556:10;:23;2548:61;;;::::0;-1:-1:-1;;;2548:61:3;;::::1;::::0;::::1;;;:::i;:::-;10019:16:::2;9992:7;10000;9992:16;;;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;:43;;;;;;;;;9971:109;;;::::0;-1:-1:-1;;;9971:109:3;;::::2;::::0;::::2;;;:::i;:::-;10112:7;10120;10112:16;;;;;;;;;::::0;;;::::2;::::0;;;:24:::2;:16;::::0;;::::2;;:24;::::0;::::2;;10111:25;10090:126;;;::::0;-1:-1:-1;;;10090:126:3;;::::2;::::0;::::2;;;:::i;:::-;10260:7;:14:::0;10244:11:::2;::::0;10227:14:::2;::::0;10244:31:::2;::::0;:11;:15:::2;:31::i;:::-;10227:48:::0;-1:-1:-1;10285:12:3::2;10300:21;10318:2;10300:13;10227:48:::0;10311:1:::2;10300:10;:13::i;:21::-;10346:11;::::0;10285:36;;-1:-1:-1;10346:23:3::2;::::0;10362:6;10346:15:::2;:23::i;:::-;10332:11;:37;;;;10413:6;10379:7;10387;10379:16;;;;;;;;;;;;;;;;;;:31;;:40;;;;10456:4;10429:7;10437;10429:16;;;;;;;;;::::0;;;::::2;::::0;;;::::2;::::0;;::::2;;:24;;:31:::0;;-1:-1:-1;;10429:31:3::2;::::0;::::2;;::::0;;;::::2;::::0;;-1:-1:-1;10471:9:3;:38:::2;::::0;-1:-1:-1;;;10471:38:3;;-1:-1:-1;;;;;10471:9:3;;::::2;::::0;-1:-1:-1;;10471:38:3::2;::::0;10490:10:::2;::::0;10502:6;;10471:38:::2;;;:::i;1114:35:2:-:0;;;;;;;;;;;;-1:-1:-1;;;;;1114:35:2;;:::o;1741:50:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1741:50:3;;;;-1:-1:-1;1741:50:3;-1:-1:-1;1741:50:3;:::o;1623:53::-;;;;;;;;;;;;;:::o;779:22:2:-;;;;;;;;;;;;;;;-1:-1:-1;;779:22:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6271:930:3:-;-1:-1:-1;;;;;2919:28:3;;;;;;:20;:28;;;;;;;;;;:36;;-1:-1:-1;2919:36:3;2911:69;;;;-1:-1:-1;;;2911:69:3;;;;;;;:::i;:::-;6432:1:::1;6422:7;:11;6414:42;;;::::0;-1:-1:-1;;;6414:42:3;;::::1;::::0;::::1;;;:::i;:::-;6537:54;6563:10;6575:6;6583:7;6537:25;:54::i;:::-;6625:63;::::0;-1:-1:-1;;;6625:63:3;;-1:-1:-1;;;;;6625:27:3;::::1;::::0;-1:-1:-1;;6625:63:3::1;::::0;6653:10:::1;::::0;6673:4:::1;::::0;6680:7;;6625:63:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6806:90;6888:7;6806;6814;6806:16;;;;;;;;;::::0;;;::::1;::::0;;;-1:-1:-1;;;;;6806:52:3;::::1;::::0;;:16:::1;::::0;;;::::1;::::0;;::::1;:44;;:52:::0;;;;;;6859:10:::1;6806:64:::0;;;;;;;;;:81:::1;:90::i;:::-;6752:7;6760;6752:16;;;;;;;;;::::0;;;::::1;::::0;;;-1:-1:-1;;;;;6752:39:3;::::1;::::0;;:16:::1;::::0;;;::::1;::::0;;::::1;:31;;:39:::0;;;;;;6792:10:::1;6752:51:::0;;;;;;;:144;6920:11:::1;::::0;:24:::1;::::0;6936:7;6920:15:::1;:24::i;:::-;6906:11;:38:::0;7079:10:::1;7060:30;::::0;;;:18:::1;:30;::::0;;;;;7094:1:::1;7060:35;7056:90;;;7111:7;:24:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;7111:24:3;;;;;::::1;::::0;;-1:-1:-1;;;;;;7111:24:3::1;7124:10;7111:24;::::0;;7056:90:::1;7156:38;7178:6;7186:7;7156:21;:38::i;:::-;6271:930:::0;;;;:::o;5005:93:2:-;5080:11;;5005:93;:::o;1024:23:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1024:23:3;;;;;;;;;;;;:::o;14028:124::-;-1:-1:-1;;;;;14120:18:3;14094:7;14120:18;;;:10;:18;;;;;:25;;14028:124::o;11907:634::-;-1:-1:-1;;;;;12070:25:3;;12011:7;12070:25;;;:18;:25;;;;;;12011:7;;12070:29;12066:442;;12137:26;12115:383;12206:13;:20;12185:41;;12115:383;;;12310:173;12346:7;12354;12346:16;;;;;;;;;;;;;;;;;;:31;;:112;12403:13;12417:18;12403:33;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12403:33:3;;;12346:112;;;;;;;;;;;;;;;:119;;;;;;;;;;;;12310:10;;:14;:173::i;:::-;12297:186;-1:-1:-1;12244:20:3;;12115:383;;;;12066:442;12524:10;-1:-1:-1;11907:634:3;;;;;:::o;1983:240:23:-;1280:12;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:22:23;;;:6;;:22;1262:67;;;;-1:-1:-1;;;1262:67:23;;;;;;;:::i;:::-;-1:-1:-1;;;;;2071:22:23;::::1;2063:73;;;::::0;-1:-1:-1;;;2063:73:23;;::::1;::::0;::::1;;;:::i;:::-;2172:6;::::0;;2151:38:::1;::::0;-1:-1:-1;;;;;2151:38:23;;::::1;::::0;2172:6;::::1;::::0;2151:38:::1;::::0;::::1;2199:6;:17:::0;;-1:-1:-1;;;;;;2199:17:23::1;-1:-1:-1::0;;;;;2199:17:23;;;::::1;::::0;;;::::1;::::0;;1983:240::o;1334:25:2:-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1334:25:2;:::o;7347:1007:3:-;2456:9;;-1:-1:-1;;;;;2456:9:3;2442:10;:23;;2434:57;;;;-1:-1:-1;;;2434:57:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;2919:28:3;::::1;;::::0;;;:20:::1;:28;::::0;;;;;;;::::1;;:36;;-1:-1:-1::0;2919:36:3::1;2911:69;;;::::0;-1:-1:-1;;;2911:69:3;;::::1;::::0;::::1;;;:::i;:::-;7601:1:::2;7547:7;7555;7547:16;;;;;;;;;::::0;;;::::2;::::0;;;-1:-1:-1;;;;;7547:39:3;::::2;::::0;;:16:::2;::::0;;;::::2;::::0;;::::2;:31;;:39:::0;;;;;;7587:10:::2;7547:51:::0;;;;;;;;:55:::2;7526:129;;;::::0;-1:-1:-1;;;7526:129:3;;::::2;::::0;::::2;;;:::i;:::-;7666:14;7683:7;7691;7683:16;;;;;;;;;::::0;;;::::2;::::0;;;-1:-1:-1;;;;;7683:39:3;::::2;::::0;;:16:::2;::::0;;;::::2;::::0;;::::2;:31;;:39:::0;;;;;;7723:10:::2;7683:51:::0;;;;;;;;7817:7:::2;:14:::0;7781:7:::2;:16:::0;;7683:51;;-1:-1:-1;7781:51:3::2;::::0;7789:7;;7781:16;::::2;;;;:51;7744:88;;7897:1;7843:7;7851;7843:16;;;;;;;;;::::0;;;::::2;::::0;;;-1:-1:-1;;;;;7843:39:3;::::2;::::0;;:16:::2;::::0;;;::::2;::::0;;::::2;:31;;:39:::0;;;;;;7883:10:::2;7843:51:::0;;;;;;;:55;7922:11:::2;::::0;:23:::2;::::0;7938:6;7922:15:::2;:23::i;:::-;7908:11;:37:::0;-1:-1:-1;;;;;7955:23:3;::::2;;7979:10;7991:26;:6:::0;8002:14;7991:10:::2;:26::i;:::-;7955:63;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;8133:10:3::2;8114:30;::::0;;;:18:::2;:30;::::0;;;;;:37:::2;::::0;8149:1:::2;8114:34;:37::i;:::-;8100:10;8081:30;::::0;;;:18:::2;:30;::::0;;;;:70;;;8162:138:::2;;8217:13;8233:21;8243:10;8233:9;:21::i;:::-;8217:37;;8275:7;8283:5;8275:14;;;;;;;;;::::0;;;::::2;::::0;;;::::2;8268:21:::0;;-1:-1:-1;;;;;;8268:21:3::2;::::0;;-1:-1:-1;8162:138:3::2;8310:37;8332:6;8340;8310:21;:37::i;5385:466:2:-:0;5467:7;5488:13;5515:7;5536:16;5566:12;5603:26;5642:8;:15;;;;5632:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5632:26:2;;5603:55;;5674:9;5669:107;5693:8;:15;5689:19;;5669:107;;;5748:4;:17;5753:8;5762:1;5753:11;;;;;;;;;;;;;;;;;;;;5748:17;;;;;;;;;;;;;5729:16;;-1:-1:-1;;;;;5748:17:2;;;;5729:13;;5743:1;;5729:16;;;;;;-1:-1:-1;;;;;5729:36:2;;;;:16;;;;;;;;;;;:36;-1:-1:-1;5710:3:2;5669:107;;;;5794:7;:5;:7::i;:::-;5813:5;;5803:8;5786:58;;;;;;;;;;;;;-1:-1:-1;;5786:58:2;;;;;;;;;;;;;;;;;;;;;;;;;;5803:8;;5813:5;5820:8;;5830:13;;5803:8;;5786:58;;5803:8;5786:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5385:466;;;;;:::o;13646:261:3:-;13733:19;13754:17;13808:7;13816:9;13808:18;;;;;;;;;;;;;;;;;;:35;;;13857:7;13865:9;13857:18;;;;;;;;;;;;;;;;;;:33;;;13787:113;;;;13646:261;;;:::o;2222:45::-;;;;;;;;;;;;;:::o;1316:24::-;;;;;;;;;;1321:134:24;1379:7;1405:43;1409:1;1412;1405:43;;;;;;;;;;;;;;;;;:3;:43::i;590:104:21:-;677:10;590:104;:::o;13086:366:3:-;13189:21;;:::i;:::-;13221:44;;;13275:22;;;:40;;;-1:-1:-1;13325:14:3;;;:35;;;13371:7;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13371:21:3;;;;;;;;;;;;13221:44;;13371:21;;;;-1:-1:-1;;13371:21:3;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13423:7:3;:14;:21;;-1:-1:-1;13442:1:3;13423:18;:21::i;:::-;13408:37;;;;;;;13086:366;;;:::o;2180:459:24:-;2238:7;2479:6;2475:45;;-1:-1:-1;2508:1:24;2501:8;;2475:45;2542:5;;;2546:1;2542;:5;:1;2565:5;;;;;:10;2557:56;;;;-1:-1:-1;;;2557:56:24;;;;;;;:::i;3101:130::-;3159:7;3185:39;3189:1;3192;3185:39;;;;;;;;;;;;;;;;;:3;:39::i;874:176::-;932:7;963:5;;;986:6;;;;978:46;;;;-1:-1:-1;;;978:46:24;;;;;;;:::i;4830:802:3:-;4934:10;4917:28;;;;:16;:28;;;;;;;;-1:-1:-1;;;;;4917:36:3;;;;;;;;;;;;4913:651;;4989:10;4978:22;;;;:10;:22;;;;;;;;5023:50;;;;;;;-1:-1:-1;;;;;5023:50:3;;;;;;;;;;;;4978:109;;-1:-1:-1;4978:109:3;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4978:109:3;;;;;;;;;;;;;;;;5125:22;;;:29;;5172:21;:33;;;;;:41;;;;;;;;-1:-1:-1;;5125:33:3;;;;5172:57;;5243:28;;;:16;:28;;;;;:36;;;;;;;;:43;;-1:-1:-1;;5243:43:3;;;;;;4913:651;;;5360:10;5317:18;5338:33;;;:21;:33;;;;;;;;-1:-1:-1;;;;;5338:41:3;;;;;;;;;;5436:22;;;:10;:22;;;;;:64;;:117;;5545:7;;5338:41;;5436:64;;;;;;;;;;;;;;;;:87;;;:108;;:117;;;;:::i;:::-;5404:10;5393:22;;;;:10;:22;;;;;:34;;5416:10;;5393:34;;;;;;;;;;;;;;;;:40;;:160;;;;4913:651;;-1:-1:-1;;;;;5594:18:3;;;;;;:10;:18;;;;;;:31;;5617:7;5594:22;:31::i;:::-;-1:-1:-1;;;;;5573:18:3;;;;;;;;:10;:18;;;;;:52;;;;-1:-1:-1;4830:802:3:o;5793:277::-;5919:10;5876:18;5897:33;;;:21;:33;;;;;;;;-1:-1:-1;;;;;5897:41:3;;;;;;;;;;5948:22;;;:10;:22;;;;;:34;;:53;;5993:7;;5897:41;;5948:34;;;;;;;;;;;;;;;;:40;;;:44;;:53;;;;:::i;:::-;-1:-1:-1;;;;;;6032:18:3;;;;;;:10;:18;;;;;;:31;;6055:7;6032:22;:31::i;:::-;-1:-1:-1;;;;;6011:18:3;;;;;;;;:10;:18;;;;;:52;;;;-1:-1:-1;;5793:277:3:o;12547:280::-;12733:1;12683:7;12691;12683:16;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12683:39:3;;;;;:16;;;;;;:31;;:39;;;;;;:46;;;;;;;;;;;:51;12679:142;;-1:-1:-1;;;;;12778:25:3;;;;;;:18;:25;;;;;;:32;;-1:-1:-1;12778:29:3;:32::i;:::-;-1:-1:-1;;;;;12750:25:3;;;;;;:18;:25;;;;;:60;12547:280;;;:::o;12833:247::-;12890:7;;12909:135;12933:7;:14;12929:18;;12909:135;;;12972:7;:10;;-1:-1:-1;;;;;12972:19:3;;;:7;12980:1;;12972:10;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12972:10:3;:19;12968:66;;;13018:1;-1:-1:-1;13011:8:3;;12968:66;12949:3;;12909:135;;;-1:-1:-1;;;;13069:2:3;-1:-1:-1;;12833:247:3:o;1746:187:24:-;1832:7;1867:12;1859:6;;;;1851:29;;;;-1:-1:-1;;;1851:29:24;;;;;;;;:::i;:::-;-1:-1:-1;;;1902:5:24;;;1746:187::o;3713:272::-;3799:7;3833:12;3826:5;3818:28;;;;-1:-1:-1;;;3818:28:24;;;;;;;;:::i;:::-;;3856:9;3872:1;3868;:5;;;;;;;3713:272;-1:-1:-1;;;;;3713:272:24:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;726:241::-;;830:2;818:9;809:7;805:23;801:32;798:2;;;-1:-1;;836:12;798:2;85:6;72:20;97:33;124:5;97:33;:::i;974:366::-;;;1095:2;1083:9;1074:7;1070:23;1066:32;1063:2;;;-1:-1;;1101:12;1063:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;1153:63;-1:-1;1253:2;1292:22;;72:20;97:33;72:20;97:33;:::i;:::-;1261:63;;;;1057:283;;;;;:::o;1347:366::-;;;1468:2;1456:9;1447:7;1443:23;1439:32;1436:2;;;-1:-1;;1474:12;1436:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;1526:63;1626:2;1665:22;;;;656:20;;-1:-1;;;1430:283::o;1720:491::-;;;;1858:2;1846:9;1837:7;1833:23;1829:32;1826:2;;;-1:-1;;1864:12;1826:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;1916:63;2016:2;2055:22;;656:20;;-1:-1;2124:2;2163:22;;;656:20;;1820:391;-1:-1;;;1820:391::o;2218:257::-;;2330:2;2318:9;2309:7;2305:23;2301:32;2298:2;;;-1:-1;;2336:12;2298:2;223:6;217:13;35296:5;32659:13;32652:21;35274:5;35271:32;35261:2;;-1:-1;;35307:12;2482:241;;2586:2;2574:9;2565:7;2561:23;2557:32;2554:2;;;-1:-1;;2592:12;2554:2;-1:-1;344:20;;2548:175;-1:-1;2548:175::o;2730:366::-;;;2851:2;2839:9;2830:7;2826:23;2822:32;2819:2;;;-1:-1;;2857:12;2819:2;-1:-1;;344:20;;;3009:2;3048:22;;;656:20;;-1:-1;2813:283::o;3103:491::-;;;;3241:2;3229:9;3220:7;3216:23;3212:32;3209:2;;;-1:-1;;3247:12;3209:2;-1:-1;;344:20;;;3399:2;3438:22;;656:20;;-1:-1;3507:2;3546:22;;;656:20;;3203:391;-1:-1;3203:391::o;3601:297::-;;3733:2;3721:9;3712:7;3708:23;3704:32;3701:2;;;-1:-1;;3739:12;3701:2;515:6;509:13;527:50;571:5;527:50;:::i;4153:491::-;;;;4291:2;4279:9;4270:7;4266:23;4262:32;4259:2;;;-1:-1;;4297:12;4259:2;669:6;656:20;4349:63;;4449:2;4492:9;4488:22;72:20;97:33;124:5;97:33;:::i;:::-;4253:391;;4457:63;;-1:-1;;;4557:2;4596:22;;;;656:20;;4253:391::o;9862:347::-;;10007:5;30594:12;31720:6;31715:3;31708:19;10101:52;10146:6;31757:4;31752:3;31748:14;31757:4;10127:5;10123:16;10101:52;:::i;:::-;34962:7;34946:14;-1:-1;;34942:28;10165:39;;;;31757:4;10165:39;;9954:255;-1:-1;;9954:255::o;16764:271::-;;8870:5;30594:12;8981:52;9026:6;9021:3;9014:4;9007:5;9003:16;8981:52;:::i;:::-;9045:16;;;;;16898:137;-1:-1;;16898:137::o;17042:222::-;-1:-1;;;;;33074:54;;;;5894:37;;17169:2;17154:18;;17140:124::o;17271:460::-;-1:-1;;;;;33074:54;;;5753:58;;33074:54;;;;17634:2;17619:18;;5894:37;17717:2;17702:18;;8541:37;;;;17462:2;17447:18;;17433:298::o;17738:349::-;-1:-1;;;;;33074:54;;;;5753:58;;18073:2;18058:18;;8541:37;17901:2;17886:18;;17872:215::o;18094:1076::-;;33085:42;;;;;;32575:5;33074:54;5901:3;5894:37;18584:2;18465:3;18584:2;18573:9;18569:18;18562:48;18624:78;18465:3;18454:9;18450:19;18688:6;18624:78;:::i;:::-;18781:2;18766:18;;8541:37;;;18823:20;;;18818:2;18803:18;;18796:48;30594:12;;31708:19;;;30100:14;;;;31748;;;-1:-1;6382:260;6407:6;6404:1;6401:13;6382:260;;;6468:13;;8541:37;;31301:14;;;;5178;;;;6429:1;6422:9;6382:260;;;-1:-1;;19005:20;;;18999:3;18984:19;;18977:49;30594:12;;31708:19;;;31748:14;;;;-1:-1;30100:14;;;;-1:-1;7152:284;7177:6;7174:1;7171:13;7152:284;;;7238:13;;33074:54;;9159:65;;5384:14;;;;31301;;;;6429:1;7192:9;7152:284;;;-1:-1;19032:128;;18436:734;-1:-1;;;;;;;;;;;18436:734::o;19517:450::-;19734:2;19748:47;;;30594:12;;19719:18;;;31708:19;;;19517:450;;19734:2;31748:14;;;;;;30100;;;19517:450;8019:320;8044:6;8041:1;8038:13;8019:320;;;8105:13;;16101:23;;8541:37;;16262:16;;;16256:23;16333:14;;;8541:37;16420:16;;16414:23;16491:14;;;8541:37;5655:4;5646:14;;;;31301;;;;8066:1;8059:9;8019:320;;;-1:-1;19801:156;;19705:262;-1:-1;;;;;;;19705:262::o;19974:210::-;32659:13;;32652:21;8434:34;;20095:2;20080:18;;20066:118::o;20191:222::-;8541:37;;;20318:2;20303:18;;20289:124::o;21201:310::-;;21348:2;21369:17;21362:47;21423:78;21348:2;21337:9;21333:18;21487:6;21423:78;:::i;21518:416::-;21718:2;21732:47;;;10441:2;21703:18;;;31708:19;10477:34;31748:14;;;10457:55;-1:-1;;;10532:12;;;10525:33;10577:12;;;21689:245::o;21941:416::-;22141:2;22155:47;;;10828:2;22126:18;;;31708:19;-1:-1;;;31748:14;;;10844:42;10905:12;;;22112:245::o;22364:416::-;22564:2;22578:47;;;11156:2;22549:18;;;31708:19;-1:-1;;;31748:14;;;11172:38;11229:12;;;22535:245::o;22787:416::-;22987:2;23001:47;;;11480:2;22972:18;;;31708:19;11516:34;31748:14;;;11496:55;-1:-1;;;11571:12;;;11564:30;11613:12;;;22958:245::o;23210:416::-;23410:2;23424:47;;;11864:2;23395:18;;;31708:19;11900:29;31748:14;;;11880:50;11949:12;;;23381:245::o;23633:416::-;23833:2;23847:47;;;12200:2;23818:18;;;31708:19;12236:34;31748:14;;;12216:55;-1:-1;;;12291:12;;;12284:29;12332:12;;;23804:245::o;24056:416::-;24256:2;24270:47;;;12583:2;24241:18;;;31708:19;-1:-1;;;31748:14;;;12599:44;12662:12;;;24227:245::o;24479:416::-;24679:2;24693:47;;;12913:2;24664:18;;;31708:19;12949:29;31748:14;;;12929:50;12998:12;;;24650:245::o;24902:416::-;25102:2;25116:47;;;13249:2;25087:18;;;31708:19;-1:-1;;;31748:14;;;13265:42;13326:12;;;25073:245::o;25325:416::-;25525:2;25539:47;;;13577:2;25510:18;;;31708:19;13613:34;31748:14;;;13593:55;-1:-1;;;13668:12;;;13661:46;13726:12;;;25496:245::o;25748:416::-;25948:2;25962:47;;;13977:2;25933:18;;;31708:19;14013:34;31748:14;;;13993:55;-1:-1;;;14068:12;;;14061:25;14105:12;;;25919:245::o;26171:416::-;26371:2;26385:47;;;14356:2;26356:18;;;31708:19;-1:-1;;;31748:14;;;14372:43;14434:12;;;26342:245::o;26594:416::-;26794:2;26808:47;;;26779:18;;;31708:19;14721:34;31748:14;;;14701:55;14775:12;;;26765:245::o;27017:416::-;27217:2;27231:47;;;15026:2;27202:18;;;31708:19;-1:-1;;;31748:14;;;15042:41;15102:12;;;27188:245::o;27440:416::-;27640:2;27654:47;;;15353:2;27625:18;;;31708:19;-1:-1;;;31748:14;;;15369:48;15436:12;;;27611:245::o;27863:416::-;28063:2;28077:47;;;15687:2;28048:18;;;31708:19;15723:34;31748:14;;;15703:55;15792:30;15778:12;;;15771:52;15842:12;;;28034:245::o;28515:333::-;8541:37;;;28834:2;28819:18;;8541:37;28670:2;28655:18;;28641:207::o;28855:444::-;8541:37;;;29202:2;29187:18;;8541:37;;;;29285:2;29270:18;;8541:37;29038:2;29023:18;;29009:290::o;29306:672::-;8541:37;;;29712:2;29697:18;;8541:37;;;29795:2;29780:18;;8541:37;;;32659:13;;32652:21;29872:2;29857:18;;8434:34;29547:3;29532:19;;35062:1;35052:12;;35042:2;;35068:9;35042:2;34312:34;29963:3;29952:9;29948:19;9792:58;29518:460;;;;;;;;:::o;34602:268::-;34667:1;34674:101;34688:6;34685:1;34682:13;34674:101;;;34755:11;;;34749:18;34736:11;;;34729:39;34710:2;34703:10;34674:101;;;34790:6;34787:1;34784:13;34781:2;;;-1:-1;;34667:1;34837:16;;34830:27;34651:219::o;35091:117::-;-1:-1;;;;;33074:54;;35150:35;;35140:2;;35199:1;;35189:12;35140:2;35134:74;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\npragma experimental ABIEncoderV2;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\nimport \"../SLO/SLO.sol\";\nimport \"../SLARegistry.sol\";\nimport \"./Staking.sol\";\n\n/**\n * @title SLA\n * @dev SLA is a service level agreement contract used for service downtime\n * compensation\n */\ncontract SLA is Ownable, Staking {\n    using SafeMath for uint256;\n\n    /// @dev The required amount to stake when subscribing to the agreement\n    uint256 public stake;\n\n    /// @dev The time between SLI registration\n    uint256 private sliInterval;\n\n    /// @dev The ipfs hash that stores extra information about the agreement\n    string public ipfsHash;\n\n    /// @dev The address of the registry contract\n    SLARegistry public registry;\n\n    /// @dev Struct used for storing registered SLI's\n    struct SLI {\n        uint256 timestamp;\n        uint256 value;\n        uint256 periodId;\n    }\n\n    /// @dev mapping to get SLO addresses from SLO names in bytes32\n    mapping(bytes32 => SLO) public SLOs;\n\n    /// @dev mapping to get SLI structs from SLO names in bytes32\n    mapping(bytes32 => SLI[]) public SLIs;\n\n    /// @dev array storing the names of the SLO's of this agreement\n    bytes32[] public SLONames;\n\n    /**\n     * @dev event for SLI creation logging\n     * @param _timestamp 1. the time the SLI has been registered\n     * @param _value 2. the value of the SLI\n     * @param _periodId 3. the id of the given period\n     */\n    event SLICreated(uint256 _timestamp, uint256 _value, uint256 _periodId);\n\n    /**\n     * @dev throws if called by any address other than the messenger contract.\n     */\n    modifier onlyMessenger() {\n        require(\n            msg.sender == address(registry.messenger()),\n            \"Only Messenger can call this funtcion\"\n        );\n        _;\n    }\n\n    /**\n     * @param _owner 1. address of the owner of the service level agreement\n     * @param _SLONames 2. array of the names of the service level objectives\n     * in bytes32\n     * @param _SLOs 3. array of service level objective contract addressess\n     * service level objective breach\n     * @param _stake 4. uint of the amount required to stake when signing the\n     * service level agreement\n     * @param _ipfsHash 5. string with the ipfs hash that contains extra\n     * information about the service level agreement\n     * @param _sliInterval 6. uint the interval in seconds between requesting a new SLI\n     * @param _baseTokenAddress 7. address of the Base Token to be unlocked for staking\n     * @param _sla_period_starts 8. array with the values for the \"start\" of every period\n     * @param _sla_period_ends 9. array with the values for the \"end\" of every period\n     */\n    constructor(\n        address _owner,\n        bytes32[] memory _SLONames,\n        SLO[] memory _SLOs,\n        uint256 _stake,\n        string memory _ipfsHash,\n        uint256 _sliInterval,\n        address _baseTokenAddress,\n        uint256[] memory _sla_period_starts,\n        uint256[] memory _sla_period_ends\n    )\n        public\n        Staking(\n            _baseTokenAddress,\n            _sla_period_starts,\n            _sla_period_ends,\n            _owner\n        )\n    {\n        require(_SLOs.length < 5, \"max amount of SLOs is 5\");\n        require(\n            _SLONames.length == _SLOs.length,\n            \"_SLONames and _SLOs should have the same length\"\n        );\n\n        for (uint256 i = 0; i < _SLOs.length; i++) {\n            SLOs[_SLONames[i]] = _SLOs[i];\n        }\n\n        transferOwnership(_owner);\n        SLONames = _SLONames;\n        stake = _stake;\n        ipfsHash = _ipfsHash;\n        registry = SLARegistry(msg.sender);\n        sliInterval = _sliInterval;\n    }\n\n    /**\n     * @dev external function to register SLI's and check them against the SLO's\n     * @param _SLOName 1. the name of the SLO in bytes32\n     * @param _value 2. the value of the SLI to check\n     * @param _periodId 3. the id of the given period\n     */\n    function registerSLI(\n        bytes32 _SLOName,\n        uint256 _value,\n        uint256 _periodId\n    ) external onlyMessenger {\n        SLIs[_SLOName].push(SLI(block.timestamp, _value, _periodId));\n\n        emit SLICreated(block.timestamp, _value, _periodId);\n\n        if (!SLOs[_SLOName].isSLOHonored(_value)) {\n            periods[_periodId].status = Status.NotRespected;\n        } else {\n            periods[_periodId].status = Status.Respected;\n        }\n    }\n\n    /**\n     * @dev external function to get SLIs of certain _SLO\n     * @param _SLOName 1. the name of the SLO in bytes32\n     * @return SLI[] array of SLIs associated to the input SLOs\n     */\n    function getSLI(bytes32 _SLOName) public view returns (SLI[] memory) {\n        return SLIs[_SLOName];\n    }\n\n    /**\n     * @dev external view function that returns the sliInterval value\n     · @return uint256 value of the sliInterval\n     */\n    function getSliInterval() external view returns (uint256) {\n        return sliInterval;\n    }\n\n    /**\n     * @dev external view function that returns all agreement information\n     * @return address owner\n     * @return string ipfsHash\n     * @return uint256 amount necessary to stake\n     * @return bytes32[] SLONames array\n     * @return SLO[] SLO addresses array\n     */\n\n    function getDetails()\n        external\n        view\n        returns (\n            address,\n            string memory,\n            uint256,\n            bytes32[] memory,\n            SLO[] memory\n        )\n    {\n        SLO[] memory _SLOAddresses = new SLO[](SLONames.length);\n\n        for (uint256 i = 0; i < SLONames.length; i++) {\n            _SLOAddresses[i] = SLOs[SLONames[i]];\n        }\n\n        return (owner(), ipfsHash, stake, SLONames, _SLOAddresses);\n    }\n}\n",
  "sourcePath": "/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLA/SLA.sol",
  "ast": {
    "absolutePath": "/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLA/SLA.sol",
    "exportedSymbols": {
      "SLA": [
        667
      ]
    },
    "id": 668,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 350,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:2"
      },
      {
        "id": 351,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 352,
        "nodeType": "ImportDirective",
        "scope": 668,
        "sourceUnit": 5563,
        "src": "91:52:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 353,
        "nodeType": "ImportDirective",
        "scope": 668,
        "sourceUnit": 6573,
        "src": "144:56:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 354,
        "nodeType": "ImportDirective",
        "scope": 668,
        "sourceUnit": 5759,
        "src": "201:51:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLO/SLO.sol",
        "file": "../SLO/SLO.sol",
        "id": 355,
        "nodeType": "ImportDirective",
        "scope": 668,
        "sourceUnit": 2438,
        "src": "253:24:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLARegistry.sol",
        "file": "../SLARegistry.sol",
        "id": 356,
        "nodeType": "ImportDirective",
        "scope": 668,
        "sourceUnit": 2307,
        "src": "278:28:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLA/Staking.sol",
        "file": "./Staking.sol",
        "id": 357,
        "nodeType": "ImportDirective",
        "scope": 668,
        "sourceUnit": 1882,
        "src": "307:23:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 359,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5562,
              "src": "462:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$5562",
                "typeString": "contract Ownable"
              }
            },
            "id": 360,
            "nodeType": "InheritanceSpecifier",
            "src": "462:7:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 361,
              "name": "Staking",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1881,
              "src": "471:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Staking_$1881",
                "typeString": "contract Staking"
              }
            },
            "id": 362,
            "nodeType": "InheritanceSpecifier",
            "src": "471:7:2"
          }
        ],
        "contractDependencies": [
          1881,
          5170,
          5562
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 358,
          "nodeType": "StructuredDocumentation",
          "src": "332:113:2",
          "text": " @title SLA\n @dev SLA is a service level agreement contract used for service downtime\n compensation"
        },
        "fullyImplemented": true,
        "id": 667,
        "linearizedBaseContracts": [
          667,
          1881,
          5562,
          5170
        ],
        "name": "SLA",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 365,
            "libraryName": {
              "contractScope": null,
              "id": 363,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5758,
              "src": "491:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$5758",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "485:27:2",
            "typeName": {
              "id": 364,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "504:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "documentation": {
              "id": 366,
              "nodeType": "StructuredDocumentation",
              "src": "518:71:2",
              "text": "@dev The required amount to stake when subscribing to the agreement"
            },
            "functionSelector": "3a4b66f1",
            "id": 368,
            "mutability": "mutable",
            "name": "stake",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 667,
            "src": "594:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 367,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "594:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 369,
              "nodeType": "StructuredDocumentation",
              "src": "621:42:2",
              "text": "@dev The time between SLI registration"
            },
            "id": 371,
            "mutability": "mutable",
            "name": "sliInterval",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 667,
            "src": "668:27:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 370,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "668:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 372,
              "nodeType": "StructuredDocumentation",
              "src": "702:72:2",
              "text": "@dev The ipfs hash that stores extra information about the agreement"
            },
            "functionSelector": "c623674f",
            "id": 374,
            "mutability": "mutable",
            "name": "ipfsHash",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 667,
            "src": "779:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 373,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "779:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 375,
              "nodeType": "StructuredDocumentation",
              "src": "808:45:2",
              "text": "@dev The address of the registry contract"
            },
            "functionSelector": "7b103999",
            "id": 377,
            "mutability": "mutable",
            "name": "registry",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 667,
            "src": "858:27:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SLARegistry_$2306",
              "typeString": "contract SLARegistry"
            },
            "typeName": {
              "contractScope": null,
              "id": 376,
              "name": "SLARegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2306,
              "src": "858:11:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SLARegistry_$2306",
                "typeString": "contract SLARegistry"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "SLA.SLI",
            "id": 384,
            "members": [
              {
                "constant": false,
                "id": 379,
                "mutability": "mutable",
                "name": "timestamp",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 384,
                "src": "967:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 378,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "967:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 381,
                "mutability": "mutable",
                "name": "value",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 384,
                "src": "994:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 380,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "994:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 383,
                "mutability": "mutable",
                "name": "periodId",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 384,
                "src": "1017:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 382,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1017:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "SLI",
            "nodeType": "StructDefinition",
            "scope": 667,
            "src": "946:94:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 385,
              "nodeType": "StructuredDocumentation",
              "src": "1046:63:2",
              "text": "@dev mapping to get SLO addresses from SLO names in bytes32"
            },
            "functionSelector": "b0227b47",
            "id": 389,
            "mutability": "mutable",
            "name": "SLOs",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 667,
            "src": "1114:35:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$2437_$",
              "typeString": "mapping(bytes32 => contract SLO)"
            },
            "typeName": {
              "id": 388,
              "keyType": {
                "id": 386,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1122:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1114:23:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$2437_$",
                "typeString": "mapping(bytes32 => contract SLO)"
              },
              "valueType": {
                "contractScope": null,
                "id": 387,
                "name": "SLO",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 2437,
                "src": "1133:3:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_SLO_$2437",
                  "typeString": "contract SLO"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 390,
              "nodeType": "StructuredDocumentation",
              "src": "1156:61:2",
              "text": "@dev mapping to get SLI structs from SLO names in bytes32"
            },
            "functionSelector": "94199c61",
            "id": 395,
            "mutability": "mutable",
            "name": "SLIs",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 667,
            "src": "1222:37:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$384_storage_$dyn_storage_$",
              "typeString": "mapping(bytes32 => struct SLA.SLI[])"
            },
            "typeName": {
              "id": 394,
              "keyType": {
                "id": 391,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1230:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1222:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$384_storage_$dyn_storage_$",
                "typeString": "mapping(bytes32 => struct SLA.SLI[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 392,
                  "name": "SLI",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 384,
                  "src": "1241:3:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SLI_$384_storage_ptr",
                    "typeString": "struct SLA.SLI"
                  }
                },
                "id": 393,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "1241:5:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_SLI_$384_storage_$dyn_storage_ptr",
                  "typeString": "struct SLA.SLI[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 396,
              "nodeType": "StructuredDocumentation",
              "src": "1266:63:2",
              "text": "@dev array storing the names of the SLO's of this agreement"
            },
            "functionSelector": "f34ed40d",
            "id": 399,
            "mutability": "mutable",
            "name": "SLONames",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 667,
            "src": "1334:25:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
              "typeString": "bytes32[]"
            },
            "typeName": {
              "baseType": {
                "id": 397,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1334:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "id": 398,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "1334:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                "typeString": "bytes32[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 400,
              "nodeType": "StructuredDocumentation",
              "src": "1366:218:2",
              "text": " @dev event for SLI creation logging\n @param _timestamp 1. the time the SLI has been registered\n @param _value 2. the value of the SLI\n @param _periodId 3. the id of the given period"
            },
            "id": 408,
            "name": "SLICreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 402,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_timestamp",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 408,
                  "src": "1606:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 401,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1606:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 404,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 408,
                  "src": "1626:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 403,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1626:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 406,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_periodId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 408,
                  "src": "1642:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 405,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1642:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1605:55:2"
            },
            "src": "1589:72:2"
          },
          {
            "body": {
              "id": 425,
              "nodeType": "Block",
              "src": "1787:155:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 412,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1818:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1818:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 416,
                                  "name": "registry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 377,
                                  "src": "1840:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SLARegistry_$2306",
                                    "typeString": "contract SLARegistry"
                                  }
                                },
                                "id": 417,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "messenger",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1916,
                                "src": "1840:18:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_Messenger_$291_$",
                                  "typeString": "function () view external returns (contract Messenger)"
                                }
                              },
                              "id": 418,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1840:20:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Messenger_$291",
                                "typeString": "contract Messenger"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Messenger_$291",
                                "typeString": "contract Messenger"
                              }
                            ],
                            "id": 415,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1832:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 414,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1832:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1832:29:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1818:43:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c79204d657373656e6765722063616e2063616c6c20746869732066756e7463696f6e",
                        "id": 421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1875:39:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_467737b4c3c908f2cdc14d03ad6e6083b866bad6901b6ebb82e8ea7edaea96db",
                          "typeString": "literal_string \"Only Messenger can call this funtcion\""
                        },
                        "value": "Only Messenger can call this funtcion"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_467737b4c3c908f2cdc14d03ad6e6083b866bad6901b6ebb82e8ea7edaea96db",
                          "typeString": "literal_string \"Only Messenger can call this funtcion\""
                        }
                      ],
                      "id": 411,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1797:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1797:127:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 423,
                  "nodeType": "ExpressionStatement",
                  "src": "1797:127:2"
                },
                {
                  "id": 424,
                  "nodeType": "PlaceholderStatement",
                  "src": "1934:1:2"
                }
              ]
            },
            "documentation": {
              "id": 409,
              "nodeType": "StructuredDocumentation",
              "src": "1667:90:2",
              "text": " @dev throws if called by any address other than the messenger contract."
            },
            "id": 426,
            "name": "onlyMessenger",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1784:2:2"
            },
            "src": "1762:180:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 525,
              "nodeType": "Block",
              "src": "3311:512:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 459,
                            "name": "_SLOs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 435,
                            "src": "3329:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_SLO_$2437_$dyn_memory_ptr",
                              "typeString": "contract SLO[] memory"
                            }
                          },
                          "id": 460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3329:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "35",
                          "id": 461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3344:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "src": "3329:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6d617820616d6f756e74206f6620534c4f732069732035",
                        "id": 463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3347:25:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be84bcce5cdf21effcf26df15f43c34c7a80dbc4bd54884dca3d795818fbfe95",
                          "typeString": "literal_string \"max amount of SLOs is 5\""
                        },
                        "value": "max amount of SLOs is 5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be84bcce5cdf21effcf26df15f43c34c7a80dbc4bd54884dca3d795818fbfe95",
                          "typeString": "literal_string \"max amount of SLOs is 5\""
                        }
                      ],
                      "id": 458,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3321:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3321:52:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 465,
                  "nodeType": "ExpressionStatement",
                  "src": "3321:52:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 467,
                            "name": "_SLONames",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 432,
                            "src": "3404:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          "id": 468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3404:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 469,
                            "name": "_SLOs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 435,
                            "src": "3424:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_SLO_$2437_$dyn_memory_ptr",
                              "typeString": "contract SLO[] memory"
                            }
                          },
                          "id": 470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3424:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3404:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5f534c4f4e616d657320616e64205f534c4f732073686f756c642068617665207468652073616d65206c656e677468",
                        "id": 472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3450:49:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b3b41b8359a1b0d52aeb9a136881798f1d5820dbfe964604a8e4ebb7ce8ebc0b",
                          "typeString": "literal_string \"_SLONames and _SLOs should have the same length\""
                        },
                        "value": "_SLONames and _SLOs should have the same length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b3b41b8359a1b0d52aeb9a136881798f1d5820dbfe964604a8e4ebb7ce8ebc0b",
                          "typeString": "literal_string \"_SLONames and _SLOs should have the same length\""
                        }
                      ],
                      "id": 466,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3383:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3383:126:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 474,
                  "nodeType": "ExpressionStatement",
                  "src": "3383:126:2"
                },
                {
                  "body": {
                    "id": 496,
                    "nodeType": "Block",
                    "src": "3563:54:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 486,
                              "name": "SLOs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 389,
                              "src": "3577:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$2437_$",
                                "typeString": "mapping(bytes32 => contract SLO)"
                              }
                            },
                            "id": 490,
                            "indexExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 487,
                                "name": "_SLONames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 432,
                                "src": "3582:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                }
                              },
                              "id": 489,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 488,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 476,
                                "src": "3592:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3582:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3577:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLO_$2437",
                              "typeString": "contract SLO"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 491,
                              "name": "_SLOs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 435,
                              "src": "3598:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_SLO_$2437_$dyn_memory_ptr",
                                "typeString": "contract SLO[] memory"
                              }
                            },
                            "id": 493,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 492,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 476,
                              "src": "3604:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3598:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLO_$2437",
                              "typeString": "contract SLO"
                            }
                          },
                          "src": "3577:29:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$2437",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 495,
                        "nodeType": "ExpressionStatement",
                        "src": "3577:29:2"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 479,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 476,
                      "src": "3540:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 480,
                        "name": "_SLOs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 435,
                        "src": "3544:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_SLO_$2437_$dyn_memory_ptr",
                          "typeString": "contract SLO[] memory"
                        }
                      },
                      "id": 481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3544:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3540:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 497,
                  "initializationExpression": {
                    "assignments": [
                      476
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 476,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 497,
                        "src": "3525:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 475,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3525:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 478,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 477,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3537:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3525:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 484,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3558:3:2",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 483,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 476,
                        "src": "3558:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 485,
                    "nodeType": "ExpressionStatement",
                    "src": "3558:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "3520:97:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 499,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 429,
                        "src": "3645:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 498,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5561,
                      "src": "3627:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3627:25:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 501,
                  "nodeType": "ExpressionStatement",
                  "src": "3627:25:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 502,
                      "name": "SLONames",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 399,
                      "src": "3662:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                        "typeString": "bytes32[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 503,
                      "name": "_SLONames",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 432,
                      "src": "3673:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[] memory"
                      }
                    },
                    "src": "3662:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                      "typeString": "bytes32[] storage ref"
                    }
                  },
                  "id": 505,
                  "nodeType": "ExpressionStatement",
                  "src": "3662:20:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 506,
                      "name": "stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 368,
                      "src": "3692:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 507,
                      "name": "_stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 437,
                      "src": "3700:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3692:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 509,
                  "nodeType": "ExpressionStatement",
                  "src": "3692:14:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 510,
                      "name": "ipfsHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 374,
                      "src": "3716:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 511,
                      "name": "_ipfsHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 439,
                      "src": "3727:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3716:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 513,
                  "nodeType": "ExpressionStatement",
                  "src": "3716:20:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 514,
                      "name": "registry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 377,
                      "src": "3746:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLARegistry_$2306",
                        "typeString": "contract SLARegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 516,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3769:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3769:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 515,
                        "name": "SLARegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2306,
                        "src": "3757:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SLARegistry_$2306_$",
                          "typeString": "type(contract SLARegistry)"
                        }
                      },
                      "id": 518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3757:23:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLARegistry_$2306",
                        "typeString": "contract SLARegistry"
                      }
                    },
                    "src": "3746:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SLARegistry_$2306",
                      "typeString": "contract SLARegistry"
                    }
                  },
                  "id": 520,
                  "nodeType": "ExpressionStatement",
                  "src": "3746:34:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 521,
                      "name": "sliInterval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 371,
                      "src": "3790:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 522,
                      "name": "_sliInterval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 441,
                      "src": "3804:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3790:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 524,
                  "nodeType": "ExpressionStatement",
                  "src": "3790:26:2"
                }
              ]
            },
            "documentation": {
              "id": 427,
              "nodeType": "StructuredDocumentation",
              "src": "1948:884:2",
              "text": " @param _owner 1. address of the owner of the service level agreement\n @param _SLONames 2. array of the names of the service level objectives\n in bytes32\n @param _SLOs 3. array of service level objective contract addressess\n service level objective breach\n @param _stake 4. uint of the amount required to stake when signing the\n service level agreement\n @param _ipfsHash 5. string with the ipfs hash that contains extra\n information about the service level agreement\n @param _sliInterval 6. uint the interval in seconds between requesting a new SLI\n @param _baseTokenAddress 7. address of the Base Token to be unlocked for staking\n @param _sla_period_starts 8. array with the values for the \"start\" of every period\n @param _sla_period_ends 9. array with the values for the \"end\" of every period"
            },
            "id": 526,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 452,
                    "name": "_baseTokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 443,
                    "src": "3197:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 453,
                    "name": "_sla_period_starts",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 446,
                    "src": "3228:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 454,
                    "name": "_sla_period_ends",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 449,
                    "src": "3260:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 455,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 429,
                    "src": "3290:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 456,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 451,
                  "name": "Staking",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1881,
                  "src": "3176:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Staking_$1881_$",
                    "typeString": "type(contract Staking)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3176:130:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 429,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 526,
                  "src": "2858:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 428,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2858:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 432,
                  "mutability": "mutable",
                  "name": "_SLONames",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 526,
                  "src": "2882:26:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 430,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2882:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 431,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2882:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 435,
                  "mutability": "mutable",
                  "name": "_SLOs",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 526,
                  "src": "2918:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_SLO_$2437_$dyn_memory_ptr",
                    "typeString": "contract SLO[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 433,
                      "name": "SLO",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 2437,
                      "src": "2918:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLO_$2437",
                        "typeString": "contract SLO"
                      }
                    },
                    "id": 434,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2918:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_SLO_$2437_$dyn_storage_ptr",
                      "typeString": "contract SLO[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 437,
                  "mutability": "mutable",
                  "name": "_stake",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 526,
                  "src": "2946:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 436,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2946:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 439,
                  "mutability": "mutable",
                  "name": "_ipfsHash",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 526,
                  "src": "2970:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 438,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2970:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 441,
                  "mutability": "mutable",
                  "name": "_sliInterval",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 526,
                  "src": "3003:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 440,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3003:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 443,
                  "mutability": "mutable",
                  "name": "_baseTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 526,
                  "src": "3033:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 442,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3033:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 446,
                  "mutability": "mutable",
                  "name": "_sla_period_starts",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 526,
                  "src": "3068:35:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 444,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3068:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 445,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3068:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 449,
                  "mutability": "mutable",
                  "name": "_sla_period_ends",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 526,
                  "src": "3113:33:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 447,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3113:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 448,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3113:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2848:304:2"
            },
            "returnParameters": {
              "id": 457,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3311:0:2"
            },
            "scope": 667,
            "src": "2837:986:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 583,
              "nodeType": "Block",
              "src": "4218:338:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 543,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "4252:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 544,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4252:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 545,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 531,
                            "src": "4269:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 546,
                            "name": "_periodId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 533,
                            "src": "4277:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 542,
                          "name": "SLI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 384,
                          "src": "4248:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_SLI_$384_storage_ptr_$",
                            "typeString": "type(struct SLA.SLI storage pointer)"
                          }
                        },
                        "id": 547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4248:39:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SLI_$384_memory_ptr",
                          "typeString": "struct SLA.SLI memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SLI_$384_memory_ptr",
                          "typeString": "struct SLA.SLI memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 538,
                          "name": "SLIs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 395,
                          "src": "4228:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$384_storage_$dyn_storage_$",
                            "typeString": "mapping(bytes32 => struct SLA.SLI storage ref[] storage ref)"
                          }
                        },
                        "id": 540,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 539,
                          "name": "_SLOName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 529,
                          "src": "4233:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4228:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_SLI_$384_storage_$dyn_storage",
                          "typeString": "struct SLA.SLI storage ref[] storage ref"
                        }
                      },
                      "id": 541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4228:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_SLI_$384_storage_$returns$__$",
                        "typeString": "function (struct SLA.SLI storage ref)"
                      }
                    },
                    "id": 548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4228:60:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 549,
                  "nodeType": "ExpressionStatement",
                  "src": "4228:60:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 551,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "4315:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4315:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 553,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 531,
                        "src": "4332:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 554,
                        "name": "_periodId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 533,
                        "src": "4340:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 550,
                      "name": "SLICreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 408,
                      "src": "4304:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256)"
                      }
                    },
                    "id": 555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4304:46:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 556,
                  "nodeType": "EmitStatement",
                  "src": "4299:51:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4365:36:2",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 561,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 531,
                          "src": "4394:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 557,
                            "name": "SLOs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 389,
                            "src": "4366:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$2437_$",
                              "typeString": "mapping(bytes32 => contract SLO)"
                            }
                          },
                          "id": 559,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 558,
                            "name": "_SLOName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 529,
                            "src": "4371:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4366:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$2437",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isSLOHonored",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2436,
                        "src": "4366:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view external returns (bool)"
                        }
                      },
                      "id": 562,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4366:35:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 581,
                    "nodeType": "Block",
                    "src": "4481:69:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 573,
                                "name": "periods",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 725,
                                "src": "4495:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Period_$702_storage_$dyn_storage",
                                  "typeString": "struct Staking.Period storage ref[] storage ref"
                                }
                              },
                              "id": 575,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 574,
                                "name": "_periodId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 533,
                                "src": "4503:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4495:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Period_$702_storage",
                                "typeString": "struct Staking.Period storage ref"
                              }
                            },
                            "id": 576,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 691,
                            "src": "4495:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$681",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 577,
                              "name": "Status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 681,
                              "src": "4523:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Status_$681_$",
                                "typeString": "type(enum Staking.Status)"
                              }
                            },
                            "id": 578,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Respected",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4523:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$681",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "src": "4495:44:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$681",
                            "typeString": "enum Staking.Status"
                          }
                        },
                        "id": 580,
                        "nodeType": "ExpressionStatement",
                        "src": "4495:44:2"
                      }
                    ]
                  },
                  "id": 582,
                  "nodeType": "IfStatement",
                  "src": "4361:189:2",
                  "trueBody": {
                    "id": 572,
                    "nodeType": "Block",
                    "src": "4403:72:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 564,
                                "name": "periods",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 725,
                                "src": "4417:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Period_$702_storage_$dyn_storage",
                                  "typeString": "struct Staking.Period storage ref[] storage ref"
                                }
                              },
                              "id": 566,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 565,
                                "name": "_periodId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 533,
                                "src": "4425:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4417:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Period_$702_storage",
                                "typeString": "struct Staking.Period storage ref"
                              }
                            },
                            "id": 567,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 691,
                            "src": "4417:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$681",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 568,
                              "name": "Status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 681,
                              "src": "4445:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Status_$681_$",
                                "typeString": "type(enum Staking.Status)"
                              }
                            },
                            "id": 569,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "NotRespected",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4445:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$681",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "src": "4417:47:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$681",
                            "typeString": "enum Staking.Status"
                          }
                        },
                        "id": 571,
                        "nodeType": "ExpressionStatement",
                        "src": "4417:47:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 527,
              "nodeType": "StructuredDocumentation",
              "src": "3829:257:2",
              "text": " @dev external function to register SLI's and check them against the SLO's\n @param _SLOName 1. the name of the SLO in bytes32\n @param _value 2. the value of the SLI to check\n @param _periodId 3. the id of the given period"
            },
            "functionSelector": "869c3925",
            "id": 584,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 536,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 535,
                  "name": "onlyMessenger",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 426,
                  "src": "4204:13:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4204:13:2"
              }
            ],
            "name": "registerSLI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 534,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 529,
                  "mutability": "mutable",
                  "name": "_SLOName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 584,
                  "src": "4121:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 528,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4121:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 531,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 584,
                  "src": "4147:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 530,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4147:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 533,
                  "mutability": "mutable",
                  "name": "_periodId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 584,
                  "src": "4171:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 532,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4171:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4111:83:2"
            },
            "returnParameters": {
              "id": 537,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4218:0:2"
            },
            "scope": 667,
            "src": "4091:465:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 597,
              "nodeType": "Block",
              "src": "4826:38:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 593,
                      "name": "SLIs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 395,
                      "src": "4843:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$384_storage_$dyn_storage_$",
                        "typeString": "mapping(bytes32 => struct SLA.SLI storage ref[] storage ref)"
                      }
                    },
                    "id": 595,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 594,
                      "name": "_SLOName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 587,
                      "src": "4848:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4843:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_SLI_$384_storage_$dyn_storage",
                      "typeString": "struct SLA.SLI storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 592,
                  "id": 596,
                  "nodeType": "Return",
                  "src": "4836:21:2"
                }
              ]
            },
            "documentation": {
              "id": 585,
              "nodeType": "StructuredDocumentation",
              "src": "4562:190:2",
              "text": " @dev external function to get SLIs of certain _SLO\n @param _SLOName 1. the name of the SLO in bytes32\n @return SLI[] array of SLIs associated to the input SLOs"
            },
            "functionSelector": "02e8b893",
            "id": 598,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSLI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 588,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 587,
                  "mutability": "mutable",
                  "name": "_SLOName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 598,
                  "src": "4773:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 586,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4773:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4772:18:2"
            },
            "returnParameters": {
              "id": 592,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 591,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 598,
                  "src": "4812:12:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_SLI_$384_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct SLA.SLI[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 589,
                      "name": "SLI",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 384,
                      "src": "4812:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SLI_$384_storage_ptr",
                        "typeString": "struct SLA.SLI"
                      }
                    },
                    "id": 590,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4812:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_SLI_$384_storage_$dyn_storage_ptr",
                      "typeString": "struct SLA.SLI[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4811:14:2"
            },
            "scope": 667,
            "src": "4757:107:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 606,
              "nodeType": "Block",
              "src": "5063:35:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 604,
                    "name": "sliInterval",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 371,
                    "src": "5080:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 603,
                  "id": 605,
                  "nodeType": "Return",
                  "src": "5073:18:2"
                }
              ]
            },
            "documentation": {
              "id": 599,
              "nodeType": "StructuredDocumentation",
              "src": "4870:130:2",
              "text": " @dev external view function that returns the sliInterval value\n· @return uint256 value of the sliInterval"
            },
            "functionSelector": "e7ab816a",
            "id": 607,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSliInterval",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 600,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5028:2:2"
            },
            "returnParameters": {
              "id": 603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 602,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 607,
                  "src": "5054:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 601,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5054:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5053:9:2"
            },
            "scope": 667,
            "src": "5005:93:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 665,
              "nodeType": "Block",
              "src": "5593:258:2",
              "statements": [
                {
                  "assignments": [
                    626
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 626,
                      "mutability": "mutable",
                      "name": "_SLOAddresses",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 665,
                      "src": "5603:26:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_SLO_$2437_$dyn_memory_ptr",
                        "typeString": "contract SLO[]"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 624,
                          "name": "SLO",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 2437,
                          "src": "5603:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$2437",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 625,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "5603:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_SLO_$2437_$dyn_storage_ptr",
                          "typeString": "contract SLO[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 633,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 630,
                          "name": "SLONames",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 399,
                          "src": "5642:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                            "typeString": "bytes32[] storage ref"
                          }
                        },
                        "id": 631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5642:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 629,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "5632:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_SLO_$2437_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (contract SLO[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 627,
                          "name": "SLO",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 2437,
                          "src": "5636:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$2437",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 628,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "5636:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_SLO_$2437_$dyn_storage_ptr",
                          "typeString": "contract SLO[]"
                        }
                      }
                    },
                    "id": 632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5632:26:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_SLO_$2437_$dyn_memory_ptr",
                      "typeString": "contract SLO[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5603:55:2"
                },
                {
                  "body": {
                    "id": 655,
                    "nodeType": "Block",
                    "src": "5715:61:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 645,
                              "name": "_SLOAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 626,
                              "src": "5729:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_SLO_$2437_$dyn_memory_ptr",
                                "typeString": "contract SLO[] memory"
                              }
                            },
                            "id": 647,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 646,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 635,
                              "src": "5743:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5729:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLO_$2437",
                              "typeString": "contract SLO"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 648,
                              "name": "SLOs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 389,
                              "src": "5748:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$2437_$",
                                "typeString": "mapping(bytes32 => contract SLO)"
                              }
                            },
                            "id": 652,
                            "indexExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 649,
                                "name": "SLONames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 399,
                                "src": "5753:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                  "typeString": "bytes32[] storage ref"
                                }
                              },
                              "id": 651,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 650,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 635,
                                "src": "5762:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5753:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5748:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLO_$2437",
                              "typeString": "contract SLO"
                            }
                          },
                          "src": "5729:36:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$2437",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 654,
                        "nodeType": "ExpressionStatement",
                        "src": "5729:36:2"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 638,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 635,
                      "src": "5689:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 639,
                        "name": "SLONames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 399,
                        "src": "5693:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      "id": 640,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5693:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5689:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 656,
                  "initializationExpression": {
                    "assignments": [
                      635
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 635,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 656,
                        "src": "5674:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 634,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5674:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 637,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5686:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5674:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5710:3:2",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 642,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 635,
                        "src": "5710:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 644,
                    "nodeType": "ExpressionStatement",
                    "src": "5710:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "5669:107:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 657,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5498,
                          "src": "5794:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5794:7:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 659,
                        "name": "ipfsHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 374,
                        "src": "5803:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 660,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 368,
                        "src": "5813:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 661,
                        "name": "SLONames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 399,
                        "src": "5820:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 662,
                        "name": "_SLOAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 626,
                        "src": "5830:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_SLO_$2437_$dyn_memory_ptr",
                          "typeString": "contract SLO[] memory"
                        }
                      }
                    ],
                    "id": 663,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5793:51:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_string_storage_$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$_t_array$_t_contract$_SLO_$2437_$dyn_memory_ptr_$",
                      "typeString": "tuple(address,string storage ref,uint256,bytes32[] storage ref,contract SLO[] memory)"
                    }
                  },
                  "functionReturnParameters": 622,
                  "id": 664,
                  "nodeType": "Return",
                  "src": "5786:58:2"
                }
              ]
            },
            "documentation": {
              "id": 608,
              "nodeType": "StructuredDocumentation",
              "src": "5104:275:2",
              "text": " @dev external view function that returns all agreement information\n @return address owner\n @return string ipfsHash\n @return uint256 amount necessary to stake\n @return bytes32[] SLONames array\n @return SLO[] SLO addresses array"
            },
            "functionSelector": "fbbf93a0",
            "id": 666,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDetails",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 609,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5404:2:2"
            },
            "returnParameters": {
              "id": 622,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 611,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 666,
                  "src": "5467:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 610,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5467:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 613,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 666,
                  "src": "5488:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 612,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5488:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 615,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 666,
                  "src": "5515:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 614,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5515:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 618,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 666,
                  "src": "5536:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 616,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "5536:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 617,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5536:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 621,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 666,
                  "src": "5566:12:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_SLO_$2437_$dyn_memory_ptr",
                    "typeString": "contract SLO[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 619,
                      "name": "SLO",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 2437,
                      "src": "5566:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLO_$2437",
                        "typeString": "contract SLO"
                      }
                    },
                    "id": 620,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5566:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_SLO_$2437_$dyn_storage_ptr",
                      "typeString": "contract SLO[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5453:135:2"
            },
            "scope": 667,
            "src": "5385:466:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 668,
        "src": "446:5407:2"
      }
    ],
    "src": "32:5822:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLA/SLA.sol",
    "exportedSymbols": {
      "SLA": [
        667
      ]
    },
    "id": 668,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 350,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:2"
      },
      {
        "id": 351,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 352,
        "nodeType": "ImportDirective",
        "scope": 668,
        "sourceUnit": 5563,
        "src": "91:52:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 353,
        "nodeType": "ImportDirective",
        "scope": 668,
        "sourceUnit": 6573,
        "src": "144:56:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 354,
        "nodeType": "ImportDirective",
        "scope": 668,
        "sourceUnit": 5759,
        "src": "201:51:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLO/SLO.sol",
        "file": "../SLO/SLO.sol",
        "id": 355,
        "nodeType": "ImportDirective",
        "scope": 668,
        "sourceUnit": 2438,
        "src": "253:24:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLARegistry.sol",
        "file": "../SLARegistry.sol",
        "id": 356,
        "nodeType": "ImportDirective",
        "scope": 668,
        "sourceUnit": 2307,
        "src": "278:28:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLA/Staking.sol",
        "file": "./Staking.sol",
        "id": 357,
        "nodeType": "ImportDirective",
        "scope": 668,
        "sourceUnit": 1882,
        "src": "307:23:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 359,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5562,
              "src": "462:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$5562",
                "typeString": "contract Ownable"
              }
            },
            "id": 360,
            "nodeType": "InheritanceSpecifier",
            "src": "462:7:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 361,
              "name": "Staking",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1881,
              "src": "471:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Staking_$1881",
                "typeString": "contract Staking"
              }
            },
            "id": 362,
            "nodeType": "InheritanceSpecifier",
            "src": "471:7:2"
          }
        ],
        "contractDependencies": [
          1881,
          5170,
          5562
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 358,
          "nodeType": "StructuredDocumentation",
          "src": "332:113:2",
          "text": " @title SLA\n @dev SLA is a service level agreement contract used for service downtime\n compensation"
        },
        "fullyImplemented": true,
        "id": 667,
        "linearizedBaseContracts": [
          667,
          1881,
          5562,
          5170
        ],
        "name": "SLA",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 365,
            "libraryName": {
              "contractScope": null,
              "id": 363,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5758,
              "src": "491:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$5758",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "485:27:2",
            "typeName": {
              "id": 364,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "504:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "documentation": {
              "id": 366,
              "nodeType": "StructuredDocumentation",
              "src": "518:71:2",
              "text": "@dev The required amount to stake when subscribing to the agreement"
            },
            "functionSelector": "3a4b66f1",
            "id": 368,
            "mutability": "mutable",
            "name": "stake",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 667,
            "src": "594:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 367,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "594:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 369,
              "nodeType": "StructuredDocumentation",
              "src": "621:42:2",
              "text": "@dev The time between SLI registration"
            },
            "id": 371,
            "mutability": "mutable",
            "name": "sliInterval",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 667,
            "src": "668:27:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 370,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "668:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 372,
              "nodeType": "StructuredDocumentation",
              "src": "702:72:2",
              "text": "@dev The ipfs hash that stores extra information about the agreement"
            },
            "functionSelector": "c623674f",
            "id": 374,
            "mutability": "mutable",
            "name": "ipfsHash",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 667,
            "src": "779:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 373,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "779:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 375,
              "nodeType": "StructuredDocumentation",
              "src": "808:45:2",
              "text": "@dev The address of the registry contract"
            },
            "functionSelector": "7b103999",
            "id": 377,
            "mutability": "mutable",
            "name": "registry",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 667,
            "src": "858:27:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SLARegistry_$2306",
              "typeString": "contract SLARegistry"
            },
            "typeName": {
              "contractScope": null,
              "id": 376,
              "name": "SLARegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2306,
              "src": "858:11:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SLARegistry_$2306",
                "typeString": "contract SLARegistry"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "SLA.SLI",
            "id": 384,
            "members": [
              {
                "constant": false,
                "id": 379,
                "mutability": "mutable",
                "name": "timestamp",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 384,
                "src": "967:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 378,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "967:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 381,
                "mutability": "mutable",
                "name": "value",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 384,
                "src": "994:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 380,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "994:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 383,
                "mutability": "mutable",
                "name": "periodId",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 384,
                "src": "1017:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 382,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1017:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "SLI",
            "nodeType": "StructDefinition",
            "scope": 667,
            "src": "946:94:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 385,
              "nodeType": "StructuredDocumentation",
              "src": "1046:63:2",
              "text": "@dev mapping to get SLO addresses from SLO names in bytes32"
            },
            "functionSelector": "b0227b47",
            "id": 389,
            "mutability": "mutable",
            "name": "SLOs",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 667,
            "src": "1114:35:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$2437_$",
              "typeString": "mapping(bytes32 => contract SLO)"
            },
            "typeName": {
              "id": 388,
              "keyType": {
                "id": 386,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1122:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1114:23:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$2437_$",
                "typeString": "mapping(bytes32 => contract SLO)"
              },
              "valueType": {
                "contractScope": null,
                "id": 387,
                "name": "SLO",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 2437,
                "src": "1133:3:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_SLO_$2437",
                  "typeString": "contract SLO"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 390,
              "nodeType": "StructuredDocumentation",
              "src": "1156:61:2",
              "text": "@dev mapping to get SLI structs from SLO names in bytes32"
            },
            "functionSelector": "94199c61",
            "id": 395,
            "mutability": "mutable",
            "name": "SLIs",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 667,
            "src": "1222:37:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$384_storage_$dyn_storage_$",
              "typeString": "mapping(bytes32 => struct SLA.SLI[])"
            },
            "typeName": {
              "id": 394,
              "keyType": {
                "id": 391,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1230:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1222:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$384_storage_$dyn_storage_$",
                "typeString": "mapping(bytes32 => struct SLA.SLI[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 392,
                  "name": "SLI",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 384,
                  "src": "1241:3:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SLI_$384_storage_ptr",
                    "typeString": "struct SLA.SLI"
                  }
                },
                "id": 393,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "1241:5:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_SLI_$384_storage_$dyn_storage_ptr",
                  "typeString": "struct SLA.SLI[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 396,
              "nodeType": "StructuredDocumentation",
              "src": "1266:63:2",
              "text": "@dev array storing the names of the SLO's of this agreement"
            },
            "functionSelector": "f34ed40d",
            "id": 399,
            "mutability": "mutable",
            "name": "SLONames",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 667,
            "src": "1334:25:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
              "typeString": "bytes32[]"
            },
            "typeName": {
              "baseType": {
                "id": 397,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1334:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "id": 398,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "1334:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                "typeString": "bytes32[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 400,
              "nodeType": "StructuredDocumentation",
              "src": "1366:218:2",
              "text": " @dev event for SLI creation logging\n @param _timestamp 1. the time the SLI has been registered\n @param _value 2. the value of the SLI\n @param _periodId 3. the id of the given period"
            },
            "id": 408,
            "name": "SLICreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 402,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_timestamp",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 408,
                  "src": "1606:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 401,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1606:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 404,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 408,
                  "src": "1626:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 403,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1626:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 406,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_periodId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 408,
                  "src": "1642:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 405,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1642:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1605:55:2"
            },
            "src": "1589:72:2"
          },
          {
            "body": {
              "id": 425,
              "nodeType": "Block",
              "src": "1787:155:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 412,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1818:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1818:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 416,
                                  "name": "registry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 377,
                                  "src": "1840:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SLARegistry_$2306",
                                    "typeString": "contract SLARegistry"
                                  }
                                },
                                "id": 417,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "messenger",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1916,
                                "src": "1840:18:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_Messenger_$291_$",
                                  "typeString": "function () view external returns (contract Messenger)"
                                }
                              },
                              "id": 418,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1840:20:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Messenger_$291",
                                "typeString": "contract Messenger"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Messenger_$291",
                                "typeString": "contract Messenger"
                              }
                            ],
                            "id": 415,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1832:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 414,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1832:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1832:29:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1818:43:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c79204d657373656e6765722063616e2063616c6c20746869732066756e7463696f6e",
                        "id": 421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1875:39:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_467737b4c3c908f2cdc14d03ad6e6083b866bad6901b6ebb82e8ea7edaea96db",
                          "typeString": "literal_string \"Only Messenger can call this funtcion\""
                        },
                        "value": "Only Messenger can call this funtcion"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_467737b4c3c908f2cdc14d03ad6e6083b866bad6901b6ebb82e8ea7edaea96db",
                          "typeString": "literal_string \"Only Messenger can call this funtcion\""
                        }
                      ],
                      "id": 411,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1797:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1797:127:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 423,
                  "nodeType": "ExpressionStatement",
                  "src": "1797:127:2"
                },
                {
                  "id": 424,
                  "nodeType": "PlaceholderStatement",
                  "src": "1934:1:2"
                }
              ]
            },
            "documentation": {
              "id": 409,
              "nodeType": "StructuredDocumentation",
              "src": "1667:90:2",
              "text": " @dev throws if called by any address other than the messenger contract."
            },
            "id": 426,
            "name": "onlyMessenger",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1784:2:2"
            },
            "src": "1762:180:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 525,
              "nodeType": "Block",
              "src": "3311:512:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 459,
                            "name": "_SLOs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 435,
                            "src": "3329:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_SLO_$2437_$dyn_memory_ptr",
                              "typeString": "contract SLO[] memory"
                            }
                          },
                          "id": 460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3329:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "35",
                          "id": 461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3344:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "src": "3329:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6d617820616d6f756e74206f6620534c4f732069732035",
                        "id": 463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3347:25:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be84bcce5cdf21effcf26df15f43c34c7a80dbc4bd54884dca3d795818fbfe95",
                          "typeString": "literal_string \"max amount of SLOs is 5\""
                        },
                        "value": "max amount of SLOs is 5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be84bcce5cdf21effcf26df15f43c34c7a80dbc4bd54884dca3d795818fbfe95",
                          "typeString": "literal_string \"max amount of SLOs is 5\""
                        }
                      ],
                      "id": 458,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3321:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3321:52:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 465,
                  "nodeType": "ExpressionStatement",
                  "src": "3321:52:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 467,
                            "name": "_SLONames",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 432,
                            "src": "3404:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          "id": 468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3404:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 469,
                            "name": "_SLOs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 435,
                            "src": "3424:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_SLO_$2437_$dyn_memory_ptr",
                              "typeString": "contract SLO[] memory"
                            }
                          },
                          "id": 470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3424:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3404:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5f534c4f4e616d657320616e64205f534c4f732073686f756c642068617665207468652073616d65206c656e677468",
                        "id": 472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3450:49:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b3b41b8359a1b0d52aeb9a136881798f1d5820dbfe964604a8e4ebb7ce8ebc0b",
                          "typeString": "literal_string \"_SLONames and _SLOs should have the same length\""
                        },
                        "value": "_SLONames and _SLOs should have the same length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b3b41b8359a1b0d52aeb9a136881798f1d5820dbfe964604a8e4ebb7ce8ebc0b",
                          "typeString": "literal_string \"_SLONames and _SLOs should have the same length\""
                        }
                      ],
                      "id": 466,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3383:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3383:126:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 474,
                  "nodeType": "ExpressionStatement",
                  "src": "3383:126:2"
                },
                {
                  "body": {
                    "id": 496,
                    "nodeType": "Block",
                    "src": "3563:54:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 486,
                              "name": "SLOs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 389,
                              "src": "3577:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$2437_$",
                                "typeString": "mapping(bytes32 => contract SLO)"
                              }
                            },
                            "id": 490,
                            "indexExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 487,
                                "name": "_SLONames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 432,
                                "src": "3582:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                }
                              },
                              "id": 489,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 488,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 476,
                                "src": "3592:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3582:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3577:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLO_$2437",
                              "typeString": "contract SLO"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 491,
                              "name": "_SLOs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 435,
                              "src": "3598:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_SLO_$2437_$dyn_memory_ptr",
                                "typeString": "contract SLO[] memory"
                              }
                            },
                            "id": 493,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 492,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 476,
                              "src": "3604:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3598:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLO_$2437",
                              "typeString": "contract SLO"
                            }
                          },
                          "src": "3577:29:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$2437",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 495,
                        "nodeType": "ExpressionStatement",
                        "src": "3577:29:2"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 479,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 476,
                      "src": "3540:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 480,
                        "name": "_SLOs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 435,
                        "src": "3544:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_SLO_$2437_$dyn_memory_ptr",
                          "typeString": "contract SLO[] memory"
                        }
                      },
                      "id": 481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3544:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3540:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 497,
                  "initializationExpression": {
                    "assignments": [
                      476
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 476,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 497,
                        "src": "3525:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 475,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3525:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 478,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 477,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3537:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3525:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 484,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3558:3:2",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 483,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 476,
                        "src": "3558:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 485,
                    "nodeType": "ExpressionStatement",
                    "src": "3558:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "3520:97:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 499,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 429,
                        "src": "3645:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 498,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5561,
                      "src": "3627:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3627:25:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 501,
                  "nodeType": "ExpressionStatement",
                  "src": "3627:25:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 502,
                      "name": "SLONames",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 399,
                      "src": "3662:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                        "typeString": "bytes32[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 503,
                      "name": "_SLONames",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 432,
                      "src": "3673:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[] memory"
                      }
                    },
                    "src": "3662:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                      "typeString": "bytes32[] storage ref"
                    }
                  },
                  "id": 505,
                  "nodeType": "ExpressionStatement",
                  "src": "3662:20:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 506,
                      "name": "stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 368,
                      "src": "3692:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 507,
                      "name": "_stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 437,
                      "src": "3700:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3692:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 509,
                  "nodeType": "ExpressionStatement",
                  "src": "3692:14:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 510,
                      "name": "ipfsHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 374,
                      "src": "3716:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 511,
                      "name": "_ipfsHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 439,
                      "src": "3727:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3716:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 513,
                  "nodeType": "ExpressionStatement",
                  "src": "3716:20:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 514,
                      "name": "registry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 377,
                      "src": "3746:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLARegistry_$2306",
                        "typeString": "contract SLARegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 516,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3769:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3769:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 515,
                        "name": "SLARegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2306,
                        "src": "3757:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SLARegistry_$2306_$",
                          "typeString": "type(contract SLARegistry)"
                        }
                      },
                      "id": 518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3757:23:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLARegistry_$2306",
                        "typeString": "contract SLARegistry"
                      }
                    },
                    "src": "3746:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SLARegistry_$2306",
                      "typeString": "contract SLARegistry"
                    }
                  },
                  "id": 520,
                  "nodeType": "ExpressionStatement",
                  "src": "3746:34:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 521,
                      "name": "sliInterval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 371,
                      "src": "3790:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 522,
                      "name": "_sliInterval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 441,
                      "src": "3804:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3790:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 524,
                  "nodeType": "ExpressionStatement",
                  "src": "3790:26:2"
                }
              ]
            },
            "documentation": {
              "id": 427,
              "nodeType": "StructuredDocumentation",
              "src": "1948:884:2",
              "text": " @param _owner 1. address of the owner of the service level agreement\n @param _SLONames 2. array of the names of the service level objectives\n in bytes32\n @param _SLOs 3. array of service level objective contract addressess\n service level objective breach\n @param _stake 4. uint of the amount required to stake when signing the\n service level agreement\n @param _ipfsHash 5. string with the ipfs hash that contains extra\n information about the service level agreement\n @param _sliInterval 6. uint the interval in seconds between requesting a new SLI\n @param _baseTokenAddress 7. address of the Base Token to be unlocked for staking\n @param _sla_period_starts 8. array with the values for the \"start\" of every period\n @param _sla_period_ends 9. array with the values for the \"end\" of every period"
            },
            "id": 526,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 452,
                    "name": "_baseTokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 443,
                    "src": "3197:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 453,
                    "name": "_sla_period_starts",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 446,
                    "src": "3228:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 454,
                    "name": "_sla_period_ends",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 449,
                    "src": "3260:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 455,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 429,
                    "src": "3290:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 456,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 451,
                  "name": "Staking",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1881,
                  "src": "3176:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Staking_$1881_$",
                    "typeString": "type(contract Staking)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3176:130:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 429,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 526,
                  "src": "2858:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 428,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2858:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 432,
                  "mutability": "mutable",
                  "name": "_SLONames",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 526,
                  "src": "2882:26:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 430,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2882:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 431,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2882:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 435,
                  "mutability": "mutable",
                  "name": "_SLOs",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 526,
                  "src": "2918:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_SLO_$2437_$dyn_memory_ptr",
                    "typeString": "contract SLO[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 433,
                      "name": "SLO",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 2437,
                      "src": "2918:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLO_$2437",
                        "typeString": "contract SLO"
                      }
                    },
                    "id": 434,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2918:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_SLO_$2437_$dyn_storage_ptr",
                      "typeString": "contract SLO[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 437,
                  "mutability": "mutable",
                  "name": "_stake",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 526,
                  "src": "2946:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 436,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2946:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 439,
                  "mutability": "mutable",
                  "name": "_ipfsHash",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 526,
                  "src": "2970:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 438,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2970:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 441,
                  "mutability": "mutable",
                  "name": "_sliInterval",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 526,
                  "src": "3003:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 440,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3003:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 443,
                  "mutability": "mutable",
                  "name": "_baseTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 526,
                  "src": "3033:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 442,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3033:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 446,
                  "mutability": "mutable",
                  "name": "_sla_period_starts",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 526,
                  "src": "3068:35:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 444,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3068:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 445,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3068:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 449,
                  "mutability": "mutable",
                  "name": "_sla_period_ends",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 526,
                  "src": "3113:33:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 447,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3113:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 448,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3113:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2848:304:2"
            },
            "returnParameters": {
              "id": 457,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3311:0:2"
            },
            "scope": 667,
            "src": "2837:986:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 583,
              "nodeType": "Block",
              "src": "4218:338:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 543,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "4252:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 544,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4252:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 545,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 531,
                            "src": "4269:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 546,
                            "name": "_periodId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 533,
                            "src": "4277:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 542,
                          "name": "SLI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 384,
                          "src": "4248:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_SLI_$384_storage_ptr_$",
                            "typeString": "type(struct SLA.SLI storage pointer)"
                          }
                        },
                        "id": 547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4248:39:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SLI_$384_memory_ptr",
                          "typeString": "struct SLA.SLI memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SLI_$384_memory_ptr",
                          "typeString": "struct SLA.SLI memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 538,
                          "name": "SLIs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 395,
                          "src": "4228:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$384_storage_$dyn_storage_$",
                            "typeString": "mapping(bytes32 => struct SLA.SLI storage ref[] storage ref)"
                          }
                        },
                        "id": 540,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 539,
                          "name": "_SLOName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 529,
                          "src": "4233:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4228:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_SLI_$384_storage_$dyn_storage",
                          "typeString": "struct SLA.SLI storage ref[] storage ref"
                        }
                      },
                      "id": 541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4228:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_SLI_$384_storage_$returns$__$",
                        "typeString": "function (struct SLA.SLI storage ref)"
                      }
                    },
                    "id": 548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4228:60:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 549,
                  "nodeType": "ExpressionStatement",
                  "src": "4228:60:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 551,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "4315:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4315:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 553,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 531,
                        "src": "4332:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 554,
                        "name": "_periodId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 533,
                        "src": "4340:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 550,
                      "name": "SLICreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 408,
                      "src": "4304:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256)"
                      }
                    },
                    "id": 555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4304:46:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 556,
                  "nodeType": "EmitStatement",
                  "src": "4299:51:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4365:36:2",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 561,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 531,
                          "src": "4394:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 557,
                            "name": "SLOs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 389,
                            "src": "4366:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$2437_$",
                              "typeString": "mapping(bytes32 => contract SLO)"
                            }
                          },
                          "id": 559,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 558,
                            "name": "_SLOName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 529,
                            "src": "4371:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4366:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$2437",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isSLOHonored",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2436,
                        "src": "4366:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view external returns (bool)"
                        }
                      },
                      "id": 562,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4366:35:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 581,
                    "nodeType": "Block",
                    "src": "4481:69:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 573,
                                "name": "periods",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 725,
                                "src": "4495:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Period_$702_storage_$dyn_storage",
                                  "typeString": "struct Staking.Period storage ref[] storage ref"
                                }
                              },
                              "id": 575,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 574,
                                "name": "_periodId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 533,
                                "src": "4503:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4495:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Period_$702_storage",
                                "typeString": "struct Staking.Period storage ref"
                              }
                            },
                            "id": 576,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 691,
                            "src": "4495:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$681",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 577,
                              "name": "Status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 681,
                              "src": "4523:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Status_$681_$",
                                "typeString": "type(enum Staking.Status)"
                              }
                            },
                            "id": 578,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Respected",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4523:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$681",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "src": "4495:44:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$681",
                            "typeString": "enum Staking.Status"
                          }
                        },
                        "id": 580,
                        "nodeType": "ExpressionStatement",
                        "src": "4495:44:2"
                      }
                    ]
                  },
                  "id": 582,
                  "nodeType": "IfStatement",
                  "src": "4361:189:2",
                  "trueBody": {
                    "id": 572,
                    "nodeType": "Block",
                    "src": "4403:72:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 564,
                                "name": "periods",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 725,
                                "src": "4417:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Period_$702_storage_$dyn_storage",
                                  "typeString": "struct Staking.Period storage ref[] storage ref"
                                }
                              },
                              "id": 566,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 565,
                                "name": "_periodId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 533,
                                "src": "4425:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4417:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Period_$702_storage",
                                "typeString": "struct Staking.Period storage ref"
                              }
                            },
                            "id": 567,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 691,
                            "src": "4417:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$681",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 568,
                              "name": "Status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 681,
                              "src": "4445:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Status_$681_$",
                                "typeString": "type(enum Staking.Status)"
                              }
                            },
                            "id": 569,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "NotRespected",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4445:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$681",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "src": "4417:47:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$681",
                            "typeString": "enum Staking.Status"
                          }
                        },
                        "id": 571,
                        "nodeType": "ExpressionStatement",
                        "src": "4417:47:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 527,
              "nodeType": "StructuredDocumentation",
              "src": "3829:257:2",
              "text": " @dev external function to register SLI's and check them against the SLO's\n @param _SLOName 1. the name of the SLO in bytes32\n @param _value 2. the value of the SLI to check\n @param _periodId 3. the id of the given period"
            },
            "functionSelector": "869c3925",
            "id": 584,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 536,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 535,
                  "name": "onlyMessenger",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 426,
                  "src": "4204:13:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4204:13:2"
              }
            ],
            "name": "registerSLI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 534,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 529,
                  "mutability": "mutable",
                  "name": "_SLOName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 584,
                  "src": "4121:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 528,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4121:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 531,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 584,
                  "src": "4147:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 530,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4147:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 533,
                  "mutability": "mutable",
                  "name": "_periodId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 584,
                  "src": "4171:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 532,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4171:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4111:83:2"
            },
            "returnParameters": {
              "id": 537,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4218:0:2"
            },
            "scope": 667,
            "src": "4091:465:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 597,
              "nodeType": "Block",
              "src": "4826:38:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 593,
                      "name": "SLIs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 395,
                      "src": "4843:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$384_storage_$dyn_storage_$",
                        "typeString": "mapping(bytes32 => struct SLA.SLI storage ref[] storage ref)"
                      }
                    },
                    "id": 595,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 594,
                      "name": "_SLOName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 587,
                      "src": "4848:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4843:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_SLI_$384_storage_$dyn_storage",
                      "typeString": "struct SLA.SLI storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 592,
                  "id": 596,
                  "nodeType": "Return",
                  "src": "4836:21:2"
                }
              ]
            },
            "documentation": {
              "id": 585,
              "nodeType": "StructuredDocumentation",
              "src": "4562:190:2",
              "text": " @dev external function to get SLIs of certain _SLO\n @param _SLOName 1. the name of the SLO in bytes32\n @return SLI[] array of SLIs associated to the input SLOs"
            },
            "functionSelector": "02e8b893",
            "id": 598,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSLI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 588,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 587,
                  "mutability": "mutable",
                  "name": "_SLOName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 598,
                  "src": "4773:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 586,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4773:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4772:18:2"
            },
            "returnParameters": {
              "id": 592,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 591,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 598,
                  "src": "4812:12:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_SLI_$384_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct SLA.SLI[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 589,
                      "name": "SLI",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 384,
                      "src": "4812:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SLI_$384_storage_ptr",
                        "typeString": "struct SLA.SLI"
                      }
                    },
                    "id": 590,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4812:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_SLI_$384_storage_$dyn_storage_ptr",
                      "typeString": "struct SLA.SLI[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4811:14:2"
            },
            "scope": 667,
            "src": "4757:107:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 606,
              "nodeType": "Block",
              "src": "5063:35:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 604,
                    "name": "sliInterval",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 371,
                    "src": "5080:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 603,
                  "id": 605,
                  "nodeType": "Return",
                  "src": "5073:18:2"
                }
              ]
            },
            "documentation": {
              "id": 599,
              "nodeType": "StructuredDocumentation",
              "src": "4870:130:2",
              "text": " @dev external view function that returns the sliInterval value\n· @return uint256 value of the sliInterval"
            },
            "functionSelector": "e7ab816a",
            "id": 607,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSliInterval",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 600,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5028:2:2"
            },
            "returnParameters": {
              "id": 603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 602,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 607,
                  "src": "5054:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 601,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5054:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5053:9:2"
            },
            "scope": 667,
            "src": "5005:93:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 665,
              "nodeType": "Block",
              "src": "5593:258:2",
              "statements": [
                {
                  "assignments": [
                    626
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 626,
                      "mutability": "mutable",
                      "name": "_SLOAddresses",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 665,
                      "src": "5603:26:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_SLO_$2437_$dyn_memory_ptr",
                        "typeString": "contract SLO[]"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 624,
                          "name": "SLO",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 2437,
                          "src": "5603:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$2437",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 625,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "5603:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_SLO_$2437_$dyn_storage_ptr",
                          "typeString": "contract SLO[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 633,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 630,
                          "name": "SLONames",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 399,
                          "src": "5642:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                            "typeString": "bytes32[] storage ref"
                          }
                        },
                        "id": 631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5642:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 629,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "5632:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_SLO_$2437_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (contract SLO[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 627,
                          "name": "SLO",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 2437,
                          "src": "5636:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$2437",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 628,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "5636:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_SLO_$2437_$dyn_storage_ptr",
                          "typeString": "contract SLO[]"
                        }
                      }
                    },
                    "id": 632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5632:26:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_SLO_$2437_$dyn_memory_ptr",
                      "typeString": "contract SLO[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5603:55:2"
                },
                {
                  "body": {
                    "id": 655,
                    "nodeType": "Block",
                    "src": "5715:61:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 645,
                              "name": "_SLOAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 626,
                              "src": "5729:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_SLO_$2437_$dyn_memory_ptr",
                                "typeString": "contract SLO[] memory"
                              }
                            },
                            "id": 647,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 646,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 635,
                              "src": "5743:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5729:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLO_$2437",
                              "typeString": "contract SLO"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 648,
                              "name": "SLOs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 389,
                              "src": "5748:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$2437_$",
                                "typeString": "mapping(bytes32 => contract SLO)"
                              }
                            },
                            "id": 652,
                            "indexExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 649,
                                "name": "SLONames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 399,
                                "src": "5753:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                  "typeString": "bytes32[] storage ref"
                                }
                              },
                              "id": 651,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 650,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 635,
                                "src": "5762:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5753:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5748:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLO_$2437",
                              "typeString": "contract SLO"
                            }
                          },
                          "src": "5729:36:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$2437",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 654,
                        "nodeType": "ExpressionStatement",
                        "src": "5729:36:2"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 638,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 635,
                      "src": "5689:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 639,
                        "name": "SLONames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 399,
                        "src": "5693:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      "id": 640,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5693:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5689:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 656,
                  "initializationExpression": {
                    "assignments": [
                      635
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 635,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 656,
                        "src": "5674:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 634,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5674:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 637,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5686:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5674:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5710:3:2",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 642,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 635,
                        "src": "5710:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 644,
                    "nodeType": "ExpressionStatement",
                    "src": "5710:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "5669:107:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 657,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5498,
                          "src": "5794:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5794:7:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 659,
                        "name": "ipfsHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 374,
                        "src": "5803:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 660,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 368,
                        "src": "5813:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 661,
                        "name": "SLONames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 399,
                        "src": "5820:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 662,
                        "name": "_SLOAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 626,
                        "src": "5830:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_SLO_$2437_$dyn_memory_ptr",
                          "typeString": "contract SLO[] memory"
                        }
                      }
                    ],
                    "id": 663,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5793:51:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_string_storage_$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$_t_array$_t_contract$_SLO_$2437_$dyn_memory_ptr_$",
                      "typeString": "tuple(address,string storage ref,uint256,bytes32[] storage ref,contract SLO[] memory)"
                    }
                  },
                  "functionReturnParameters": 622,
                  "id": 664,
                  "nodeType": "Return",
                  "src": "5786:58:2"
                }
              ]
            },
            "documentation": {
              "id": 608,
              "nodeType": "StructuredDocumentation",
              "src": "5104:275:2",
              "text": " @dev external view function that returns all agreement information\n @return address owner\n @return string ipfsHash\n @return uint256 amount necessary to stake\n @return bytes32[] SLONames array\n @return SLO[] SLO addresses array"
            },
            "functionSelector": "fbbf93a0",
            "id": 666,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDetails",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 609,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5404:2:2"
            },
            "returnParameters": {
              "id": 622,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 611,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 666,
                  "src": "5467:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 610,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5467:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 613,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 666,
                  "src": "5488:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 612,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5488:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 615,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 666,
                  "src": "5515:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 614,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5515:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 618,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 666,
                  "src": "5536:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 616,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "5536:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 617,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5536:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 621,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 666,
                  "src": "5566:12:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_SLO_$2437_$dyn_memory_ptr",
                    "typeString": "contract SLO[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 619,
                      "name": "SLO",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 2437,
                      "src": "5566:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLO_$2437",
                        "typeString": "contract SLO"
                      }
                    },
                    "id": 620,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5566:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_SLO_$2437_$dyn_storage_ptr",
                      "typeString": "contract SLO[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5453:135:2"
            },
            "scope": 667,
            "src": "5385:466:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 668,
        "src": "446:5407:2"
      }
    ],
    "src": "32:5822:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.5",
  "updatedAt": "2021-01-04T18:43:47.863Z",
  "devdoc": {
    "details": "SLA is a service level agreement contract used for service downtime compensation",
    "events": {
      "SLICreated(uint256,uint256,uint256)": {
        "details": "event for SLI creation logging",
        "params": {
          "_periodId": "3. the id of the given period",
          "_timestamp": "1. the time the SLI has been registered",
          "_value": "2. the value of the SLI"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "addAllowedTokens(address)": {
        "details": "add a token to ve allowed for staking",
        "params": {
          "_token": "1. address of the new allowed token"
        }
      },
      "addNewPeriod(uint256,uint256)": {
        "details": "add a new period to the array",
        "params": {
          "_sla_period_end": "2. uint256 of the end of the period",
          "_sla_period_start": "1. uint256 of the start of the period"
        }
      },
      "claimCompensation(uint256)": {
        "details": "claim from delegators",
        "params": {
          "_period": "1. period id to claim"
        }
      },
      "claimReward(uint256)": {
        "details": "claim from validators",
        "params": {
          "_period": "1. period id to claim"
        }
      },
      "constructor": {
        "params": {
          "_SLONames": "2. array of the names of the service level objectives in bytes32",
          "_SLOs": "3. array of service level objective contract addressess service level objective breach",
          "_baseTokenAddress": "7. address of the Base Token to be unlocked for staking",
          "_ipfsHash": "5. string with the ipfs hash that contains extra information about the service level agreement",
          "_owner": "1. address of the owner of the service level agreement",
          "_sla_period_ends": "9. array with the values for the \"end\" of every period",
          "_sla_period_starts": "8. array with the values for the \"start\" of every period",
          "_sliInterval": "6. uint the interval in seconds between requesting a new SLI",
          "_stake": "4. uint of the amount required to stake when signing the service level agreement"
        }
      },
      "getDetails()": {
        "details": "external view function that returns all agreement information",
        "returns": {
          "_0": "address owner",
          "_1": "string ipfsHash",
          "_2": "uint256 amount necessary to stake",
          "_3": "bytes32[] SLONames array",
          "_4": "SLO[] SLO addresses array"
        }
      },
      "getSLI(bytes32)": {
        "details": "external function to get SLIs of certain _SLO",
        "params": {
          "_SLOName": "1. the name of the SLO in bytes32"
        },
        "returns": {
          "_0": "SLI[] array of SLIs associated to the input SLOs"
        }
      },
      "getSliInterval()": {
        "details": "external view function that returns the sliInterval value",
        "returns": {
          "_0": "uint256 value of the sliInterval"
        }
      },
      "getTokenStake(address,uint256)": {
        "details": "returns the token stake according to index",
        "params": {
          "_index": "2. index of the TokenStake",
          "_owner": "1. owner of the stake"
        }
      },
      "getTokenStakeLength(address)": {
        "details": "returns the length of TokenStakes per user",
        "params": {
          "_owner": "1. owner of the stake"
        }
      },
      "getUserTotalValue(address,uint256)": {
        "details": "get the user total value staked",
        "params": {
          "_period": "2. period id to claim",
          "_user": "1. address of the user"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "registerSLI(bytes32,uint256,uint256)": {
        "details": "external function to register SLI's and check them against the SLO's",
        "params": {
          "_SLOName": "1. the name of the SLO in bytes32",
          "_periodId": "3. the id of the given period",
          "_value": "2. the value of the SLI to check"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "stakeTokens(uint256,address,uint256)": {
        "details": "increase the amount staked per token",
        "params": {
          "_amount": "1. amount to be staked",
          "_period": "3. period id to stake",
          "_token": "2. address of the token"
        }
      },
      "stakersCount()": {
        "details": "public view function that returns the total amount of stakers"
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdraw(address,uint256)": {
        "details": "withdraw staked tokens",
        "params": {
          "_period": "2. period id to withdraw",
          "_token": "1. address of the token"
        }
      },
      "withdrawAndStake(address,uint256,uint256)": {
        "details": "withdraw BaseToken and stake d Tokens",
        "params": {
          "_amount": "2. amount to withdraw",
          "_period": "3. period id to withdraw",
          "_token": "1. address of the token"
        }
      }
    },
    "stateVariables": {
      "SLIs": {
        "details": "mapping to get SLI structs from SLO names in bytes32"
      },
      "SLONames": {
        "details": "array storing the names of the SLO's of this agreement"
      },
      "SLOs": {
        "details": "mapping to get SLO addresses from SLO names in bytes32"
      },
      "ipfsHash": {
        "details": "The ipfs hash that stores extra information about the agreement"
      },
      "registry": {
        "details": "The address of the registry contract"
      },
      "sliInterval": {
        "details": "The time between SLI registration"
      },
      "stake": {
        "details": "The required amount to stake when subscribing to the agreement"
      }
    },
    "title": "SLA",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}