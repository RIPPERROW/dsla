{
  "contractName": "SLA",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "bytes32[]",
          "name": "_SLONames",
          "type": "bytes32[]"
        },
        {
          "internalType": "contract SLO[]",
          "name": "_SLOs",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "_stake",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_ipfsHash",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_sliInterval",
          "type": "uint256"
        },
        {
          "internalType": "contract bDSLAToken",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_hash",
          "type": "string"
        }
      ],
      "name": "SLICreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "SLIs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "ipfsHash",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "SLOs",
      "outputs": [
        {
          "internalType": "contract SLO",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "addAllowedTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bDSLA",
      "outputs": [
        {
          "internalType": "contract bDSLAToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_period",
          "type": "uint256"
        }
      ],
      "name": "claimCompensation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_period",
          "type": "uint256"
        }
      ],
      "name": "claimReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_period",
          "type": "uint256"
        }
      ],
      "name": "getUserTotalValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ipfsHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "periods",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "sla_period_start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sla_period_end",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "claimed_reward",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "claimed",
          "type": "bool"
        },
        {
          "internalType": "enum Staking.Status",
          "name": "status",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "internalType": "contract SLARegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_period",
          "type": "uint256"
        }
      ],
      "name": "stakeTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "uniqueTokensStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "validator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_period",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_period",
          "type": "uint256"
        }
      ],
      "name": "withdrawAndStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_SLOName",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_hash",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_period",
          "type": "uint256"
        }
      ],
      "name": "registerSLI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_SLOName",
          "type": "bytes32"
        }
      ],
      "name": "getSLI",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "ipfsHash",
              "type": "string"
            }
          ],
          "internalType": "struct SLA.SLI[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSliInterval",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"_SLONames\",\"type\":\"bytes32[]\"},{\"internalType\":\"contract SLO[]\",\"name\":\"_SLOs\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_stake\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_ipfsHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_sliInterval\",\"type\":\"uint256\"},{\"internalType\":\"contract bDSLAToken\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"SLICreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"SLIs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"SLOs\",\"outputs\":[{\"internalType\":\"contract SLO\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"addAllowedTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bDSLA\",\"outputs\":[{\"internalType\":\"contract bDSLAToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"claimCompensation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_SLOName\",\"type\":\"bytes32\"}],\"name\":\"getSLI\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"}],\"internalType\":\"struct SLA.SLI[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSliInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"getUserTotalValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ipfsHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"periods\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sla_period_start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sla_period_end\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimed_reward\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"claimed\",\"type\":\"bool\"},{\"internalType\":\"enum Staking.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_SLOName\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"registerSLI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract SLARegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"stakeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"uniqueTokensStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"validator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"withdrawAndStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"SLA is a service level agreement contract used for service downtime compensation\",\"events\":{\"SLICreated(uint256,uint256,string)\":{\"details\":\"event for SLI creation logging\",\"params\":{\"_hash\":\"the ipfs hash that stores additional info\",\"_timestamp\":\"the time the SLI has been registered\",\"_value\":\"the value of the SLI\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"constructor\",\"params\":{\"_SLONames\":\"the names of the service level objectives in a bytes32 array\",\"_SLOs\":\"an array with the service level objective addresses\",\"_ipfsHash\":\"the ipfs hash that stores extra information about the agreement\",\"_owner\":\"the owner of the service level agreement\",\"_stake\":\"the amount required to stake when subscribing to the agreement\"}},\"getSLI(bytes32)\":{\"details\":\"external function to get SLI\",\"params\":{\"_SLOName\":\"the name of the SLO in bytes32\"}},\"getSliInterval()\":{\"details\":\"external view function that returns the sliInterval value\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"registerSLI(bytes32,uint256,string,uint256)\":{\"details\":\"external function to register SLI's and check them against the SLO's\",\"params\":{\"_SLOName\":\"the name of the SLO in bytes32\",\"_hash\":\"the ipfs hash with additional information\",\"_value\":\"the value of the SLI to check\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"SLA\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/wilhempujar/Development/stacktical-dsla-contracts/contracts/SLA/SLA.sol\":\"SLA\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/wilhempujar/Development/stacktical-dsla-contracts/contracts/SLA/SLA.sol\":{\"keccak256\":\"0x30d8fa4b205ae158fcdae5675b717ac3b3857f724afe7c2984cf1373e688a489\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92491450b4802025809a2a1aebcd5557f596fad02129503181a24245e578de91\",\"dweb:/ipfs/QmbhL2VYVQreZJf1VNWwkcxXsY7hyWKipSA1PM8neuyh1Q\"]},\"/Users/wilhempujar/Development/stacktical-dsla-contracts/contracts/SLA/Staking.sol\":{\"keccak256\":\"0xd607dc8ce8ba75d13a6289fbaf8a101affa2b94ece5c93d97345eb7a8473ab24\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c40448595aa04de83330a9a44a9c3dde895fd29917d4065080753d3c02d0df7a\",\"dweb:/ipfs/QmQbfRoKLWQymjGzwamBzWD2mdWPkS4KQqjCGZVkMjEZmB\"]},\"/Users/wilhempujar/Development/stacktical-dsla-contracts/contracts/SLARegistry.sol\":{\"keccak256\":\"0x4c4093d1300c8e29a5a3ed59ed6fe55b031d278975c9c7e6fbfc20ed227c8d2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff9707d0395025790a0e190aa120e41257c3d3cb79b0ad790a5d45029c2960bd\",\"dweb:/ipfs/QmZpUnKsZ3QSpgrtstoNNveapLzbRqTayge6XasvrZCEW8\"]},\"/Users/wilhempujar/Development/stacktical-dsla-contracts/contracts/SLO/SLO.sol\":{\"keccak256\":\"0x774c489bdeabb39817df2bfa7ee80f26e45960373daa50ee5e9308453c6b3144\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88e8337296f4cc676ed4699ac02c8ef2ec8fc91d1a613197ee582ea338cb700c\",\"dweb:/ipfs/QmeoeyH6349GTGrZm9repEEEvZVR34cTdWQvbTYHTHCxaE\"]},\"/Users/wilhempujar/Development/stacktical-dsla-contracts/contracts/Whitelist/Whitelist.sol\":{\"keccak256\":\"0xe6b2aa77e4c9f0338aefaa0ab4577c75a2fb7f4f51e1da64201b8205fde14838\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67c90b78ba61519b617f18ef468662b18aa676b00f4285d118bc2dca9f521368\",\"dweb:/ipfs/QmUpEvf1SPo65YEDAoJMFTY9jbWfB4XhSvVixa5LservPj\"]},\"/Users/wilhempujar/Development/stacktical-dsla-contracts/contracts/bDSLA/bDSLAToken.sol\":{\"keccak256\":\"0xfde7f4cc126dda54526b5de0f3731b106d624028c892dbd9a4695ec186112aa6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a55d2581456dc3989e930fa26d5d41dd62932c7c8cbe1064da98efc8c0befc6\",\"dweb:/ipfs/QmQxZH3kT73aiozHvw72ZNtCA1x75NPKdpGZbx42HbCKH6\"]},\"/Users/wilhempujar/Development/stacktical-dsla-contracts/contracts/interfaces/IMessenger.sol\":{\"keccak256\":\"0xfe84b204631e594ff96ce6987dbf90008743c7355ba3a59253490a536ab5d8e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9937eb9d0838fd969c8cf08ef0518668e6677939b0478fb34f7dc70eea2d5eb\",\"dweb:/ipfs/QmTXx99J6ncek5jkNzDtd9YkrDKZnFhA5GKeQqg7DgyojV\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x92f7900d382761c7faefeaced81c6b4f1aae909ed0551803bfe8f27101956360\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://407c0864143968542e5cf5aa7556916d2cf292b201e3dadb65662e9a3aa24187\",\"dweb:/ipfs/QmSnXzYAUaGLGr7uofRbgQraTJvatbjQLBPhyYiMd18oUJ\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3\",\"dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"@openzeppelin/contracts/presets/ERC20PresetMinterPauser.sol\":{\"keccak256\":\"0xe30213b0851987b0455057cdfb65660c05805cbb05b12c0d61b0ff7a99cc36cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c61711ecc3ad53890dded63c27909a315ba3053c553be29acaa239bc6a7a0cf\",\"dweb:/ipfs/QmQjriBzSyAYQTm4NfWpnnoH8RhZrayyXm2zvpeHkxQnAk\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x91e0bd6a6762d2a1700dab0849de8422611355100576c4beef1e80d82a4104a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73bbd77af0a8b07255d2ffa20728bcf13b116007c9ddac5d37046cfabb0e1e02\",\"dweb:/ipfs/QmRgZgWCWCSMTTaok6o4QvWA6MgB4goS8qpb3sN7bAvaZ9\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0x657b0d90be17331364211d74359df2a734fac864f6e88c80de7626fa33090ffb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09cca25fefa2354a424d55a97930c76b11dc50697ba62c85d7affc27a37e830c\",\"dweb:/ipfs/QmPTQBYXxQDSNmMKqwe4WnM8E7NwnpLnkFLSRH8hZRvrVK\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol\":{\"keccak256\":\"0xbab4a97af2a6810a8ffc187205dfb331284949ea5b30caa5b9052828853bb149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f53c98e31ed415c2a6f03d99809cd4f2f5fff92a13ee85022922a09df82ee459\",\"dweb:/ipfs/QmXiv4ysuQSRfoXqPpwA1QCreEnqfkrHDGyJTmifoni7dK\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017\",\"dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://774e78a9ff32792cc95db4d2ceaf3a7965bb7f0bea5e6cb7cff182b450d44b37\",\"dweb:/ipfs/QmRRMC4uj7eAcLW7chynA3sNEYULMFazdLwQHKHQPyzAbA\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xb2a11b236f073662f5a196995863f51c11d006bf7c3de158b316dfa1506c4b79\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8651649cf0b9efa18c3b01c030276fa320d41adbdc286833417e7f36e357b2f3\",\"dweb:/ipfs/QmafhM2Nd1aP43QVB1eRRZaqRXQKswNfQcWi8U8xjrxCfN\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0x5d1b1dcbc0396f44c1c8d554857f71e3187503bf1e54062bf9ec6782e21f3a08\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9aa7fa580393aab7ca3d9f606f5ab7434d51e1c0f3632a593fca82c80ef8cc4c\",\"dweb:/ipfs/QmRy84N7QfkwBM2AeR7UB5G1PPHdRLi6s1iyzAwCzevcHe\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101585760003560e01c8063ae169a50116100c3578063e7ab816a1161007c578063e7ab816a146103a3578063ea4a1104146103c1578063f10bd772146103f5578063f2fde38b14610425578063f3fef3a314610441578063fd5e6dd11461045d57610158565b8063ae169a50146102d1578063b0227b47146102ed578063b83e02341461031d578063c623674f1461034d578063cec534d61461036b578063e23ef92c1461038757610158565b8063715018a611610115578063715018a61461021f57806375fdf2a9146102295780637b10399914610245578063817b1cd2146102635780638da5cb5b1461028157806394199c611461029f57610158565b806302e8b8931461015d578063171e44ea1461018d5780633a4b66f1146101a95780633a5381b5146101c757806353e85fd5146101e55780635f4efaba14610201575b600080fd5b61017760048036038101906101729190612f82565b61048d565b60405161018491906137a9565b60405180910390f35b6101a760048036038101906101a29190612ea5565b6105b5565b005b6101b16106b0565b6040516101be91906139de565b60405180910390f35b6101cf6106b6565b6040516101dc9190613705565b60405180910390f35b6101ff60048036038101906101fa9190613090565b6106dc565b005b610209610adb565b6040516102169190613801565b60405180910390f35b610227610b01565b005b610243600480360381019061023e9190612f0a565b610c54565b005b61024d6112e1565b60405161025a91906137cb565b60405180910390f35b61026b611307565b60405161027891906139de565b60405180910390f35b61028961130d565b6040516102969190613705565b60405180910390f35b6102b960048036038101906102b49190612fab565b611336565b6040516102c893929190613a39565b60405180910390f35b6102eb60048036038101906102e69190613090565b611412565b005b61030760048036038101906103029190612f82565b6117e9565b60405161031491906137e6565b60405180910390f35b61033760048036038101906103329190612ea5565b61181c565b60405161034491906139de565b60405180910390f35b610355611834565b604051610362919061381c565b60405180910390f35b610385600480360381019061038091906130b9565b6118d2565b005b6103a1600480360381019061039c9190612fe7565b611c99565b005b6103ab611fc8565b6040516103b891906139de565b60405180910390f35b6103db60048036038101906103d69190613090565b611fd2565b6040516103ec959493929190613a77565b60405180910390f35b61040f600480360381019061040a9190612ece565b61202f565b60405161041c91906139de565b60405180910390f35b61043f600480360381019061043a9190612ea5565b61218b565b005b61045b60048036038101906104569190612ece565b61234d565b005b61047760048036038101906104729190613090565b61285e565b6040516104849190613705565b60405180910390f35b6060600d6000838152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156105aa57838290600052602060002090600302016040518060600160405290816000820154815260200160018201548152602001600282018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105925780601f1061056757610100808354040283529160200191610592565b820191906000526020600020905b81548152906001019060200180831161057557829003601f168201915b505050505081525050815260200190600101906104c2565b505050509050919050565b6105bd61289a565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461064a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106419061393e565b60405180910390fd5b6004819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60085481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80600581815481106106ea57fe5b906000526020600020906006020160000154421015801561072957506005818154811061071357fe5b9060005260206000209060060201600101544211155b61073257600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156107c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ba906138be565b60405180910390fd5b6002808111156107cf57fe5b600583815481106107dc57fe5b906000526020600020906006020160030160019054906101000a900460ff16600281111561080657fe5b14610846576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083d9061385e565b60405180910390fd5b60006005838154811061085557fe5b906000526020600020906006020160050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146108e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108db906139be565b60405180910390fd5b60006108f0338461202f565b9050600061091b600a61090d6003856128a290919063ffffffff16565b61291290919063ffffffff16565b90506109328260075461295c90919063ffffffff16565b600781905550816005858154811061094657fe5b906000526020600020906006020160050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016109f5929190613757565b602060405180830381600087803b158015610a0f57600080fd5b505af1158015610a23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a479190612f59565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342966c68826040518263ffffffff1660e01b8152600401610aa391906139de565b600060405180830381600087803b158015610abd57600080fd5b505af1158015610ad1573d6000803e3d6000fd5b5050505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610b0961289a565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b96576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8d9061393e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610ce5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cdc906138be565b60405180910390fd5b600060058281548110610cf457fe5b906000526020600020906006020160040160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610dc0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db7906138de565b60405180910390fd5b610dc9836129a6565b610e08576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dff9061397e565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663095ea7b330846040518363ffffffff1660e01b8152600401610e43929190613780565b602060405180830381600087803b158015610e5d57600080fd5b505af1158015610e71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e959190612f59565b508273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610ed393929190613720565b602060405180830381600087803b158015610eed57600080fd5b505af1158015610f01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f259190612f59565b50610fd18260058381548110610f3757fe5b906000526020600020906006020160040160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612a4890919063ffffffff16565b60058281548110610fde57fe5b906000526020600020906006020160040160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061108282600754612a4890919063ffffffff16565b60078190555060006005828154811061109757fe5b906000526020600020906006020160040160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600061115d6003805490506005858154811061113d57fe5b90600052602060002090600602016002015461291290919063ffffffff16565b905060006005848154811061116e57fe5b906000526020600020906006020160040160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506112128260075461295c90919063ffffffff16565b600781905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb3361126a848661295c90919063ffffffff16565b6040518363ffffffff1660e01b8152600401611287929190613757565b602060405180830381600087803b1580156112a157600080fd5b505af11580156112b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d99190612f59565b505050505050565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60075481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600d602052816000526040600020818154811061134f57fe5b906000526020600020906003020160009150915050806000015490806001015490806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114085780601f106113dd57610100808354040283529160200191611408565b820191906000526020600020905b8154815290600101906020018083116113eb57829003601f168201915b5050505050905083565b806005818154811061142057fe5b906000526020600020906006020160000154421015801561145f57506005818154811061144957fe5b9060005260206000209060060201600101544211155b61146857600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146114f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114ef9061399e565b60405180910390fd5b6001600281111561150557fe5b6005838154811061151257fe5b906000526020600020906006020160030160019054906101000a900460ff16600281111561153c57fe5b1461157c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115739061383e565b60405180910390fd5b6005828154811061158957fe5b906000526020600020906006020160030160009054906101000a900460ff16156115e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115df906138fe565b60405180910390fd5b600061160460058054905060075461291290919063ffffffff16565b9050600061162f600a6116216003856128a290919063ffffffff16565b61291290919063ffffffff16565b90506116468260075461295c90919063ffffffff16565b600781905550816005858154811061165a57fe5b90600052602060002090600602016002018190555060016005858154811061167e57fe5b906000526020600020906006020160030160006101000a81548160ff021916908315150217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401611703929190613757565b602060405180830381600087803b15801561171d57600080fd5b505af1158015611731573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117559190612f59565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342966c68826040518263ffffffff1660e01b81526004016117b191906139de565b600060405180830381600087803b1580156117cb57600080fd5b505af11580156117df573d6000803e3d6000fd5b5050505050505050565b600c6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60066020528060005260406000206000915090505481565b600a8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118ca5780601f1061189f576101008083540402835291602001916118ca565b820191906000526020600020905b8154815290600101906020018083116118ad57829003601f168201915b505050505081565b60008311611915576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161190c9061395e565b60405180910390fd5b61191e826129a6565b61195d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119549061397e565b60405180910390fd5b611968338383612a9d565b8173ffffffffffffffffffffffffffffffffffffffff1663095ea7b330856040518363ffffffff1660e01b81526004016119a3929190613780565b602060405180830381600087803b1580156119bd57600080fd5b505af11580156119d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119f59190612f59565b508173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401611a3393929190613720565b602060405180830381600087803b158015611a4d57600080fd5b505af1158015611a61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a859190612f59565b50611b318360058381548110611a9757fe5b906000526020600020906006020160040160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612a4890919063ffffffff16565b60058281548110611b3e57fe5b906000526020600020906006020160040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611be283600754612a4890919063ffffffff16565b6007819055506001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415611c94576003339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b505050565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633cb747bf6040518163ffffffff1660e01b815260040160206040518083038186803b158015611d0157600080fd5b505afa158015611d15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d399190613067565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611d7057600080fd5b600d6000868152602001908152602001600020604051806060016040528042815260200186815260200185858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815250908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000155602082015181600101556040820151816002019080519060200190611e3b929190612d55565b5050507f048094af00d5b1e004ae2a3f03c2bd4897a83b5672ed2b02b7b3416b9709805c42858585604051611e7394939291906139f9565b60405180910390a1600c600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663868d08f7856040518263ffffffff1660e01b8152600401611ee791906139de565b60206040518083038186803b158015611eff57600080fd5b505afa158015611f13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f379190612f59565b611f8057600260058281548110611f4a57fe5b906000526020600020906006020160030160016101000a81548160ff02191690836002811115611f7657fe5b0217905550611fc1565b600160058281548110611f8f57fe5b906000526020600020906006020160030160016101000a81548160ff02191690836002811115611fbb57fe5b02179055505b5050505050565b6000600954905090565b60058181548110611fdf57fe5b90600052602060002090600602016000915090508060000154908060010154908060020154908060030160009054906101000a900460ff16908060030160019054906101000a900460ff16905085565b600080600090506000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411156121815760005b60048054905081101561217f576121706005858154811061209e57fe5b90600052602060002090600602016004016000600484815481106120be57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483612a4890919063ffffffff16565b91508080600101915050612081565b505b8091505092915050565b61219361289a565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612220576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122179061393e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612290576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122879061387e565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156123de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123d5906138be565b60405180910390fd5b6000600582815481106123ed57fe5b906000526020600020906006020160040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116124b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124b0906138de565b60405180910390fd5b6124c2826129a6565b612501576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124f89061397e565b60405180910390fd5b60006005828154811061251057fe5b906000526020600020906006020160040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060006125d6600380549050600585815481106125b657fe5b90600052602060002090600602016002015461291290919063ffffffff16565b90506000600584815481106125e757fe5b906000526020600020906006020160040160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061268b8260075461295c90919063ffffffff16565b6007819055508373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb336126c1848661295c90919063ffffffff16565b6040518363ffffffff1660e01b81526004016126de929190613757565b602060405180830381600087803b1580156126f857600080fd5b505af115801561270c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127309190612f59565b506127846001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461295c90919063ffffffff16565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141561285857600061281a33612bd9565b90506003818154811061282957fe5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055505b50505050565b6003818154811061286b57fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b6000808314156128b5576000905061290c565b60008284029050828482816128c657fe5b0414612907576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128fe9061391e565b60405180910390fd5b809150505b92915050565b600061295483836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612c99565b905092915050565b600061299e83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612cfa565b905092915050565b600080600090505b600480549050811015612a3d578273ffffffffffffffffffffffffffffffffffffffff16600482815481106129df57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612a30576001915050612a43565b80806001019150506129ae565b50600090505b919050565b600080828401905083811015612a93576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a8a9061389e565b60405180910390fd5b8091505092915050565b600060058281548110612aac57fe5b906000526020600020906006020160040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411612bd457612b906001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612a4890919063ffffffff16565b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b505050565b600080600090505b600380549050811015612c6f578273ffffffffffffffffffffffffffffffffffffffff1660038281548110612c1257fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612c625780915050612c94565b8080600101915050612be1565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90505b919050565b60008083118290612ce0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612cd7919061381c565b60405180910390fd5b506000838581612cec57fe5b049050809150509392505050565b6000838311158290612d42576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d39919061381c565b60405180910390fd5b5060008385039050809150509392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612d9657805160ff1916838001178555612dc4565b82800160010185558215612dc4579182015b82811115612dc3578251825591602001919060010190612da8565b5b509050612dd19190612dd5565b5090565b5b80821115612dee576000816000905550600101612dd6565b5090565b600081359050612e0181613cbb565b92915050565b600081519050612e1681613cd2565b92915050565b600081359050612e2b81613ce9565b92915050565b600081519050612e4081613d00565b92915050565b60008083601f840112612e5857600080fd5b8235905067ffffffffffffffff811115612e7157600080fd5b602083019150836001820283011115612e8957600080fd5b9250929050565b600081359050612e9f81613d17565b92915050565b600060208284031215612eb757600080fd5b6000612ec584828501612df2565b91505092915050565b60008060408385031215612ee157600080fd5b6000612eef85828601612df2565b9250506020612f0085828601612e90565b9150509250929050565b600080600060608486031215612f1f57600080fd5b6000612f2d86828701612df2565b9350506020612f3e86828701612e90565b9250506040612f4f86828701612e90565b9150509250925092565b600060208284031215612f6b57600080fd5b6000612f7984828501612e07565b91505092915050565b600060208284031215612f9457600080fd5b6000612fa284828501612e1c565b91505092915050565b60008060408385031215612fbe57600080fd5b6000612fcc85828601612e1c565b9250506020612fdd85828601612e90565b9150509250929050565b600080600080600060808688031215612fff57600080fd5b600061300d88828901612e1c565b955050602061301e88828901612e90565b945050604086013567ffffffffffffffff81111561303b57600080fd5b61304788828901612e46565b9350935050606061305a88828901612e90565b9150509295509295909350565b60006020828403121561307957600080fd5b600061308784828501612e31565b91505092915050565b6000602082840312156130a257600080fd5b60006130b084828501612e90565b91505092915050565b6000806000606084860312156130ce57600080fd5b60006130dc86828701612e90565b93505060206130ed86828701612df2565b92505060406130fe86828701612e90565b9150509250925092565b60006131148383613697565b905092915050565b61312581613ba7565b82525050565b61313481613b30565b82525050565b600061314582613ada565b61314f8185613afd565b93508360208202850161316185613aca565b8060005b8581101561319d578484038952815161317e8582613108565b945061318983613af0565b925060208a01995050600181019050613165565b50829750879550505050505092915050565b6131b881613b42565b82525050565b6131c781613bb9565b82525050565b6131d681613bdd565b82525050565b6131e581613c01565b82525050565b6131f481613c25565b82525050565b60006132068385613b1f565b9350613213838584613c5b565b61321c83613c9d565b840190509392505050565b600061323282613ae5565b61323c8185613b0e565b935061324c818560208601613c6a565b61325581613c9d565b840191505092915050565b600061326b82613ae5565b6132758185613b1f565b9350613285818560208601613c6a565b61328e81613c9d565b840191505092915050565b60006132a6601383613b1f565b91507f534c41206e6f74207265737065637465642021000000000000000000000000006000830152602082019050919050565b60006132e6600f83613b1f565b91507f534c4120726573706563746564202100000000000000000000000000000000006000830152602082019050919050565b6000613326602683613b1f565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061338c601b83613b1f565b91507f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006000830152602082019050919050565b60006133cc601583613b1f565b91507f596f752061726520612076616c696461746f72202100000000000000000000006000830152602082019050919050565b600061340c601b83613b1f565b91507f7374616b696e672062616c616e63652063616e6e6f74206265203000000000006000830152602082019050919050565b600061344c603683613b1f565b91507f596f75206861766520616c726561647920636c61696d656420796f757220726560008301527f7761726420666f72207468697320706572696f642021000000000000000000006020830152604082019050919050565b60006134b2602183613b1f565b91507f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60008301527f77000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613518602083613b1f565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6000613558601283613b1f565b91507f616d6f756e742063616e6e6f74206265203000000000000000000000000000006000830152602082019050919050565b6000613598602683613b1f565b91507f746f6b656e2073686f756c64206265206175746f726973656420746f2062652060008301527f7374616b656400000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006135fe601983613b1f565b91507f596f7520617265206e6f7420612076616c696461746f722021000000000000006000830152602082019050919050565b600061363e603c83613b1f565b91507f596f75206861766520616c726561647920636c61696d656420796f757220636f60008301527f6d70656e736174696f6e20666f72207468697320706572696f642021000000006020830152604082019050919050565b60006060830160008301516136af60008601826136e7565b5060208301516136c260208601826136e7565b50604083015184820360408601526136da8282613227565b9150508091505092915050565b6136f081613b9d565b82525050565b6136ff81613b9d565b82525050565b600060208201905061371a600083018461312b565b92915050565b6000606082019050613735600083018661311c565b613742602083018561312b565b61374f60408301846136f6565b949350505050565b600060408201905061376c600083018561311c565b61377960208301846136f6565b9392505050565b6000604082019050613795600083018561312b565b6137a260208301846136f6565b9392505050565b600060208201905081810360008301526137c3818461313a565b905092915050565b60006020820190506137e060008301846131be565b92915050565b60006020820190506137fb60008301846131cd565b92915050565b600060208201905061381660008301846131dc565b92915050565b600060208201905081810360008301526138368184613260565b905092915050565b6000602082019050818103600083015261385781613299565b9050919050565b60006020820190508181036000830152613877816132d9565b9050919050565b6000602082019050818103600083015261389781613319565b9050919050565b600060208201905081810360008301526138b78161337f565b9050919050565b600060208201905081810360008301526138d7816133bf565b9050919050565b600060208201905081810360008301526138f7816133ff565b9050919050565b600060208201905081810360008301526139178161343f565b9050919050565b60006020820190508181036000830152613937816134a5565b9050919050565b600060208201905081810360008301526139578161350b565b9050919050565b600060208201905081810360008301526139778161354b565b9050919050565b600060208201905081810360008301526139978161358b565b9050919050565b600060208201905081810360008301526139b7816135f1565b9050919050565b600060208201905081810360008301526139d781613631565b9050919050565b60006020820190506139f360008301846136f6565b92915050565b6000606082019050613a0e60008301876136f6565b613a1b60208301866136f6565b8181036040830152613a2e8184866131fa565b905095945050505050565b6000606082019050613a4e60008301866136f6565b613a5b60208301856136f6565b8181036040830152613a6d8184613260565b9050949350505050565b600060a082019050613a8c60008301886136f6565b613a9960208301876136f6565b613aa660408301866136f6565b613ab360608301856131af565b613ac060808301846131eb565b9695505050505050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000613b3b82613b7d565b9050919050565b60008115159050919050565b6000819050919050565b6000613b6382613b30565b9050919050565b6000819050613b7882613cae565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000613bb282613c37565b9050919050565b6000613bc482613bcb565b9050919050565b6000613bd682613b7d565b9050919050565b6000613be882613bef565b9050919050565b6000613bfa82613b7d565b9050919050565b6000613c0c82613c13565b9050919050565b6000613c1e82613b7d565b9050919050565b6000613c3082613b6a565b9050919050565b6000613c4282613c49565b9050919050565b6000613c5482613b7d565b9050919050565b82818337600083830152505050565b60005b83811015613c88578082015181840152602081019050613c6d565b83811115613c97576000848401525b50505050565b6000601f19601f8301169050919050565b60038110613cb857fe5b50565b613cc481613b30565b8114613ccf57600080fd5b50565b613cdb81613b42565b8114613ce657600080fd5b50565b613cf281613b4e565b8114613cfd57600080fd5b50565b613d0981613b58565b8114613d1457600080fd5b50565b613d2081613b9d565b8114613d2b57600080fd5b5056fea2646970667358221220bfd393efa8fa3c8b30654d5f457884b815c614dce83d70ba8a167088b6f9a08664736f6c634300060c0033",
  "immutableReferences": {},
  "sourceMap": "522:3594:1:-:0;;;2349:650;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2589:13;865:17:12;885:12;:10;;;:12;;:::i;:::-;865:32;;916:9;907:6;;:18;;;;;;;;;;;;;;;;;;973:9;940:43;;969:1;940:43;;;;;;;;;;;;831:159;1677:13:2;1658:5;;:33;;;;;;;;;;;;;;;;;;1701:13;1728:5;;;;;;;;;;;1701:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1757:10;1745:9;;:22;;;;;;;;;;;;;;;;;;1603:171;2636:1:1::1;2621:5;:12;:16;2613:25;;;::::0;::::1;;2676:5;:12;2656:9;:16;:32;2648:41;;;::::0;::::1;;2704:6;2700:93;2720:5;:12;2716:1;:16;2700:93;;;2774:5;2780:1;2774:8;;;;;;;;;;;;;;2753:4;:18;2758:9;2768:1;2758:12;;;;;;;;;;;;;;2753:18;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;2734:3;;;;;;;2700:93;;;;2803:25;2821:6;2803:17;;;:25;;:::i;:::-;2849:9;2838:8;:20;;;;;;;;;;;;:::i;:::-;;2876:6;2868:5;:14;;;;2903:9;2892:8;:20;;;;;;;;;;;;:::i;:::-;;2945:10;2922:8;;:34;;;;;;;;;;;;;;;;;;2980:12;2966:11;:26;;;;2349:650:::0;;;;;;;522:3594;;590:104:10;643:15;677:10;670:17;;590:104;:::o;1983:240:12:-;1280:12;:10;;;:12;;:::i;:::-;1270:22;;:6;;;;;;;;;;:22;;;1262:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;2091:1:::1;2071:22;;:8;:22;;;;2063:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2180:8;2151:38;;2172:6;::::0;::::1;;;;;;;;2151:38;;;;;;;;;;;;2208:8;2199:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;1983:240:::0;:::o;522:3594:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;5:134:-1:-;;89:6;83:13;74:22;;101:33;128:5;101:33;:::i;:::-;68:71;;;;:::o;164:722::-;;292:3;285:4;277:6;273:17;269:27;259:2;;310:1;307;300:12;259:2;340:6;334:13;362:80;377:64;434:6;377:64;:::i;:::-;362:80;:::i;:::-;353:89;;459:5;484:6;477:5;470:21;514:4;506:6;502:17;492:27;;536:4;531:3;527:14;520:21;;589:6;636:3;628:4;620:6;616:17;611:3;607:27;604:36;601:2;;;653:1;650;643:12;601:2;678:1;663:217;688:6;685:1;682:13;663:217;;;746:3;768:48;812:3;800:10;768:48;:::i;:::-;763:3;756:61;840:4;835:3;831:14;824:21;;868:4;863:3;859:14;852:21;;720:160;710:1;707;703:9;698:14;;663:217;;;667:14;252:634;;;;;;;:::o;917:758::-;;1057:3;1050:4;1042:6;1038:17;1034:27;1024:2;;1075:1;1072;1065:12;1024:2;1105:6;1099:13;1127:92;1142:76;1211:6;1142:76;:::i;:::-;1127:92;:::i;:::-;1118:101;;1236:5;1261:6;1254:5;1247:21;1291:4;1283:6;1279:17;1269:27;;1313:4;1308:3;1304:14;1297:21;;1366:6;1413:3;1405:4;1397:6;1393:17;1388:3;1384:27;1381:36;1378:2;;;1430:1;1427;1420:12;1378:2;1455:1;1440:229;1465:6;1462:1;1459:13;1440:229;;;1523:3;1545:60;1601:3;1589:10;1545:60;:::i;:::-;1540:3;1533:73;1629:4;1624:3;1620:14;1613:21;;1657:4;1652:3;1648:14;1641:21;;1497:172;1487:1;1484;1480:9;1475:14;;1440:229;;;1444:14;1017:658;;;;;;;:::o;1683:134::-;;1767:6;1761:13;1752:22;;1779:33;1806:5;1779:33;:::i;:::-;1746:71;;;;:::o;1824:158::-;;1920:6;1914:13;1905:22;;1932:45;1971:5;1932:45;:::i;:::-;1899:83;;;;:::o;1989:172::-;;2092:6;2086:13;2077:22;;2104:52;2150:5;2104:52;:::i;:::-;2071:90;;;;:::o;2169:444::-;;2282:3;2275:4;2267:6;2263:17;2259:27;2249:2;;2300:1;2297;2290:12;2249:2;2330:6;2324:13;2352:65;2367:49;2409:6;2367:49;:::i;:::-;2352:65;:::i;:::-;2343:74;;2437:6;2430:5;2423:21;2473:4;2465:6;2461:17;2506:4;2499:5;2495:16;2541:3;2532:6;2527:3;2523:16;2520:25;2517:2;;;2558:1;2555;2548:12;2517:2;2568:39;2600:6;2595:3;2590;2568:39;:::i;:::-;2242:371;;;;;;;:::o;2621:134::-;;2705:6;2699:13;2690:22;;2717:33;2744:5;2717:33;:::i;:::-;2684:71;;;;:::o;2762:1502::-;;;;;;;;3070:3;3058:9;3049:7;3045:23;3041:33;3038:2;;;3087:1;3084;3077:12;3038:2;3122:1;3139:64;3195:7;3186:6;3175:9;3171:22;3139:64;:::i;:::-;3129:74;;3101:108;3261:2;3250:9;3246:18;3240:25;3285:18;3277:6;3274:30;3271:2;;;3317:1;3314;3307:12;3271:2;3337:89;3418:7;3409:6;3398:9;3394:22;3337:89;:::i;:::-;3327:99;;3219:213;3484:2;3473:9;3469:18;3463:25;3508:18;3500:6;3497:30;3494:2;;;3540:1;3537;3530:12;3494:2;3560:101;3653:7;3644:6;3633:9;3629:22;3560:101;:::i;:::-;3550:111;;3442:225;3698:2;3716:64;3772:7;3763:6;3752:9;3748:22;3716:64;:::i;:::-;3706:74;;3677:109;3838:3;3827:9;3823:19;3817:26;3863:18;3855:6;3852:30;3849:2;;;3895:1;3892;3885:12;3849:2;3915:74;3981:7;3972:6;3961:9;3957:22;3915:74;:::i;:::-;3905:84;;3796:199;4026:3;4045:64;4101:7;4092:6;4081:9;4077:22;4045:64;:::i;:::-;4035:74;;4005:110;4146:3;4165:83;4240:7;4231:6;4220:9;4216:22;4165:83;:::i;:::-;4155:93;;4125:129;3032:1232;;;;;;;;;;:::o;4272:375::-;;4432:67;4496:2;4491:3;4432:67;:::i;:::-;4425:74;;4532:34;4528:1;4523:3;4519:11;4512:55;4601:8;4596:2;4591:3;4587:12;4580:30;4638:2;4633:3;4629:12;4622:19;;4418:229;;;:::o;4656:332::-;;4816:67;4880:2;4875:3;4816:67;:::i;:::-;4809:74;;4916:34;4912:1;4907:3;4903:11;4896:55;4979:2;4974:3;4970:12;4963:19;;4802:186;;;:::o;4996:416::-;;5196:2;5185:9;5181:18;5173:26;;5246:9;5240:4;5236:20;5232:1;5221:9;5217:17;5210:47;5271:131;5397:4;5271:131;:::i;:::-;5263:139;;5167:245;;;:::o;5419:416::-;;5619:2;5608:9;5604:18;5596:26;;5669:9;5663:4;5659:20;5655:1;5644:9;5640:17;5633:47;5694:131;5820:4;5694:131;:::i;:::-;5686:139;;5590:245;;;:::o;5842:256::-;;5904:2;5898:9;5888:19;;5942:4;5934:6;5930:17;6041:6;6029:10;6026:22;6005:18;5993:10;5990:34;5987:62;5984:2;;;6062:1;6059;6052:12;5984:2;6082:10;6078:2;6071:22;5882:216;;;;:::o;6105:304::-;;6264:18;6256:6;6253:30;6250:2;;;6296:1;6293;6286:12;6250:2;6331:4;6323:6;6319:17;6311:25;;6394:4;6388;6384:15;6376:23;;6187:222;;;:::o;6416:316::-;;6587:18;6579:6;6576:30;6573:2;;;6619:1;6616;6609:12;6573:2;6654:4;6646:6;6642:17;6634:25;;6717:4;6711;6707:15;6699:23;;6510:222;;;:::o;6739:322::-;;6883:18;6875:6;6872:30;6869:2;;;6915:1;6912;6905:12;6869:2;6982:4;6978:9;6971:4;6963:6;6959:17;6955:33;6947:41;;7046:4;7040;7036:15;7028:23;;6806:255;;;:::o;7069:163::-;;7184:6;7179:3;7172:19;7221:4;7216:3;7212:14;7197:29;;7165:67;;;;:::o;7240:91::-;;7302:24;7320:5;7302:24;:::i;:::-;7291:35;;7285:46;;;:::o;7338:72::-;;7400:5;7389:16;;7383:27;;;:::o;7417:103::-;;7491:24;7509:5;7491:24;:::i;:::-;7480:35;;7474:46;;;:::o;7527:110::-;;7608:24;7626:5;7608:24;:::i;:::-;7597:35;;7591:46;;;:::o;7644:121::-;;7717:42;7710:5;7706:54;7695:65;;7689:76;;;:::o;7772:72::-;;7834:5;7823:16;;7817:27;;;:::o;7852:268::-;7917:1;7924:101;7938:6;7935:1;7932:13;7924:101;;;8014:1;8009:3;8005:11;7999:18;7995:1;7990:3;7986:11;7979:39;7960:2;7957:1;7953:10;7948:15;;7924:101;;;8040:6;8037:1;8034:13;8031:2;;;8105:1;8096:6;8091:3;8087:16;8080:27;8031:2;7901:219;;;;:::o;8128:117::-;8197:24;8215:5;8197:24;:::i;:::-;8190:5;8187:35;8177:2;;8236:1;8233;8226:12;8177:2;8171:74;:::o;8252:117::-;8321:24;8339:5;8321:24;:::i;:::-;8314:5;8311:35;8301:2;;8360:1;8357;8350:12;8301:2;8295:74;:::o;8376:141::-;8457:36;8487:5;8457:36;:::i;:::-;8450:5;8447:47;8437:2;;8508:1;8505;8498:12;8437:2;8431:86;:::o;8524:155::-;8612:43;8649:5;8612:43;:::i;:::-;8605:5;8602:54;8592:2;;8670:1;8667;8660:12;8592:2;8586:93;:::o;8686:117::-;8755:24;8773:5;8755:24;:::i;:::-;8748:5;8745:35;8735:2;;8794:1;8791;8784:12;8735:2;8729:74;:::o;522:3594:1:-;;;;;;;",
  "deployedSourceMap": "522:3594:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3826:106;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1821:102:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;665:17:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;770:24:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5696:653;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;741:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1689:145:12;;;:::i;:::-;;3955:1062:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;905:27:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1136:23:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1066:77:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1244:37:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;5056:601:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1142:35:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1024:50:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;832:22:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1961:938:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3269:440:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4024:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;968:23:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;6359:519;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1983:240:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2929:979:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;800:24;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3826:106:1;3880:12;3911:4;:14;3916:8;3911:14;;;;;;;;;;;3904:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3826:106;;;:::o;1821:102:2:-;1280:12:12;:10;:12::i;:::-;1270:22;;:6;;;;;;;;;;:22;;;1262:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1890:13:2::1;1909:6;1890:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1821:102:::0;:::o;665:17:1:-;;;;:::o;770:24:2:-;;;;;;;;;;;;;:::o;5696:653::-;5757:7;1479;1487;1479:16;;;;;;;;;;;;;;;;;;:33;;;1460:15;:52;;:114;;;;;1543:7;1551;1543:16;;;;;;;;;;;;;;;;;;:31;;;1524:15;:50;;1460:114;1452:123;;;;;;1221:9:::1;;;;;;;;;;;1207:23;;:10;:23;;;;1199:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;5824:19:::2;5797:46:::0;::::2;;;;;;;:7;5805;5797:16;;;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;:46;;;;;;;;;5789:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;5934:1;5881:7;5889;5881:16;;;;;;;;;;;;;;;;;;:37;;:49;5919:10;5881:49;;;;;;;;;;;;;;;;:54;5873:127;;;;;;;;;;;;:::i;:::-;;;;;;;;;6022:17;6042:38;6060:10;6072:7;6042:17;:38::i;:::-;6022:58;;6090:9;6102:27;6126:2;6102:19;6119:1;6102:12;:16;;:19;;;;:::i;:::-;:23;;:27;;;;:::i;:::-;6090:39;;6162:29;6178:12;6162:11;;:15;;:29;;;;:::i;:::-;6148:11;:43;;;;6253:12;6201:7;6209;6201:16;;;;;;;;;;;;;;;;;;:37;;:49;6239:10;6201:49;;;;;;;;;;;;;;;:64;;;;6276:5;;;;;;;;;;;:14;;;6291:10;6303:12;6276:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6326:5;;;;;;;;;;;:10;;;6337:4;6326:16;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;1266:1;;5696:653:::0;;:::o;741:23::-;;;;;;;;;;;;;:::o;1689:145:12:-;1280:12;:10;:12::i;:::-;1270:22;;:6;;;;;;;;;;:22;;;1262:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1795:1:::1;1758:40;;1779:6;::::0;::::1;;;;;;;;1758:40;;;;;;;;;;;;1825:1;1808:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1689:145::o:0;3955:1062:2:-;1221:9;;;;;;;;;;;1207:23;;:10;:23;;;;1199:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;4158:1:::1;4104:7;4112;4104:16;;;;;;;;;;;;;;;;;;:31;;:39;4136:6;4104:39;;;;;;;;;;;;;;;:51;4144:10;4104:51;;;;;;;;;;;;;;;;:55;4096:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;4207:23;4223:6;4207:15;:23::i;:::-;4199:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;4313:6;4306:22;;;4337:4;4344:7;4306:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4367:6;4360:27;;;4388:10;4408:4;4415:7;4360:63;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4537:64;4593:7;4537;4545;4537:16;;;;;;;;;;;;;;;;;;:31;;:39;4569:6;4537:39;;;;;;;;;;;;;;;:51;4577:10;4537:51;;;;;;;;;;;;;;;;:55;;:64;;;;:::i;:::-;4483:7;4491;4483:16;;;;;;;;;;;;;;;;;;:31;;:39;4515:6;4483:39;;;;;;;;;;;;;;;:51;4523:10;4483:51;;;;;;;;;;;;;;;:118;;;;4623:24;4639:7;4623:11;;:15;;:24;;;;:::i;:::-;4609:11;:38;;;;4686:11;4700:7;4708;4700:16;;;;;;;;;;;;;;;;;;:31;;:39;4732:6;4700:39;;;;;;;;;;;;;;;:51;4740:10;4700:51;;;;;;;;;;;;;;;;4686:65;;4759:19;4781:51;4817:7;:14;;;;4781:7;4789;4781:16;;;;;;;;;;;;;;;;;;:31;;;:35;;:51;;;;:::i;:::-;4759:73;;4895:1;4841:7;4849;4841:16;;;;;;;;;;;;;;;;;;:31;;:39;4873:6;4841:39;;;;;;;;;;;;;;;:51;4881:10;4841:51;;;;;;;;;;;;;;;:55;;;;4918:23;4934:6;4918:11;;:15;;:23;;;;:::i;:::-;4904:11;:37;;;;4949:5;;;;;;;;;;;:14;;;4964:10;4976:26;4987:14;4976:6;:10;;:26;;;;:::i;:::-;4949:54;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1266:1;;3955:1062:::0;;;:::o;905:27:1:-;;;;;;;;;;;;;:::o;1136:23:2:-;;;;:::o;1066:77:12:-;1104:7;1130:6;;;;;;;;;;;1123:13;;1066:77;:::o;1244:37:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5056:601:2:-;5111:7;1479;1487;1479:16;;;;;;;;;;;;;;;;;;:33;;;1460:15;:52;;:114;;;;;1543:7;1551;1543:16;;;;;;;;;;;;;;;;;;:31;;;1524:15;:50;;1460:114;1452:123;;;;;;1339:9:::1;;;;;;;;;;;1325:23;;:10;:23;;;1317:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;5179:16:::2;5152:43;;;;;;;;:7;5160;5152:16;;;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;:43;;;;;;;;;5144:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;5238:7;5246;5238:16;;;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;5237:25;5229:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;5344:11;5358:31;5374:7;:14;;;;5358:11;;:15;;:31;;;;:::i;:::-;5344:45;;5399:9;5411:21;5429:2;5411:13;5422:1;5411:6;:10;;:13;;;;:::i;:::-;:17;;:21;;;;:::i;:::-;5399:33;;5465:23;5481:6;5465:11;;:15;;:23;;;;:::i;:::-;5451:11;:37;;;;5532:6;5498:7;5506;5498:16;;;;;;;;;;;;;;;;;;:31;;:40;;;;5575:4;5548:7;5556;5548:16;;;;;;;;;;;;;;;;;;:24;;;:31;;;;;;;;;;;;;;;;;;5590:5;;;;;;;;;;;:14;;;5605:10;5617:6;5590:34;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5634:5;;;;;;;;;;;:10;;;5645:4;5634:16;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;1388:1;;5056:601:::0;;:::o;1142:35:1:-;;;;;;;;;;;;;;;;;;;;;;:::o;1024:50:2:-;;;;;;;;;;;;;;;;;:::o;832:22:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1961:938:2:-;2064:1;2054:7;:11;2046:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;2106:23;2122:6;2106:15;:23::i;:::-;2098:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;2254:54;2280:10;2292:6;2300:7;2254:25;:54::i;:::-;2349:6;2342:22;;;2373:4;2380:7;2342:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2405:6;2398:27;;;2426:10;2446:4;2453:7;2398:63;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2579:64;2635:7;2579;2587;2579:16;;;;;;;;;;;;;;;;;;:31;;:39;2611:6;2579:39;;;;;;;;;;;;;;;:51;2619:10;2579:51;;;;;;;;;;;;;;;;:55;;:64;;;;:::i;:::-;2525:7;2533;2525:16;;;;;;;;;;;;;;;;;;:31;;:39;2557:6;2525:39;;;;;;;;;;;;;;;:51;2565:10;2525:51;;;;;;;;;;;;;;;:118;;;;2667:24;2683:7;2667:11;;:15;;:24;;;;:::i;:::-;2653:11;:38;;;;2841:1;2807:18;:30;2826:10;2807:30;;;;;;;;;;;;;;;;:35;2803:90;;;2858:7;2871:10;2858:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2803:90;1961:938;;;:::o;3269:440:1:-;1847:8;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1825:43;;:10;:43;;;1817:52;;;;;;3411:4:::1;:14;3416:8;3411:14;;;;;;;;;;;3431:23;;;;;;;;3435:3;3431:23;;;;3440:6;3431:23;;;;3448:5;;3431:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;3411:44:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;3471:30;3482:3;3487:6;3495:5;;3471:30;;;;;;;;;:::i;:::-;;;;;;;;3525:4;:14;3530:8;3525:14;;;;;;;;;;;;;;;;;;;;;:27;;;3553:6;3525:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3521:182;;3602:19;3576:7;3584;3576:16;;;;;;;;;;;;;;;;;;:23;;;:45;;;;;;;;;;;;;;;;;;;;;;;;3521:182;;;3676:16;3650:7;3658;3650:16;;;;;;;;;;;;;;;;;;:23;;;:42;;;;;;;;;;;;;;;;;;;;;;;;3521:182;3269:440:::0;;;;;:::o;4024:89::-;4072:4;4095:11;;4088:18;;4024:89;:::o;968:23:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6359:519::-;6436:7;6455:18;6476:1;6455:22;;6519:1;6491:18;:25;6510:5;6491:25;;;;;;;;;;;;;;;;:29;6487:358;;;6558:26;6536:299;6627:13;:20;;;;6606:18;:41;6536:299;;;6731:89;6746:7;6754;6746:16;;;;;;;;;;;;;;;;;;:31;;:66;6778:13;6792:18;6778:33;;;;;;;;;;;;;;;;;;;;;;;;;6746:66;;;;;;;;;;;;;;;:73;6813:5;6746:73;;;;;;;;;;;;;;;;6731:10;:14;;:89;;;;:::i;:::-;6718:102;;6665:20;;;;;;;6536:299;;;;6487:358;6861:10;6854:17;;;6359:519;;;;:::o;1983:240:12:-;1280:12;:10;:12::i;:::-;1270:22;;:6;;;;;;;;;;:22;;;1262:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;2091:1:::1;2071:22;;:8;:22;;;;2063:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2180:8;2151:38;;2172:6;::::0;::::1;;;;;;;;2151:38;;;;;;;;;;;;2208:8;2199:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;1983:240:::0;:::o;2929:979:2:-;1221:9;;;;;;;;;;;1207:23;;:10;:23;;;;1199:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3114:1:::1;3060:7;3068;3060:16;;;;;;;;;;;;;;;;;;:31;;:39;3092:6;3060:39;;;;;;;;;;;;;;;:51;3100:10;3060:51;;;;;;;;;;;;;;;;:55;3052:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;3165:23;3181:6;3165:15;:23::i;:::-;3157:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;3274:11;3288:7;3296;3288:16;;;;;;;;;;;;;;;;;;:31;;:39;3320:6;3288:39;;;;;;;;;;;;;;;:51;3328:10;3288:51;;;;;;;;;;;;;;;;3274:65;;3349:19;3371:51;3407:7;:14;;;;3371:7;3379;3371:16;;;;;;;;;;;;;;;;;;:31;;;:35;;:51;;;;:::i;:::-;3349:73;;3495:1;3441:7;3449;3441:16;;;;;;;;;;;;;;;;;;:31;;:39;3473:6;3441:39;;;;;;;;;;;;;;;:51;3481:10;3441:51;;;;;;;;;;;;;;;:55;;;;3520:23;3536:6;3520:11;;:15;;:23;;;;:::i;:::-;3506:11;:37;;;;3560:6;3553:23;;;3577:10;3589:26;3600:14;3589:6;:10;;:26;;;;:::i;:::-;3553:63;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3712:37;3747:1;3712:18;:30;3731:10;3712:30;;;;;;;;;;;;;;;;:34;;:37;;;;:::i;:::-;3679:18;:30;3698:10;3679:30;;;;;;;;;;;;;;;:70;;;;3805:1;3771:18;:30;3790:10;3771:30;;;;;;;;;;;;;;;;:35;3768:134;;;3822:10;3835:21;3845:10;3835:9;:21::i;:::-;3822:34;;3877:7;3885:5;3877:14;;;;;;;;;;;;;;;;3870:21;;;;;;;;;;;3768:134;;1266:1;;2929:979:::0;;:::o;800:24::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;590:104:10:-;643:15;677:10;670:17;;590:104;:::o;2180:459:13:-;2238:7;2484:1;2479;:6;2475:45;;;2508:1;2501:8;;;;2475:45;2530:9;2546:1;2542;:5;2530:17;;2574:1;2569;2565;:5;;;;;;:10;2557:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2631:1;2624:8;;;2180:459;;;;;:::o;3101:130::-;3159:7;3185:39;3189:1;3192;3185:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;3178:46;;3101:130;;;;:::o;1321:134::-;1379:7;1405:43;1409:1;1412;1405:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1398:50;;1321:134;;;;:::o;6888:370:2:-;6951:4;6984:26;7013:1;6984:30;;6966:264;7049:13;:20;;;;7028:18;:41;6966:264;;;7169:5;7132:42;;:13;7146:18;7132:33;;;;;;;;;;;;;;;;;;;;;;;;;:42;;;7128:92;;;7201:4;7194:11;;;;;7128:92;7083:20;;;;;;;6966:264;;;;7246:5;7239:12;;6888:370;;;;:::o;874:176:13:-;932:7;951:9;967:1;963;:5;951:17;;991:1;986;:6;;978:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;1042:1;1035:8;;;874:176;;;;:::o;7268:247:2:-;7421:1;7371:7;7379;7371:16;;;;;;;;;;;;;;;;;;:31;;:39;7403:6;7371:39;;;;;;;;;;;;;;;:46;7411:5;7371:46;;;;;;;;;;;;;;;;:51;7367:142;;7466:32;7496:1;7466:18;:25;7485:5;7466:25;;;;;;;;;;;;;;;;:29;;:32;;;;:::i;:::-;7438:18;:25;7457:5;7438:25;;;;;;;;;;;;;;;:60;;;;7367:142;7268:247;;;:::o;7525:233::-;7582:4;7601:6;7610:1;7601:10;;7597:128;7617:7;:14;;;;7613:1;:18;7597:128;;;7668:5;7654:19;;:7;7662:1;7654:10;;;;;;;;;;;;;;;;;;;;;;;;;:19;;;7651:64;;;7699:1;7692:8;;;;;7651:64;7633:3;;;;;;;7597:128;;;;7747:2;7734:17;;7525:233;;;;:::o;3713:272:13:-;3799:7;3830:1;3826;:5;3833:12;3818:28;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;3856:9;3872:1;3868;:5;;;;;;3856:17;;3977:1;3970:8;;;3713:272;;;;;:::o;1746:187::-;1832:7;1864:1;1859;:6;;1867:12;1851:29;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1890:9;1906:1;1902;:5;1890:17;;1925:1;1918:8;;;1746:187;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;5:130::-;;85:6;72:20;63:29;;97:33;124:5;97:33;:::i;:::-;57:78;;;;:::o;142:128::-;;223:6;217:13;208:22;;235:30;259:5;235:30;:::i;:::-;202:68;;;;:::o;277:130::-;;357:6;344:20;335:29;;369:33;396:5;369:33;:::i;:::-;329:78;;;;:::o;414:172::-;;517:6;511:13;502:22;;529:52;575:5;529:52;:::i;:::-;496:90;;;;:::o;608:337::-;;;723:3;716:4;708:6;704:17;700:27;690:2;;741:1;738;731:12;690:2;774:6;761:20;751:30;;801:18;793:6;790:30;787:2;;;833:1;830;823:12;787:2;867:4;859:6;855:17;843:29;;918:3;910:4;902:6;898:17;888:8;884:32;881:41;878:2;;;935:1;932;925:12;878:2;683:262;;;;;:::o;953:130::-;;1033:6;1020:20;1011:29;;1045:33;1072:5;1045:33;:::i;:::-;1005:78;;;;:::o;1090:241::-;;1194:2;1182:9;1173:7;1169:23;1165:32;1162:2;;;1210:1;1207;1200:12;1162:2;1245:1;1262:53;1307:7;1298:6;1287:9;1283:22;1262:53;:::i;:::-;1252:63;;1224:97;1156:175;;;;:::o;1338:366::-;;;1459:2;1447:9;1438:7;1434:23;1430:32;1427:2;;;1475:1;1472;1465:12;1427:2;1510:1;1527:53;1572:7;1563:6;1552:9;1548:22;1527:53;:::i;:::-;1517:63;;1489:97;1617:2;1635:53;1680:7;1671:6;1660:9;1656:22;1635:53;:::i;:::-;1625:63;;1596:98;1421:283;;;;;:::o;1711:491::-;;;;1849:2;1837:9;1828:7;1824:23;1820:32;1817:2;;;1865:1;1862;1855:12;1817:2;1900:1;1917:53;1962:7;1953:6;1942:9;1938:22;1917:53;:::i;:::-;1907:63;;1879:97;2007:2;2025:53;2070:7;2061:6;2050:9;2046:22;2025:53;:::i;:::-;2015:63;;1986:98;2115:2;2133:53;2178:7;2169:6;2158:9;2154:22;2133:53;:::i;:::-;2123:63;;2094:98;1811:391;;;;;:::o;2209:257::-;;2321:2;2309:9;2300:7;2296:23;2292:32;2289:2;;;2337:1;2334;2327:12;2289:2;2372:1;2389:61;2442:7;2433:6;2422:9;2418:22;2389:61;:::i;:::-;2379:71;;2351:105;2283:183;;;;:::o;2473:241::-;;2577:2;2565:9;2556:7;2552:23;2548:32;2545:2;;;2593:1;2590;2583:12;2545:2;2628:1;2645:53;2690:7;2681:6;2670:9;2666:22;2645:53;:::i;:::-;2635:63;;2607:97;2539:175;;;;:::o;2721:366::-;;;2842:2;2830:9;2821:7;2817:23;2813:32;2810:2;;;2858:1;2855;2848:12;2810:2;2893:1;2910:53;2955:7;2946:6;2935:9;2931:22;2910:53;:::i;:::-;2900:63;;2872:97;3000:2;3018:53;3063:7;3054:6;3043:9;3039:22;3018:53;:::i;:::-;3008:63;;2979:98;2804:283;;;;;:::o;3094:743::-;;;;;;3269:3;3257:9;3248:7;3244:23;3240:33;3237:2;;;3286:1;3283;3276:12;3237:2;3321:1;3338:53;3383:7;3374:6;3363:9;3359:22;3338:53;:::i;:::-;3328:63;;3300:97;3428:2;3446:53;3491:7;3482:6;3471:9;3467:22;3446:53;:::i;:::-;3436:63;;3407:98;3564:2;3553:9;3549:18;3536:32;3588:18;3580:6;3577:30;3574:2;;;3620:1;3617;3610:12;3574:2;3648:65;3705:7;3696:6;3685:9;3681:22;3648:65;:::i;:::-;3630:83;;;;3515:204;3750:2;3768:53;3813:7;3804:6;3793:9;3789:22;3768:53;:::i;:::-;3758:63;;3729:98;3231:606;;;;;;;;:::o;3844:301::-;;3978:2;3966:9;3957:7;3953:23;3949:32;3946:2;;;3994:1;3991;3984:12;3946:2;4029:1;4046:83;4121:7;4112:6;4101:9;4097:22;4046:83;:::i;:::-;4036:93;;4008:127;3940:205;;;;:::o;4152:241::-;;4256:2;4244:9;4235:7;4231:23;4227:32;4224:2;;;4272:1;4269;4262:12;4224:2;4307:1;4324:53;4369:7;4360:6;4349:9;4345:22;4324:53;:::i;:::-;4314:63;;4286:97;4218:175;;;;:::o;4400:491::-;;;;4538:2;4526:9;4517:7;4513:23;4509:32;4506:2;;;4554:1;4551;4544:12;4506:2;4589:1;4606:53;4651:7;4642:6;4631:9;4627:22;4606:53;:::i;:::-;4596:63;;4568:97;4696:2;4714:53;4759:7;4750:6;4739:9;4735:22;4714:53;:::i;:::-;4704:63;;4675:98;4804:2;4822:53;4867:7;4858:6;4847:9;4843:22;4822:53;:::i;:::-;4812:63;;4783:98;4500:391;;;;;:::o;4899:229::-;;5038:84;5118:3;5110:6;5038:84;:::i;:::-;5024:98;;5017:111;;;;:::o;5136:142::-;5227:45;5266:5;5227:45;:::i;:::-;5222:3;5215:58;5209:69;;:::o;5285:113::-;5368:24;5386:5;5368:24;:::i;:::-;5363:3;5356:37;5350:48;;:::o;5450:1000::-;;5633:73;5700:5;5633:73;:::i;:::-;5719:105;5817:6;5812:3;5719:105;:::i;:::-;5712:112;;5847:3;5889:4;5881:6;5877:17;5872:3;5868:27;5916:75;5985:5;5916:75;:::i;:::-;6011:7;6039:1;6024:387;6049:6;6046:1;6043:13;6024:387;;;6111:9;6105:4;6101:20;6096:3;6089:33;6156:6;6150:13;6178:102;6275:4;6260:13;6178:102;:::i;:::-;6170:110;;6297:79;6369:6;6297:79;:::i;:::-;6287:89;;6399:4;6394:3;6390:14;6383:21;;6081:330;6071:1;6068;6064:9;6059:14;;6024:387;;;6028:14;6424:4;6417:11;;6441:3;6434:10;;5612:838;;;;;;;;;:::o;6458:104::-;6535:21;6550:5;6535:21;:::i;:::-;6530:3;6523:34;6517:45;;:::o;6569:166::-;6672:57;6723:5;6672:57;:::i;:::-;6667:3;6660:70;6654:81;;:::o;6742:150::-;6837:49;6880:5;6837:49;:::i;:::-;6832:3;6825:62;6819:73;;:::o;6899:164::-;7001:56;7051:5;7001:56;:::i;:::-;6996:3;6989:69;6983:80;;:::o;7070:142::-;7161:45;7200:5;7161:45;:::i;:::-;7156:3;7149:58;7143:69;;:::o;7244:300::-;;7360:71;7424:6;7419:3;7360:71;:::i;:::-;7353:78;;7443:43;7479:6;7474:3;7467:5;7443:43;:::i;:::-;7508:29;7530:6;7508:29;:::i;:::-;7503:3;7499:39;7492:46;;7346:198;;;;;:::o;7552:327::-;;7654:39;7687:5;7654:39;:::i;:::-;7705:61;7759:6;7754:3;7705:61;:::i;:::-;7698:68;;7771:52;7816:6;7811:3;7804:4;7797:5;7793:16;7771:52;:::i;:::-;7844:29;7866:6;7844:29;:::i;:::-;7839:3;7835:39;7828:46;;7634:245;;;;;:::o;7886:347::-;;7998:39;8031:5;7998:39;:::i;:::-;8049:71;8113:6;8108:3;8049:71;:::i;:::-;8042:78;;8125:52;8170:6;8165:3;8158:4;8151:5;8147:16;8125:52;:::i;:::-;8198:29;8220:6;8198:29;:::i;:::-;8193:3;8189:39;8182:46;;7978:255;;;;;:::o;8241:319::-;;8401:67;8465:2;8460:3;8401:67;:::i;:::-;8394:74;;8501:21;8497:1;8492:3;8488:11;8481:42;8551:2;8546:3;8542:12;8535:19;;8387:173;;;:::o;8569:315::-;;8729:67;8793:2;8788:3;8729:67;:::i;:::-;8722:74;;8829:17;8825:1;8820:3;8816:11;8809:38;8875:2;8870:3;8866:12;8859:19;;8715:169;;;:::o;8893:375::-;;9053:67;9117:2;9112:3;9053:67;:::i;:::-;9046:74;;9153:34;9149:1;9144:3;9140:11;9133:55;9222:8;9217:2;9212:3;9208:12;9201:30;9259:2;9254:3;9250:12;9243:19;;9039:229;;;:::o;9277:327::-;;9437:67;9501:2;9496:3;9437:67;:::i;:::-;9430:74;;9537:29;9533:1;9528:3;9524:11;9517:50;9595:2;9590:3;9586:12;9579:19;;9423:181;;;:::o;9613:321::-;;9773:67;9837:2;9832:3;9773:67;:::i;:::-;9766:74;;9873:23;9869:1;9864:3;9860:11;9853:44;9925:2;9920:3;9916:12;9909:19;;9759:175;;;:::o;9943:327::-;;10103:67;10167:2;10162:3;10103:67;:::i;:::-;10096:74;;10203:29;10199:1;10194:3;10190:11;10183:50;10261:2;10256:3;10252:12;10245:19;;10089:181;;;:::o;10279:391::-;;10439:67;10503:2;10498:3;10439:67;:::i;:::-;10432:74;;10539:34;10535:1;10530:3;10526:11;10519:55;10608:24;10603:2;10598:3;10594:12;10587:46;10661:2;10656:3;10652:12;10645:19;;10425:245;;;:::o;10679:370::-;;10839:67;10903:2;10898:3;10839:67;:::i;:::-;10832:74;;10939:34;10935:1;10930:3;10926:11;10919:55;11008:3;11003:2;10998:3;10994:12;10987:25;11040:2;11035:3;11031:12;11024:19;;10825:224;;;:::o;11058:332::-;;11218:67;11282:2;11277:3;11218:67;:::i;:::-;11211:74;;11318:34;11314:1;11309:3;11305:11;11298:55;11381:2;11376:3;11372:12;11365:19;;11204:186;;;:::o;11399:318::-;;11559:67;11623:2;11618:3;11559:67;:::i;:::-;11552:74;;11659:20;11655:1;11650:3;11646:11;11639:41;11708:2;11703:3;11699:12;11692:19;;11545:172;;;:::o;11726:375::-;;11886:67;11950:2;11945:3;11886:67;:::i;:::-;11879:74;;11986:34;11982:1;11977:3;11973:11;11966:55;12055:8;12050:2;12045:3;12041:12;12034:30;12092:2;12087:3;12083:12;12076:19;;11872:229;;;:::o;12110:325::-;;12270:67;12334:2;12329:3;12270:67;:::i;:::-;12263:74;;12370:27;12366:1;12361:3;12357:11;12350:48;12426:2;12421:3;12417:12;12410:19;;12256:179;;;:::o;12444:397::-;;12604:67;12668:2;12663:3;12604:67;:::i;:::-;12597:74;;12704:34;12700:1;12695:3;12691:11;12684:55;12773:30;12768:2;12763:3;12759:12;12752:52;12832:2;12827:3;12823:12;12816:19;;12590:251;;;:::o;12888:713::-;;13017:4;13012:3;13008:14;13105:4;13098:5;13094:16;13088:23;13117:63;13174:4;13169:3;13165:14;13151:12;13117:63;:::i;:::-;13037:149;13260:4;13253:5;13249:16;13243:23;13272:63;13329:4;13324:3;13320:14;13306:12;13272:63;:::i;:::-;13196:145;13418:4;13411:5;13407:16;13401:23;13470:3;13464:4;13460:14;13453:4;13448:3;13444:14;13437:38;13490:73;13558:4;13544:12;13490:73;:::i;:::-;13482:81;;13351:224;13592:4;13585:11;;12990:611;;;;;:::o;13608:103::-;13681:24;13699:5;13681:24;:::i;:::-;13676:3;13669:37;13663:48;;:::o;13718:113::-;13801:24;13819:5;13801:24;:::i;:::-;13796:3;13789:37;13783:48;;:::o;13838:222::-;;13965:2;13954:9;13950:18;13942:26;;13979:71;14047:1;14036:9;14032:17;14023:6;13979:71;:::i;:::-;13936:124;;;;:::o;14067:460::-;;14258:2;14247:9;14243:18;14235:26;;14272:79;14348:1;14337:9;14333:17;14324:6;14272:79;:::i;:::-;14362:72;14430:2;14419:9;14415:18;14406:6;14362:72;:::i;:::-;14445;14513:2;14502:9;14498:18;14489:6;14445:72;:::i;:::-;14229:298;;;;;;:::o;14534:349::-;;14697:2;14686:9;14682:18;14674:26;;14711:79;14787:1;14776:9;14772:17;14763:6;14711:79;:::i;:::-;14801:72;14869:2;14858:9;14854:18;14845:6;14801:72;:::i;:::-;14668:215;;;;;:::o;14890:333::-;;15045:2;15034:9;15030:18;15022:26;;15059:71;15127:1;15116:9;15112:17;15103:6;15059:71;:::i;:::-;15141:72;15209:2;15198:9;15194:18;15185:6;15141:72;:::i;:::-;15016:207;;;;;:::o;15230:446::-;;15445:2;15434:9;15430:18;15422:26;;15495:9;15489:4;15485:20;15481:1;15470:9;15466:17;15459:47;15520:146;15661:4;15652:6;15520:146;:::i;:::-;15512:154;;15416:260;;;;:::o;15683:262::-;;15830:2;15819:9;15815:18;15807:26;;15844:91;15932:1;15921:9;15917:17;15908:6;15844:91;:::i;:::-;15801:144;;;;:::o;15952:246::-;;16091:2;16080:9;16076:18;16068:26;;16105:83;16185:1;16174:9;16170:17;16161:6;16105:83;:::i;:::-;16062:136;;;;:::o;16205:260::-;;16351:2;16340:9;16336:18;16328:26;;16365:90;16452:1;16441:9;16437:17;16428:6;16365:90;:::i;:::-;16322:143;;;;:::o;16472:310::-;;16619:2;16608:9;16604:18;16596:26;;16669:9;16663:4;16659:20;16655:1;16644:9;16640:17;16633:47;16694:78;16767:4;16758:6;16694:78;:::i;:::-;16686:86;;16590:192;;;;:::o;16789:416::-;;16989:2;16978:9;16974:18;16966:26;;17039:9;17033:4;17029:20;17025:1;17014:9;17010:17;17003:47;17064:131;17190:4;17064:131;:::i;:::-;17056:139;;16960:245;;;:::o;17212:416::-;;17412:2;17401:9;17397:18;17389:26;;17462:9;17456:4;17452:20;17448:1;17437:9;17433:17;17426:47;17487:131;17613:4;17487:131;:::i;:::-;17479:139;;17383:245;;;:::o;17635:416::-;;17835:2;17824:9;17820:18;17812:26;;17885:9;17879:4;17875:20;17871:1;17860:9;17856:17;17849:47;17910:131;18036:4;17910:131;:::i;:::-;17902:139;;17806:245;;;:::o;18058:416::-;;18258:2;18247:9;18243:18;18235:26;;18308:9;18302:4;18298:20;18294:1;18283:9;18279:17;18272:47;18333:131;18459:4;18333:131;:::i;:::-;18325:139;;18229:245;;;:::o;18481:416::-;;18681:2;18670:9;18666:18;18658:26;;18731:9;18725:4;18721:20;18717:1;18706:9;18702:17;18695:47;18756:131;18882:4;18756:131;:::i;:::-;18748:139;;18652:245;;;:::o;18904:416::-;;19104:2;19093:9;19089:18;19081:26;;19154:9;19148:4;19144:20;19140:1;19129:9;19125:17;19118:47;19179:131;19305:4;19179:131;:::i;:::-;19171:139;;19075:245;;;:::o;19327:416::-;;19527:2;19516:9;19512:18;19504:26;;19577:9;19571:4;19567:20;19563:1;19552:9;19548:17;19541:47;19602:131;19728:4;19602:131;:::i;:::-;19594:139;;19498:245;;;:::o;19750:416::-;;19950:2;19939:9;19935:18;19927:26;;20000:9;19994:4;19990:20;19986:1;19975:9;19971:17;19964:47;20025:131;20151:4;20025:131;:::i;:::-;20017:139;;19921:245;;;:::o;20173:416::-;;20373:2;20362:9;20358:18;20350:26;;20423:9;20417:4;20413:20;20409:1;20398:9;20394:17;20387:47;20448:131;20574:4;20448:131;:::i;:::-;20440:139;;20344:245;;;:::o;20596:416::-;;20796:2;20785:9;20781:18;20773:26;;20846:9;20840:4;20836:20;20832:1;20821:9;20817:17;20810:47;20871:131;20997:4;20871:131;:::i;:::-;20863:139;;20767:245;;;:::o;21019:416::-;;21219:2;21208:9;21204:18;21196:26;;21269:9;21263:4;21259:20;21255:1;21244:9;21240:17;21233:47;21294:131;21420:4;21294:131;:::i;:::-;21286:139;;21190:245;;;:::o;21442:416::-;;21642:2;21631:9;21627:18;21619:26;;21692:9;21686:4;21682:20;21678:1;21667:9;21663:17;21656:47;21717:131;21843:4;21717:131;:::i;:::-;21709:139;;21613:245;;;:::o;21865:416::-;;22065:2;22054:9;22050:18;22042:26;;22115:9;22109:4;22105:20;22101:1;22090:9;22086:17;22079:47;22140:131;22266:4;22140:131;:::i;:::-;22132:139;;22036:245;;;:::o;22288:222::-;;22415:2;22404:9;22400:18;22392:26;;22429:71;22497:1;22486:9;22482:17;22473:6;22429:71;:::i;:::-;22386:124;;;;:::o;22517:552::-;;22730:2;22719:9;22715:18;22707:26;;22744:71;22812:1;22801:9;22797:17;22788:6;22744:71;:::i;:::-;22826:72;22894:2;22883:9;22879:18;22870:6;22826:72;:::i;:::-;22946:9;22940:4;22936:20;22931:2;22920:9;22916:18;22909:48;22971:88;23054:4;23045:6;23037;22971:88;:::i;:::-;22963:96;;22701:368;;;;;;;:::o;23076:532::-;;23279:2;23268:9;23264:18;23256:26;;23293:71;23361:1;23350:9;23346:17;23337:6;23293:71;:::i;:::-;23375:72;23443:2;23432:9;23428:18;23419:6;23375:72;:::i;:::-;23495:9;23489:4;23485:20;23480:2;23469:9;23465:18;23458:48;23520:78;23593:4;23584:6;23520:78;:::i;:::-;23512:86;;23250:358;;;;;;:::o;23615:672::-;;23856:3;23845:9;23841:19;23833:27;;23871:71;23939:1;23928:9;23924:17;23915:6;23871:71;:::i;:::-;23953:72;24021:2;24010:9;24006:18;23997:6;23953:72;:::i;:::-;24036;24104:2;24093:9;24089:18;24080:6;24036:72;:::i;:::-;24119:66;24181:2;24170:9;24166:18;24157:6;24119:66;:::i;:::-;24196:81;24272:3;24261:9;24257:19;24248:6;24196:81;:::i;:::-;23827:460;;;;;;;;:::o;24294:170::-;;24399:3;24391:11;;24437:4;24432:3;24428:14;24420:22;;24385:79;;;:::o;24471:156::-;;24599:5;24593:12;24583:22;;24564:63;;;:::o;24634:122::-;;24728:5;24722:12;24712:22;;24693:63;;;:::o;24763:127::-;;24880:4;24875:3;24871:14;24863:22;;24857:33;;;:::o;24898:197::-;;25047:6;25042:3;25035:19;25084:4;25079:3;25075:14;25060:29;;25028:67;;;;:::o;25104:153::-;;25209:6;25204:3;25197:19;25246:4;25241:3;25237:14;25222:29;;25190:67;;;;:::o;25266:163::-;;25381:6;25376:3;25369:19;25418:4;25413:3;25409:14;25394:29;;25362:67;;;;:::o;25437:91::-;;25499:24;25517:5;25499:24;:::i;:::-;25488:35;;25482:46;;;:::o;25535:85::-;;25608:5;25601:13;25594:21;25583:32;;25577:43;;;:::o;25627:72::-;;25689:5;25678:16;;25672:27;;;:::o;25706:110::-;;25787:24;25805:5;25787:24;:::i;:::-;25776:35;;25770:46;;;:::o;25823:126::-;;25895:5;25884:16;;25901:43;25938:5;25901:43;:::i;:::-;25878:71;;;:::o;25956:121::-;;26029:42;26022:5;26018:54;26007:65;;26001:76;;;:::o;26084:72::-;;26146:5;26135:16;;26129:27;;;:::o;26163:129::-;;26250:37;26281:5;26250:37;:::i;:::-;26237:50;;26231:61;;;:::o;26299:161::-;;26398:57;26449:5;26398:57;:::i;:::-;26385:70;;26379:81;;;:::o;26467:128::-;;26566:24;26584:5;26566:24;:::i;:::-;26553:37;;26547:48;;;:::o;26602:145::-;;26693:49;26736:5;26693:49;:::i;:::-;26680:62;;26674:73;;;:::o;26754:120::-;;26845:24;26863:5;26845:24;:::i;:::-;26832:37;;26826:48;;;:::o;26881:159::-;;26979:56;27029:5;26979:56;:::i;:::-;26966:69;;26960:80;;;:::o;27047:127::-;;27145:24;27163:5;27145:24;:::i;:::-;27132:37;;27126:48;;;:::o;27181:126::-;;27268:34;27296:5;27268:34;:::i;:::-;27255:47;;27249:58;;;:::o;27314:121::-;;27393:37;27424:5;27393:37;:::i;:::-;27380:50;;27374:61;;;:::o;27442:108::-;;27521:24;27539:5;27521:24;:::i;:::-;27508:37;;27502:48;;;:::o;27558:145::-;27639:6;27634:3;27629;27616:30;27695:1;27686:6;27681:3;27677:16;27670:27;27609:94;;;:::o;27712:268::-;27777:1;27784:101;27798:6;27795:1;27792:13;27784:101;;;27874:1;27869:3;27865:11;27859:18;27855:1;27850:3;27846:11;27839:39;27820:2;27817:1;27813:10;27808:15;;27784:101;;;27900:6;27897:1;27894:13;27891:2;;;27965:1;27956:6;27951:3;27947:16;27940:27;27891:2;27761:219;;;;:::o;27988:97::-;;28076:2;28072:7;28067:2;28060:5;28056:14;28052:28;28042:38;;28036:49;;;:::o;28093:101::-;28172:1;28165:5;28162:12;28152:2;;28178:9;28152:2;28146:48;:::o;28201:117::-;28270:24;28288:5;28270:24;:::i;:::-;28263:5;28260:35;28250:2;;28309:1;28306;28299:12;28250:2;28244:74;:::o;28325:111::-;28391:21;28406:5;28391:21;:::i;:::-;28384:5;28381:32;28371:2;;28427:1;28424;28417:12;28371:2;28365:71;:::o;28443:117::-;28512:24;28530:5;28512:24;:::i;:::-;28505:5;28502:35;28492:2;;28551:1;28548;28541:12;28492:2;28486:74;:::o;28567:155::-;28655:43;28692:5;28655:43;:::i;:::-;28648:5;28645:54;28635:2;;28713:1;28710;28703:12;28635:2;28629:93;:::o;28729:117::-;28798:24;28816:5;28798:24;:::i;:::-;28791:5;28788:35;28778:2;;28837:1;28834;28827:12;28778:2;28772:74;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\npragma experimental ABIEncoderV2;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\nimport \"../interfaces/IMessenger.sol\";\nimport \"../Whitelist/Whitelist.sol\";\nimport \"../SLO/SLO.sol\";\nimport \"../SLARegistry.sol\";\nimport \"./Staking.sol\";\n\n/**\n * @title SLA\n * @dev SLA is a service level agreement contract used for service downtime\n * compensation\n */\ncontract SLA is Ownable, Staking {\n\n    using SafeMath for uint256;\n\n    // The required amount to stake when subscribing to the agreement\n    uint public stake;\n\n    // The time between SLI registration\n    uint private sliInterval;\n\n    // The ipfs hash that stores extra information about the agreement\n    string public ipfsHash;\n\n    // The address of the registry contract\n    SLARegistry public registry;\n\n    // Struct used for storing registered SLI's\n    struct SLI {\n        uint timestamp;\n        uint value;\n        string ipfsHash;\n    }\n\n    // Mapping to get SLO addresses from SLO names in bytes32\n    mapping(bytes32 => SLO) public SLOs;\n\n    // Mapping to get SLI structs from SLO names in bytes32\n    mapping(bytes32 => SLI[]) public SLIs;\n\n    // Array storing the names of the SLO's of this agreement\n    bytes32[] SLONames;\n\n    /**\n     * @dev event for SLI creation logging\n     * @param _timestamp the time the SLI has been registered\n     * @param _value the value of the SLI\n     * @param _hash the ipfs hash that stores additional info\n     */\n    event SLICreated(uint _timestamp, uint _value, string _hash);\n\n\n    /**\n     * @dev Throws if called by any address other than the Oraclize or\n     * messenger contract.\n     */\n    modifier onlyMessenger() {\n        require(msg.sender == address(registry.messenger()));\n        _;\n    }\n    \n    /**\n     * @dev constructor\n     * @param _owner the owner of the service level agreement\n     * @param _SLONames the names of the service level objectives in a bytes32\n     * array\n     * @param _SLOs an array with the service level objective addresses\n     * @param _stake the amount required to stake when subscribing to the\n     * agreement\n     * @param _ipfsHash the ipfs hash that stores extra information about the\n     * agreement\n     */\n    constructor(\n        address _owner,\n        bytes32[] memory _SLONames,\n        SLO[] memory _SLOs,\n        uint _stake,\n        string memory _ipfsHash,\n        uint _sliInterval,\n        bDSLAToken _tokenAddress\n    )\n    public Staking(_tokenAddress){\n        require(_SLOs.length < 5);\n        require(_SLONames.length == _SLOs.length);\n\n        for(uint i = 0; i < _SLOs.length; i++) {\n            SLOs[_SLONames[i]] = _SLOs[i];\n        }\n\n        transferOwnership(_owner);\n        SLONames = _SLONames;\n        stake = _stake;\n        ipfsHash = _ipfsHash;\n        registry = SLARegistry(msg.sender);\n        sliInterval = _sliInterval;\n    }\n\n    /**\n     * @dev external function to register SLI's and check them against the SLO's\n     * @param _SLOName the name of the SLO in bytes32\n     * @param _value the value of the SLI to check\n     * @param _hash the ipfs hash with additional information\n     */\n    function registerSLI(bytes32 _SLOName, uint _value, string calldata _hash, uint _period)\n        external\n        onlyMessenger\n    {\n        SLIs[_SLOName].push(SLI(now, _value, _hash));\n\n        emit SLICreated(now, _value, _hash);\n\n        \n        if(!SLOs[_SLOName].isSLOHonored(_value)) {\n            periods[_period].status = Status.NotRespected;\n        }else{\n            periods[_period].status = Status.Respected;\n        }\n    }\n\n    /**\n     * @dev external function to get SLI\n     * @param _SLOName the name of the SLO in bytes32\n     */\n    function getSLI(bytes32 _SLOName) public view returns(SLI[] memory) {\n        return SLIs[_SLOName];\n    }\n\n    /**\n     * @dev external view function that returns the sliInterval value\n     */\n    function getSliInterval() external view returns(uint) {\n        return sliInterval;\n    }\n\n}\n",
  "sourcePath": "/Users/wilhempujar/Development/stacktical-dsla-contracts/contracts/SLA/SLA.sol",
  "ast": {
    "absolutePath": "/Users/wilhempujar/Development/stacktical-dsla-contracts/contracts/SLA/SLA.sol",
    "exportedSymbols": {
      "SLA": [
        299
      ]
    },
    "id": 300,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:1"
      },
      {
        "id": 59,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:1"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 60,
        "nodeType": "ImportDirective",
        "scope": 300,
        "sourceUnit": 2346,
        "src": "91:52:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 61,
        "nodeType": "ImportDirective",
        "scope": 300,
        "sourceUnit": 3356,
        "src": "144:56:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 62,
        "nodeType": "ImportDirective",
        "scope": 300,
        "sourceUnit": 2542,
        "src": "201:51:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/wilhempujar/Development/stacktical-dsla-contracts/contracts/interfaces/IMessenger.sol",
        "file": "../interfaces/IMessenger.sol",
        "id": 63,
        "nodeType": "ImportDirective",
        "scope": 300,
        "sourceUnit": 1931,
        "src": "253:38:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/wilhempujar/Development/stacktical-dsla-contracts/contracts/Whitelist/Whitelist.sol",
        "file": "../Whitelist/Whitelist.sol",
        "id": 64,
        "nodeType": "ImportDirective",
        "scope": 300,
        "sourceUnit": 1676,
        "src": "292:36:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/wilhempujar/Development/stacktical-dsla-contracts/contracts/SLO/SLO.sol",
        "file": "../SLO/SLO.sol",
        "id": 65,
        "nodeType": "ImportDirective",
        "scope": 300,
        "sourceUnit": 1472,
        "src": "329:24:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/wilhempujar/Development/stacktical-dsla-contracts/contracts/SLARegistry.sol",
        "file": "../SLARegistry.sol",
        "id": 66,
        "nodeType": "ImportDirective",
        "scope": 300,
        "sourceUnit": 1348,
        "src": "354:28:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/wilhempujar/Development/stacktical-dsla-contracts/contracts/SLA/Staking.sol",
        "file": "./Staking.sol",
        "id": 67,
        "nodeType": "ImportDirective",
        "scope": 300,
        "sourceUnit": 1126,
        "src": "383:23:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 69,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2345,
              "src": "538:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$2345",
                "typeString": "contract Ownable"
              }
            },
            "id": 70,
            "nodeType": "InheritanceSpecifier",
            "src": "538:7:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 71,
              "name": "Staking",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1125,
              "src": "547:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Staking_$1125",
                "typeString": "contract Staking"
              }
            },
            "id": 72,
            "nodeType": "InheritanceSpecifier",
            "src": "547:7:1"
          }
        ],
        "contractDependencies": [
          1125,
          1953,
          2345
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 68,
          "nodeType": "StructuredDocumentation",
          "src": "408:113:1",
          "text": " @title SLA\n @dev SLA is a service level agreement contract used for service downtime\n compensation"
        },
        "fullyImplemented": true,
        "id": 299,
        "linearizedBaseContracts": [
          299,
          1125,
          2345,
          1953
        ],
        "name": "SLA",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 75,
            "libraryName": {
              "contractScope": null,
              "id": 73,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2541,
              "src": "568:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$2541",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "562:27:1",
            "typeName": {
              "id": 74,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "581:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "3a4b66f1",
            "id": 77,
            "mutability": "mutable",
            "name": "stake",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 299,
            "src": "665:17:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 76,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "665:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 79,
            "mutability": "mutable",
            "name": "sliInterval",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 299,
            "src": "730:24:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 78,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "730:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "c623674f",
            "id": 81,
            "mutability": "mutable",
            "name": "ipfsHash",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 299,
            "src": "832:22:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 80,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "832:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7b103999",
            "id": 83,
            "mutability": "mutable",
            "name": "registry",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 299,
            "src": "905:27:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SLARegistry_$1347",
              "typeString": "contract SLARegistry"
            },
            "typeName": {
              "contractScope": null,
              "id": 82,
              "name": "SLARegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1347,
              "src": "905:11:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SLARegistry_$1347",
                "typeString": "contract SLARegistry"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "SLA.SLI",
            "id": 90,
            "members": [
              {
                "constant": false,
                "id": 85,
                "mutability": "mutable",
                "name": "timestamp",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 90,
                "src": "1008:14:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 84,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1008:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 87,
                "mutability": "mutable",
                "name": "value",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 90,
                "src": "1032:10:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 86,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1032:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 89,
                "mutability": "mutable",
                "name": "ipfsHash",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 90,
                "src": "1052:15:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 88,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1052:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "SLI",
            "nodeType": "StructDefinition",
            "scope": 299,
            "src": "987:87:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b0227b47",
            "id": 94,
            "mutability": "mutable",
            "name": "SLOs",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 299,
            "src": "1142:35:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$1471_$",
              "typeString": "mapping(bytes32 => contract SLO)"
            },
            "typeName": {
              "id": 93,
              "keyType": {
                "id": 91,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1150:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1142:23:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$1471_$",
                "typeString": "mapping(bytes32 => contract SLO)"
              },
              "valueType": {
                "contractScope": null,
                "id": 92,
                "name": "SLO",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1471,
                "src": "1161:3:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_SLO_$1471",
                  "typeString": "contract SLO"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "94199c61",
            "id": 99,
            "mutability": "mutable",
            "name": "SLIs",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 299,
            "src": "1244:37:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$90_storage_$dyn_storage_$",
              "typeString": "mapping(bytes32 => struct SLA.SLI[])"
            },
            "typeName": {
              "id": 98,
              "keyType": {
                "id": 95,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1252:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1244:25:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$90_storage_$dyn_storage_$",
                "typeString": "mapping(bytes32 => struct SLA.SLI[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 96,
                  "name": "SLI",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 90,
                  "src": "1263:3:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SLI_$90_storage_ptr",
                    "typeString": "struct SLA.SLI"
                  }
                },
                "id": 97,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "1263:5:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_SLI_$90_storage_$dyn_storage_ptr",
                  "typeString": "struct SLA.SLI[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 102,
            "mutability": "mutable",
            "name": "SLONames",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 299,
            "src": "1350:18:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
              "typeString": "bytes32[]"
            },
            "typeName": {
              "baseType": {
                "id": 100,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1350:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "id": 101,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "1350:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                "typeString": "bytes32[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 103,
              "nodeType": "StructuredDocumentation",
              "src": "1375:220:1",
              "text": " @dev event for SLI creation logging\n @param _timestamp the time the SLI has been registered\n @param _value the value of the SLI\n @param _hash the ipfs hash that stores additional info"
            },
            "id": 111,
            "name": "SLICreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 105,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_timestamp",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 111,
                  "src": "1617:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1617:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 107,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 111,
                  "src": "1634:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 106,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1634:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 109,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_hash",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 111,
                  "src": "1647:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1647:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1616:44:1"
            },
            "src": "1600:61:1"
          },
          {
            "body": {
              "id": 127,
              "nodeType": "Block",
              "src": "1807:80:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 115,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1825:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1825:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 119,
                                  "name": "registry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 83,
                                  "src": "1847:8:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SLARegistry_$1347",
                                    "typeString": "contract SLARegistry"
                                  }
                                },
                                "id": 120,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "messenger",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1139,
                                "src": "1847:18:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IMessenger_$1930_$",
                                  "typeString": "function () view external returns (contract IMessenger)"
                                }
                              },
                              "id": 121,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1847:20:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IMessenger_$1930",
                                "typeString": "contract IMessenger"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IMessenger_$1930",
                                "typeString": "contract IMessenger"
                              }
                            ],
                            "id": 118,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1839:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 117,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1839:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1839:29:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1825:43:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 114,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1817:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1817:52:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 125,
                  "nodeType": "ExpressionStatement",
                  "src": "1817:52:1"
                },
                {
                  "id": 126,
                  "nodeType": "PlaceholderStatement",
                  "src": "1879:1:1"
                }
              ]
            },
            "documentation": {
              "id": 112,
              "nodeType": "StructuredDocumentation",
              "src": "1668:109:1",
              "text": " @dev Throws if called by any address other than the Oraclize or\n messenger contract."
            },
            "id": 128,
            "name": "onlyMessenger",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1804:2:1"
            },
            "src": "1782:105:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 216,
              "nodeType": "Block",
              "src": "2603:396:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 152,
                            "name": "_SLOs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 137,
                            "src": "2621:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_SLO_$1471_$dyn_memory_ptr",
                              "typeString": "contract SLO[] memory"
                            }
                          },
                          "id": 153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2621:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "35",
                          "id": 154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2636:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "src": "2621:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 151,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2613:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2613:25:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 157,
                  "nodeType": "ExpressionStatement",
                  "src": "2613:25:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 159,
                            "name": "_SLONames",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 134,
                            "src": "2656:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          "id": 160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2656:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 161,
                            "name": "_SLOs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 137,
                            "src": "2676:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_SLO_$1471_$dyn_memory_ptr",
                              "typeString": "contract SLO[] memory"
                            }
                          },
                          "id": 162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2676:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2656:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 158,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2648:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2648:41:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 165,
                  "nodeType": "ExpressionStatement",
                  "src": "2648:41:1"
                },
                {
                  "body": {
                    "id": 187,
                    "nodeType": "Block",
                    "src": "2739:54:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 177,
                              "name": "SLOs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 94,
                              "src": "2753:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$1471_$",
                                "typeString": "mapping(bytes32 => contract SLO)"
                              }
                            },
                            "id": 181,
                            "indexExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 178,
                                "name": "_SLONames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 134,
                                "src": "2758:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                }
                              },
                              "id": 180,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 179,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 167,
                                "src": "2768:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2758:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2753:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLO_$1471",
                              "typeString": "contract SLO"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 182,
                              "name": "_SLOs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 137,
                              "src": "2774:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_SLO_$1471_$dyn_memory_ptr",
                                "typeString": "contract SLO[] memory"
                              }
                            },
                            "id": 184,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 183,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 167,
                              "src": "2780:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2774:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLO_$1471",
                              "typeString": "contract SLO"
                            }
                          },
                          "src": "2753:29:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$1471",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 186,
                        "nodeType": "ExpressionStatement",
                        "src": "2753:29:1"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 170,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 167,
                      "src": "2716:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 171,
                        "name": "_SLOs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 137,
                        "src": "2720:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_SLO_$1471_$dyn_memory_ptr",
                          "typeString": "contract SLO[] memory"
                        }
                      },
                      "id": 172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2720:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2716:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 188,
                  "initializationExpression": {
                    "assignments": [
                      167
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 167,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 188,
                        "src": "2704:6:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 166,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2704:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 169,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2713:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2704:10:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2734:3:1",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 174,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 167,
                        "src": "2734:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 176,
                    "nodeType": "ExpressionStatement",
                    "src": "2734:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "2700:93:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 190,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 131,
                        "src": "2821:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 189,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2344,
                      "src": "2803:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2803:25:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 192,
                  "nodeType": "ExpressionStatement",
                  "src": "2803:25:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 193,
                      "name": "SLONames",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102,
                      "src": "2838:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                        "typeString": "bytes32[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 194,
                      "name": "_SLONames",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "2849:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[] memory"
                      }
                    },
                    "src": "2838:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                      "typeString": "bytes32[] storage ref"
                    }
                  },
                  "id": 196,
                  "nodeType": "ExpressionStatement",
                  "src": "2838:20:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 197,
                      "name": "stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77,
                      "src": "2868:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 198,
                      "name": "_stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 139,
                      "src": "2876:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2868:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 200,
                  "nodeType": "ExpressionStatement",
                  "src": "2868:14:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 201,
                      "name": "ipfsHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81,
                      "src": "2892:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 202,
                      "name": "_ipfsHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "2903:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2892:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 204,
                  "nodeType": "ExpressionStatement",
                  "src": "2892:20:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 205,
                      "name": "registry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "2922:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLARegistry_$1347",
                        "typeString": "contract SLARegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 207,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2945:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2945:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 206,
                        "name": "SLARegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1347,
                        "src": "2933:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SLARegistry_$1347_$",
                          "typeString": "type(contract SLARegistry)"
                        }
                      },
                      "id": 209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2933:23:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLARegistry_$1347",
                        "typeString": "contract SLARegistry"
                      }
                    },
                    "src": "2922:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SLARegistry_$1347",
                      "typeString": "contract SLARegistry"
                    }
                  },
                  "id": 211,
                  "nodeType": "ExpressionStatement",
                  "src": "2922:34:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 212,
                      "name": "sliInterval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79,
                      "src": "2966:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 213,
                      "name": "_sliInterval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 143,
                      "src": "2980:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2966:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 215,
                  "nodeType": "ExpressionStatement",
                  "src": "2966:26:1"
                }
              ]
            },
            "documentation": {
              "id": 129,
              "nodeType": "StructuredDocumentation",
              "src": "1897:447:1",
              "text": " @dev constructor\n @param _owner the owner of the service level agreement\n @param _SLONames the names of the service level objectives in a bytes32\n array\n @param _SLOs an array with the service level objective addresses\n @param _stake the amount required to stake when subscribing to the\n agreement\n @param _ipfsHash the ipfs hash that stores extra information about the\n agreement"
            },
            "id": 217,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 148,
                    "name": "_tokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 145,
                    "src": "2589:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_bDSLAToken_$1912",
                      "typeString": "contract bDSLAToken"
                    }
                  }
                ],
                "id": 149,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 147,
                  "name": "Staking",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1125,
                  "src": "2581:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Staking_$1125_$",
                    "typeString": "type(contract Staking)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2581:22:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 131,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 217,
                  "src": "2370:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 130,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2370:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 134,
                  "mutability": "mutable",
                  "name": "_SLONames",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 217,
                  "src": "2394:26:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 132,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2394:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 133,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2394:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 137,
                  "mutability": "mutable",
                  "name": "_SLOs",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 217,
                  "src": "2430:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_SLO_$1471_$dyn_memory_ptr",
                    "typeString": "contract SLO[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 135,
                      "name": "SLO",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 1471,
                      "src": "2430:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLO_$1471",
                        "typeString": "contract SLO"
                      }
                    },
                    "id": 136,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2430:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_SLO_$1471_$dyn_storage_ptr",
                      "typeString": "contract SLO[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 139,
                  "mutability": "mutable",
                  "name": "_stake",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 217,
                  "src": "2458:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2458:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 141,
                  "mutability": "mutable",
                  "name": "_ipfsHash",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 217,
                  "src": "2479:23:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2479:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 143,
                  "mutability": "mutable",
                  "name": "_sliInterval",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 217,
                  "src": "2512:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2512:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 145,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 217,
                  "src": "2539:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_bDSLAToken_$1912",
                    "typeString": "contract bDSLAToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 144,
                    "name": "bDSLAToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1912,
                    "src": "2539:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_bDSLAToken_$1912",
                      "typeString": "contract bDSLAToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2360:209:1"
            },
            "returnParameters": {
              "id": 150,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2603:0:1"
            },
            "scope": 299,
            "src": "2349:650:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 274,
              "nodeType": "Block",
              "src": "3401:308:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 236,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -17,
                            "src": "3435:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 237,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 222,
                            "src": "3440:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 238,
                            "name": "_hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 224,
                            "src": "3448:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          ],
                          "id": 235,
                          "name": "SLI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 90,
                          "src": "3431:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_SLI_$90_storage_ptr_$",
                            "typeString": "type(struct SLA.SLI storage pointer)"
                          }
                        },
                        "id": 239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3431:23:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SLI_$90_memory_ptr",
                          "typeString": "struct SLA.SLI memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SLI_$90_memory_ptr",
                          "typeString": "struct SLA.SLI memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 231,
                          "name": "SLIs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99,
                          "src": "3411:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$90_storage_$dyn_storage_$",
                            "typeString": "mapping(bytes32 => struct SLA.SLI storage ref[] storage ref)"
                          }
                        },
                        "id": 233,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 232,
                          "name": "_SLOName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 220,
                          "src": "3416:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3411:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_SLI_$90_storage_$dyn_storage",
                          "typeString": "struct SLA.SLI storage ref[] storage ref"
                        }
                      },
                      "id": 234,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3411:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_SLI_$90_storage_$returns$__$",
                        "typeString": "function (struct SLA.SLI storage ref)"
                      }
                    },
                    "id": 240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3411:44:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 241,
                  "nodeType": "ExpressionStatement",
                  "src": "3411:44:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 243,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -17,
                        "src": "3482:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 244,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 222,
                        "src": "3487:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 245,
                        "name": "_hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 224,
                        "src": "3495:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 242,
                      "name": "SLICreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "3471:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3471:30:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 247,
                  "nodeType": "EmitStatement",
                  "src": "3466:35:1"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3524:36:1",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 252,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 222,
                          "src": "3553:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 248,
                            "name": "SLOs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 94,
                            "src": "3525:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$1471_$",
                              "typeString": "mapping(bytes32 => contract SLO)"
                            }
                          },
                          "id": 250,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 249,
                            "name": "_SLOName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 220,
                            "src": "3530:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3525:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$1471",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isSLOHonored",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1470,
                        "src": "3525:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view external returns (bool)"
                        }
                      },
                      "id": 253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3525:35:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 272,
                    "nodeType": "Block",
                    "src": "3636:67:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 264,
                                "name": "periods",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 348,
                                "src": "3650:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Period_$335_storage_$dyn_storage",
                                  "typeString": "struct Staking.Period storage ref[] storage ref"
                                }
                              },
                              "id": 266,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 265,
                                "name": "_period",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 226,
                                "src": "3658:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3650:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Period_$335_storage",
                                "typeString": "struct Staking.Period storage ref"
                              }
                            },
                            "id": 267,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 324,
                            "src": "3650:23:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$314",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 268,
                              "name": "Status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 314,
                              "src": "3676:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Status_$314_$",
                                "typeString": "type(enum Staking.Status)"
                              }
                            },
                            "id": 269,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Respected",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3676:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$314",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "src": "3650:42:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$314",
                            "typeString": "enum Staking.Status"
                          }
                        },
                        "id": 271,
                        "nodeType": "ExpressionStatement",
                        "src": "3650:42:1"
                      }
                    ]
                  },
                  "id": 273,
                  "nodeType": "IfStatement",
                  "src": "3521:182:1",
                  "trueBody": {
                    "id": 263,
                    "nodeType": "Block",
                    "src": "3562:70:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 255,
                                "name": "periods",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 348,
                                "src": "3576:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Period_$335_storage_$dyn_storage",
                                  "typeString": "struct Staking.Period storage ref[] storage ref"
                                }
                              },
                              "id": 257,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 256,
                                "name": "_period",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 226,
                                "src": "3584:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3576:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Period_$335_storage",
                                "typeString": "struct Staking.Period storage ref"
                              }
                            },
                            "id": 258,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 324,
                            "src": "3576:23:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$314",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 259,
                              "name": "Status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 314,
                              "src": "3602:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Status_$314_$",
                                "typeString": "type(enum Staking.Status)"
                              }
                            },
                            "id": 260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "NotRespected",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3602:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$314",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "src": "3576:45:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$314",
                            "typeString": "enum Staking.Status"
                          }
                        },
                        "id": 262,
                        "nodeType": "ExpressionStatement",
                        "src": "3576:45:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 218,
              "nodeType": "StructuredDocumentation",
              "src": "3005:259:1",
              "text": " @dev external function to register SLI's and check them against the SLO's\n @param _SLOName the name of the SLO in bytes32\n @param _value the value of the SLI to check\n @param _hash the ipfs hash with additional information"
            },
            "functionSelector": "e23ef92c",
            "id": 275,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 229,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 228,
                  "name": "onlyMessenger",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 128,
                  "src": "3383:13:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3383:13:1"
              }
            ],
            "name": "registerSLI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 227,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 220,
                  "mutability": "mutable",
                  "name": "_SLOName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 275,
                  "src": "3290:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 219,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3290:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 222,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 275,
                  "src": "3308:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 221,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3308:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 224,
                  "mutability": "mutable",
                  "name": "_hash",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 275,
                  "src": "3321:21:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 223,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3321:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 226,
                  "mutability": "mutable",
                  "name": "_period",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 275,
                  "src": "3344:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 225,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3344:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3289:68:1"
            },
            "returnParameters": {
              "id": 230,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3401:0:1"
            },
            "scope": 299,
            "src": "3269:440:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 288,
              "nodeType": "Block",
              "src": "3894:38:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 284,
                      "name": "SLIs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99,
                      "src": "3911:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$90_storage_$dyn_storage_$",
                        "typeString": "mapping(bytes32 => struct SLA.SLI storage ref[] storage ref)"
                      }
                    },
                    "id": 286,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 285,
                      "name": "_SLOName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 278,
                      "src": "3916:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3911:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_SLI_$90_storage_$dyn_storage",
                      "typeString": "struct SLA.SLI storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 283,
                  "id": 287,
                  "nodeType": "Return",
                  "src": "3904:21:1"
                }
              ]
            },
            "documentation": {
              "id": 276,
              "nodeType": "StructuredDocumentation",
              "src": "3715:106:1",
              "text": " @dev external function to get SLI\n @param _SLOName the name of the SLO in bytes32"
            },
            "functionSelector": "02e8b893",
            "id": 289,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSLI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 278,
                  "mutability": "mutable",
                  "name": "_SLOName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 289,
                  "src": "3842:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 277,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3842:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3841:18:1"
            },
            "returnParameters": {
              "id": 283,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 282,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 289,
                  "src": "3880:12:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_SLI_$90_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct SLA.SLI[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 280,
                      "name": "SLI",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 90,
                      "src": "3880:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SLI_$90_storage_ptr",
                        "typeString": "struct SLA.SLI"
                      }
                    },
                    "id": 281,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3880:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_SLI_$90_storage_$dyn_storage_ptr",
                      "typeString": "struct SLA.SLI[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3879:14:1"
            },
            "scope": 299,
            "src": "3826:106:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 297,
              "nodeType": "Block",
              "src": "4078:35:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 295,
                    "name": "sliInterval",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 79,
                    "src": "4095:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 294,
                  "id": 296,
                  "nodeType": "Return",
                  "src": "4088:18:1"
                }
              ]
            },
            "documentation": {
              "id": 290,
              "nodeType": "StructuredDocumentation",
              "src": "3938:81:1",
              "text": " @dev external view function that returns the sliInterval value"
            },
            "functionSelector": "e7ab816a",
            "id": 298,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSliInterval",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 291,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4047:2:1"
            },
            "returnParameters": {
              "id": 294,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 293,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 298,
                  "src": "4072:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 292,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4072:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4071:6:1"
            },
            "scope": 299,
            "src": "4024:89:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 300,
        "src": "522:3594:1"
      }
    ],
    "src": "32:4085:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/wilhempujar/Development/stacktical-dsla-contracts/contracts/SLA/SLA.sol",
    "exportedSymbols": {
      "SLA": [
        299
      ]
    },
    "id": 300,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:1"
      },
      {
        "id": 59,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:1"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 60,
        "nodeType": "ImportDirective",
        "scope": 300,
        "sourceUnit": 2346,
        "src": "91:52:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 61,
        "nodeType": "ImportDirective",
        "scope": 300,
        "sourceUnit": 3356,
        "src": "144:56:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 62,
        "nodeType": "ImportDirective",
        "scope": 300,
        "sourceUnit": 2542,
        "src": "201:51:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/wilhempujar/Development/stacktical-dsla-contracts/contracts/interfaces/IMessenger.sol",
        "file": "../interfaces/IMessenger.sol",
        "id": 63,
        "nodeType": "ImportDirective",
        "scope": 300,
        "sourceUnit": 1931,
        "src": "253:38:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/wilhempujar/Development/stacktical-dsla-contracts/contracts/Whitelist/Whitelist.sol",
        "file": "../Whitelist/Whitelist.sol",
        "id": 64,
        "nodeType": "ImportDirective",
        "scope": 300,
        "sourceUnit": 1676,
        "src": "292:36:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/wilhempujar/Development/stacktical-dsla-contracts/contracts/SLO/SLO.sol",
        "file": "../SLO/SLO.sol",
        "id": 65,
        "nodeType": "ImportDirective",
        "scope": 300,
        "sourceUnit": 1472,
        "src": "329:24:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/wilhempujar/Development/stacktical-dsla-contracts/contracts/SLARegistry.sol",
        "file": "../SLARegistry.sol",
        "id": 66,
        "nodeType": "ImportDirective",
        "scope": 300,
        "sourceUnit": 1348,
        "src": "354:28:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/wilhempujar/Development/stacktical-dsla-contracts/contracts/SLA/Staking.sol",
        "file": "./Staking.sol",
        "id": 67,
        "nodeType": "ImportDirective",
        "scope": 300,
        "sourceUnit": 1126,
        "src": "383:23:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 69,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2345,
              "src": "538:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$2345",
                "typeString": "contract Ownable"
              }
            },
            "id": 70,
            "nodeType": "InheritanceSpecifier",
            "src": "538:7:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 71,
              "name": "Staking",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1125,
              "src": "547:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Staking_$1125",
                "typeString": "contract Staking"
              }
            },
            "id": 72,
            "nodeType": "InheritanceSpecifier",
            "src": "547:7:1"
          }
        ],
        "contractDependencies": [
          1125,
          1953,
          2345
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 68,
          "nodeType": "StructuredDocumentation",
          "src": "408:113:1",
          "text": " @title SLA\n @dev SLA is a service level agreement contract used for service downtime\n compensation"
        },
        "fullyImplemented": true,
        "id": 299,
        "linearizedBaseContracts": [
          299,
          1125,
          2345,
          1953
        ],
        "name": "SLA",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 75,
            "libraryName": {
              "contractScope": null,
              "id": 73,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2541,
              "src": "568:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$2541",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "562:27:1",
            "typeName": {
              "id": 74,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "581:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "3a4b66f1",
            "id": 77,
            "mutability": "mutable",
            "name": "stake",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 299,
            "src": "665:17:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 76,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "665:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 79,
            "mutability": "mutable",
            "name": "sliInterval",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 299,
            "src": "730:24:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 78,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "730:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "c623674f",
            "id": 81,
            "mutability": "mutable",
            "name": "ipfsHash",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 299,
            "src": "832:22:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 80,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "832:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7b103999",
            "id": 83,
            "mutability": "mutable",
            "name": "registry",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 299,
            "src": "905:27:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SLARegistry_$1347",
              "typeString": "contract SLARegistry"
            },
            "typeName": {
              "contractScope": null,
              "id": 82,
              "name": "SLARegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1347,
              "src": "905:11:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SLARegistry_$1347",
                "typeString": "contract SLARegistry"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "SLA.SLI",
            "id": 90,
            "members": [
              {
                "constant": false,
                "id": 85,
                "mutability": "mutable",
                "name": "timestamp",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 90,
                "src": "1008:14:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 84,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1008:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 87,
                "mutability": "mutable",
                "name": "value",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 90,
                "src": "1032:10:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 86,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1032:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 89,
                "mutability": "mutable",
                "name": "ipfsHash",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 90,
                "src": "1052:15:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 88,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1052:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "SLI",
            "nodeType": "StructDefinition",
            "scope": 299,
            "src": "987:87:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b0227b47",
            "id": 94,
            "mutability": "mutable",
            "name": "SLOs",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 299,
            "src": "1142:35:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$1471_$",
              "typeString": "mapping(bytes32 => contract SLO)"
            },
            "typeName": {
              "id": 93,
              "keyType": {
                "id": 91,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1150:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1142:23:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$1471_$",
                "typeString": "mapping(bytes32 => contract SLO)"
              },
              "valueType": {
                "contractScope": null,
                "id": 92,
                "name": "SLO",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1471,
                "src": "1161:3:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_SLO_$1471",
                  "typeString": "contract SLO"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "94199c61",
            "id": 99,
            "mutability": "mutable",
            "name": "SLIs",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 299,
            "src": "1244:37:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$90_storage_$dyn_storage_$",
              "typeString": "mapping(bytes32 => struct SLA.SLI[])"
            },
            "typeName": {
              "id": 98,
              "keyType": {
                "id": 95,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1252:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1244:25:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$90_storage_$dyn_storage_$",
                "typeString": "mapping(bytes32 => struct SLA.SLI[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 96,
                  "name": "SLI",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 90,
                  "src": "1263:3:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SLI_$90_storage_ptr",
                    "typeString": "struct SLA.SLI"
                  }
                },
                "id": 97,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "1263:5:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_SLI_$90_storage_$dyn_storage_ptr",
                  "typeString": "struct SLA.SLI[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 102,
            "mutability": "mutable",
            "name": "SLONames",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 299,
            "src": "1350:18:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
              "typeString": "bytes32[]"
            },
            "typeName": {
              "baseType": {
                "id": 100,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1350:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "id": 101,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "1350:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                "typeString": "bytes32[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 103,
              "nodeType": "StructuredDocumentation",
              "src": "1375:220:1",
              "text": " @dev event for SLI creation logging\n @param _timestamp the time the SLI has been registered\n @param _value the value of the SLI\n @param _hash the ipfs hash that stores additional info"
            },
            "id": 111,
            "name": "SLICreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 105,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_timestamp",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 111,
                  "src": "1617:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1617:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 107,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 111,
                  "src": "1634:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 106,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1634:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 109,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_hash",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 111,
                  "src": "1647:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1647:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1616:44:1"
            },
            "src": "1600:61:1"
          },
          {
            "body": {
              "id": 127,
              "nodeType": "Block",
              "src": "1807:80:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 115,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1825:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1825:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 119,
                                  "name": "registry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 83,
                                  "src": "1847:8:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SLARegistry_$1347",
                                    "typeString": "contract SLARegistry"
                                  }
                                },
                                "id": 120,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "messenger",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1139,
                                "src": "1847:18:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IMessenger_$1930_$",
                                  "typeString": "function () view external returns (contract IMessenger)"
                                }
                              },
                              "id": 121,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1847:20:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IMessenger_$1930",
                                "typeString": "contract IMessenger"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IMessenger_$1930",
                                "typeString": "contract IMessenger"
                              }
                            ],
                            "id": 118,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1839:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 117,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1839:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1839:29:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1825:43:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 114,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1817:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1817:52:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 125,
                  "nodeType": "ExpressionStatement",
                  "src": "1817:52:1"
                },
                {
                  "id": 126,
                  "nodeType": "PlaceholderStatement",
                  "src": "1879:1:1"
                }
              ]
            },
            "documentation": {
              "id": 112,
              "nodeType": "StructuredDocumentation",
              "src": "1668:109:1",
              "text": " @dev Throws if called by any address other than the Oraclize or\n messenger contract."
            },
            "id": 128,
            "name": "onlyMessenger",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1804:2:1"
            },
            "src": "1782:105:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 216,
              "nodeType": "Block",
              "src": "2603:396:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 152,
                            "name": "_SLOs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 137,
                            "src": "2621:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_SLO_$1471_$dyn_memory_ptr",
                              "typeString": "contract SLO[] memory"
                            }
                          },
                          "id": 153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2621:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "35",
                          "id": 154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2636:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "src": "2621:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 151,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2613:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2613:25:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 157,
                  "nodeType": "ExpressionStatement",
                  "src": "2613:25:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 159,
                            "name": "_SLONames",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 134,
                            "src": "2656:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          "id": 160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2656:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 161,
                            "name": "_SLOs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 137,
                            "src": "2676:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_SLO_$1471_$dyn_memory_ptr",
                              "typeString": "contract SLO[] memory"
                            }
                          },
                          "id": 162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2676:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2656:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 158,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2648:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2648:41:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 165,
                  "nodeType": "ExpressionStatement",
                  "src": "2648:41:1"
                },
                {
                  "body": {
                    "id": 187,
                    "nodeType": "Block",
                    "src": "2739:54:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 177,
                              "name": "SLOs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 94,
                              "src": "2753:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$1471_$",
                                "typeString": "mapping(bytes32 => contract SLO)"
                              }
                            },
                            "id": 181,
                            "indexExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 178,
                                "name": "_SLONames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 134,
                                "src": "2758:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                }
                              },
                              "id": 180,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 179,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 167,
                                "src": "2768:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2758:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2753:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLO_$1471",
                              "typeString": "contract SLO"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 182,
                              "name": "_SLOs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 137,
                              "src": "2774:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_SLO_$1471_$dyn_memory_ptr",
                                "typeString": "contract SLO[] memory"
                              }
                            },
                            "id": 184,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 183,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 167,
                              "src": "2780:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2774:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLO_$1471",
                              "typeString": "contract SLO"
                            }
                          },
                          "src": "2753:29:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$1471",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 186,
                        "nodeType": "ExpressionStatement",
                        "src": "2753:29:1"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 170,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 167,
                      "src": "2716:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 171,
                        "name": "_SLOs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 137,
                        "src": "2720:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_SLO_$1471_$dyn_memory_ptr",
                          "typeString": "contract SLO[] memory"
                        }
                      },
                      "id": 172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2720:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2716:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 188,
                  "initializationExpression": {
                    "assignments": [
                      167
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 167,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 188,
                        "src": "2704:6:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 166,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2704:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 169,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2713:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2704:10:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2734:3:1",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 174,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 167,
                        "src": "2734:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 176,
                    "nodeType": "ExpressionStatement",
                    "src": "2734:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "2700:93:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 190,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 131,
                        "src": "2821:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 189,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2344,
                      "src": "2803:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2803:25:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 192,
                  "nodeType": "ExpressionStatement",
                  "src": "2803:25:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 193,
                      "name": "SLONames",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102,
                      "src": "2838:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                        "typeString": "bytes32[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 194,
                      "name": "_SLONames",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "2849:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[] memory"
                      }
                    },
                    "src": "2838:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                      "typeString": "bytes32[] storage ref"
                    }
                  },
                  "id": 196,
                  "nodeType": "ExpressionStatement",
                  "src": "2838:20:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 197,
                      "name": "stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77,
                      "src": "2868:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 198,
                      "name": "_stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 139,
                      "src": "2876:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2868:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 200,
                  "nodeType": "ExpressionStatement",
                  "src": "2868:14:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 201,
                      "name": "ipfsHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81,
                      "src": "2892:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 202,
                      "name": "_ipfsHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "2903:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2892:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 204,
                  "nodeType": "ExpressionStatement",
                  "src": "2892:20:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 205,
                      "name": "registry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "2922:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLARegistry_$1347",
                        "typeString": "contract SLARegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 207,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2945:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2945:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 206,
                        "name": "SLARegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1347,
                        "src": "2933:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SLARegistry_$1347_$",
                          "typeString": "type(contract SLARegistry)"
                        }
                      },
                      "id": 209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2933:23:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLARegistry_$1347",
                        "typeString": "contract SLARegistry"
                      }
                    },
                    "src": "2922:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SLARegistry_$1347",
                      "typeString": "contract SLARegistry"
                    }
                  },
                  "id": 211,
                  "nodeType": "ExpressionStatement",
                  "src": "2922:34:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 212,
                      "name": "sliInterval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79,
                      "src": "2966:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 213,
                      "name": "_sliInterval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 143,
                      "src": "2980:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2966:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 215,
                  "nodeType": "ExpressionStatement",
                  "src": "2966:26:1"
                }
              ]
            },
            "documentation": {
              "id": 129,
              "nodeType": "StructuredDocumentation",
              "src": "1897:447:1",
              "text": " @dev constructor\n @param _owner the owner of the service level agreement\n @param _SLONames the names of the service level objectives in a bytes32\n array\n @param _SLOs an array with the service level objective addresses\n @param _stake the amount required to stake when subscribing to the\n agreement\n @param _ipfsHash the ipfs hash that stores extra information about the\n agreement"
            },
            "id": 217,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 148,
                    "name": "_tokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 145,
                    "src": "2589:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_bDSLAToken_$1912",
                      "typeString": "contract bDSLAToken"
                    }
                  }
                ],
                "id": 149,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 147,
                  "name": "Staking",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1125,
                  "src": "2581:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Staking_$1125_$",
                    "typeString": "type(contract Staking)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2581:22:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 131,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 217,
                  "src": "2370:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 130,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2370:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 134,
                  "mutability": "mutable",
                  "name": "_SLONames",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 217,
                  "src": "2394:26:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 132,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2394:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 133,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2394:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 137,
                  "mutability": "mutable",
                  "name": "_SLOs",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 217,
                  "src": "2430:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_SLO_$1471_$dyn_memory_ptr",
                    "typeString": "contract SLO[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 135,
                      "name": "SLO",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 1471,
                      "src": "2430:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLO_$1471",
                        "typeString": "contract SLO"
                      }
                    },
                    "id": 136,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2430:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_SLO_$1471_$dyn_storage_ptr",
                      "typeString": "contract SLO[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 139,
                  "mutability": "mutable",
                  "name": "_stake",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 217,
                  "src": "2458:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2458:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 141,
                  "mutability": "mutable",
                  "name": "_ipfsHash",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 217,
                  "src": "2479:23:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2479:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 143,
                  "mutability": "mutable",
                  "name": "_sliInterval",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 217,
                  "src": "2512:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2512:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 145,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 217,
                  "src": "2539:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_bDSLAToken_$1912",
                    "typeString": "contract bDSLAToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 144,
                    "name": "bDSLAToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1912,
                    "src": "2539:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_bDSLAToken_$1912",
                      "typeString": "contract bDSLAToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2360:209:1"
            },
            "returnParameters": {
              "id": 150,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2603:0:1"
            },
            "scope": 299,
            "src": "2349:650:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 274,
              "nodeType": "Block",
              "src": "3401:308:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 236,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -17,
                            "src": "3435:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 237,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 222,
                            "src": "3440:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 238,
                            "name": "_hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 224,
                            "src": "3448:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          ],
                          "id": 235,
                          "name": "SLI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 90,
                          "src": "3431:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_SLI_$90_storage_ptr_$",
                            "typeString": "type(struct SLA.SLI storage pointer)"
                          }
                        },
                        "id": 239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3431:23:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SLI_$90_memory_ptr",
                          "typeString": "struct SLA.SLI memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SLI_$90_memory_ptr",
                          "typeString": "struct SLA.SLI memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 231,
                          "name": "SLIs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99,
                          "src": "3411:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$90_storage_$dyn_storage_$",
                            "typeString": "mapping(bytes32 => struct SLA.SLI storage ref[] storage ref)"
                          }
                        },
                        "id": 233,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 232,
                          "name": "_SLOName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 220,
                          "src": "3416:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3411:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_SLI_$90_storage_$dyn_storage",
                          "typeString": "struct SLA.SLI storage ref[] storage ref"
                        }
                      },
                      "id": 234,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3411:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_SLI_$90_storage_$returns$__$",
                        "typeString": "function (struct SLA.SLI storage ref)"
                      }
                    },
                    "id": 240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3411:44:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 241,
                  "nodeType": "ExpressionStatement",
                  "src": "3411:44:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 243,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -17,
                        "src": "3482:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 244,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 222,
                        "src": "3487:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 245,
                        "name": "_hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 224,
                        "src": "3495:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 242,
                      "name": "SLICreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "3471:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3471:30:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 247,
                  "nodeType": "EmitStatement",
                  "src": "3466:35:1"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3524:36:1",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 252,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 222,
                          "src": "3553:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 248,
                            "name": "SLOs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 94,
                            "src": "3525:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$1471_$",
                              "typeString": "mapping(bytes32 => contract SLO)"
                            }
                          },
                          "id": 250,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 249,
                            "name": "_SLOName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 220,
                            "src": "3530:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3525:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$1471",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isSLOHonored",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1470,
                        "src": "3525:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view external returns (bool)"
                        }
                      },
                      "id": 253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3525:35:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 272,
                    "nodeType": "Block",
                    "src": "3636:67:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 264,
                                "name": "periods",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 348,
                                "src": "3650:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Period_$335_storage_$dyn_storage",
                                  "typeString": "struct Staking.Period storage ref[] storage ref"
                                }
                              },
                              "id": 266,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 265,
                                "name": "_period",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 226,
                                "src": "3658:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3650:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Period_$335_storage",
                                "typeString": "struct Staking.Period storage ref"
                              }
                            },
                            "id": 267,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 324,
                            "src": "3650:23:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$314",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 268,
                              "name": "Status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 314,
                              "src": "3676:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Status_$314_$",
                                "typeString": "type(enum Staking.Status)"
                              }
                            },
                            "id": 269,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Respected",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3676:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$314",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "src": "3650:42:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$314",
                            "typeString": "enum Staking.Status"
                          }
                        },
                        "id": 271,
                        "nodeType": "ExpressionStatement",
                        "src": "3650:42:1"
                      }
                    ]
                  },
                  "id": 273,
                  "nodeType": "IfStatement",
                  "src": "3521:182:1",
                  "trueBody": {
                    "id": 263,
                    "nodeType": "Block",
                    "src": "3562:70:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 255,
                                "name": "periods",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 348,
                                "src": "3576:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Period_$335_storage_$dyn_storage",
                                  "typeString": "struct Staking.Period storage ref[] storage ref"
                                }
                              },
                              "id": 257,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 256,
                                "name": "_period",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 226,
                                "src": "3584:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3576:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Period_$335_storage",
                                "typeString": "struct Staking.Period storage ref"
                              }
                            },
                            "id": 258,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 324,
                            "src": "3576:23:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$314",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 259,
                              "name": "Status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 314,
                              "src": "3602:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Status_$314_$",
                                "typeString": "type(enum Staking.Status)"
                              }
                            },
                            "id": 260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "NotRespected",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3602:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$314",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "src": "3576:45:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$314",
                            "typeString": "enum Staking.Status"
                          }
                        },
                        "id": 262,
                        "nodeType": "ExpressionStatement",
                        "src": "3576:45:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 218,
              "nodeType": "StructuredDocumentation",
              "src": "3005:259:1",
              "text": " @dev external function to register SLI's and check them against the SLO's\n @param _SLOName the name of the SLO in bytes32\n @param _value the value of the SLI to check\n @param _hash the ipfs hash with additional information"
            },
            "functionSelector": "e23ef92c",
            "id": 275,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 229,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 228,
                  "name": "onlyMessenger",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 128,
                  "src": "3383:13:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3383:13:1"
              }
            ],
            "name": "registerSLI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 227,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 220,
                  "mutability": "mutable",
                  "name": "_SLOName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 275,
                  "src": "3290:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 219,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3290:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 222,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 275,
                  "src": "3308:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 221,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3308:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 224,
                  "mutability": "mutable",
                  "name": "_hash",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 275,
                  "src": "3321:21:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 223,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3321:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 226,
                  "mutability": "mutable",
                  "name": "_period",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 275,
                  "src": "3344:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 225,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3344:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3289:68:1"
            },
            "returnParameters": {
              "id": 230,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3401:0:1"
            },
            "scope": 299,
            "src": "3269:440:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 288,
              "nodeType": "Block",
              "src": "3894:38:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 284,
                      "name": "SLIs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99,
                      "src": "3911:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$90_storage_$dyn_storage_$",
                        "typeString": "mapping(bytes32 => struct SLA.SLI storage ref[] storage ref)"
                      }
                    },
                    "id": 286,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 285,
                      "name": "_SLOName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 278,
                      "src": "3916:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3911:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_SLI_$90_storage_$dyn_storage",
                      "typeString": "struct SLA.SLI storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 283,
                  "id": 287,
                  "nodeType": "Return",
                  "src": "3904:21:1"
                }
              ]
            },
            "documentation": {
              "id": 276,
              "nodeType": "StructuredDocumentation",
              "src": "3715:106:1",
              "text": " @dev external function to get SLI\n @param _SLOName the name of the SLO in bytes32"
            },
            "functionSelector": "02e8b893",
            "id": 289,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSLI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 278,
                  "mutability": "mutable",
                  "name": "_SLOName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 289,
                  "src": "3842:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 277,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3842:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3841:18:1"
            },
            "returnParameters": {
              "id": 283,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 282,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 289,
                  "src": "3880:12:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_SLI_$90_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct SLA.SLI[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 280,
                      "name": "SLI",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 90,
                      "src": "3880:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SLI_$90_storage_ptr",
                        "typeString": "struct SLA.SLI"
                      }
                    },
                    "id": 281,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3880:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_SLI_$90_storage_$dyn_storage_ptr",
                      "typeString": "struct SLA.SLI[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3879:14:1"
            },
            "scope": 299,
            "src": "3826:106:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 297,
              "nodeType": "Block",
              "src": "4078:35:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 295,
                    "name": "sliInterval",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 79,
                    "src": "4095:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 294,
                  "id": 296,
                  "nodeType": "Return",
                  "src": "4088:18:1"
                }
              ]
            },
            "documentation": {
              "id": 290,
              "nodeType": "StructuredDocumentation",
              "src": "3938:81:1",
              "text": " @dev external view function that returns the sliInterval value"
            },
            "functionSelector": "e7ab816a",
            "id": 298,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSliInterval",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 291,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4047:2:1"
            },
            "returnParameters": {
              "id": 294,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 293,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 298,
                  "src": "4072:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 292,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4072:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4071:6:1"
            },
            "scope": 299,
            "src": "4024:89:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 300,
        "src": "522:3594:1"
      }
    ],
    "src": "32:4085:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.5",
  "updatedAt": "2020-10-14T21:16:38.741Z",
  "devdoc": {
    "details": "SLA is a service level agreement contract used for service downtime compensation",
    "events": {
      "SLICreated(uint256,uint256,string)": {
        "details": "event for SLI creation logging",
        "params": {
          "_hash": "the ipfs hash that stores additional info",
          "_timestamp": "the time the SLI has been registered",
          "_value": "the value of the SLI"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "constructor",
        "params": {
          "_SLONames": "the names of the service level objectives in a bytes32 array",
          "_SLOs": "an array with the service level objective addresses",
          "_ipfsHash": "the ipfs hash that stores extra information about the agreement",
          "_owner": "the owner of the service level agreement",
          "_stake": "the amount required to stake when subscribing to the agreement"
        }
      },
      "getSLI(bytes32)": {
        "details": "external function to get SLI",
        "params": {
          "_SLOName": "the name of the SLO in bytes32"
        }
      },
      "getSliInterval()": {
        "details": "external view function that returns the sliInterval value"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "registerSLI(bytes32,uint256,string,uint256)": {
        "details": "external function to register SLI's and check them against the SLO's",
        "params": {
          "_SLOName": "the name of the SLO in bytes32",
          "_hash": "the ipfs hash with additional information",
          "_value": "the value of the SLI to check"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "SLA",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}