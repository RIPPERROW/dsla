{
  "contractName": "SLA",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "bytes32[]",
          "name": "_SLONames",
          "type": "bytes32[]"
        },
        {
          "internalType": "contract SLO[]",
          "name": "_SLOs",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "_stake",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_ipfsHash",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_sliInterval",
          "type": "uint256"
        },
        {
          "internalType": "contract bDSLAToken",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_periodId",
          "type": "uint256"
        }
      ],
      "name": "SLICreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "SLIs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "periodId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "SLOs",
      "outputs": [
        {
          "internalType": "contract SLO",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "addAllowedTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bDSLA",
      "outputs": [
        {
          "internalType": "contract bDSLAToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_period",
          "type": "uint256"
        }
      ],
      "name": "claimCompensation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_period",
          "type": "uint256"
        }
      ],
      "name": "claimReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_periodId",
          "type": "uint256"
        }
      ],
      "name": "getPeriodData",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "periodStart",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "periodEnd",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_period",
          "type": "uint256"
        }
      ],
      "name": "getUserTotalValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ipfsHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "periods",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "sla_period_start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sla_period_end",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "claimed_reward",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "claimed",
          "type": "bool"
        },
        {
          "internalType": "enum Staking.Status",
          "name": "status",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "internalType": "contract SLARegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_period",
          "type": "uint256"
        }
      ],
      "name": "stakeTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "uniqueTokensStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "validator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_period",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_period",
          "type": "uint256"
        }
      ],
      "name": "withdrawAndStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_SLOName",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_periodId",
          "type": "uint256"
        }
      ],
      "name": "registerSLI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_SLOName",
          "type": "bytes32"
        }
      ],
      "name": "getSLI",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "periodId",
              "type": "uint256"
            }
          ],
          "internalType": "struct SLA.SLI[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSliInterval",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"_SLONames\",\"type\":\"bytes32[]\"},{\"internalType\":\"contract SLO[]\",\"name\":\"_SLOs\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_stake\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_ipfsHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_sliInterval\",\"type\":\"uint256\"},{\"internalType\":\"contract bDSLAToken\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_periodId\",\"type\":\"uint256\"}],\"name\":\"SLICreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"SLIs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"periodId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"SLOs\",\"outputs\":[{\"internalType\":\"contract SLO\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"addAllowedTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bDSLA\",\"outputs\":[{\"internalType\":\"contract bDSLAToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"claimCompensation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_periodId\",\"type\":\"uint256\"}],\"name\":\"getPeriodData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"periodStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"periodEnd\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_SLOName\",\"type\":\"bytes32\"}],\"name\":\"getSLI\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"periodId\",\"type\":\"uint256\"}],\"internalType\":\"struct SLA.SLI[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSliInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"getUserTotalValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ipfsHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"periods\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sla_period_start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sla_period_end\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimed_reward\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"claimed\",\"type\":\"bool\"},{\"internalType\":\"enum Staking.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_SLOName\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_periodId\",\"type\":\"uint256\"}],\"name\":\"registerSLI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract SLARegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"stakeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"uniqueTokensStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"validator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"withdrawAndStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"SLA is a service level agreement contract used for service downtime compensation\",\"methods\":{\"constructor\":{\"details\":\"constructor\",\"params\":{\"_SLONames\":\"the names of the service level objectives in a bytes32 array\",\"_SLOs\":\"an array with the service level objective addresses\",\"_ipfsHash\":\"the ipfs hash that stores extra information about the agreement\",\"_owner\":\"the owner of the service level agreement\",\"_stake\":\"the amount required to stake when subscribing to the agreement\"}},\"getSLI(bytes32)\":{\"details\":\"external function to get SLI\",\"params\":{\"_SLOName\":\"the name of the SLO in bytes32\"}},\"getSliInterval()\":{\"details\":\"external view function that returns the sliInterval value\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"registerSLI(bytes32,uint256,uint256)\":{\"details\":\"external function to register SLI's and check them against the SLO's\",\"params\":{\"_SLOName\":\"the name of the SLO in bytes32\",\"_periodId\":\"the id of the given period\",\"_value\":\"the value of the SLI to check\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"SLA\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/matiasbn/Desktop/stacktical-dsla-contracts/contracts/SLA/SLA.sol\":\"SLA\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/matiasbn/Desktop/stacktical-dsla-contracts/contracts/SLA/SLA.sol\":{\"keccak256\":\"0xdca7021e1ad7a0836934dda5566944dbfa9d76212c4510c1700dba68c77cd160\",\"urls\":[\"bzz-raw://9e10974de31e3a66e4a2482c4043eb3c594272e8d1dc2bef9ab70a959f840841\",\"dweb:/ipfs/Qmf482Ph2KSsZmeSNTmL6nXd8gUUjkkYbARMsEvKbD2zJs\"]},\"/Users/matiasbn/Desktop/stacktical-dsla-contracts/contracts/SLA/Staking.sol\":{\"keccak256\":\"0x2e89bb25b969e379791c3c358f7eaea91d6ef43dbe53d870c410b22470fc88a6\",\"urls\":[\"bzz-raw://d953a60b62bcbd6eadac4074ad3f88d22b26f3a72f6bd9c46b592ef6f560aea9\",\"dweb:/ipfs/QmUyXy85zhjFL9xzjiHJYbTP7SVtzRsW4zsXuosobMqxVZ\"]},\"/Users/matiasbn/Desktop/stacktical-dsla-contracts/contracts/SLARegistry.sol\":{\"keccak256\":\"0x7cbe7d327dc83ad6c54fcc5b46709ccbc3a6a66856c6d5d0e41a311c31fb1175\",\"urls\":[\"bzz-raw://051a7baa007e891b0afc52237a1356b3ff3f1088e1eadfe233c33b613333ed30\",\"dweb:/ipfs/QmU8tC2EkgtQcMxnscrf7QjQ8JNMwBEd3zWJYdJEz4ZYP5\"]},\"/Users/matiasbn/Desktop/stacktical-dsla-contracts/contracts/SLO/SLO.sol\":{\"keccak256\":\"0xb3780c0f1623e546723ca72e2352be5fc14550d44076819efa41312bb6ff73ab\",\"urls\":[\"bzz-raw://6592bf18875f1ab7c54b47ee1e8fa9ea193d42310e4d8e97fc304f142096265d\",\"dweb:/ipfs/QmSPZF5s2yq7CTKPPRN5nsUqNMnSreU9MxojrcVsSud6Xe\"]},\"/Users/matiasbn/Desktop/stacktical-dsla-contracts/contracts/Whitelist/Whitelist.sol\":{\"keccak256\":\"0xd9ed433912c1f444391652546b7045830c41af96162891be238e3090b101da0d\",\"urls\":[\"bzz-raw://5da97f11b2b30b667b5f42d9a1b140fd328f66c5ef3d22c192ef04b8071a8cf3\",\"dweb:/ipfs/Qme2uXvEqCspyNGTZ1iBQvkjDRH325ibWpgr9v1yZqsp5w\"]},\"/Users/matiasbn/Desktop/stacktical-dsla-contracts/contracts/bDSLA/bDSLAToken.sol\":{\"keccak256\":\"0xf44b2d42600badd69cfc0cc8d22dcdc20de34dcef1a6299c04070517a0d91a2e\",\"urls\":[\"bzz-raw://065a5c777fc018fcaf8a4d178cde9d6e4462e97d70a96d6c68bc4fb4c31a2da1\",\"dweb:/ipfs/QmQ21x8iwbS8HKjzpxYL1VsSUXcrrw8sXhdsRFBeQmM3H7\"]},\"/Users/matiasbn/Desktop/stacktical-dsla-contracts/contracts/interfaces/IMessenger.sol\":{\"keccak256\":\"0x1666c7ff4895f193105211409df2a309e979131ba11633ef20c0ebce4c8a48d6\",\"urls\":[\"bzz-raw://69c0b8de6b7e862510cbd0b7db100172b069e6ccdc0e96ce71e8874587a4a1bf\",\"dweb:/ipfs/QmdUrUXWMJHjB5BnUWdSp1GN9sC7MPgNJBULxssJFcGDo1\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x92f7900d382761c7faefeaced81c6b4f1aae909ed0551803bfe8f27101956360\",\"urls\":[\"bzz-raw://407c0864143968542e5cf5aa7556916d2cf292b201e3dadb65662e9a3aa24187\",\"dweb:/ipfs/QmSnXzYAUaGLGr7uofRbgQraTJvatbjQLBPhyYiMd18oUJ\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc\",\"urls\":[\"bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3\",\"dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"@openzeppelin/contracts/presets/ERC20PresetMinterPauser.sol\":{\"keccak256\":\"0xe30213b0851987b0455057cdfb65660c05805cbb05b12c0d61b0ff7a99cc36cc\",\"urls\":[\"bzz-raw://1c61711ecc3ad53890dded63c27909a315ba3053c553be29acaa239bc6a7a0cf\",\"dweb:/ipfs/QmQjriBzSyAYQTm4NfWpnnoH8RhZrayyXm2zvpeHkxQnAk\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x91e0bd6a6762d2a1700dab0849de8422611355100576c4beef1e80d82a4104a0\",\"urls\":[\"bzz-raw://73bbd77af0a8b07255d2ffa20728bcf13b116007c9ddac5d37046cfabb0e1e02\",\"dweb:/ipfs/QmRgZgWCWCSMTTaok6o4QvWA6MgB4goS8qpb3sN7bAvaZ9\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0x657b0d90be17331364211d74359df2a734fac864f6e88c80de7626fa33090ffb\",\"urls\":[\"bzz-raw://09cca25fefa2354a424d55a97930c76b11dc50697ba62c85d7affc27a37e830c\",\"dweb:/ipfs/QmPTQBYXxQDSNmMKqwe4WnM8E7NwnpLnkFLSRH8hZRvrVK\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol\":{\"keccak256\":\"0xbab4a97af2a6810a8ffc187205dfb331284949ea5b30caa5b9052828853bb149\",\"urls\":[\"bzz-raw://f53c98e31ed415c2a6f03d99809cd4f2f5fff92a13ee85022922a09df82ee459\",\"dweb:/ipfs/QmXiv4ysuQSRfoXqPpwA1QCreEnqfkrHDGyJTmifoni7dK\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\",\"urls\":[\"bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017\",\"dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390\",\"urls\":[\"bzz-raw://774e78a9ff32792cc95db4d2ceaf3a7965bb7f0bea5e6cb7cff182b450d44b37\",\"dweb:/ipfs/QmRRMC4uj7eAcLW7chynA3sNEYULMFazdLwQHKHQPyzAbA\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xb2a11b236f073662f5a196995863f51c11d006bf7c3de158b316dfa1506c4b79\",\"urls\":[\"bzz-raw://8651649cf0b9efa18c3b01c030276fa320d41adbdc286833417e7f36e357b2f3\",\"dweb:/ipfs/QmafhM2Nd1aP43QVB1eRRZaqRXQKswNfQcWi8U8xjrxCfN\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0x5d1b1dcbc0396f44c1c8d554857f71e3187503bf1e54062bf9ec6782e21f3a08\",\"urls\":[\"bzz-raw://9aa7fa580393aab7ca3d9f606f5ab7434d51e1c0f3632a593fca82c80ef8cc4c\",\"dweb:/ipfs/QmRy84N7QfkwBM2AeR7UB5G1PPHdRLi6s1iyzAwCzevcHe\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620046a8380380620046a8833981810160405281019062000037919062000832565b8060006200004a6200034660201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506004600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506005855110620001ff57600080fd5b84518651146200020e57600080fd5b60008090505b8551811015620002a6578581815181106200022b57fe5b6020026020010151600c60008984815181106200024457fe5b6020026020010151815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808060010191505062000214565b50620002b8876200034e60201b60201c565b85600e9080519060200190620002d092919062000520565b508360088190555082600a9080519060200190620002f092919062000572565b5033600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816009819055505050505050505062000bfe565b600033905090565b6200035e6200034660201b60201c565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614620003ef576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003e690620009f6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141562000462576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200045990620009d4565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b8280548282559060005260206000209081019282156200055f579160200282015b828111156200055e57825182559160200191906001019062000541565b5b5090506200056e9190620005f9565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620005b557805160ff1916838001178555620005e6565b82800160010185558215620005e6579182015b82811115620005e5578251825591602001919060010190620005c8565b5b509050620005f5919062000621565b5090565b6200061e91905b808211156200061a57600081600090555060010162000600565b5090565b90565b6200064691905b808211156200064257600081600090555060010162000628565b5090565b90565b6000815190506200065a8162000b7c565b92915050565b600082601f8301126200067257600080fd5b815162000689620006838262000a46565b62000a18565b91508181835260208401935060208101905083856020840282011115620006af57600080fd5b60005b83811015620006e35781620006c888826200077a565b845260208401935060208301925050600181019050620006b2565b5050505092915050565b600082601f830112620006ff57600080fd5b815162000716620007108262000a6f565b62000a18565b915081818352602084019350602081019050838560208402820111156200073c57600080fd5b60005b8381101562000770578162000755888262000791565b8452602084019350602083019250506001810190506200073f565b5050505092915050565b6000815190506200078b8162000b96565b92915050565b600081519050620007a28162000bb0565b92915050565b600081519050620007b98162000bca565b92915050565b600082601f830112620007d157600080fd5b8151620007e8620007e28262000a98565b62000a18565b915080825260208301602083018583830111156200080557600080fd5b6200081283828462000b46565b50505092915050565b6000815190506200082c8162000be4565b92915050565b600080600080600080600060e0888a0312156200084e57600080fd5b60006200085e8a828b0162000649565b975050602088015167ffffffffffffffff8111156200087c57600080fd5b6200088a8a828b0162000660565b965050604088015167ffffffffffffffff811115620008a857600080fd5b620008b68a828b01620006ed565b9550506060620008c98a828b016200081b565b945050608088015167ffffffffffffffff811115620008e757600080fd5b620008f58a828b01620007bf565b93505060a0620009088a828b016200081b565b92505060c06200091b8a828b01620007a8565b91505092959891949750929550565b60006200093960268362000ac5565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000620009a160208362000ac5565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b60006020820190508181036000830152620009ef816200092a565b9050919050565b6000602082019050818103600083015262000a118162000992565b9050919050565b6000604051905081810181811067ffffffffffffffff8211171562000a3c57600080fd5b8060405250919050565b600067ffffffffffffffff82111562000a5e57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111562000a8757600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111562000ab057600080fd5b601f19601f8301169050602081019050919050565b600082825260208201905092915050565b600062000ae38262000b1c565b9050919050565b6000819050919050565b600062000b018262000ad6565b9050919050565b600062000b158262000ad6565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b8381101562000b6657808201518184015260208101905062000b49565b8381111562000b76576000848401525b50505050565b62000b878162000ad6565b811462000b9357600080fd5b50565b62000ba18162000aea565b811462000bad57600080fd5b50565b62000bbb8162000af4565b811462000bc757600080fd5b50565b62000bd58162000b08565b811462000be157600080fd5b50565b62000bef8162000b3c565b811462000bfb57600080fd5b50565b613a9a8062000c0e6000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c806394199c61116100de578063e7ab816a11610097578063f2fde38b11610071578063f2fde38b14610440578063f3fef3a31461045c578063fc875ece14610478578063fd5e6dd1146104a957610173565b8063e7ab816a146103be578063ea4a1104146103dc578063f10bd7721461041057610173565b806394199c61146102d6578063ae169a5014610308578063b0227b4714610324578063b83e023414610354578063c623674f14610384578063cec534d6146103a257610173565b8063715018a611610130578063715018a61461023a57806375fdf2a9146102445780637b10399914610260578063817b1cd21461027e578063869c39251461029c5780638da5cb5b146102b857610173565b806302e8b89314610178578063171e44ea146101a85780633a4b66f1146101c45780633a5381b5146101e257806353e85fd5146102005780635f4efaba1461021c575b600080fd5b610192600480360381019061018d9190612dae565b6104d9565b60405161019f919061351d565b60405180910390f35b6101c260048036038101906101bd9190612cd1565b610569565b005b6101cc610665565b6040516101d99190613752565b60405180910390f35b6101ea61066b565b6040516101f79190613479565b60405180910390f35b61021a60048036038101906102159190612e8b565b610691565b005b610224610a90565b6040516102319190613575565b60405180910390f35b610242610ab6565b005b61025e60048036038101906102599190612d36565b610c0b565b005b610268611298565b604051610275919061353f565b60405180910390f35b6102866112be565b6040516102939190613752565b60405180910390f35b6102b660048036038101906102b19190612e13565b6112c4565b005b6102c0611598565b6040516102cd9190613479565b60405180910390f35b6102f060048036038101906102eb9190612dd7565b6115c1565b6040516102ff93929190613796565b60405180910390f35b610322600480360381019061031d9190612e8b565b611605565b005b61033e60048036038101906103399190612dae565b6119dc565b60405161034b919061355a565b60405180910390f35b61036e60048036038101906103699190612cd1565b611a0f565b60405161037b9190613752565b60405180910390f35b61038c611a27565b6040516103999190613590565b60405180910390f35b6103bc60048036038101906103b79190612eb4565b611ac5565b005b6103c6611e8c565b6040516103d39190613752565b60405180910390f35b6103f660048036038101906103f19190612e8b565b611e96565b6040516104079594939291906137cd565b60405180910390f35b61042a60048036038101906104259190612cfa565b611ef3565b6040516104379190613752565b60405180910390f35b61045a60048036038101906104559190612cd1565b612052565b005b61047660048036038101906104719190612cfa565b612216565b005b610492600480360381019061048d9190612e8b565b612727565b6040516104a092919061376d565b60405180910390f35b6104c360048036038101906104be9190612e8b565b612771565b6040516104d09190613479565b60405180910390f35b6060600d6000838152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561055e578382906000526020600020906003020160405180606001604052908160008201548152602001600182015481526020016002820154815250508152602001906001019061050e565b505050509050919050565b6105716127ad565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146105ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f6906136b2565b60405180910390fd5b6004819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60085481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b806005818154811061069f57fe5b90600052602060002090600602016000015442101580156106de5750600581815481106106c857fe5b9060005260206000209060060201600101544211155b6106e757600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610778576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076f90613632565b60405180910390fd5b60028081111561078457fe5b6005838154811061079157fe5b906000526020600020906006020160030160019054906101000a900460ff1660028111156107bb57fe5b146107fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f2906135d2565b60405180910390fd5b60006005838154811061080a57fe5b906000526020600020906006020160050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610899576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089090613732565b60405180910390fd5b60006108a53384611ef3565b905060006108d0600a6108c26003856127b590919063ffffffff16565b61282590919063ffffffff16565b90506108e78260075461286f90919063ffffffff16565b60078190555081600585815481106108fb57fe5b906000526020600020906006020160050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016109aa9291906134cb565b602060405180830381600087803b1580156109c457600080fd5b505af11580156109d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fc9190612d85565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342966c68826040518263ffffffff1660e01b8152600401610a589190613752565b600060405180830381600087803b158015610a7257600080fd5b505af1158015610a86573d6000803e3d6000fd5b5050505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610abe6127ad565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b43906136b2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610c9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9390613632565b60405180910390fd5b600060058281548110610cab57fe5b906000526020600020906006020160040160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610d77576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6e90613652565b60405180910390fd5b610d80836128b9565b610dbf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db6906136f2565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663095ea7b330846040518363ffffffff1660e01b8152600401610dfa9291906134f4565b602060405180830381600087803b158015610e1457600080fd5b505af1158015610e28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4c9190612d85565b508273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610e8a93929190613494565b602060405180830381600087803b158015610ea457600080fd5b505af1158015610eb8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610edc9190612d85565b50610f888260058381548110610eee57fe5b906000526020600020906006020160040160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461295b90919063ffffffff16565b60058281548110610f9557fe5b906000526020600020906006020160040160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506110398260075461295b90919063ffffffff16565b60078190555060006005828154811061104e57fe5b906000526020600020906006020160040160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000611114600380549050600585815481106110f457fe5b90600052602060002090600602016002015461282590919063ffffffff16565b905060006005848154811061112557fe5b906000526020600020906006020160040160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506111c98260075461286f90919063ffffffff16565b600781905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33611221848661286f90919063ffffffff16565b6040518363ffffffff1660e01b815260040161123e9291906134cb565b602060405180830381600087803b15801561125857600080fd5b505af115801561126c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112909190612d85565b505050505050565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60075481565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633cb747bf6040518163ffffffff1660e01b815260040160206040518083038186803b15801561132c57600080fd5b505afa158015611340573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113649190612e62565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461139b57600080fd5b600d6000848152602001908152602001600020604051806060016040528042815260200184815260200183815250908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000155602082015181600101556040820151816002015550507fc95987c1992805ee34bdc915e017cceae36ba1c156b9911fa7e691e6435eb46e42838360405161144593929190613796565b60405180910390a1600c600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663868d08f7836040518263ffffffff1660e01b81526004016114b99190613752565b60206040518083038186803b1580156114d157600080fd5b505afa1580156114e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115099190612d85565b6115525760026005828154811061151c57fe5b906000526020600020906006020160030160016101000a81548160ff0219169083600281111561154857fe5b0217905550611593565b60016005828154811061156157fe5b906000526020600020906006020160030160016101000a81548160ff0219169083600281111561158d57fe5b02179055505b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600d60205281600052604060002081815481106115da57fe5b9060005260206000209060030201600091509150508060000154908060010154908060020154905083565b806005818154811061161357fe5b906000526020600020906006020160000154421015801561165257506005818154811061163c57fe5b9060005260206000209060060201600101544211155b61165b57600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146116eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116e290613712565b60405180910390fd5b600160028111156116f857fe5b6005838154811061170557fe5b906000526020600020906006020160030160019054906101000a900460ff16600281111561172f57fe5b1461176f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611766906135b2565b60405180910390fd5b6005828154811061177c57fe5b906000526020600020906006020160030160009054906101000a900460ff16156117db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117d290613672565b60405180910390fd5b60006117f760058054905060075461282590919063ffffffff16565b90506000611822600a6118146003856127b590919063ffffffff16565b61282590919063ffffffff16565b90506118398260075461286f90919063ffffffff16565b600781905550816005858154811061184d57fe5b90600052602060002090600602016002018190555060016005858154811061187157fe5b906000526020600020906006020160030160006101000a81548160ff021916908315150217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016118f69291906134cb565b602060405180830381600087803b15801561191057600080fd5b505af1158015611924573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119489190612d85565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342966c68826040518263ffffffff1660e01b81526004016119a49190613752565b600060405180830381600087803b1580156119be57600080fd5b505af11580156119d2573d6000803e3d6000fd5b5050505050505050565b600c6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60066020528060005260406000206000915090505481565b600a8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611abd5780601f10611a9257610100808354040283529160200191611abd565b820191906000526020600020905b815481529060010190602001808311611aa057829003601f168201915b505050505081565b60008311611b08576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611aff906136d2565b60405180910390fd5b611b11826128b9565b611b50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b47906136f2565b60405180910390fd5b611b5b3383836129b0565b8173ffffffffffffffffffffffffffffffffffffffff1663095ea7b330856040518363ffffffff1660e01b8152600401611b969291906134f4565b602060405180830381600087803b158015611bb057600080fd5b505af1158015611bc4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611be89190612d85565b508173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401611c2693929190613494565b602060405180830381600087803b158015611c4057600080fd5b505af1158015611c54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c789190612d85565b50611d248360058381548110611c8a57fe5b906000526020600020906006020160040160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461295b90919063ffffffff16565b60058281548110611d3157fe5b906000526020600020906006020160040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611dd58360075461295b90919063ffffffff16565b6007819055506001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415611e87576003339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b505050565b6000600954905090565b60058181548110611ea357fe5b90600052602060002090600602016000915090508060000154908060010154908060020154908060030160009054906101000a900460ff16908060030160019054906101000a900460ff16905085565b600080600090506000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411156120485760008090505b6004805490508110156120465761203760058581548110611f6557fe5b9060005260206000209060060201600401600060048481548110611f8557fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548361295b90919063ffffffff16565b91508080600101915050611f48565b505b8091505092915050565b61205a6127ad565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146120e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120df906136b2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612158576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161214f906135f2565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156122a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161229e90613632565b60405180910390fd5b6000600582815481106122b657fe5b906000526020600020906006020160040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411612382576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161237990613652565b60405180910390fd5b61238b826128b9565b6123ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123c1906136f2565b60405180910390fd5b6000600582815481106123d957fe5b906000526020600020906006020160040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600061249f6003805490506005858154811061247f57fe5b90600052602060002090600602016002015461282590919063ffffffff16565b90506000600584815481106124b057fe5b906000526020600020906006020160040160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506125548260075461286f90919063ffffffff16565b6007819055508373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb3361258a848661286f90919063ffffffff16565b6040518363ffffffff1660e01b81526004016125a79291906134cb565b602060405180830381600087803b1580156125c157600080fd5b505af11580156125d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125f99190612d85565b5061264d6001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461286f90919063ffffffff16565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414156127215760006126e333612aec565b9050600381815481106126f257fe5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055505b50505050565b6000806005838154811061273757fe5b9060005260206000209060060201600001546005848154811061275657fe5b90600052602060002090600602016001015491509150915091565b6003818154811061277e57fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b6000808314156127c8576000905061281f565b60008284029050828482816127d957fe5b041461281a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161281190613692565b60405180910390fd5b809150505b92915050565b600061286783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612bac565b905092915050565b60006128b183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612c0d565b905092915050565b600080600090505b600480549050811015612950578273ffffffffffffffffffffffffffffffffffffffff16600482815481106128f257fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612943576001915050612956565b80806001019150506128c1565b50600090505b919050565b6000808284019050838110156129a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161299d90613612565b60405180910390fd5b8091505092915050565b6000600582815481106129bf57fe5b906000526020600020906006020160040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411612ae757612aa36001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461295b90919063ffffffff16565b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b505050565b600080600090505b600380549050811015612b82578273ffffffffffffffffffffffffffffffffffffffff1660038281548110612b2557fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612b755780915050612ba7565b8080600101915050612af4565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90505b919050565b60008083118290612bf3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612bea9190613590565b60405180910390fd5b506000838581612bff57fe5b049050809150509392505050565b6000838311158290612c55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c4c9190613590565b60405180910390fd5b5060008385039050809150509392505050565b600081359050612c77816139f1565b92915050565b600081519050612c8c81613a08565b92915050565b600081359050612ca181613a1f565b92915050565b600081519050612cb681613a36565b92915050565b600081359050612ccb81613a4d565b92915050565b600060208284031215612ce357600080fd5b6000612cf184828501612c68565b91505092915050565b60008060408385031215612d0d57600080fd5b6000612d1b85828601612c68565b9250506020612d2c85828601612cbc565b9150509250929050565b600080600060608486031215612d4b57600080fd5b6000612d5986828701612c68565b9350506020612d6a86828701612cbc565b9250506040612d7b86828701612cbc565b9150509250925092565b600060208284031215612d9757600080fd5b6000612da584828501612c7d565b91505092915050565b600060208284031215612dc057600080fd5b6000612dce84828501612c92565b91505092915050565b60008060408385031215612dea57600080fd5b6000612df885828601612c92565b9250506020612e0985828601612cbc565b9150509250929050565b600080600060608486031215612e2857600080fd5b6000612e3686828701612c92565b9350506020612e4786828701612cbc565b9250506040612e5886828701612cbc565b9150509250925092565b600060208284031215612e7457600080fd5b6000612e8284828501612ca7565b91505092915050565b600060208284031215612e9d57600080fd5b6000612eab84828501612cbc565b91505092915050565b600080600060608486031215612ec957600080fd5b6000612ed786828701612cbc565b9350506020612ee886828701612c68565b9250506040612ef986828701612cbc565b9150509250925092565b6000612f0f8383613419565b60608301905092915050565b612f24816138ec565b82525050565b612f3381613875565b82525050565b6000612f4482613830565b612f4e8185613853565b9350612f5983613820565b8060005b83811015612f8a578151612f718882612f03565b9750612f7c83613846565b925050600181019050612f5d565b5085935050505092915050565b612fa081613887565b82525050565b612faf816138fe565b82525050565b612fbe81613922565b82525050565b612fcd81613946565b82525050565b612fdc8161396a565b82525050565b6000612fed8261383b565b612ff78185613864565b93506130078185602086016139a0565b613010816139d3565b840191505092915050565b6000613028601383613864565b91507f534c41206e6f74207265737065637465642021000000000000000000000000006000830152602082019050919050565b6000613068600f83613864565b91507f534c4120726573706563746564202100000000000000000000000000000000006000830152602082019050919050565b60006130a8602683613864565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061310e601b83613864565b91507f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006000830152602082019050919050565b600061314e601583613864565b91507f596f752061726520612076616c696461746f72202100000000000000000000006000830152602082019050919050565b600061318e601b83613864565b91507f7374616b696e672062616c616e63652063616e6e6f74206265203000000000006000830152602082019050919050565b60006131ce603683613864565b91507f596f75206861766520616c726561647920636c61696d656420796f757220726560008301527f7761726420666f72207468697320706572696f642021000000000000000000006020830152604082019050919050565b6000613234602183613864565b91507f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60008301527f77000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061329a602083613864565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b60006132da601283613864565b91507f616d6f756e742063616e6e6f74206265203000000000000000000000000000006000830152602082019050919050565b600061331a602683613864565b91507f746f6b656e2073686f756c64206265206175746f726973656420746f2062652060008301527f7374616b656400000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613380601983613864565b91507f596f7520617265206e6f7420612076616c696461746f722021000000000000006000830152602082019050919050565b60006133c0603c83613864565b91507f596f75206861766520616c726561647920636c61696d656420796f757220636f60008301527f6d70656e736174696f6e20666f72207468697320706572696f642021000000006020830152604082019050919050565b60608201600082015161342f600085018261345b565b506020820151613442602085018261345b565b506040820151613455604085018261345b565b50505050565b613464816138e2565b82525050565b613473816138e2565b82525050565b600060208201905061348e6000830184612f2a565b92915050565b60006060820190506134a96000830186612f1b565b6134b66020830185612f2a565b6134c3604083018461346a565b949350505050565b60006040820190506134e06000830185612f1b565b6134ed602083018461346a565b9392505050565b60006040820190506135096000830185612f2a565b613516602083018461346a565b9392505050565b600060208201905081810360008301526135378184612f39565b905092915050565b60006020820190506135546000830184612fa6565b92915050565b600060208201905061356f6000830184612fb5565b92915050565b600060208201905061358a6000830184612fc4565b92915050565b600060208201905081810360008301526135aa8184612fe2565b905092915050565b600060208201905081810360008301526135cb8161301b565b9050919050565b600060208201905081810360008301526135eb8161305b565b9050919050565b6000602082019050818103600083015261360b8161309b565b9050919050565b6000602082019050818103600083015261362b81613101565b9050919050565b6000602082019050818103600083015261364b81613141565b9050919050565b6000602082019050818103600083015261366b81613181565b9050919050565b6000602082019050818103600083015261368b816131c1565b9050919050565b600060208201905081810360008301526136ab81613227565b9050919050565b600060208201905081810360008301526136cb8161328d565b9050919050565b600060208201905081810360008301526136eb816132cd565b9050919050565b6000602082019050818103600083015261370b8161330d565b9050919050565b6000602082019050818103600083015261372b81613373565b9050919050565b6000602082019050818103600083015261374b816133b3565b9050919050565b6000602082019050613767600083018461346a565b92915050565b6000604082019050613782600083018561346a565b61378f602083018461346a565b9392505050565b60006060820190506137ab600083018661346a565b6137b8602083018561346a565b6137c5604083018461346a565b949350505050565b600060a0820190506137e2600083018861346a565b6137ef602083018761346a565b6137fc604083018661346a565b6138096060830185612f97565b6138166080830184612fd3565b9695505050505050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000613880826138c2565b9050919050565b60008115159050919050565b6000819050919050565b60006138a882613875565b9050919050565b60008190506138bd826139e4565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006138f78261397c565b9050919050565b600061390982613910565b9050919050565b600061391b826138c2565b9050919050565b600061392d82613934565b9050919050565b600061393f826138c2565b9050919050565b600061395182613958565b9050919050565b6000613963826138c2565b9050919050565b6000613975826138af565b9050919050565b60006139878261398e565b9050919050565b6000613999826138c2565b9050919050565b60005b838110156139be5780820151818401526020810190506139a3565b838111156139cd576000848401525b50505050565b6000601f19601f8301169050919050565b600381106139ee57fe5b50565b6139fa81613875565b8114613a0557600080fd5b50565b613a1181613887565b8114613a1c57600080fd5b50565b613a2881613893565b8114613a3357600080fd5b50565b613a3f8161389d565b8114613a4a57600080fd5b50565b613a56816138e2565b8114613a6157600080fd5b5056fea2646970667358221220cef90e90602bb5be01e1ad7fb93e23ba40a15372a9b2968c7bf5822d00f709c964736f6c63430006060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101735760003560e01c806394199c61116100de578063e7ab816a11610097578063f2fde38b11610071578063f2fde38b14610440578063f3fef3a31461045c578063fc875ece14610478578063fd5e6dd1146104a957610173565b8063e7ab816a146103be578063ea4a1104146103dc578063f10bd7721461041057610173565b806394199c61146102d6578063ae169a5014610308578063b0227b4714610324578063b83e023414610354578063c623674f14610384578063cec534d6146103a257610173565b8063715018a611610130578063715018a61461023a57806375fdf2a9146102445780637b10399914610260578063817b1cd21461027e578063869c39251461029c5780638da5cb5b146102b857610173565b806302e8b89314610178578063171e44ea146101a85780633a4b66f1146101c45780633a5381b5146101e257806353e85fd5146102005780635f4efaba1461021c575b600080fd5b610192600480360381019061018d9190612dae565b6104d9565b60405161019f919061351d565b60405180910390f35b6101c260048036038101906101bd9190612cd1565b610569565b005b6101cc610665565b6040516101d99190613752565b60405180910390f35b6101ea61066b565b6040516101f79190613479565b60405180910390f35b61021a60048036038101906102159190612e8b565b610691565b005b610224610a90565b6040516102319190613575565b60405180910390f35b610242610ab6565b005b61025e60048036038101906102599190612d36565b610c0b565b005b610268611298565b604051610275919061353f565b60405180910390f35b6102866112be565b6040516102939190613752565b60405180910390f35b6102b660048036038101906102b19190612e13565b6112c4565b005b6102c0611598565b6040516102cd9190613479565b60405180910390f35b6102f060048036038101906102eb9190612dd7565b6115c1565b6040516102ff93929190613796565b60405180910390f35b610322600480360381019061031d9190612e8b565b611605565b005b61033e60048036038101906103399190612dae565b6119dc565b60405161034b919061355a565b60405180910390f35b61036e60048036038101906103699190612cd1565b611a0f565b60405161037b9190613752565b60405180910390f35b61038c611a27565b6040516103999190613590565b60405180910390f35b6103bc60048036038101906103b79190612eb4565b611ac5565b005b6103c6611e8c565b6040516103d39190613752565b60405180910390f35b6103f660048036038101906103f19190612e8b565b611e96565b6040516104079594939291906137cd565b60405180910390f35b61042a60048036038101906104259190612cfa565b611ef3565b6040516104379190613752565b60405180910390f35b61045a60048036038101906104559190612cd1565b612052565b005b61047660048036038101906104719190612cfa565b612216565b005b610492600480360381019061048d9190612e8b565b612727565b6040516104a092919061376d565b60405180910390f35b6104c360048036038101906104be9190612e8b565b612771565b6040516104d09190613479565b60405180910390f35b6060600d6000838152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561055e578382906000526020600020906003020160405180606001604052908160008201548152602001600182015481526020016002820154815250508152602001906001019061050e565b505050509050919050565b6105716127ad565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146105ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f6906136b2565b60405180910390fd5b6004819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60085481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b806005818154811061069f57fe5b90600052602060002090600602016000015442101580156106de5750600581815481106106c857fe5b9060005260206000209060060201600101544211155b6106e757600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610778576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076f90613632565b60405180910390fd5b60028081111561078457fe5b6005838154811061079157fe5b906000526020600020906006020160030160019054906101000a900460ff1660028111156107bb57fe5b146107fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f2906135d2565b60405180910390fd5b60006005838154811061080a57fe5b906000526020600020906006020160050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610899576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089090613732565b60405180910390fd5b60006108a53384611ef3565b905060006108d0600a6108c26003856127b590919063ffffffff16565b61282590919063ffffffff16565b90506108e78260075461286f90919063ffffffff16565b60078190555081600585815481106108fb57fe5b906000526020600020906006020160050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016109aa9291906134cb565b602060405180830381600087803b1580156109c457600080fd5b505af11580156109d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fc9190612d85565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342966c68826040518263ffffffff1660e01b8152600401610a589190613752565b600060405180830381600087803b158015610a7257600080fd5b505af1158015610a86573d6000803e3d6000fd5b5050505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610abe6127ad565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b43906136b2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610c9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9390613632565b60405180910390fd5b600060058281548110610cab57fe5b906000526020600020906006020160040160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610d77576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6e90613652565b60405180910390fd5b610d80836128b9565b610dbf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db6906136f2565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663095ea7b330846040518363ffffffff1660e01b8152600401610dfa9291906134f4565b602060405180830381600087803b158015610e1457600080fd5b505af1158015610e28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4c9190612d85565b508273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610e8a93929190613494565b602060405180830381600087803b158015610ea457600080fd5b505af1158015610eb8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610edc9190612d85565b50610f888260058381548110610eee57fe5b906000526020600020906006020160040160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461295b90919063ffffffff16565b60058281548110610f9557fe5b906000526020600020906006020160040160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506110398260075461295b90919063ffffffff16565b60078190555060006005828154811061104e57fe5b906000526020600020906006020160040160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000611114600380549050600585815481106110f457fe5b90600052602060002090600602016002015461282590919063ffffffff16565b905060006005848154811061112557fe5b906000526020600020906006020160040160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506111c98260075461286f90919063ffffffff16565b600781905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33611221848661286f90919063ffffffff16565b6040518363ffffffff1660e01b815260040161123e9291906134cb565b602060405180830381600087803b15801561125857600080fd5b505af115801561126c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112909190612d85565b505050505050565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60075481565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633cb747bf6040518163ffffffff1660e01b815260040160206040518083038186803b15801561132c57600080fd5b505afa158015611340573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113649190612e62565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461139b57600080fd5b600d6000848152602001908152602001600020604051806060016040528042815260200184815260200183815250908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000155602082015181600101556040820151816002015550507fc95987c1992805ee34bdc915e017cceae36ba1c156b9911fa7e691e6435eb46e42838360405161144593929190613796565b60405180910390a1600c600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663868d08f7836040518263ffffffff1660e01b81526004016114b99190613752565b60206040518083038186803b1580156114d157600080fd5b505afa1580156114e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115099190612d85565b6115525760026005828154811061151c57fe5b906000526020600020906006020160030160016101000a81548160ff0219169083600281111561154857fe5b0217905550611593565b60016005828154811061156157fe5b906000526020600020906006020160030160016101000a81548160ff0219169083600281111561158d57fe5b02179055505b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600d60205281600052604060002081815481106115da57fe5b9060005260206000209060030201600091509150508060000154908060010154908060020154905083565b806005818154811061161357fe5b906000526020600020906006020160000154421015801561165257506005818154811061163c57fe5b9060005260206000209060060201600101544211155b61165b57600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146116eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116e290613712565b60405180910390fd5b600160028111156116f857fe5b6005838154811061170557fe5b906000526020600020906006020160030160019054906101000a900460ff16600281111561172f57fe5b1461176f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611766906135b2565b60405180910390fd5b6005828154811061177c57fe5b906000526020600020906006020160030160009054906101000a900460ff16156117db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117d290613672565b60405180910390fd5b60006117f760058054905060075461282590919063ffffffff16565b90506000611822600a6118146003856127b590919063ffffffff16565b61282590919063ffffffff16565b90506118398260075461286f90919063ffffffff16565b600781905550816005858154811061184d57fe5b90600052602060002090600602016002018190555060016005858154811061187157fe5b906000526020600020906006020160030160006101000a81548160ff021916908315150217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016118f69291906134cb565b602060405180830381600087803b15801561191057600080fd5b505af1158015611924573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119489190612d85565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342966c68826040518263ffffffff1660e01b81526004016119a49190613752565b600060405180830381600087803b1580156119be57600080fd5b505af11580156119d2573d6000803e3d6000fd5b5050505050505050565b600c6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60066020528060005260406000206000915090505481565b600a8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611abd5780601f10611a9257610100808354040283529160200191611abd565b820191906000526020600020905b815481529060010190602001808311611aa057829003601f168201915b505050505081565b60008311611b08576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611aff906136d2565b60405180910390fd5b611b11826128b9565b611b50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b47906136f2565b60405180910390fd5b611b5b3383836129b0565b8173ffffffffffffffffffffffffffffffffffffffff1663095ea7b330856040518363ffffffff1660e01b8152600401611b969291906134f4565b602060405180830381600087803b158015611bb057600080fd5b505af1158015611bc4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611be89190612d85565b508173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401611c2693929190613494565b602060405180830381600087803b158015611c4057600080fd5b505af1158015611c54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c789190612d85565b50611d248360058381548110611c8a57fe5b906000526020600020906006020160040160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461295b90919063ffffffff16565b60058281548110611d3157fe5b906000526020600020906006020160040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611dd58360075461295b90919063ffffffff16565b6007819055506001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415611e87576003339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b505050565b6000600954905090565b60058181548110611ea357fe5b90600052602060002090600602016000915090508060000154908060010154908060020154908060030160009054906101000a900460ff16908060030160019054906101000a900460ff16905085565b600080600090506000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411156120485760008090505b6004805490508110156120465761203760058581548110611f6557fe5b9060005260206000209060060201600401600060048481548110611f8557fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548361295b90919063ffffffff16565b91508080600101915050611f48565b505b8091505092915050565b61205a6127ad565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146120e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120df906136b2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612158576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161214f906135f2565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156122a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161229e90613632565b60405180910390fd5b6000600582815481106122b657fe5b906000526020600020906006020160040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411612382576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161237990613652565b60405180910390fd5b61238b826128b9565b6123ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123c1906136f2565b60405180910390fd5b6000600582815481106123d957fe5b906000526020600020906006020160040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600061249f6003805490506005858154811061247f57fe5b90600052602060002090600602016002015461282590919063ffffffff16565b90506000600584815481106124b057fe5b906000526020600020906006020160040160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506125548260075461286f90919063ffffffff16565b6007819055508373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb3361258a848661286f90919063ffffffff16565b6040518363ffffffff1660e01b81526004016125a79291906134cb565b602060405180830381600087803b1580156125c157600080fd5b505af11580156125d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125f99190612d85565b5061264d6001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461286f90919063ffffffff16565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414156127215760006126e333612aec565b9050600381815481106126f257fe5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055505b50505050565b6000806005838154811061273757fe5b9060005260206000209060060201600001546005848154811061275657fe5b90600052602060002090600602016001015491509150915091565b6003818154811061277e57fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b6000808314156127c8576000905061281f565b60008284029050828482816127d957fe5b041461281a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161281190613692565b60405180910390fd5b809150505b92915050565b600061286783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612bac565b905092915050565b60006128b183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612c0d565b905092915050565b600080600090505b600480549050811015612950578273ffffffffffffffffffffffffffffffffffffffff16600482815481106128f257fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612943576001915050612956565b80806001019150506128c1565b50600090505b919050565b6000808284019050838110156129a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161299d90613612565b60405180910390fd5b8091505092915050565b6000600582815481106129bf57fe5b906000526020600020906006020160040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411612ae757612aa36001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461295b90919063ffffffff16565b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b505050565b600080600090505b600380549050811015612b82578273ffffffffffffffffffffffffffffffffffffffff1660038281548110612b2557fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612b755780915050612ba7565b8080600101915050612af4565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90505b919050565b60008083118290612bf3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612bea9190613590565b60405180910390fd5b506000838581612bff57fe5b049050809150509392505050565b6000838311158290612c55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c4c9190613590565b60405180910390fd5b5060008385039050809150509392505050565b600081359050612c77816139f1565b92915050565b600081519050612c8c81613a08565b92915050565b600081359050612ca181613a1f565b92915050565b600081519050612cb681613a36565b92915050565b600081359050612ccb81613a4d565b92915050565b600060208284031215612ce357600080fd5b6000612cf184828501612c68565b91505092915050565b60008060408385031215612d0d57600080fd5b6000612d1b85828601612c68565b9250506020612d2c85828601612cbc565b9150509250929050565b600080600060608486031215612d4b57600080fd5b6000612d5986828701612c68565b9350506020612d6a86828701612cbc565b9250506040612d7b86828701612cbc565b9150509250925092565b600060208284031215612d9757600080fd5b6000612da584828501612c7d565b91505092915050565b600060208284031215612dc057600080fd5b6000612dce84828501612c92565b91505092915050565b60008060408385031215612dea57600080fd5b6000612df885828601612c92565b9250506020612e0985828601612cbc565b9150509250929050565b600080600060608486031215612e2857600080fd5b6000612e3686828701612c92565b9350506020612e4786828701612cbc565b9250506040612e5886828701612cbc565b9150509250925092565b600060208284031215612e7457600080fd5b6000612e8284828501612ca7565b91505092915050565b600060208284031215612e9d57600080fd5b6000612eab84828501612cbc565b91505092915050565b600080600060608486031215612ec957600080fd5b6000612ed786828701612cbc565b9350506020612ee886828701612c68565b9250506040612ef986828701612cbc565b9150509250925092565b6000612f0f8383613419565b60608301905092915050565b612f24816138ec565b82525050565b612f3381613875565b82525050565b6000612f4482613830565b612f4e8185613853565b9350612f5983613820565b8060005b83811015612f8a578151612f718882612f03565b9750612f7c83613846565b925050600181019050612f5d565b5085935050505092915050565b612fa081613887565b82525050565b612faf816138fe565b82525050565b612fbe81613922565b82525050565b612fcd81613946565b82525050565b612fdc8161396a565b82525050565b6000612fed8261383b565b612ff78185613864565b93506130078185602086016139a0565b613010816139d3565b840191505092915050565b6000613028601383613864565b91507f534c41206e6f74207265737065637465642021000000000000000000000000006000830152602082019050919050565b6000613068600f83613864565b91507f534c4120726573706563746564202100000000000000000000000000000000006000830152602082019050919050565b60006130a8602683613864565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061310e601b83613864565b91507f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006000830152602082019050919050565b600061314e601583613864565b91507f596f752061726520612076616c696461746f72202100000000000000000000006000830152602082019050919050565b600061318e601b83613864565b91507f7374616b696e672062616c616e63652063616e6e6f74206265203000000000006000830152602082019050919050565b60006131ce603683613864565b91507f596f75206861766520616c726561647920636c61696d656420796f757220726560008301527f7761726420666f72207468697320706572696f642021000000000000000000006020830152604082019050919050565b6000613234602183613864565b91507f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60008301527f77000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061329a602083613864565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b60006132da601283613864565b91507f616d6f756e742063616e6e6f74206265203000000000000000000000000000006000830152602082019050919050565b600061331a602683613864565b91507f746f6b656e2073686f756c64206265206175746f726973656420746f2062652060008301527f7374616b656400000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613380601983613864565b91507f596f7520617265206e6f7420612076616c696461746f722021000000000000006000830152602082019050919050565b60006133c0603c83613864565b91507f596f75206861766520616c726561647920636c61696d656420796f757220636f60008301527f6d70656e736174696f6e20666f72207468697320706572696f642021000000006020830152604082019050919050565b60608201600082015161342f600085018261345b565b506020820151613442602085018261345b565b506040820151613455604085018261345b565b50505050565b613464816138e2565b82525050565b613473816138e2565b82525050565b600060208201905061348e6000830184612f2a565b92915050565b60006060820190506134a96000830186612f1b565b6134b66020830185612f2a565b6134c3604083018461346a565b949350505050565b60006040820190506134e06000830185612f1b565b6134ed602083018461346a565b9392505050565b60006040820190506135096000830185612f2a565b613516602083018461346a565b9392505050565b600060208201905081810360008301526135378184612f39565b905092915050565b60006020820190506135546000830184612fa6565b92915050565b600060208201905061356f6000830184612fb5565b92915050565b600060208201905061358a6000830184612fc4565b92915050565b600060208201905081810360008301526135aa8184612fe2565b905092915050565b600060208201905081810360008301526135cb8161301b565b9050919050565b600060208201905081810360008301526135eb8161305b565b9050919050565b6000602082019050818103600083015261360b8161309b565b9050919050565b6000602082019050818103600083015261362b81613101565b9050919050565b6000602082019050818103600083015261364b81613141565b9050919050565b6000602082019050818103600083015261366b81613181565b9050919050565b6000602082019050818103600083015261368b816131c1565b9050919050565b600060208201905081810360008301526136ab81613227565b9050919050565b600060208201905081810360008301526136cb8161328d565b9050919050565b600060208201905081810360008301526136eb816132cd565b9050919050565b6000602082019050818103600083015261370b8161330d565b9050919050565b6000602082019050818103600083015261372b81613373565b9050919050565b6000602082019050818103600083015261374b816133b3565b9050919050565b6000602082019050613767600083018461346a565b92915050565b6000604082019050613782600083018561346a565b61378f602083018461346a565b9392505050565b60006060820190506137ab600083018661346a565b6137b8602083018561346a565b6137c5604083018461346a565b949350505050565b600060a0820190506137e2600083018861346a565b6137ef602083018761346a565b6137fc604083018661346a565b6138096060830185612f97565b6138166080830184612fd3565b9695505050505050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000613880826138c2565b9050919050565b60008115159050919050565b6000819050919050565b60006138a882613875565b9050919050565b60008190506138bd826139e4565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006138f78261397c565b9050919050565b600061390982613910565b9050919050565b600061391b826138c2565b9050919050565b600061392d82613934565b9050919050565b600061393f826138c2565b9050919050565b600061395182613958565b9050919050565b6000613963826138c2565b9050919050565b6000613975826138af565b9050919050565b60006139878261398e565b9050919050565b6000613999826138c2565b9050919050565b60005b838110156139be5780820151818401526020810190506139a3565b838111156139cd576000848401525b50505050565b6000601f19601f8301169050919050565b600381106139ee57fe5b50565b6139fa81613875565b8114613a0557600080fd5b50565b613a1181613887565b8114613a1c57600080fd5b50565b613a2881613893565b8114613a3357600080fd5b50565b613a3f8161389d565b8114613a4a57600080fd5b50565b613a56816138e2565b8114613a6157600080fd5b5056fea2646970667358221220cef90e90602bb5be01e1ad7fb93e23ba40a15372a9b2968c7bf5822d00f709c964736f6c63430006060033",
  "immutableReferences": {},
  "sourceMap": "521:3629:1:-:0;;;2361:659;5:9:-1;2:2;;;27:1;24;17:12;2:2;2361:659:1;;;;;;;;;;;;;;;;;;;;;;;;2607:13;865:17:12;885:12;:10;;;:12;;:::i;:::-;865:32;;916:9;907:6;;:18;;;;;;;;;;;;;;;;;;973:9;940:43;;969:1;940:43;;;;;;;;;;;;831:159;1691:13:2;1672:5;;:33;;;;;;;;;;;;;;;;;;1715:13;1742:5;;;;;;;;;;;1715:34;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1715:34:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1771:10;1759:9;;:22;;;;;;;;;;;;;;;;;;1617:171;2654:1:1::1;2639:5;:12;:16;2631:25;;12:1:-1;9::::0;2:12:::1;2631:25:1;2694:5;:12;2674:9;:16;:32;2666:41;;12:1:-1;9::::0;2:12:::1;2666:41:1;2722:9;2734:1:::0;2722:13:::1;;2718:96;2741:5;:12;2737:1;:16;2718:96;;;2795:5;2801:1;2795:8;;;;;;;;;;;;;;2774:4;:18;2779:9;2789:1;2779:12;;;;;;;;;;;;;;2774:18;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;2755:3;;;;;;;2718:96;;;;2824:25;2842:6;2824:17;;;:25;;:::i;:::-;2870:9;2859:8;:20;;;;;;;;;;;;:::i;:::-;;2897:6;2889:5;:14;;;;2924:9;2913:8;:20;;;;;;;;;;;;:::i;:::-;;2966:10;2943:8;;:34;;;;;;;;;;;;;;;;;;3001:12;2987:11;:26;;;;2361:659:::0;;;;;;;521:3629;;590:104:10;643:15;677:10;670:17;;590:104;:::o;1983:240:12:-;1280:12;:10;;;:12;;:::i;:::-;1270:22;;:6;;;;;;;;;;;:22;;;1262:67;;;;;;;;;;;;;;;;;;;;;;2091:1:::1;2071:22;;:8;:22;;;;2063:73;;;;;;;;;;;;;;;;;;;;;;2180:8;2151:38;;2172:6;::::0;::::1;;;;;;;;;2151:38;;;;;;;;;;;;2208:8;2199:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;1983:240:::0;:::o;521:3629:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:134:-1:-;;89:6;83:13;74:22;;101:33;128:5;101:33;;;68:71;;;;;164:722;;292:3;285:4;277:6;273:17;269:27;259:2;;310:1;307;300:12;259:2;340:6;334:13;362:80;377:64;434:6;377:64;;;362:80;;;353:89;;459:5;484:6;477:5;470:21;514:4;506:6;502:17;492:27;;536:4;531:3;527:14;520:21;;589:6;636:3;628:4;620:6;616:17;611:3;607:27;604:36;601:2;;;653:1;650;643:12;601:2;678:1;663:217;688:6;685:1;682:13;663:217;;;746:3;768:48;812:3;800:10;768:48;;;763:3;756:61;840:4;835:3;831:14;824:21;;868:4;863:3;859:14;852:21;;720:160;710:1;707;703:9;698:14;;663:217;;;667:14;252:634;;;;;;;;917:758;;1057:3;1050:4;1042:6;1038:17;1034:27;1024:2;;1075:1;1072;1065:12;1024:2;1105:6;1099:13;1127:92;1142:76;1211:6;1142:76;;;1127:92;;;1118:101;;1236:5;1261:6;1254:5;1247:21;1291:4;1283:6;1279:17;1269:27;;1313:4;1308:3;1304:14;1297:21;;1366:6;1413:3;1405:4;1397:6;1393:17;1388:3;1384:27;1381:36;1378:2;;;1430:1;1427;1420:12;1378:2;1455:1;1440:229;1465:6;1462:1;1459:13;1440:229;;;1523:3;1545:60;1601:3;1589:10;1545:60;;;1540:3;1533:73;1629:4;1624:3;1620:14;1613:21;;1657:4;1652:3;1648:14;1641:21;;1497:172;1487:1;1484;1480:9;1475:14;;1440:229;;;1444:14;1017:658;;;;;;;;1683:134;;1767:6;1761:13;1752:22;;1779:33;1806:5;1779:33;;;1746:71;;;;;1824:158;;1920:6;1914:13;1905:22;;1932:45;1971:5;1932:45;;;1899:83;;;;;1989:172;;2092:6;2086:13;2077:22;;2104:52;2150:5;2104:52;;;2071:90;;;;;2169:444;;2282:3;2275:4;2267:6;2263:17;2259:27;2249:2;;2300:1;2297;2290:12;2249:2;2330:6;2324:13;2352:65;2367:49;2409:6;2367:49;;;2352:65;;;2343:74;;2437:6;2430:5;2423:21;2473:4;2465:6;2461:17;2506:4;2499:5;2495:16;2541:3;2532:6;2527:3;2523:16;2520:25;2517:2;;;2558:1;2555;2548:12;2517:2;2568:39;2600:6;2595:3;2590;2568:39;;;2242:371;;;;;;;;2621:134;;2705:6;2699:13;2690:22;;2717:33;2744:5;2717:33;;;2684:71;;;;;2762:1502;;;;;;;;3070:3;3058:9;3049:7;3045:23;3041:33;3038:2;;;3087:1;3084;3077:12;3038:2;3122:1;3139:64;3195:7;3186:6;3175:9;3171:22;3139:64;;;3129:74;;3101:108;3261:2;3250:9;3246:18;3240:25;3285:18;3277:6;3274:30;3271:2;;;3317:1;3314;3307:12;3271:2;3337:89;3418:7;3409:6;3398:9;3394:22;3337:89;;;3327:99;;3219:213;3484:2;3473:9;3469:18;3463:25;3508:18;3500:6;3497:30;3494:2;;;3540:1;3537;3530:12;3494:2;3560:101;3653:7;3644:6;3633:9;3629:22;3560:101;;;3550:111;;3442:225;3698:2;3716:64;3772:7;3763:6;3752:9;3748:22;3716:64;;;3706:74;;3677:109;3838:3;3827:9;3823:19;3817:26;3863:18;3855:6;3852:30;3849:2;;;3895:1;3892;3885:12;3849:2;3915:74;3981:7;3972:6;3961:9;3957:22;3915:74;;;3905:84;;3796:199;4026:3;4045:64;4101:7;4092:6;4081:9;4077:22;4045:64;;;4035:74;;4005:110;4146:3;4165:83;4240:7;4231:6;4220:9;4216:22;4165:83;;;4155:93;;4125:129;3032:1232;;;;;;;;;;;4272:375;;4432:67;4496:2;4491:3;4432:67;;;4425:74;;4532:34;4528:1;4523:3;4519:11;4512:55;4601:8;4596:2;4591:3;4587:12;4580:30;4638:2;4633:3;4629:12;4622:19;;4418:229;;;;4656:332;;4816:67;4880:2;4875:3;4816:67;;;4809:74;;4916:34;4912:1;4907:3;4903:11;4896:55;4979:2;4974:3;4970:12;4963:19;;4802:186;;;;4996:407;;5187:2;5176:9;5172:18;5164:26;;5237:9;5231:4;5227:20;5223:1;5212:9;5208:17;5201:47;5262:131;5388:4;5262:131;;;5254:139;;5158:245;;;;5410:407;;5601:2;5590:9;5586:18;5578:26;;5651:9;5645:4;5641:20;5637:1;5626:9;5622:17;5615:47;5676:131;5802:4;5676:131;;;5668:139;;5572:245;;;;5824:256;;5886:2;5880:9;5870:19;;5924:4;5916:6;5912:17;6023:6;6011:10;6008:22;5987:18;5975:10;5972:34;5969:62;5966:2;;;6044:1;6041;6034:12;5966:2;6064:10;6060:2;6053:22;5864:216;;;;;6087:304;;6246:18;6238:6;6235:30;6232:2;;;6278:1;6275;6268:12;6232:2;6313:4;6305:6;6301:17;6293:25;;6376:4;6370;6366:15;6358:23;;6169:222;;;;6398:316;;6569:18;6561:6;6558:30;6555:2;;;6601:1;6598;6591:12;6555:2;6636:4;6628:6;6624:17;6616:25;;6699:4;6693;6689:15;6681:23;;6492:222;;;;6721:322;;6865:18;6857:6;6854:30;6851:2;;;6897:1;6894;6887:12;6851:2;6964:4;6960:9;6953:4;6945:6;6941:17;6937:33;6929:41;;7028:4;7022;7018:15;7010:23;;6788:255;;;;7051:163;;7166:6;7161:3;7154:19;7203:4;7198:3;7194:14;7179:29;;7147:67;;;;;7222:91;;7284:24;7302:5;7284:24;;;7273:35;;7267:46;;;;7320:72;;7382:5;7371:16;;7365:27;;;;7399:103;;7473:24;7491:5;7473:24;;;7462:35;;7456:46;;;;7509:110;;7590:24;7608:5;7590:24;;;7579:35;;7573:46;;;;7626:121;;7699:42;7692:5;7688:54;7677:65;;7671:76;;;;7754:72;;7816:5;7805:16;;7799:27;;;;7834:268;7899:1;7906:101;7920:6;7917:1;7914:13;7906:101;;;7996:1;7991:3;7987:11;7981:18;7977:1;7972:3;7968:11;7961:39;7942:2;7939:1;7935:10;7930:15;;7906:101;;;8022:6;8019:1;8016:13;8013:2;;;8087:1;8078:6;8073:3;8069:16;8062:27;8013:2;7883:219;;;;;8110:117;8179:24;8197:5;8179:24;;;8172:5;8169:35;8159:2;;8218:1;8215;8208:12;8159:2;8153:74;;8234:117;8303:24;8321:5;8303:24;;;8296:5;8293:35;8283:2;;8342:1;8339;8332:12;8283:2;8277:74;;8358:141;8439:36;8469:5;8439:36;;;8432:5;8429:47;8419:2;;8490:1;8487;8480:12;8419:2;8413:86;;8506:155;8594:43;8631:5;8594:43;;;8587:5;8584:54;8574:2;;8652:1;8649;8642:12;8574:2;8568:93;;8668:117;8737:24;8755:5;8737:24;;;8730:5;8727:35;8717:2;;8776:1;8773;8766:12;8717:2;8711:74;;521:3629:1;;;;;;;",
  "deployedSourceMap": "521:3629:1:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;521:3629:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;3857:106:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1835:102:2;;;;;;;;;;;;;;;;:::i;:::-;;664:20:1;;;:::i;:::-;;;;;;;;;;;;;;;;784:24:2;;;:::i;:::-;;;;;;;;;;;;;;;;5710:653;;;;;;;;;;;;;;;;:::i;:::-;;755:23;;;:::i;:::-;;;;;;;;;;;;;;;;1689:145:12;;;:::i;:::-;;3969:1062:2;;;;;;;;;;;;;;;;:::i;:::-;;910:27:1;;;:::i;:::-;;;;;;;;;;;;;;;;1150:23:2;;;:::i;:::-;;;;;;;;;;;;;;;;3279:461:1;;;;;;;;;;;;;;;;:::i;:::-;;1066:77:12;;;:::i;:::-;;;;;;;;;;;;;;;;1256:37:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;5070:601:2;;;;;;;;;;;;;;;;:::i;:::-;;1154:35:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1038:50:2;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;837:22:1;;;:::i;:::-;;;;;;;;;;;;;;;;1975:938:2;;;;;;;;;;;;;;;;:::i;:::-;;4055:92:1;;;:::i;:::-;;;;;;;;;;;;;;;;982:23:2;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;6373:519;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1983:240:12;;;;;;;;;;;;;;;;:::i;:::-;;2943:979:2;;;;;;;;;;;;;;;;:::i;:::-;;7778:197;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;814:24;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3857:106:1;3911:12;3942:4;:14;3947:8;3942:14;;;;;;;;;;;3935:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3857:106;;;:::o;1835:102:2:-;1280:12:12;:10;:12::i;:::-;1270:22;;:6;;;;;;;;;;;:22;;;1262:67;;;;;;;;;;;;;;;;;;;;;;1904:13:2::1;1923:6;1904:26;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1904:26:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1835:102:::0;:::o;664:20:1:-;;;;:::o;784:24:2:-;;;;;;;;;;;;;:::o;5710:653::-;5771:7;1493;1501;1493:16;;;;;;;;;;;;;;;;;;:33;;;1474:15;:52;;:114;;;;;1557:7;1565;1557:16;;;;;;;;;;;;;;;;;;:31;;;1538:15;:50;;1474:114;1466:123;;12:1:-1;9;2:12;1466:123:2;1235:9:::1;;;;;;;;;;;1221:23;;:10;:23;;;;1213:57;;;;;;;;;;;;;;;;;;;;;;5838:19:::2;5811:46:::0;::::2;;;;;;;:7;5819;5811:16;;;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;:46;;;;;;;;;5803:74;;;;;;;;;;;;;;;;;;;;;;5948:1;5895:7;5903;5895:16;;;;;;;;;;;;;;;;;;:37;;:49;5933:10;5895:49;;;;;;;;;;;;;;;;:54;5887:127;;;;;;;;;;;;;;;;;;;;;;6036:17;6056:38;6074:10;6086:7;6056:17;:38::i;:::-;6036:58;;6104:9;6116:27;6140:2;6116:19;6133:1;6116:12;:16;;:19;;;;:::i;:::-;:23;;:27;;;;:::i;:::-;6104:39;;6176:29;6192:12;6176:11;;:15;;:29;;;;:::i;:::-;6162:11;:43;;;;6267:12;6215:7;6223;6215:16;;;;;;;;;;;;;;;;;;:37;;:49;6253:10;6215:49;;;;;;;;;;;;;;;:64;;;;6290:5;;;;;;;;;;;:14;;;6305:10;6317:12;6290:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::2;2:2;6290:40:2;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::2;77:16;74:1;67:27;5:2;6290:40:2;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;6290:40:2;;;;;;;;;;6340:5;;;;;;;;;;;:10;;;6351:4;6340:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::2;2:2;6340:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::2;77:16;74:1;67:27;5:2;6340:16:2;;;;1280:1;;5710:653:::0;;:::o;755:23::-;;;;;;;;;;;;;:::o;1689:145:12:-;1280:12;:10;:12::i;:::-;1270:22;;:6;;;;;;;;;;;:22;;;1262:67;;;;;;;;;;;;;;;;;;;;;;1795:1:::1;1758:40;;1779:6;::::0;::::1;;;;;;;;;1758:40;;;;;;;;;;;;1825:1;1808:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1689:145::o:0;3969:1062:2:-;1235:9;;;;;;;;;;;1221:23;;:10;:23;;;;1213:57;;;;;;;;;;;;;;;;;;;;;;4172:1:::1;4118:7;4126;4118:16;;;;;;;;;;;;;;;;;;:31;;:39;4150:6;4118:39;;;;;;;;;;;;;;;:51;4158:10;4118:51;;;;;;;;;;;;;;;;:55;4110:95;;;;;;;;;;;;;;;;;;;;;;4221:23;4237:6;4221:15;:23::i;:::-;4213:74;;;;;;;;;;;;;;;;;;;;;;4327:6;4320:22;;;4351:4;4358:7;4320:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;4320:46:2;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;4320:46:2;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4320:46:2;;;;;;;;;;4381:6;4374:27;;;4402:10;4422:4;4429:7;4374:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;4374:63:2;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;4374:63:2;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4374:63:2;;;;;;;;;;4551:64;4607:7;4551;4559;4551:16;;;;;;;;;;;;;;;;;;:31;;:39;4583:6;4551:39;;;;;;;;;;;;;;;:51;4591:10;4551:51;;;;;;;;;;;;;;;;:55;;:64;;;;:::i;:::-;4497:7;4505;4497:16;;;;;;;;;;;;;;;;;;:31;;:39;4529:6;4497:39;;;;;;;;;;;;;;;:51;4537:10;4497:51;;;;;;;;;;;;;;;:118;;;;4637:24;4653:7;4637:11;;:15;;:24;;;;:::i;:::-;4623:11;:38;;;;4700:11;4714:7;4722;4714:16;;;;;;;;;;;;;;;;;;:31;;:39;4746:6;4714:39;;;;;;;;;;;;;;;:51;4754:10;4714:51;;;;;;;;;;;;;;;;4700:65;;4773:19;4795:51;4831:7;:14;;;;4795:7;4803;4795:16;;;;;;;;;;;;;;;;;;:31;;;:35;;:51;;;;:::i;:::-;4773:73;;4909:1;4855:7;4863;4855:16;;;;;;;;;;;;;;;;;;:31;;:39;4887:6;4855:39;;;;;;;;;;;;;;;:51;4895:10;4855:51;;;;;;;;;;;;;;;:55;;;;4932:23;4948:6;4932:11;;:15;;:23;;;;:::i;:::-;4918:11;:37;;;;4963:5;;;;;;;;;;;:14;;;4978:10;4990:26;5001:14;4990:6;:10;;:26;;;;:::i;:::-;4963:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;4963:54:2;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;4963:54:2;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4963:54:2;;;;;;;;;;1280:1;;3969:1062:::0;;;:::o;910:27:1:-;;;;;;;;;;;;;:::o;1150:23:2:-;;;;:::o;3279:461:1:-;1859:8;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1859:20:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1859:20:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1859:20:1;;;;;;;;;1837:43;;:10;:43;;;1829:52;;12:1:-1;9;2:12;1829:52:1;3406:4:::1;:14;3411:8;3406:14;;;;;;;;;;;3426:39;;;;;;;;3430:15;3426:39;;;;3447:6;3426:39;;;;3455:9;3426:39;;::::0;3406:60:::1;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;3406:60:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3482:46;3493:15;3510:6;3518:9;3482:46;;;;;;;;;;;;;;;;;3552:4;:14;3557:8;3552:14;;;;;;;;;;;;;;;;;;;;;:27;;;3580:6;3552:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;3552:35:1;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;3552:35:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3552:35:1;;;;;;;;;3548:186;;3631:19;3603:7;3611:9;3603:18;;;;;;;;;;;;;;;;;;:25;;;:47;;;;;;;;;;;;;;;;;;;;;;;;3548:186;;;3707:16;3679:7;3687:9;3679:18;;;;;;;;;;;;;;;;;;:25;;;:44;;;;;;;;;;;;;;;;;;;;;;;;3548:186;3279:461:::0;;;:::o;1066:77:12:-;1104:7;1130:6;;;;;;;;;;;1123:13;;1066:77;:::o;1256:37:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5070:601:2:-;5125:7;1493;1501;1493:16;;;;;;;;;;;;;;;;;;:33;;;1474:15;:52;;:114;;;;;1557:7;1565;1557:16;;;;;;;;;;;;;;;;;;:31;;;1538:15;:50;;1474:114;1466:123;;12:1:-1;9;2:12;1466:123:2;1353:9:::1;;;;;;;;;;;1339:23;;:10;:23;;;1331:61;;;;;;;;;;;;;;;;;;;;;;5193:16:::2;5166:43;;;;;;;;:7;5174;5166:16;;;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;:43;;;;;;;;;5158:75;;;;;;;;;;;;;;;;;;;;;;5252:7;5260;5252:16;;;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;5251:25;5243:92;;;;;;;;;;;;;;;;;;;;;;5358:11;5372:31;5388:7;:14;;;;5372:11;;:15;;:31;;;;:::i;:::-;5358:45;;5413:9;5425:21;5443:2;5425:13;5436:1;5425:6;:10;;:13;;;;:::i;:::-;:17;;:21;;;;:::i;:::-;5413:33;;5479:23;5495:6;5479:11;;:15;;:23;;;;:::i;:::-;5465:11;:37;;;;5546:6;5512:7;5520;5512:16;;;;;;;;;;;;;;;;;;:31;;:40;;;;5589:4;5562:7;5570;5562:16;;;;;;;;;;;;;;;;;;:24;;;:31;;;;;;;;;;;;;;;;;;5604:5;;;;;;;;;;;:14;;;5619:10;5631:6;5604:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::2;2:2;5604:34:2;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::2;77:16;74:1;67:27;5:2;5604:34:2;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5604:34:2;;;;;;;;;;5648:5;;;;;;;;;;;:10;;;5659:4;5648:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::2;2:2;5648:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::2;77:16;74:1;67:27;5:2;5648:16:2;;;;1402:1;;5070:601:::0;;:::o;1154:35:1:-;;;;;;;;;;;;;;;;;;;;;;:::o;1038:50:2:-;;;;;;;;;;;;;;;;;:::o;837:22:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1975:938:2:-;2078:1;2068:7;:11;2060:42;;;;;;;;;;;;;;;;;;;;;;2120:23;2136:6;2120:15;:23::i;:::-;2112:74;;;;;;;;;;;;;;;;;;;;;;2268:54;2294:10;2306:6;2314:7;2268:25;:54::i;:::-;2363:6;2356:22;;;2387:4;2394:7;2356:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;2356:46:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2356:46:2;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2356:46:2;;;;;;;;;;2419:6;2412:27;;;2440:10;2460:4;2467:7;2412:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;2412:63:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2412:63:2;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2412:63:2;;;;;;;;;;2593:64;2649:7;2593;2601;2593:16;;;;;;;;;;;;;;;;;;:31;;:39;2625:6;2593:39;;;;;;;;;;;;;;;:51;2633:10;2593:51;;;;;;;;;;;;;;;;:55;;:64;;;;:::i;:::-;2539:7;2547;2539:16;;;;;;;;;;;;;;;;;;:31;;:39;2571:6;2539:39;;;;;;;;;;;;;;;:51;2579:10;2539:51;;;;;;;;;;;;;;;:118;;;;2681:24;2697:7;2681:11;;:15;;:24;;;;:::i;:::-;2667:11;:38;;;;2855:1;2821:18;:30;2840:10;2821:30;;;;;;;;;;;;;;;;:35;2817:90;;;2872:7;2885:10;2872:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2872:24:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2817:90;1975:938;;;:::o;4055:92:1:-;4103:7;4129:11;;4122:18;;4055:92;:::o;982:23:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6373:519::-;6450:7;6469:18;6490:1;6469:22;;6533:1;6505:18;:25;6524:5;6505:25;;;;;;;;;;;;;;;;:29;6501:358;;;6572:26;6601:1;6572:30;;6550:299;6641:13;:20;;;;6620:18;:41;6550:299;;;6745:89;6760:7;6768;6760:16;;;;;;;;;;;;;;;;;;:31;;:66;6792:13;6806:18;6792:33;;;;;;;;;;;;;;;;;;;;;;;;;6760:66;;;;;;;;;;;;;;;:73;6827:5;6760:73;;;;;;;;;;;;;;;;6745:10;:14;;:89;;;;:::i;:::-;6732:102;;6679:20;;;;;;;6550:299;;;;6501:358;6875:10;6868:17;;;6373:519;;;;:::o;1983:240:12:-;1280:12;:10;:12::i;:::-;1270:22;;:6;;;;;;;;;;;:22;;;1262:67;;;;;;;;;;;;;;;;;;;;;;2091:1:::1;2071:22;;:8;:22;;;;2063:73;;;;;;;;;;;;;;;;;;;;;;2180:8;2151:38;;2172:6;::::0;::::1;;;;;;;;;2151:38;;;;;;;;;;;;2208:8;2199:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;1983:240:::0;:::o;2943:979:2:-;1235:9;;;;;;;;;;;1221:23;;:10;:23;;;;1213:57;;;;;;;;;;;;;;;;;;;;;;3128:1:::1;3074:7;3082;3074:16;;;;;;;;;;;;;;;;;;:31;;:39;3106:6;3074:39;;;;;;;;;;;;;;;:51;3114:10;3074:51;;;;;;;;;;;;;;;;:55;3066:95;;;;;;;;;;;;;;;;;;;;;;3179:23;3195:6;3179:15;:23::i;:::-;3171:74;;;;;;;;;;;;;;;;;;;;;;3288:11;3302:7;3310;3302:16;;;;;;;;;;;;;;;;;;:31;;:39;3334:6;3302:39;;;;;;;;;;;;;;;:51;3342:10;3302:51;;;;;;;;;;;;;;;;3288:65;;3363:19;3385:51;3421:7;:14;;;;3385:7;3393;3385:16;;;;;;;;;;;;;;;;;;:31;;;:35;;:51;;;;:::i;:::-;3363:73;;3509:1;3455:7;3463;3455:16;;;;;;;;;;;;;;;;;;:31;;:39;3487:6;3455:39;;;;;;;;;;;;;;;:51;3495:10;3455:51;;;;;;;;;;;;;;;:55;;;;3534:23;3550:6;3534:11;;:15;;:23;;;;:::i;:::-;3520:11;:37;;;;3574:6;3567:23;;;3591:10;3603:26;3614:14;3603:6;:10;;:26;;;;:::i;:::-;3567:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;3567:63:2;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;3567:63:2;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3567:63:2;;;;;;;;;;3726:37;3761:1;3726:18;:30;3745:10;3726:30;;;;;;;;;;;;;;;;:34;;:37;;;;:::i;:::-;3693:18;:30;3712:10;3693:30;;;;;;;;;;;;;;;:70;;;;3819:1;3785:18;:30;3804:10;3785:30;;;;;;;;;;;;;;;;:35;3782:134;;;3836:10;3849:21;3859:10;3849:9;:21::i;:::-;3836:34;;3891:7;3899:5;3891:14;;;;;;;;;;;;;;;;3884:21;;;;;;;;;;;3782:134;;1280:1;;2943:979:::0;;:::o;7778:197::-;7841:19;7862:17;7898:7;7906:9;7898:18;;;;;;;;;;;;;;;;;;:35;;;7934:7;7942:9;7934:18;;;;;;;;;;;;;;;;;;:33;;;7890:78;;;;7778:197;;;:::o;814:24::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;590:104:10:-;643:15;677:10;670:17;;590:104;:::o;2180:459:13:-;2238:7;2484:1;2479;:6;2475:45;;;2508:1;2501:8;;;;2475:45;2530:9;2546:1;2542;:5;2530:17;;2574:1;2569;2565;:5;;;;;;:10;2557:56;;;;;;;;;;;;;;;;;;;;;;2631:1;2624:8;;;2180:459;;;;;:::o;3101:130::-;3159:7;3185:39;3189:1;3192;3185:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;3178:46;;3101:130;;;;:::o;1321:134::-;1379:7;1405:43;1409:1;1412;1405:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1398:50;;1321:134;;;;:::o;6902:370:2:-;6965:4;6998:26;7027:1;6998:30;;6980:264;7063:13;:20;;;;7042:18;:41;6980:264;;;7183:5;7146:42;;:13;7160:18;7146:33;;;;;;;;;;;;;;;;;;;;;;;;;:42;;;7142:92;;;7215:4;7208:11;;;;;7142:92;7097:20;;;;;;;6980:264;;;;7260:5;7253:12;;6902:370;;;;:::o;874:176:13:-;932:7;951:9;967:1;963;:5;951:17;;991:1;986;:6;;978:46;;;;;;;;;;;;;;;;;;;;;;1042:1;1035:8;;;874:176;;;;:::o;7282:247:2:-;7435:1;7385:7;7393;7385:16;;;;;;;;;;;;;;;;;;:31;;:39;7417:6;7385:39;;;;;;;;;;;;;;;:46;7425:5;7385:46;;;;;;;;;;;;;;;;:51;7381:142;;7480:32;7510:1;7480:18;:25;7499:5;7480:25;;;;;;;;;;;;;;;;:29;;:32;;;;:::i;:::-;7452:18;:25;7471:5;7452:25;;;;;;;;;;;;;;;:60;;;;7381:142;7282:247;;;:::o;7539:233::-;7596:4;7615:6;7624:1;7615:10;;7611:128;7631:7;:14;;;;7627:1;:18;7611:128;;;7682:5;7668:19;;:7;7676:1;7668:10;;;;;;;;;;;;;;;;;;;;;;;;;:19;;;7665:64;;;7713:1;7706:8;;;;;7665:64;7647:3;;;;;;;7611:128;;;;7761:2;7748:17;;7539:233;;;;:::o;3713:272:13:-;3799:7;3830:1;3826;:5;3833:12;3818:28;;;;;;;;;;;;;;;;;;;;;;;;;3856:9;3872:1;3868;:5;;;;;;3856:17;;3977:1;3970:8;;;3713:272;;;;;:::o;1746:187::-;1832:7;1864:1;1859;:6;;1867:12;1851:29;;;;;;;;;;;;;;;;;;;;;;;;;1890:9;1906:1;1902;:5;1890:17;;1925:1;1918:8;;;1746:187;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;142:128;;223:6;217:13;208:22;;235:30;259:5;235:30;;;202:68;;;;;277:130;;357:6;344:20;335:29;;369:33;396:5;369:33;;;329:78;;;;;414:172;;517:6;511:13;502:22;;529:52;575:5;529:52;;;496:90;;;;;593:130;;673:6;660:20;651:29;;685:33;712:5;685:33;;;645:78;;;;;730:241;;834:2;822:9;813:7;809:23;805:32;802:2;;;850:1;847;840:12;802:2;885:1;902:53;947:7;938:6;927:9;923:22;902:53;;;892:63;;864:97;796:175;;;;;978:366;;;1099:2;1087:9;1078:7;1074:23;1070:32;1067:2;;;1115:1;1112;1105:12;1067:2;1150:1;1167:53;1212:7;1203:6;1192:9;1188:22;1167:53;;;1157:63;;1129:97;1257:2;1275:53;1320:7;1311:6;1300:9;1296:22;1275:53;;;1265:63;;1236:98;1061:283;;;;;;1351:491;;;;1489:2;1477:9;1468:7;1464:23;1460:32;1457:2;;;1505:1;1502;1495:12;1457:2;1540:1;1557:53;1602:7;1593:6;1582:9;1578:22;1557:53;;;1547:63;;1519:97;1647:2;1665:53;1710:7;1701:6;1690:9;1686:22;1665:53;;;1655:63;;1626:98;1755:2;1773:53;1818:7;1809:6;1798:9;1794:22;1773:53;;;1763:63;;1734:98;1451:391;;;;;;1849:257;;1961:2;1949:9;1940:7;1936:23;1932:32;1929:2;;;1977:1;1974;1967:12;1929:2;2012:1;2029:61;2082:7;2073:6;2062:9;2058:22;2029:61;;;2019:71;;1991:105;1923:183;;;;;2113:241;;2217:2;2205:9;2196:7;2192:23;2188:32;2185:2;;;2233:1;2230;2223:12;2185:2;2268:1;2285:53;2330:7;2321:6;2310:9;2306:22;2285:53;;;2275:63;;2247:97;2179:175;;;;;2361:366;;;2482:2;2470:9;2461:7;2457:23;2453:32;2450:2;;;2498:1;2495;2488:12;2450:2;2533:1;2550:53;2595:7;2586:6;2575:9;2571:22;2550:53;;;2540:63;;2512:97;2640:2;2658:53;2703:7;2694:6;2683:9;2679:22;2658:53;;;2648:63;;2619:98;2444:283;;;;;;2734:491;;;;2872:2;2860:9;2851:7;2847:23;2843:32;2840:2;;;2888:1;2885;2878:12;2840:2;2923:1;2940:53;2985:7;2976:6;2965:9;2961:22;2940:53;;;2930:63;;2902:97;3030:2;3048:53;3093:7;3084:6;3073:9;3069:22;3048:53;;;3038:63;;3009:98;3138:2;3156:53;3201:7;3192:6;3181:9;3177:22;3156:53;;;3146:63;;3117:98;2834:391;;;;;;3232:301;;3366:2;3354:9;3345:7;3341:23;3337:32;3334:2;;;3382:1;3379;3372:12;3334:2;3417:1;3434:83;3509:7;3500:6;3489:9;3485:22;3434:83;;;3424:93;;3396:127;3328:205;;;;;3540:241;;3644:2;3632:9;3623:7;3619:23;3615:32;3612:2;;;3660:1;3657;3650:12;3612:2;3695:1;3712:53;3757:7;3748:6;3737:9;3733:22;3712:53;;;3702:63;;3674:97;3606:175;;;;;3788:491;;;;3926:2;3914:9;3905:7;3901:23;3897:32;3894:2;;;3942:1;3939;3932:12;3894:2;3977:1;3994:53;4039:7;4030:6;4019:9;4015:22;3994:53;;;3984:63;;3956:97;4084:2;4102:53;4147:7;4138:6;4127:9;4123:22;4102:53;;;4092:63;;4063:98;4192:2;4210:53;4255:7;4246:6;4235:9;4231:22;4210:53;;;4200:63;;4171:98;3888:391;;;;;;4287:249;;4412:84;4492:3;4484:6;4412:84;;;4525:4;4520:3;4516:14;4502:28;;4405:131;;;;;4544:142;4635:45;4674:5;4635:45;;;4630:3;4623:58;4617:69;;;4693:113;4776:24;4794:5;4776:24;;;4771:3;4764:37;4758:48;;;4858:842;;5041:73;5108:5;5041:73;;;5127:105;5225:6;5220:3;5127:105;;;5120:112;;5253:75;5322:5;5253:75;;;5348:7;5376:1;5361:317;5386:6;5383:1;5380:13;5361:317;;;5453:6;5447:13;5474:101;5571:3;5556:13;5474:101;;;5467:108;;5592:79;5664:6;5592:79;;;5582:89;;5418:260;5408:1;5405;5401:9;5396:14;;5361:317;;;5365:14;5691:3;5684:10;;5020:680;;;;;;;;5708:104;5785:21;5800:5;5785:21;;;5780:3;5773:34;5767:45;;;5819:166;5922:57;5973:5;5922:57;;;5917:3;5910:70;5904:81;;;5992:150;6087:49;6130:5;6087:49;;;6082:3;6075:62;6069:73;;;6149:164;6251:56;6301:5;6251:56;;;6246:3;6239:69;6233:80;;;6320:142;6411:45;6450:5;6411:45;;;6406:3;6399:58;6393:69;;;6469:347;;6581:39;6614:5;6581:39;;;6632:71;6696:6;6691:3;6632:71;;;6625:78;;6708:52;6753:6;6748:3;6741:4;6734:5;6730:16;6708:52;;;6781:29;6803:6;6781:29;;;6776:3;6772:39;6765:46;;6561:255;;;;;;6824:319;;6984:67;7048:2;7043:3;6984:67;;;6977:74;;7084:21;7080:1;7075:3;7071:11;7064:42;7134:2;7129:3;7125:12;7118:19;;6970:173;;;;7152:315;;7312:67;7376:2;7371:3;7312:67;;;7305:74;;7412:17;7408:1;7403:3;7399:11;7392:38;7458:2;7453:3;7449:12;7442:19;;7298:169;;;;7476:375;;7636:67;7700:2;7695:3;7636:67;;;7629:74;;7736:34;7732:1;7727:3;7723:11;7716:55;7805:8;7800:2;7795:3;7791:12;7784:30;7842:2;7837:3;7833:12;7826:19;;7622:229;;;;7860:327;;8020:67;8084:2;8079:3;8020:67;;;8013:74;;8120:29;8116:1;8111:3;8107:11;8100:50;8178:2;8173:3;8169:12;8162:19;;8006:181;;;;8196:321;;8356:67;8420:2;8415:3;8356:67;;;8349:74;;8456:23;8452:1;8447:3;8443:11;8436:44;8508:2;8503:3;8499:12;8492:19;;8342:175;;;;8526:327;;8686:67;8750:2;8745:3;8686:67;;;8679:74;;8786:29;8782:1;8777:3;8773:11;8766:50;8844:2;8839:3;8835:12;8828:19;;8672:181;;;;8862:391;;9022:67;9086:2;9081:3;9022:67;;;9015:74;;9122:34;9118:1;9113:3;9109:11;9102:55;9191:24;9186:2;9181:3;9177:12;9170:46;9244:2;9239:3;9235:12;9228:19;;9008:245;;;;9262:370;;9422:67;9486:2;9481:3;9422:67;;;9415:74;;9522:34;9518:1;9513:3;9509:11;9502:55;9591:3;9586:2;9581:3;9577:12;9570:25;9623:2;9618:3;9614:12;9607:19;;9408:224;;;;9641:332;;9801:67;9865:2;9860:3;9801:67;;;9794:74;;9901:34;9897:1;9892:3;9888:11;9881:55;9964:2;9959:3;9955:12;9948:19;;9787:186;;;;9982:318;;10142:67;10206:2;10201:3;10142:67;;;10135:74;;10242:20;10238:1;10233:3;10229:11;10222:41;10291:2;10286:3;10282:12;10275:19;;10128:172;;;;10309:375;;10469:67;10533:2;10528:3;10469:67;;;10462:74;;10569:34;10565:1;10560:3;10556:11;10549:55;10638:8;10633:2;10628:3;10624:12;10617:30;10675:2;10670:3;10666:12;10659:19;;10455:229;;;;10693:325;;10853:67;10917:2;10912:3;10853:67;;;10846:74;;10953:27;10949:1;10944:3;10940:11;10933:48;11009:2;11004:3;11000:12;10993:19;;10839:179;;;;11027:397;;11187:67;11251:2;11246:3;11187:67;;;11180:74;;11287:34;11283:1;11278:3;11274:11;11267:55;11356:30;11351:2;11346:3;11342:12;11335:52;11415:2;11410:3;11406:12;11399:19;;11173:251;;;;11471:618;11592:4;11587:3;11583:14;11680:4;11673:5;11669:16;11663:23;11692:63;11749:4;11744:3;11740:14;11726:12;11692:63;;;11612:149;11835:4;11828:5;11824:16;11818:23;11847:63;11904:4;11899:3;11895:14;11881:12;11847:63;;;11771:145;11993:4;11986:5;11982:16;11976:23;12005:63;12062:4;12057:3;12053:14;12039:12;12005:63;;;11926:148;11565:524;;;;12096:103;12169:24;12187:5;12169:24;;;12164:3;12157:37;12151:48;;;12206:113;12289:24;12307:5;12289:24;;;12284:3;12277:37;12271:48;;;12326:213;;12444:2;12433:9;12429:18;12421:26;;12458:71;12526:1;12515:9;12511:17;12502:6;12458:71;;;12415:124;;;;;12546:451;;12728:2;12717:9;12713:18;12705:26;;12742:79;12818:1;12807:9;12803:17;12794:6;12742:79;;;12832:72;12900:2;12889:9;12885:18;12876:6;12832:72;;;12915;12983:2;12972:9;12968:18;12959:6;12915:72;;;12699:298;;;;;;;13004:340;;13158:2;13147:9;13143:18;13135:26;;13172:79;13248:1;13237:9;13233:17;13224:6;13172:79;;;13262:72;13330:2;13319:9;13315:18;13306:6;13262:72;;;13129:215;;;;;;13351:324;;13497:2;13486:9;13482:18;13474:26;;13511:71;13579:1;13568:9;13564:17;13555:6;13511:71;;;13593:72;13661:2;13650:9;13646:18;13637:6;13593:72;;;13468:207;;;;;;13682:437;;13888:2;13877:9;13873:18;13865:26;;13938:9;13932:4;13928:20;13924:1;13913:9;13909:17;13902:47;13963:146;14104:4;14095:6;13963:146;;;13955:154;;13859:260;;;;;14126:253;;14264:2;14253:9;14249:18;14241:26;;14278:91;14366:1;14355:9;14351:17;14342:6;14278:91;;;14235:144;;;;;14386:237;;14516:2;14505:9;14501:18;14493:26;;14530:83;14610:1;14599:9;14595:17;14586:6;14530:83;;;14487:136;;;;;14630:251;;14767:2;14756:9;14752:18;14744:26;;14781:90;14868:1;14857:9;14853:17;14844:6;14781:90;;;14738:143;;;;;14888:301;;15026:2;15015:9;15011:18;15003:26;;15076:9;15070:4;15066:20;15062:1;15051:9;15047:17;15040:47;15101:78;15174:4;15165:6;15101:78;;;15093:86;;14997:192;;;;;15196:407;;15387:2;15376:9;15372:18;15364:26;;15437:9;15431:4;15427:20;15423:1;15412:9;15408:17;15401:47;15462:131;15588:4;15462:131;;;15454:139;;15358:245;;;;15610:407;;15801:2;15790:9;15786:18;15778:26;;15851:9;15845:4;15841:20;15837:1;15826:9;15822:17;15815:47;15876:131;16002:4;15876:131;;;15868:139;;15772:245;;;;16024:407;;16215:2;16204:9;16200:18;16192:26;;16265:9;16259:4;16255:20;16251:1;16240:9;16236:17;16229:47;16290:131;16416:4;16290:131;;;16282:139;;16186:245;;;;16438:407;;16629:2;16618:9;16614:18;16606:26;;16679:9;16673:4;16669:20;16665:1;16654:9;16650:17;16643:47;16704:131;16830:4;16704:131;;;16696:139;;16600:245;;;;16852:407;;17043:2;17032:9;17028:18;17020:26;;17093:9;17087:4;17083:20;17079:1;17068:9;17064:17;17057:47;17118:131;17244:4;17118:131;;;17110:139;;17014:245;;;;17266:407;;17457:2;17446:9;17442:18;17434:26;;17507:9;17501:4;17497:20;17493:1;17482:9;17478:17;17471:47;17532:131;17658:4;17532:131;;;17524:139;;17428:245;;;;17680:407;;17871:2;17860:9;17856:18;17848:26;;17921:9;17915:4;17911:20;17907:1;17896:9;17892:17;17885:47;17946:131;18072:4;17946:131;;;17938:139;;17842:245;;;;18094:407;;18285:2;18274:9;18270:18;18262:26;;18335:9;18329:4;18325:20;18321:1;18310:9;18306:17;18299:47;18360:131;18486:4;18360:131;;;18352:139;;18256:245;;;;18508:407;;18699:2;18688:9;18684:18;18676:26;;18749:9;18743:4;18739:20;18735:1;18724:9;18720:17;18713:47;18774:131;18900:4;18774:131;;;18766:139;;18670:245;;;;18922:407;;19113:2;19102:9;19098:18;19090:26;;19163:9;19157:4;19153:20;19149:1;19138:9;19134:17;19127:47;19188:131;19314:4;19188:131;;;19180:139;;19084:245;;;;19336:407;;19527:2;19516:9;19512:18;19504:26;;19577:9;19571:4;19567:20;19563:1;19552:9;19548:17;19541:47;19602:131;19728:4;19602:131;;;19594:139;;19498:245;;;;19750:407;;19941:2;19930:9;19926:18;19918:26;;19991:9;19985:4;19981:20;19977:1;19966:9;19962:17;19955:47;20016:131;20142:4;20016:131;;;20008:139;;19912:245;;;;20164:407;;20355:2;20344:9;20340:18;20332:26;;20405:9;20399:4;20395:20;20391:1;20380:9;20376:17;20369:47;20430:131;20556:4;20430:131;;;20422:139;;20326:245;;;;20578:213;;20696:2;20685:9;20681:18;20673:26;;20710:71;20778:1;20767:9;20763:17;20754:6;20710:71;;;20667:124;;;;;20798:324;;20944:2;20933:9;20929:18;20921:26;;20958:71;21026:1;21015:9;21011:17;21002:6;20958:71;;;21040:72;21108:2;21097:9;21093:18;21084:6;21040:72;;;20915:207;;;;;;21129:435;;21303:2;21292:9;21288:18;21280:26;;21317:71;21385:1;21374:9;21370:17;21361:6;21317:71;;;21399:72;21467:2;21456:9;21452:18;21443:6;21399:72;;;21482;21550:2;21539:9;21535:18;21526:6;21482:72;;;21274:290;;;;;;;21571:663;;21803:3;21792:9;21788:19;21780:27;;21818:71;21886:1;21875:9;21871:17;21862:6;21818:71;;;21900:72;21968:2;21957:9;21953:18;21944:6;21900:72;;;21983;22051:2;22040:9;22036:18;22027:6;21983:72;;;22066:66;22128:2;22117:9;22113:18;22104:6;22066:66;;;22143:81;22219:3;22208:9;22204:19;22195:6;22143:81;;;21774:460;;;;;;;;;22241:170;;22346:3;22338:11;;22384:4;22379:3;22375:14;22367:22;;22332:79;;;;22418:156;;22546:5;22540:12;22530:22;;22511:63;;;;22581:122;;22675:5;22669:12;22659:22;;22640:63;;;;22710:127;;22827:4;22822:3;22818:14;22810:22;;22804:33;;;;22845:197;;22994:6;22989:3;22982:19;23031:4;23026:3;23022:14;23007:29;;22975:67;;;;;23051:163;;23166:6;23161:3;23154:19;23203:4;23198:3;23194:14;23179:29;;23147:67;;;;;23222:91;;23284:24;23302:5;23284:24;;;23273:35;;23267:46;;;;23320:85;;23393:5;23386:13;23379:21;23368:32;;23362:43;;;;23412:72;;23474:5;23463:16;;23457:27;;;;23491:110;;23572:24;23590:5;23572:24;;;23561:35;;23555:46;;;;23608:126;;23680:5;23669:16;;23686:43;23723:5;23686:43;;;23663:71;;;;23741:121;;23814:42;23807:5;23803:54;23792:65;;23786:76;;;;23869:72;;23931:5;23920:16;;23914:27;;;;23948:129;;24035:37;24066:5;24035:37;;;24022:50;;24016:61;;;;24084:161;;24183:57;24234:5;24183:57;;;24170:70;;24164:81;;;;24252:128;;24351:24;24369:5;24351:24;;;24338:37;;24332:48;;;;24387:145;;24478:49;24521:5;24478:49;;;24465:62;;24459:73;;;;24539:120;;24630:24;24648:5;24630:24;;;24617:37;;24611:48;;;;24666:159;;24764:56;24814:5;24764:56;;;24751:69;;24745:80;;;;24832:127;;24930:24;24948:5;24930:24;;;24917:37;;24911:48;;;;24966:126;;25053:34;25081:5;25053:34;;;25040:47;;25034:58;;;;25099:121;;25178:37;25209:5;25178:37;;;25165:50;;25159:61;;;;25227:108;;25306:24;25324:5;25306:24;;;25293:37;;25287:48;;;;25343:268;25408:1;25415:101;25429:6;25426:1;25423:13;25415:101;;;25505:1;25500:3;25496:11;25490:18;25486:1;25481:3;25477:11;25470:39;25451:2;25448:1;25444:10;25439:15;;25415:101;;;25531:6;25528:1;25525:13;25522:2;;;25596:1;25587:6;25582:3;25578:16;25571:27;25522:2;25392:219;;;;;25619:97;;25707:2;25703:7;25698:2;25691:5;25687:14;25683:28;25673:38;;25667:49;;;;25724:101;25803:1;25796:5;25793:12;25783:2;;25809:9;25783:2;25777:48;;25832:117;25901:24;25919:5;25901:24;;;25894:5;25891:35;25881:2;;25940:1;25937;25930:12;25881:2;25875:74;;25956:111;26022:21;26037:5;26022:21;;;26015:5;26012:32;26002:2;;26058:1;26055;26048:12;26002:2;25996:71;;26074:117;26143:24;26161:5;26143:24;;;26136:5;26133:35;26123:2;;26182:1;26179;26172:12;26123:2;26117:74;;26198:155;26286:43;26323:5;26286:43;;;26279:5;26276:54;26266:2;;26344:1;26341;26334:12;26266:2;26260:93;;26360:117;26429:24;26447:5;26429:24;;;26422:5;26419:35;26409:2;;26468:1;26465;26458:12;26409:2;26403:74;",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.6.6;\npragma experimental ABIEncoderV2;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\nimport \"../interfaces/IMessenger.sol\";\nimport \"../Whitelist/Whitelist.sol\";\nimport \"../SLO/SLO.sol\";\nimport \"../SLARegistry.sol\";\nimport \"./Staking.sol\";\n\n/**\n * @title SLA\n * @dev SLA is a service level agreement contract used for service downtime\n * compensation\n */\ncontract SLA is Ownable, Staking {\n\n    using SafeMath for uint256;\n\n    // The required amount to stake when subscribing to the agreement\n    uint256 public stake;\n\n    // The time between SLI registration\n    uint256 private sliInterval;\n\n    // The ipfs hash that stores extra information about the agreement\n    string public ipfsHash;\n\n    // The address of the registry contract\n    SLARegistry public registry;\n\n    // Struct used for storing registered SLI's\n    struct SLI {\n        uint256 timestamp;\n        uint256 value;\n        uint256 periodId;\n    }\n\n    // Mapping to get SLO addresses from SLO names in bytes32\n    mapping(bytes32 => SLO) public SLOs;\n\n    // Mapping to get SLI structs from SLO names in bytes32\n    mapping(bytes32 => SLI[]) public SLIs;\n\n    // Array storing the names of the SLO's of this agreement\n    bytes32[] SLONames;\n\n    /**\n     * @dev event for SLI creation logging\n     * @param _timestamp the time the SLI has been registered\n     * @param _value the value of the SLI\n     * @param _periodId the id of the given period\n     */\n    event SLICreated(uint256 _timestamp, uint256 _value, uint256 _periodId);\n\n\n    /**\n     * @dev Throws if called by any address other than the Oraclize or\n     * messenger contract.\n     */\n    modifier onlyMessenger() {\n        require(msg.sender == address(registry.messenger()));\n        _;\n    }\n    \n    /**\n     * @dev constructor\n     * @param _owner the owner of the service level agreement\n     * @param _SLONames the names of the service level objectives in a bytes32\n     * array\n     * @param _SLOs an array with the service level objective addresses\n     * @param _stake the amount required to stake when subscribing to the\n     * agreement\n     * @param _ipfsHash the ipfs hash that stores extra information about the\n     * agreement\n     */\n    constructor(\n        address _owner,\n        bytes32[] memory _SLONames,\n        SLO[] memory _SLOs,\n        uint256 _stake,\n        string memory _ipfsHash,\n        uint256 _sliInterval,\n        bDSLAToken _tokenAddress\n    )\n    public Staking(_tokenAddress){\n        require(_SLOs.length < 5);\n        require(_SLONames.length == _SLOs.length);\n\n        for(uint256 i = 0; i < _SLOs.length; i++) {\n            SLOs[_SLONames[i]] = _SLOs[i];\n        }\n\n        transferOwnership(_owner);\n        SLONames = _SLONames;\n        stake = _stake;\n        ipfsHash = _ipfsHash;\n        registry = SLARegistry(msg.sender);\n        sliInterval = _sliInterval;\n    }\n\n    /**\n     * @dev external function to register SLI's and check them against the SLO's\n     * @param _SLOName the name of the SLO in bytes32\n     * @param _value the value of the SLI to check\n     * @param _periodId the id of the given period\n     */\n    function registerSLI(bytes32 _SLOName, uint256 _value, uint256 _periodId)\n        external\n        onlyMessenger\n    {\n        SLIs[_SLOName].push(SLI(block.timestamp, _value, _periodId));\n\n        emit SLICreated(block.timestamp, _value, _periodId);\n\n        \n        if(!SLOs[_SLOName].isSLOHonored(_value)) {\n            periods[_periodId].status = Status.NotRespected;\n        }else{\n            periods[_periodId].status = Status.Respected;\n        }\n    }\n\n    /**\n     * @dev external function to get SLI\n     * @param _SLOName the name of the SLO in bytes32\n     */\n    function getSLI(bytes32 _SLOName) public view returns(SLI[] memory) {\n        return SLIs[_SLOName];\n    }\n\n    /**\n     * @dev external view function that returns the sliInterval value\n     */\n    function getSliInterval() external view returns(uint256) {\n        return sliInterval;\n    }\n\n}\n",
  "sourcePath": "/Users/matiasbn/Desktop/stacktical-dsla-contracts/contracts/SLA/SLA.sol",
  "ast": {
    "absolutePath": "/Users/matiasbn/Desktop/stacktical-dsla-contracts/contracts/SLA/SLA.sol",
    "exportedSymbols": {
      "SLA": [
        299
      ]
    },
    "id": 300,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          "0.6",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:1"
      },
      {
        "id": 59,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "55:33:1"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 60,
        "nodeType": "ImportDirective",
        "scope": 300,
        "sourceUnit": 2461,
        "src": "90:52:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 61,
        "nodeType": "ImportDirective",
        "scope": 300,
        "sourceUnit": 3471,
        "src": "143:56:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 62,
        "nodeType": "ImportDirective",
        "scope": 300,
        "sourceUnit": 2657,
        "src": "200:51:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matiasbn/Desktop/stacktical-dsla-contracts/contracts/interfaces/IMessenger.sol",
        "file": "../interfaces/IMessenger.sol",
        "id": 63,
        "nodeType": "ImportDirective",
        "scope": 300,
        "sourceUnit": 2046,
        "src": "252:38:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matiasbn/Desktop/stacktical-dsla-contracts/contracts/Whitelist/Whitelist.sol",
        "file": "../Whitelist/Whitelist.sol",
        "id": 64,
        "nodeType": "ImportDirective",
        "scope": 300,
        "sourceUnit": 1791,
        "src": "291:36:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matiasbn/Desktop/stacktical-dsla-contracts/contracts/SLO/SLO.sol",
        "file": "../SLO/SLO.sol",
        "id": 65,
        "nodeType": "ImportDirective",
        "scope": 300,
        "sourceUnit": 1587,
        "src": "328:24:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matiasbn/Desktop/stacktical-dsla-contracts/contracts/SLARegistry.sol",
        "file": "../SLARegistry.sol",
        "id": 66,
        "nodeType": "ImportDirective",
        "scope": 300,
        "sourceUnit": 1463,
        "src": "353:28:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matiasbn/Desktop/stacktical-dsla-contracts/contracts/SLA/Staking.sol",
        "file": "./Staking.sol",
        "id": 67,
        "nodeType": "ImportDirective",
        "scope": 300,
        "sourceUnit": 1146,
        "src": "382:23:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 69,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2460,
              "src": "537:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$2460",
                "typeString": "contract Ownable"
              }
            },
            "id": 70,
            "nodeType": "InheritanceSpecifier",
            "src": "537:7:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 71,
              "name": "Staking",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1145,
              "src": "546:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Staking_$1145",
                "typeString": "contract Staking"
              }
            },
            "id": 72,
            "nodeType": "InheritanceSpecifier",
            "src": "546:7:1"
          }
        ],
        "contractDependencies": [
          1145,
          2068,
          2460
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 68,
          "nodeType": "StructuredDocumentation",
          "src": "407:113:1",
          "text": "@title SLA\n@dev SLA is a service level agreement contract used for service downtime\ncompensation"
        },
        "fullyImplemented": true,
        "id": 299,
        "linearizedBaseContracts": [
          299,
          1145,
          2460,
          2068
        ],
        "name": "SLA",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 75,
            "libraryName": {
              "contractScope": null,
              "id": 73,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2656,
              "src": "567:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$2656",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "561:27:1",
            "typeName": {
              "id": 74,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "580:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "3a4b66f1",
            "id": 77,
            "mutability": "mutable",
            "name": "stake",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 299,
            "src": "664:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 76,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "664:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 79,
            "mutability": "mutable",
            "name": "sliInterval",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 299,
            "src": "732:27:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 78,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "732:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "c623674f",
            "id": 81,
            "mutability": "mutable",
            "name": "ipfsHash",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 299,
            "src": "837:22:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 80,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "837:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7b103999",
            "id": 83,
            "mutability": "mutable",
            "name": "registry",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 299,
            "src": "910:27:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SLARegistry_$1462",
              "typeString": "contract SLARegistry"
            },
            "typeName": {
              "contractScope": null,
              "id": 82,
              "name": "SLARegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1462,
              "src": "910:11:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SLARegistry_$1462",
                "typeString": "contract SLARegistry"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "SLA.SLI",
            "id": 90,
            "members": [
              {
                "constant": false,
                "id": 85,
                "mutability": "mutable",
                "name": "timestamp",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 90,
                "src": "1013:17:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 84,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1013:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 87,
                "mutability": "mutable",
                "name": "value",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 90,
                "src": "1040:13:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 86,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1040:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 89,
                "mutability": "mutable",
                "name": "periodId",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 90,
                "src": "1063:16:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 88,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1063:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "SLI",
            "nodeType": "StructDefinition",
            "scope": 299,
            "src": "992:94:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b0227b47",
            "id": 94,
            "mutability": "mutable",
            "name": "SLOs",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 299,
            "src": "1154:35:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$1586_$",
              "typeString": "mapping(bytes32 => contract SLO)"
            },
            "typeName": {
              "id": 93,
              "keyType": {
                "id": 91,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1162:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1154:23:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$1586_$",
                "typeString": "mapping(bytes32 => contract SLO)"
              },
              "valueType": {
                "contractScope": null,
                "id": 92,
                "name": "SLO",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1586,
                "src": "1173:3:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_SLO_$1586",
                  "typeString": "contract SLO"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "94199c61",
            "id": 99,
            "mutability": "mutable",
            "name": "SLIs",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 299,
            "src": "1256:37:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$90_storage_$dyn_storage_$",
              "typeString": "mapping(bytes32 => struct SLA.SLI[])"
            },
            "typeName": {
              "id": 98,
              "keyType": {
                "id": 95,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1264:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1256:25:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$90_storage_$dyn_storage_$",
                "typeString": "mapping(bytes32 => struct SLA.SLI[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 96,
                  "name": "SLI",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 90,
                  "src": "1275:3:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SLI_$90_storage_ptr",
                    "typeString": "struct SLA.SLI"
                  }
                },
                "id": 97,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "1275:5:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_SLI_$90_storage_$dyn_storage_ptr",
                  "typeString": "struct SLA.SLI[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 102,
            "mutability": "mutable",
            "name": "SLONames",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 299,
            "src": "1362:18:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
              "typeString": "bytes32[]"
            },
            "typeName": {
              "baseType": {
                "id": 100,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1362:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "id": 101,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "1362:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                "typeString": "bytes32[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 103,
              "nodeType": "StructuredDocumentation",
              "src": "1387:209:1",
              "text": "@dev event for SLI creation logging\n@param _timestamp the time the SLI has been registered\n@param _value the value of the SLI\n@param _periodId the id of the given period"
            },
            "id": 111,
            "name": "SLICreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 105,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_timestamp",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 111,
                  "src": "1618:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1618:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 107,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 111,
                  "src": "1638:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 106,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1638:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 109,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_periodId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 111,
                  "src": "1654:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1654:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1617:55:1"
            },
            "src": "1601:72:1"
          },
          {
            "body": {
              "id": 127,
              "nodeType": "Block",
              "src": "1819:80:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 115,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1837:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1837:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 119,
                                  "name": "registry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 83,
                                  "src": "1859:8:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SLARegistry_$1462",
                                    "typeString": "contract SLARegistry"
                                  }
                                },
                                "id": 120,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "messenger",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1159,
                                "src": "1859:18:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IMessenger_$2045_$",
                                  "typeString": "function () view external returns (contract IMessenger)"
                                }
                              },
                              "id": 121,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1859:20:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IMessenger_$2045",
                                "typeString": "contract IMessenger"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IMessenger_$2045",
                                "typeString": "contract IMessenger"
                              }
                            ],
                            "id": 118,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1851:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 117,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1851:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1851:29:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1837:43:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 114,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1829:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1829:52:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 125,
                  "nodeType": "ExpressionStatement",
                  "src": "1829:52:1"
                },
                {
                  "id": 126,
                  "nodeType": "PlaceholderStatement",
                  "src": "1891:1:1"
                }
              ]
            },
            "documentation": {
              "id": 112,
              "nodeType": "StructuredDocumentation",
              "src": "1680:109:1",
              "text": "@dev Throws if called by any address other than the Oraclize or\nmessenger contract."
            },
            "id": 128,
            "name": "onlyMessenger",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1816:2:1"
            },
            "src": "1794:105:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 216,
              "nodeType": "Block",
              "src": "2621:399:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 152,
                            "name": "_SLOs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 137,
                            "src": "2639:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_SLO_$1586_$dyn_memory_ptr",
                              "typeString": "contract SLO[] memory"
                            }
                          },
                          "id": 153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2639:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "35",
                          "id": 154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2654:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "src": "2639:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 151,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2631:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2631:25:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 157,
                  "nodeType": "ExpressionStatement",
                  "src": "2631:25:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 159,
                            "name": "_SLONames",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 134,
                            "src": "2674:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          "id": 160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2674:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 161,
                            "name": "_SLOs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 137,
                            "src": "2694:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_SLO_$1586_$dyn_memory_ptr",
                              "typeString": "contract SLO[] memory"
                            }
                          },
                          "id": 162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2694:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2674:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 158,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2666:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2666:41:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 165,
                  "nodeType": "ExpressionStatement",
                  "src": "2666:41:1"
                },
                {
                  "body": {
                    "id": 187,
                    "nodeType": "Block",
                    "src": "2760:54:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 177,
                              "name": "SLOs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 94,
                              "src": "2774:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$1586_$",
                                "typeString": "mapping(bytes32 => contract SLO)"
                              }
                            },
                            "id": 181,
                            "indexExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 178,
                                "name": "_SLONames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 134,
                                "src": "2779:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                }
                              },
                              "id": 180,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 179,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 167,
                                "src": "2789:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2779:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2774:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLO_$1586",
                              "typeString": "contract SLO"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 182,
                              "name": "_SLOs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 137,
                              "src": "2795:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_SLO_$1586_$dyn_memory_ptr",
                                "typeString": "contract SLO[] memory"
                              }
                            },
                            "id": 184,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 183,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 167,
                              "src": "2801:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2795:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLO_$1586",
                              "typeString": "contract SLO"
                            }
                          },
                          "src": "2774:29:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$1586",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 186,
                        "nodeType": "ExpressionStatement",
                        "src": "2774:29:1"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 170,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 167,
                      "src": "2737:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 171,
                        "name": "_SLOs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 137,
                        "src": "2741:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_SLO_$1586_$dyn_memory_ptr",
                          "typeString": "contract SLO[] memory"
                        }
                      },
                      "id": 172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2741:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2737:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 188,
                  "initializationExpression": {
                    "assignments": [
                      167
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 167,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 188,
                        "src": "2722:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 166,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2722:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 169,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2734:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2722:13:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2755:3:1",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 174,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 167,
                        "src": "2755:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 176,
                    "nodeType": "ExpressionStatement",
                    "src": "2755:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "2718:96:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 190,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 131,
                        "src": "2842:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 189,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2459,
                      "src": "2824:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2824:25:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 192,
                  "nodeType": "ExpressionStatement",
                  "src": "2824:25:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 193,
                      "name": "SLONames",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102,
                      "src": "2859:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                        "typeString": "bytes32[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 194,
                      "name": "_SLONames",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "2870:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[] memory"
                      }
                    },
                    "src": "2859:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                      "typeString": "bytes32[] storage ref"
                    }
                  },
                  "id": 196,
                  "nodeType": "ExpressionStatement",
                  "src": "2859:20:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 197,
                      "name": "stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77,
                      "src": "2889:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 198,
                      "name": "_stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 139,
                      "src": "2897:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2889:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 200,
                  "nodeType": "ExpressionStatement",
                  "src": "2889:14:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 201,
                      "name": "ipfsHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81,
                      "src": "2913:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 202,
                      "name": "_ipfsHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "2924:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2913:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 204,
                  "nodeType": "ExpressionStatement",
                  "src": "2913:20:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 205,
                      "name": "registry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "2943:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLARegistry_$1462",
                        "typeString": "contract SLARegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 207,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2966:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2966:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 206,
                        "name": "SLARegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1462,
                        "src": "2954:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SLARegistry_$1462_$",
                          "typeString": "type(contract SLARegistry)"
                        }
                      },
                      "id": 209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2954:23:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLARegistry_$1462",
                        "typeString": "contract SLARegistry"
                      }
                    },
                    "src": "2943:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SLARegistry_$1462",
                      "typeString": "contract SLARegistry"
                    }
                  },
                  "id": 211,
                  "nodeType": "ExpressionStatement",
                  "src": "2943:34:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 212,
                      "name": "sliInterval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79,
                      "src": "2987:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 213,
                      "name": "_sliInterval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 143,
                      "src": "3001:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2987:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 215,
                  "nodeType": "ExpressionStatement",
                  "src": "2987:26:1"
                }
              ]
            },
            "documentation": {
              "id": 129,
              "nodeType": "StructuredDocumentation",
              "src": "1909:447:1",
              "text": "@dev constructor\n@param _owner the owner of the service level agreement\n@param _SLONames the names of the service level objectives in a bytes32\narray\n@param _SLOs an array with the service level objective addresses\n@param _stake the amount required to stake when subscribing to the\nagreement\n@param _ipfsHash the ipfs hash that stores extra information about the\nagreement"
            },
            "id": 217,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 148,
                    "name": "_tokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 145,
                    "src": "2607:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_bDSLAToken_$2027",
                      "typeString": "contract bDSLAToken"
                    }
                  }
                ],
                "id": 149,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 147,
                  "name": "Staking",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1145,
                  "src": "2599:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Staking_$1145_$",
                    "typeString": "type(contract Staking)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2599:22:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 131,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 217,
                  "src": "2382:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 130,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2382:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 134,
                  "mutability": "mutable",
                  "name": "_SLONames",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 217,
                  "src": "2406:26:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 132,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2406:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 133,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2406:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 137,
                  "mutability": "mutable",
                  "name": "_SLOs",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 217,
                  "src": "2442:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_SLO_$1586_$dyn_memory_ptr",
                    "typeString": "contract SLO[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 135,
                      "name": "SLO",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 1586,
                      "src": "2442:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLO_$1586",
                        "typeString": "contract SLO"
                      }
                    },
                    "id": 136,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2442:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_SLO_$1586_$dyn_storage_ptr",
                      "typeString": "contract SLO[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 139,
                  "mutability": "mutable",
                  "name": "_stake",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 217,
                  "src": "2470:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2470:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 141,
                  "mutability": "mutable",
                  "name": "_ipfsHash",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 217,
                  "src": "2494:23:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2494:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 143,
                  "mutability": "mutable",
                  "name": "_sliInterval",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 217,
                  "src": "2527:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2527:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 145,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 217,
                  "src": "2557:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_bDSLAToken_$2027",
                    "typeString": "contract bDSLAToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 144,
                    "name": "bDSLAToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2027,
                    "src": "2557:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_bDSLAToken_$2027",
                      "typeString": "contract bDSLAToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2372:215:1"
            },
            "returnParameters": {
              "id": 150,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2621:0:1"
            },
            "scope": 299,
            "src": "2361:659:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 274,
              "nodeType": "Block",
              "src": "3396:344:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 234,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "3430:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 235,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3430:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 236,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 222,
                            "src": "3447:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 237,
                            "name": "_periodId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 224,
                            "src": "3455:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 233,
                          "name": "SLI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 90,
                          "src": "3426:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_SLI_$90_storage_ptr_$",
                            "typeString": "type(struct SLA.SLI storage pointer)"
                          }
                        },
                        "id": 238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3426:39:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SLI_$90_memory_ptr",
                          "typeString": "struct SLA.SLI memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SLI_$90_memory_ptr",
                          "typeString": "struct SLA.SLI memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 229,
                          "name": "SLIs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99,
                          "src": "3406:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$90_storage_$dyn_storage_$",
                            "typeString": "mapping(bytes32 => struct SLA.SLI storage ref[] storage ref)"
                          }
                        },
                        "id": 231,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 230,
                          "name": "_SLOName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 220,
                          "src": "3411:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3406:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_SLI_$90_storage_$dyn_storage",
                          "typeString": "struct SLA.SLI storage ref[] storage ref"
                        }
                      },
                      "id": 232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3406:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_SLI_$90_storage_$returns$__$",
                        "typeString": "function (struct SLA.SLI storage ref)"
                      }
                    },
                    "id": 239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3406:60:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 240,
                  "nodeType": "ExpressionStatement",
                  "src": "3406:60:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 242,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "3493:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3493:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 244,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 222,
                        "src": "3510:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 245,
                        "name": "_periodId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 224,
                        "src": "3518:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 241,
                      "name": "SLICreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "3482:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256)"
                      }
                    },
                    "id": 246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3482:46:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 247,
                  "nodeType": "EmitStatement",
                  "src": "3477:51:1"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3551:36:1",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 252,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 222,
                          "src": "3580:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 248,
                            "name": "SLOs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 94,
                            "src": "3552:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$1586_$",
                              "typeString": "mapping(bytes32 => contract SLO)"
                            }
                          },
                          "id": 250,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 249,
                            "name": "_SLOName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 220,
                            "src": "3557:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3552:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$1586",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isSLOHonored",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1585,
                        "src": "3552:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view external returns (bool)"
                        }
                      },
                      "id": 253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3552:35:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 272,
                    "nodeType": "Block",
                    "src": "3665:69:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 264,
                                "name": "periods",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 348,
                                "src": "3679:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Period_$335_storage_$dyn_storage",
                                  "typeString": "struct Staking.Period storage ref[] storage ref"
                                }
                              },
                              "id": 266,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 265,
                                "name": "_periodId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 224,
                                "src": "3687:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3679:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Period_$335_storage",
                                "typeString": "struct Staking.Period storage ref"
                              }
                            },
                            "id": 267,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 324,
                            "src": "3679:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$314",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 268,
                              "name": "Status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 314,
                              "src": "3707:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Status_$314_$",
                                "typeString": "type(enum Staking.Status)"
                              }
                            },
                            "id": 269,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Respected",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3707:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$314",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "src": "3679:44:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$314",
                            "typeString": "enum Staking.Status"
                          }
                        },
                        "id": 271,
                        "nodeType": "ExpressionStatement",
                        "src": "3679:44:1"
                      }
                    ]
                  },
                  "id": 273,
                  "nodeType": "IfStatement",
                  "src": "3548:186:1",
                  "trueBody": {
                    "id": 263,
                    "nodeType": "Block",
                    "src": "3589:72:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 255,
                                "name": "periods",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 348,
                                "src": "3603:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Period_$335_storage_$dyn_storage",
                                  "typeString": "struct Staking.Period storage ref[] storage ref"
                                }
                              },
                              "id": 257,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 256,
                                "name": "_periodId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 224,
                                "src": "3611:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3603:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Period_$335_storage",
                                "typeString": "struct Staking.Period storage ref"
                              }
                            },
                            "id": 258,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 324,
                            "src": "3603:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$314",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 259,
                              "name": "Status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 314,
                              "src": "3631:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Status_$314_$",
                                "typeString": "type(enum Staking.Status)"
                              }
                            },
                            "id": 260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "NotRespected",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3631:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$314",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "src": "3603:47:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$314",
                            "typeString": "enum Staking.Status"
                          }
                        },
                        "id": 262,
                        "nodeType": "ExpressionStatement",
                        "src": "3603:47:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 218,
              "nodeType": "StructuredDocumentation",
              "src": "3026:248:1",
              "text": "@dev external function to register SLI's and check them against the SLO's\n@param _SLOName the name of the SLO in bytes32\n@param _value the value of the SLI to check\n@param _periodId the id of the given period"
            },
            "functionSelector": "869c3925",
            "id": 275,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 227,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 226,
                  "name": "onlyMessenger",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 128,
                  "src": "3378:13:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3378:13:1"
              }
            ],
            "name": "registerSLI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 225,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 220,
                  "mutability": "mutable",
                  "name": "_SLOName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 275,
                  "src": "3300:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 219,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3300:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 222,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 275,
                  "src": "3318:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 221,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3318:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 224,
                  "mutability": "mutable",
                  "name": "_periodId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 275,
                  "src": "3334:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 223,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3334:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3299:53:1"
            },
            "returnParameters": {
              "id": 228,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3396:0:1"
            },
            "scope": 299,
            "src": "3279:461:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 288,
              "nodeType": "Block",
              "src": "3925:38:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 284,
                      "name": "SLIs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99,
                      "src": "3942:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$90_storage_$dyn_storage_$",
                        "typeString": "mapping(bytes32 => struct SLA.SLI storage ref[] storage ref)"
                      }
                    },
                    "id": 286,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 285,
                      "name": "_SLOName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 278,
                      "src": "3947:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3942:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_SLI_$90_storage_$dyn_storage",
                      "typeString": "struct SLA.SLI storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 283,
                  "id": 287,
                  "nodeType": "Return",
                  "src": "3935:21:1"
                }
              ]
            },
            "documentation": {
              "id": 276,
              "nodeType": "StructuredDocumentation",
              "src": "3746:106:1",
              "text": "@dev external function to get SLI\n@param _SLOName the name of the SLO in bytes32"
            },
            "functionSelector": "02e8b893",
            "id": 289,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSLI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 278,
                  "mutability": "mutable",
                  "name": "_SLOName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 289,
                  "src": "3873:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 277,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3873:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3872:18:1"
            },
            "returnParameters": {
              "id": 283,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 282,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 289,
                  "src": "3911:12:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_SLI_$90_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct SLA.SLI[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 280,
                      "name": "SLI",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 90,
                      "src": "3911:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SLI_$90_storage_ptr",
                        "typeString": "struct SLA.SLI"
                      }
                    },
                    "id": 281,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3911:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_SLI_$90_storage_$dyn_storage_ptr",
                      "typeString": "struct SLA.SLI[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3910:14:1"
            },
            "scope": 299,
            "src": "3857:106:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 297,
              "nodeType": "Block",
              "src": "4112:35:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 295,
                    "name": "sliInterval",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 79,
                    "src": "4129:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 294,
                  "id": 296,
                  "nodeType": "Return",
                  "src": "4122:18:1"
                }
              ]
            },
            "documentation": {
              "id": 290,
              "nodeType": "StructuredDocumentation",
              "src": "3969:81:1",
              "text": "@dev external view function that returns the sliInterval value"
            },
            "functionSelector": "e7ab816a",
            "id": 298,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSliInterval",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 291,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4078:2:1"
            },
            "returnParameters": {
              "id": 294,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 293,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 298,
                  "src": "4103:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 292,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4103:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4102:9:1"
            },
            "scope": 299,
            "src": "4055:92:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 300,
        "src": "521:3629:1"
      }
    ],
    "src": "32:4119:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/matiasbn/Desktop/stacktical-dsla-contracts/contracts/SLA/SLA.sol",
    "exportedSymbols": {
      "SLA": [
        299
      ]
    },
    "id": 300,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          "0.6",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:1"
      },
      {
        "id": 59,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "55:33:1"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 60,
        "nodeType": "ImportDirective",
        "scope": 300,
        "sourceUnit": 2461,
        "src": "90:52:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 61,
        "nodeType": "ImportDirective",
        "scope": 300,
        "sourceUnit": 3471,
        "src": "143:56:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 62,
        "nodeType": "ImportDirective",
        "scope": 300,
        "sourceUnit": 2657,
        "src": "200:51:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matiasbn/Desktop/stacktical-dsla-contracts/contracts/interfaces/IMessenger.sol",
        "file": "../interfaces/IMessenger.sol",
        "id": 63,
        "nodeType": "ImportDirective",
        "scope": 300,
        "sourceUnit": 2046,
        "src": "252:38:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matiasbn/Desktop/stacktical-dsla-contracts/contracts/Whitelist/Whitelist.sol",
        "file": "../Whitelist/Whitelist.sol",
        "id": 64,
        "nodeType": "ImportDirective",
        "scope": 300,
        "sourceUnit": 1791,
        "src": "291:36:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matiasbn/Desktop/stacktical-dsla-contracts/contracts/SLO/SLO.sol",
        "file": "../SLO/SLO.sol",
        "id": 65,
        "nodeType": "ImportDirective",
        "scope": 300,
        "sourceUnit": 1587,
        "src": "328:24:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matiasbn/Desktop/stacktical-dsla-contracts/contracts/SLARegistry.sol",
        "file": "../SLARegistry.sol",
        "id": 66,
        "nodeType": "ImportDirective",
        "scope": 300,
        "sourceUnit": 1463,
        "src": "353:28:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matiasbn/Desktop/stacktical-dsla-contracts/contracts/SLA/Staking.sol",
        "file": "./Staking.sol",
        "id": 67,
        "nodeType": "ImportDirective",
        "scope": 300,
        "sourceUnit": 1146,
        "src": "382:23:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 69,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2460,
              "src": "537:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$2460",
                "typeString": "contract Ownable"
              }
            },
            "id": 70,
            "nodeType": "InheritanceSpecifier",
            "src": "537:7:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 71,
              "name": "Staking",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1145,
              "src": "546:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Staking_$1145",
                "typeString": "contract Staking"
              }
            },
            "id": 72,
            "nodeType": "InheritanceSpecifier",
            "src": "546:7:1"
          }
        ],
        "contractDependencies": [
          1145,
          2068,
          2460
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 68,
          "nodeType": "StructuredDocumentation",
          "src": "407:113:1",
          "text": "@title SLA\n@dev SLA is a service level agreement contract used for service downtime\ncompensation"
        },
        "fullyImplemented": true,
        "id": 299,
        "linearizedBaseContracts": [
          299,
          1145,
          2460,
          2068
        ],
        "name": "SLA",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 75,
            "libraryName": {
              "contractScope": null,
              "id": 73,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2656,
              "src": "567:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$2656",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "561:27:1",
            "typeName": {
              "id": 74,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "580:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "3a4b66f1",
            "id": 77,
            "mutability": "mutable",
            "name": "stake",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 299,
            "src": "664:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 76,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "664:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 79,
            "mutability": "mutable",
            "name": "sliInterval",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 299,
            "src": "732:27:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 78,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "732:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "c623674f",
            "id": 81,
            "mutability": "mutable",
            "name": "ipfsHash",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 299,
            "src": "837:22:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 80,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "837:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7b103999",
            "id": 83,
            "mutability": "mutable",
            "name": "registry",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 299,
            "src": "910:27:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SLARegistry_$1462",
              "typeString": "contract SLARegistry"
            },
            "typeName": {
              "contractScope": null,
              "id": 82,
              "name": "SLARegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1462,
              "src": "910:11:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SLARegistry_$1462",
                "typeString": "contract SLARegistry"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "SLA.SLI",
            "id": 90,
            "members": [
              {
                "constant": false,
                "id": 85,
                "mutability": "mutable",
                "name": "timestamp",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 90,
                "src": "1013:17:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 84,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1013:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 87,
                "mutability": "mutable",
                "name": "value",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 90,
                "src": "1040:13:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 86,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1040:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 89,
                "mutability": "mutable",
                "name": "periodId",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 90,
                "src": "1063:16:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 88,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1063:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "SLI",
            "nodeType": "StructDefinition",
            "scope": 299,
            "src": "992:94:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b0227b47",
            "id": 94,
            "mutability": "mutable",
            "name": "SLOs",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 299,
            "src": "1154:35:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$1586_$",
              "typeString": "mapping(bytes32 => contract SLO)"
            },
            "typeName": {
              "id": 93,
              "keyType": {
                "id": 91,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1162:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1154:23:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$1586_$",
                "typeString": "mapping(bytes32 => contract SLO)"
              },
              "valueType": {
                "contractScope": null,
                "id": 92,
                "name": "SLO",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1586,
                "src": "1173:3:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_SLO_$1586",
                  "typeString": "contract SLO"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "94199c61",
            "id": 99,
            "mutability": "mutable",
            "name": "SLIs",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 299,
            "src": "1256:37:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$90_storage_$dyn_storage_$",
              "typeString": "mapping(bytes32 => struct SLA.SLI[])"
            },
            "typeName": {
              "id": 98,
              "keyType": {
                "id": 95,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1264:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1256:25:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$90_storage_$dyn_storage_$",
                "typeString": "mapping(bytes32 => struct SLA.SLI[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 96,
                  "name": "SLI",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 90,
                  "src": "1275:3:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SLI_$90_storage_ptr",
                    "typeString": "struct SLA.SLI"
                  }
                },
                "id": 97,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "1275:5:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_SLI_$90_storage_$dyn_storage_ptr",
                  "typeString": "struct SLA.SLI[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 102,
            "mutability": "mutable",
            "name": "SLONames",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 299,
            "src": "1362:18:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
              "typeString": "bytes32[]"
            },
            "typeName": {
              "baseType": {
                "id": 100,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1362:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "id": 101,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "1362:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                "typeString": "bytes32[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 103,
              "nodeType": "StructuredDocumentation",
              "src": "1387:209:1",
              "text": "@dev event for SLI creation logging\n@param _timestamp the time the SLI has been registered\n@param _value the value of the SLI\n@param _periodId the id of the given period"
            },
            "id": 111,
            "name": "SLICreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 105,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_timestamp",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 111,
                  "src": "1618:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1618:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 107,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 111,
                  "src": "1638:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 106,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1638:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 109,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_periodId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 111,
                  "src": "1654:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1654:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1617:55:1"
            },
            "src": "1601:72:1"
          },
          {
            "body": {
              "id": 127,
              "nodeType": "Block",
              "src": "1819:80:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 115,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1837:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1837:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 119,
                                  "name": "registry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 83,
                                  "src": "1859:8:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SLARegistry_$1462",
                                    "typeString": "contract SLARegistry"
                                  }
                                },
                                "id": 120,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "messenger",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1159,
                                "src": "1859:18:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IMessenger_$2045_$",
                                  "typeString": "function () view external returns (contract IMessenger)"
                                }
                              },
                              "id": 121,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1859:20:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IMessenger_$2045",
                                "typeString": "contract IMessenger"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IMessenger_$2045",
                                "typeString": "contract IMessenger"
                              }
                            ],
                            "id": 118,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1851:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 117,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1851:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1851:29:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1837:43:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 114,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1829:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1829:52:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 125,
                  "nodeType": "ExpressionStatement",
                  "src": "1829:52:1"
                },
                {
                  "id": 126,
                  "nodeType": "PlaceholderStatement",
                  "src": "1891:1:1"
                }
              ]
            },
            "documentation": {
              "id": 112,
              "nodeType": "StructuredDocumentation",
              "src": "1680:109:1",
              "text": "@dev Throws if called by any address other than the Oraclize or\nmessenger contract."
            },
            "id": 128,
            "name": "onlyMessenger",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1816:2:1"
            },
            "src": "1794:105:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 216,
              "nodeType": "Block",
              "src": "2621:399:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 152,
                            "name": "_SLOs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 137,
                            "src": "2639:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_SLO_$1586_$dyn_memory_ptr",
                              "typeString": "contract SLO[] memory"
                            }
                          },
                          "id": 153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2639:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "35",
                          "id": 154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2654:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "src": "2639:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 151,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2631:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2631:25:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 157,
                  "nodeType": "ExpressionStatement",
                  "src": "2631:25:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 159,
                            "name": "_SLONames",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 134,
                            "src": "2674:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          "id": 160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2674:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 161,
                            "name": "_SLOs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 137,
                            "src": "2694:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_SLO_$1586_$dyn_memory_ptr",
                              "typeString": "contract SLO[] memory"
                            }
                          },
                          "id": 162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2694:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2674:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 158,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2666:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2666:41:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 165,
                  "nodeType": "ExpressionStatement",
                  "src": "2666:41:1"
                },
                {
                  "body": {
                    "id": 187,
                    "nodeType": "Block",
                    "src": "2760:54:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 177,
                              "name": "SLOs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 94,
                              "src": "2774:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$1586_$",
                                "typeString": "mapping(bytes32 => contract SLO)"
                              }
                            },
                            "id": 181,
                            "indexExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 178,
                                "name": "_SLONames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 134,
                                "src": "2779:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                }
                              },
                              "id": 180,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 179,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 167,
                                "src": "2789:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2779:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2774:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLO_$1586",
                              "typeString": "contract SLO"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 182,
                              "name": "_SLOs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 137,
                              "src": "2795:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_SLO_$1586_$dyn_memory_ptr",
                                "typeString": "contract SLO[] memory"
                              }
                            },
                            "id": 184,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 183,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 167,
                              "src": "2801:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2795:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLO_$1586",
                              "typeString": "contract SLO"
                            }
                          },
                          "src": "2774:29:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$1586",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 186,
                        "nodeType": "ExpressionStatement",
                        "src": "2774:29:1"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 170,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 167,
                      "src": "2737:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 171,
                        "name": "_SLOs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 137,
                        "src": "2741:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_SLO_$1586_$dyn_memory_ptr",
                          "typeString": "contract SLO[] memory"
                        }
                      },
                      "id": 172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2741:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2737:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 188,
                  "initializationExpression": {
                    "assignments": [
                      167
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 167,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 188,
                        "src": "2722:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 166,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2722:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 169,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2734:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2722:13:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2755:3:1",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 174,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 167,
                        "src": "2755:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 176,
                    "nodeType": "ExpressionStatement",
                    "src": "2755:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "2718:96:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 190,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 131,
                        "src": "2842:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 189,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2459,
                      "src": "2824:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2824:25:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 192,
                  "nodeType": "ExpressionStatement",
                  "src": "2824:25:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 193,
                      "name": "SLONames",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102,
                      "src": "2859:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                        "typeString": "bytes32[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 194,
                      "name": "_SLONames",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "2870:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[] memory"
                      }
                    },
                    "src": "2859:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                      "typeString": "bytes32[] storage ref"
                    }
                  },
                  "id": 196,
                  "nodeType": "ExpressionStatement",
                  "src": "2859:20:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 197,
                      "name": "stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77,
                      "src": "2889:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 198,
                      "name": "_stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 139,
                      "src": "2897:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2889:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 200,
                  "nodeType": "ExpressionStatement",
                  "src": "2889:14:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 201,
                      "name": "ipfsHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81,
                      "src": "2913:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 202,
                      "name": "_ipfsHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "2924:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2913:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 204,
                  "nodeType": "ExpressionStatement",
                  "src": "2913:20:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 205,
                      "name": "registry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "2943:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLARegistry_$1462",
                        "typeString": "contract SLARegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 207,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2966:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2966:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 206,
                        "name": "SLARegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1462,
                        "src": "2954:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SLARegistry_$1462_$",
                          "typeString": "type(contract SLARegistry)"
                        }
                      },
                      "id": 209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2954:23:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLARegistry_$1462",
                        "typeString": "contract SLARegistry"
                      }
                    },
                    "src": "2943:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SLARegistry_$1462",
                      "typeString": "contract SLARegistry"
                    }
                  },
                  "id": 211,
                  "nodeType": "ExpressionStatement",
                  "src": "2943:34:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 212,
                      "name": "sliInterval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79,
                      "src": "2987:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 213,
                      "name": "_sliInterval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 143,
                      "src": "3001:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2987:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 215,
                  "nodeType": "ExpressionStatement",
                  "src": "2987:26:1"
                }
              ]
            },
            "documentation": {
              "id": 129,
              "nodeType": "StructuredDocumentation",
              "src": "1909:447:1",
              "text": "@dev constructor\n@param _owner the owner of the service level agreement\n@param _SLONames the names of the service level objectives in a bytes32\narray\n@param _SLOs an array with the service level objective addresses\n@param _stake the amount required to stake when subscribing to the\nagreement\n@param _ipfsHash the ipfs hash that stores extra information about the\nagreement"
            },
            "id": 217,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 148,
                    "name": "_tokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 145,
                    "src": "2607:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_bDSLAToken_$2027",
                      "typeString": "contract bDSLAToken"
                    }
                  }
                ],
                "id": 149,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 147,
                  "name": "Staking",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1145,
                  "src": "2599:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Staking_$1145_$",
                    "typeString": "type(contract Staking)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2599:22:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 131,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 217,
                  "src": "2382:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 130,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2382:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 134,
                  "mutability": "mutable",
                  "name": "_SLONames",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 217,
                  "src": "2406:26:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 132,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2406:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 133,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2406:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 137,
                  "mutability": "mutable",
                  "name": "_SLOs",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 217,
                  "src": "2442:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_SLO_$1586_$dyn_memory_ptr",
                    "typeString": "contract SLO[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 135,
                      "name": "SLO",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 1586,
                      "src": "2442:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLO_$1586",
                        "typeString": "contract SLO"
                      }
                    },
                    "id": 136,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2442:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_SLO_$1586_$dyn_storage_ptr",
                      "typeString": "contract SLO[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 139,
                  "mutability": "mutable",
                  "name": "_stake",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 217,
                  "src": "2470:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2470:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 141,
                  "mutability": "mutable",
                  "name": "_ipfsHash",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 217,
                  "src": "2494:23:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2494:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 143,
                  "mutability": "mutable",
                  "name": "_sliInterval",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 217,
                  "src": "2527:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2527:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 145,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 217,
                  "src": "2557:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_bDSLAToken_$2027",
                    "typeString": "contract bDSLAToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 144,
                    "name": "bDSLAToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2027,
                    "src": "2557:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_bDSLAToken_$2027",
                      "typeString": "contract bDSLAToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2372:215:1"
            },
            "returnParameters": {
              "id": 150,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2621:0:1"
            },
            "scope": 299,
            "src": "2361:659:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 274,
              "nodeType": "Block",
              "src": "3396:344:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 234,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "3430:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 235,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3430:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 236,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 222,
                            "src": "3447:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 237,
                            "name": "_periodId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 224,
                            "src": "3455:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 233,
                          "name": "SLI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 90,
                          "src": "3426:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_SLI_$90_storage_ptr_$",
                            "typeString": "type(struct SLA.SLI storage pointer)"
                          }
                        },
                        "id": 238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3426:39:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SLI_$90_memory_ptr",
                          "typeString": "struct SLA.SLI memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SLI_$90_memory_ptr",
                          "typeString": "struct SLA.SLI memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 229,
                          "name": "SLIs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99,
                          "src": "3406:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$90_storage_$dyn_storage_$",
                            "typeString": "mapping(bytes32 => struct SLA.SLI storage ref[] storage ref)"
                          }
                        },
                        "id": 231,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 230,
                          "name": "_SLOName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 220,
                          "src": "3411:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3406:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_SLI_$90_storage_$dyn_storage",
                          "typeString": "struct SLA.SLI storage ref[] storage ref"
                        }
                      },
                      "id": 232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3406:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_SLI_$90_storage_$returns$__$",
                        "typeString": "function (struct SLA.SLI storage ref)"
                      }
                    },
                    "id": 239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3406:60:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 240,
                  "nodeType": "ExpressionStatement",
                  "src": "3406:60:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 242,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "3493:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3493:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 244,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 222,
                        "src": "3510:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 245,
                        "name": "_periodId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 224,
                        "src": "3518:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 241,
                      "name": "SLICreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "3482:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256)"
                      }
                    },
                    "id": 246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3482:46:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 247,
                  "nodeType": "EmitStatement",
                  "src": "3477:51:1"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3551:36:1",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 252,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 222,
                          "src": "3580:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 248,
                            "name": "SLOs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 94,
                            "src": "3552:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$1586_$",
                              "typeString": "mapping(bytes32 => contract SLO)"
                            }
                          },
                          "id": 250,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 249,
                            "name": "_SLOName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 220,
                            "src": "3557:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3552:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$1586",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isSLOHonored",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1585,
                        "src": "3552:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view external returns (bool)"
                        }
                      },
                      "id": 253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3552:35:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 272,
                    "nodeType": "Block",
                    "src": "3665:69:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 264,
                                "name": "periods",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 348,
                                "src": "3679:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Period_$335_storage_$dyn_storage",
                                  "typeString": "struct Staking.Period storage ref[] storage ref"
                                }
                              },
                              "id": 266,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 265,
                                "name": "_periodId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 224,
                                "src": "3687:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3679:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Period_$335_storage",
                                "typeString": "struct Staking.Period storage ref"
                              }
                            },
                            "id": 267,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 324,
                            "src": "3679:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$314",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 268,
                              "name": "Status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 314,
                              "src": "3707:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Status_$314_$",
                                "typeString": "type(enum Staking.Status)"
                              }
                            },
                            "id": 269,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Respected",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3707:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$314",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "src": "3679:44:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$314",
                            "typeString": "enum Staking.Status"
                          }
                        },
                        "id": 271,
                        "nodeType": "ExpressionStatement",
                        "src": "3679:44:1"
                      }
                    ]
                  },
                  "id": 273,
                  "nodeType": "IfStatement",
                  "src": "3548:186:1",
                  "trueBody": {
                    "id": 263,
                    "nodeType": "Block",
                    "src": "3589:72:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 255,
                                "name": "periods",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 348,
                                "src": "3603:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Period_$335_storage_$dyn_storage",
                                  "typeString": "struct Staking.Period storage ref[] storage ref"
                                }
                              },
                              "id": 257,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 256,
                                "name": "_periodId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 224,
                                "src": "3611:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3603:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Period_$335_storage",
                                "typeString": "struct Staking.Period storage ref"
                              }
                            },
                            "id": 258,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 324,
                            "src": "3603:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$314",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 259,
                              "name": "Status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 314,
                              "src": "3631:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Status_$314_$",
                                "typeString": "type(enum Staking.Status)"
                              }
                            },
                            "id": 260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "NotRespected",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3631:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$314",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "src": "3603:47:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$314",
                            "typeString": "enum Staking.Status"
                          }
                        },
                        "id": 262,
                        "nodeType": "ExpressionStatement",
                        "src": "3603:47:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 218,
              "nodeType": "StructuredDocumentation",
              "src": "3026:248:1",
              "text": "@dev external function to register SLI's and check them against the SLO's\n@param _SLOName the name of the SLO in bytes32\n@param _value the value of the SLI to check\n@param _periodId the id of the given period"
            },
            "functionSelector": "869c3925",
            "id": 275,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 227,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 226,
                  "name": "onlyMessenger",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 128,
                  "src": "3378:13:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3378:13:1"
              }
            ],
            "name": "registerSLI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 225,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 220,
                  "mutability": "mutable",
                  "name": "_SLOName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 275,
                  "src": "3300:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 219,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3300:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 222,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 275,
                  "src": "3318:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 221,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3318:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 224,
                  "mutability": "mutable",
                  "name": "_periodId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 275,
                  "src": "3334:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 223,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3334:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3299:53:1"
            },
            "returnParameters": {
              "id": 228,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3396:0:1"
            },
            "scope": 299,
            "src": "3279:461:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 288,
              "nodeType": "Block",
              "src": "3925:38:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 284,
                      "name": "SLIs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99,
                      "src": "3942:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$90_storage_$dyn_storage_$",
                        "typeString": "mapping(bytes32 => struct SLA.SLI storage ref[] storage ref)"
                      }
                    },
                    "id": 286,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 285,
                      "name": "_SLOName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 278,
                      "src": "3947:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3942:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_SLI_$90_storage_$dyn_storage",
                      "typeString": "struct SLA.SLI storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 283,
                  "id": 287,
                  "nodeType": "Return",
                  "src": "3935:21:1"
                }
              ]
            },
            "documentation": {
              "id": 276,
              "nodeType": "StructuredDocumentation",
              "src": "3746:106:1",
              "text": "@dev external function to get SLI\n@param _SLOName the name of the SLO in bytes32"
            },
            "functionSelector": "02e8b893",
            "id": 289,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSLI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 278,
                  "mutability": "mutable",
                  "name": "_SLOName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 289,
                  "src": "3873:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 277,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3873:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3872:18:1"
            },
            "returnParameters": {
              "id": 283,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 282,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 289,
                  "src": "3911:12:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_SLI_$90_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct SLA.SLI[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 280,
                      "name": "SLI",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 90,
                      "src": "3911:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SLI_$90_storage_ptr",
                        "typeString": "struct SLA.SLI"
                      }
                    },
                    "id": 281,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3911:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_SLI_$90_storage_$dyn_storage_ptr",
                      "typeString": "struct SLA.SLI[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3910:14:1"
            },
            "scope": 299,
            "src": "3857:106:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 297,
              "nodeType": "Block",
              "src": "4112:35:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 295,
                    "name": "sliInterval",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 79,
                    "src": "4129:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 294,
                  "id": 296,
                  "nodeType": "Return",
                  "src": "4122:18:1"
                }
              ]
            },
            "documentation": {
              "id": 290,
              "nodeType": "StructuredDocumentation",
              "src": "3969:81:1",
              "text": "@dev external view function that returns the sliInterval value"
            },
            "functionSelector": "e7ab816a",
            "id": 298,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSliInterval",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 291,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4078:2:1"
            },
            "returnParameters": {
              "id": 294,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 293,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 298,
                  "src": "4103:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 292,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4103:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4102:9:1"
            },
            "scope": 299,
            "src": "4055:92:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 300,
        "src": "521:3629:1"
      }
    ],
    "src": "32:4119:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.6+commit.6c089d02.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.5",
  "updatedAt": "2020-11-25T22:56:04.962Z",
  "devdoc": {
    "details": "SLA is a service level agreement contract used for service downtime compensation",
    "methods": {
      "constructor": {
        "details": "constructor",
        "params": {
          "_SLONames": "the names of the service level objectives in a bytes32 array",
          "_SLOs": "an array with the service level objective addresses",
          "_ipfsHash": "the ipfs hash that stores extra information about the agreement",
          "_owner": "the owner of the service level agreement",
          "_stake": "the amount required to stake when subscribing to the agreement"
        }
      },
      "getSLI(bytes32)": {
        "details": "external function to get SLI",
        "params": {
          "_SLOName": "the name of the SLO in bytes32"
        }
      },
      "getSliInterval()": {
        "details": "external view function that returns the sliInterval value"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "registerSLI(bytes32,uint256,uint256)": {
        "details": "external function to register SLI's and check them against the SLO's",
        "params": {
          "_SLOName": "the name of the SLO in bytes32",
          "_periodId": "the id of the given period",
          "_value": "the value of the SLI to check"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "SLA"
  },
  "userdoc": {
    "methods": {}
  }
}