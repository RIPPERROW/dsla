{
  "contractName": "SLA",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "bytes32[]",
          "name": "_SLONames",
          "type": "bytes32[]"
        },
        {
          "internalType": "contract SLO[]",
          "name": "_SLOs",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "_stake",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_ipfsHash",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_baseTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "_sla_period_starts",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_sla_period_ends",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "period_index",
          "type": "uint256"
        }
      ],
      "name": "NewPeriodAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_periodId",
          "type": "uint256"
        }
      ],
      "name": "SLICreated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BaseToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "SLIs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "periodId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "SLONames",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "SLOs",
      "outputs": [
        {
          "internalType": "contract SLO",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "addAllowedTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_sla_period_start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_sla_period_end",
          "type": "uint256"
        }
      ],
      "name": "addNewPeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allowedTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowedTokensMapping",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "blockNumberCreation",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_period",
          "type": "uint256"
        }
      ],
      "name": "claimCompensation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_period",
          "type": "uint256"
        }
      ],
      "name": "claimReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_periodId",
          "type": "uint256"
        }
      ],
      "name": "getPeriodData",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "periodStart",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "periodEnd",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPeriodLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_length",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getTokenStake",
      "outputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "stake",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "getTokenStakeLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_period",
          "type": "uint256"
        }
      ],
      "name": "getUserTotalValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ipfsHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "periods",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "sla_period_start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sla_period_end",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "claimed_reward",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "claimed",
          "type": "bool"
        },
        {
          "internalType": "enum Staking.Status",
          "name": "status",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "sli",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "internalType": "contract SLARegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakersCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokensPool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "uniqueTokensStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userStakedTokens",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userStakedTokensIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "userStakes",
      "outputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "stake",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "validator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_period",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_period",
          "type": "uint256"
        }
      ],
      "name": "withdrawAndStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_SLOName",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_periodId",
          "type": "uint256"
        }
      ],
      "name": "registerSLI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_SLOName",
          "type": "bytes32"
        }
      ],
      "name": "getSLI",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "periodId",
              "type": "uint256"
            }
          ],
          "internalType": "struct SLA.SLI[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDetails",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        },
        {
          "internalType": "contract SLO[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_period",
          "type": "uint256"
        }
      ],
      "name": "stakeTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"_SLONames\",\"type\":\"bytes32[]\"},{\"internalType\":\"contract SLO[]\",\"name\":\"_SLOs\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_stake\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_ipfsHash\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_baseTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_sla_period_starts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_sla_period_ends\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"period_index\",\"type\":\"uint256\"}],\"name\":\"NewPeriodAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_periodId\",\"type\":\"uint256\"}],\"name\":\"SLICreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BaseToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"SLIs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"periodId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"SLONames\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"SLOs\",\"outputs\":[{\"internalType\":\"contract SLO\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"addAllowedTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_sla_period_start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sla_period_end\",\"type\":\"uint256\"}],\"name\":\"addNewPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allowedTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowedTokensMapping\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blockNumberCreation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"claimCompensation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDetails\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"contract SLO[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_periodId\",\"type\":\"uint256\"}],\"name\":\"getPeriodData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"periodStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"periodEnd\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPeriodLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_length\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_SLOName\",\"type\":\"bytes32\"}],\"name\":\"getSLI\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"periodId\",\"type\":\"uint256\"}],\"internalType\":\"struct SLA.SLI[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getTokenStake\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getTokenStakeLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"getUserTotalValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ipfsHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"periods\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sla_period_start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sla_period_end\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimed_reward\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"claimed\",\"type\":\"bool\"},{\"internalType\":\"enum Staking.Status\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"sli\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_SLOName\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_periodId\",\"type\":\"uint256\"}],\"name\":\"registerSLI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract SLARegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"stakeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakersCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokensPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"uniqueTokensStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userStakedTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userStakedTokensIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userStakes\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"validator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"withdrawAndStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"SLA is a service level agreement contract used for service downtime compensation\",\"events\":{\"SLICreated(uint256,uint256,uint256)\":{\"details\":\"event for SLI creation logging\",\"params\":{\"_periodId\":\"3. the id of the given period\",\"_timestamp\":\"1. the time the SLI has been registered\",\"_value\":\"2. the value of the SLI\"}}},\"kind\":\"dev\",\"methods\":{\"addAllowedTokens(address)\":{\"details\":\"add a token to ve allowed for staking\",\"params\":{\"_token\":\"1. address of the new allowed token\"}},\"addNewPeriod(uint256,uint256)\":{\"details\":\"add a new period to the array\",\"params\":{\"_sla_period_end\":\"2. uint256 of the end of the period\",\"_sla_period_start\":\"1. uint256 of the start of the period\"}},\"claimCompensation(uint256)\":{\"details\":\"claim from delegators\",\"params\":{\"_period\":\"1. period id to claim\"}},\"claimReward(uint256)\":{\"details\":\"claim from validators\",\"params\":{\"_period\":\"1. period id to claim\"}},\"constructor\":{\"params\":{\"_SLONames\":\"2. array of the names of the service level objectives in bytes32\",\"_SLOs\":\"3. array of service level objective contract addressess service level objective breach\",\"_baseTokenAddress\":\"6. address of the Base Token to be unlocked for staking\",\"_ipfsHash\":\"5. string with the ipfs hash that contains extra information about the service level agreement\",\"_owner\":\"1. address of the owner of the service level agreement\",\"_sla_period_ends\":\"8. array with the values for the \\\"end\\\" of every period\",\"_sla_period_starts\":\"7. array with the values for the \\\"start\\\" of every period\",\"_stake\":\"4. uint of the amount required to stake when signing the service level agreement\"}},\"getDetails()\":{\"details\":\"external view function that returns all agreement information\",\"returns\":{\"_0\":\"address owner\",\"_1\":\"string ipfsHash\",\"_2\":\"uint256 amount necessary to stake\",\"_3\":\"bytes32[] SLONames array\",\"_4\":\"SLO[] SLO addresses array\"}},\"getPeriodLength()\":{\"details\":\"returns the lenght of the periods array\"},\"getSLI(bytes32)\":{\"details\":\"external function to get SLIs of certain _SLO\",\"params\":{\"_SLOName\":\"1. the name of the SLO in bytes32\"},\"returns\":{\"_0\":\"SLI[] array of SLIs associated to the input SLOs\"}},\"getTokenStake(address,uint256)\":{\"details\":\"returns the token stake according to index\",\"params\":{\"_index\":\"2. index of the TokenStake\",\"_owner\":\"1. owner of the stake\"}},\"getTokenStakeLength(address)\":{\"details\":\"returns the length of TokenStakes per user\",\"params\":{\"_owner\":\"1. owner of the stake\"}},\"getUserTotalValue(address,uint256)\":{\"details\":\"get the user total value staked\",\"params\":{\"_period\":\"2. period id to claim\",\"_user\":\"1. address of the user\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"registerSLI(bytes32,uint256,uint256)\":{\"details\":\"external function to register SLI's and check them against the SLO's\",\"params\":{\"_SLOName\":\"1. the name of the SLO in bytes32\",\"_periodId\":\"3. the id of the given period\",\"_value\":\"2. the value of the SLI to check\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"stakeTokens(uint256,address,uint256)\":{\"details\":\"increase the _amount staked per _token of _sla\",\"params\":{\"_amount\":\"1. amount to be staked\",\"_period\":\"3. period id to stake\",\"_token\":\"2. address of the ERC to be staked\"}},\"stakersCount()\":{\"details\":\"public view function that returns the total amount of stakers\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(address,uint256)\":{\"details\":\"withdraw staked tokens\",\"params\":{\"_period\":\"2. period id to withdraw\",\"_token\":\"1. address of the token\"}},\"withdrawAndStake(address,uint256,uint256)\":{\"details\":\"withdraw BaseToken and stake d Tokens\",\"params\":{\"_amount\":\"2. amount to withdraw\",\"_period\":\"3. period id to withdraw\",\"_token\":\"1. address of the token\"}}},\"stateVariables\":{\"SLIs\":{\"details\":\"mapping to get SLI structs from SLO names in bytes32\"},\"SLONames\":{\"details\":\"array storing the names of the SLO's of this agreement\"},\"SLOs\":{\"details\":\"mapping to get SLO addresses from SLO names in bytes32\"},\"blockNumberCreation\":{\"details\":\"block timestamp of SLA deployment\"},\"ipfsHash\":{\"details\":\"The ipfs hash that stores extra information about the agreement\"},\"registry\":{\"details\":\"The address of the registry contract\"},\"stake\":{\"details\":\"The required amount to stake when subscribing to the agreement\"}},\"title\":\"SLA\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLA/SLA.sol\":\"SLA\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/Messenger.sol\":{\"keccak256\":\"0xcc7c84a1107f48bc3db1cd83bff5ed0092d59055bc615413c7b2f2abcfe01cfb\",\"urls\":[\"bzz-raw://879097ec40e9f9cc6f4c5224f78855fe5f19c7633fe090bbef0ad431c752f0db\",\"dweb:/ipfs/QmYXGvZHnAj1XmQ6V8yFgj6RN6CT7HZKn9iSN4wFKUtbdh\"]},\"/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLA/SLA.sol\":{\"keccak256\":\"0xa7b23a0362f5fe320aa47ef24069b5ec30ff82066f3121018ef06ebea711e58c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1b636243365633bee950cc572819fab27d200c38046d7089962002ce56b14b3\",\"dweb:/ipfs/QmWBhCr6hsqC3MbDy1KeJebvfdvF6uMpvBuD7rALxKdGXe\"]},\"/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLA/Staking.sol\":{\"keccak256\":\"0xf6f5ae5ac9f31d2bda322195ec535978a1b0bd93f10eaa200ba022bf02013fa6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b28c5057cca15112113af30f5f21c3a6e273f46bf1a99bc35c4d3ece28b9f35\",\"dweb:/ipfs/QmXVraPkaRi54H66XHYHgddnbERFUyvP5MonJua4srS2mE\"]},\"/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLARegistry.sol\":{\"keccak256\":\"0x6e60ce86fe6a84abe3557d2e6001e72a21d99f2436d01d7ed2eebeccef93ce3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://033ebdce9ac88b03ffeec9c9374a27e8e5c2a4458e7e11cff548ebcae9d0c092\",\"dweb:/ipfs/QmNx9rUNz569gGmeoWg4t7TZ2kCFQmVwyFrXbeodyjZWfg\"]},\"/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLO/SLO.sol\":{\"keccak256\":\"0x8b65ee21bcc99350f76e11724268ee0341d15d0fae3bccf0e79434504768b2f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d7e756abbe5b65cb7a8158be59b156936ba55a33b1ac524c679bf1981fbc981\",\"dweb:/ipfs/QmUk7gHqh4XJmXqmu8QWhqbUDy8Bev9ZP74XPjkopfVb6q\"]},\"/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/StringUtils.sol\":{\"keccak256\":\"0xab8bc23eec48148fc2256eb207f0b56af5f74b8580e5f7f67f4eb529f844a25b\",\"urls\":[\"bzz-raw://8c6a065986a41e74fc6660a4031a52c4eca4be74e3d59614ed940326aa6e0c30\",\"dweb:/ipfs/QmSh3qHfNWAKpqguigyQKCwvizJV43Xv5RkkiUC3Pk2GvC\"]},\"@chainlink/contracts/src/v0.6/Chainlink.sol\":{\"keccak256\":\"0x7048bfd6e6fe4e60ea4af01ed44fc0494cec75df75c6b542a6f08ed34c66d39e\",\"urls\":[\"bzz-raw://37efc6a4665b537657283652d75919ec8dd3d48d85150b5285041bc9614fec11\",\"dweb:/ipfs/QmWKgeJEj222kNefTkauHwM5x58KTxSGgcbLseH9Fq8jed\"]},\"@chainlink/contracts/src/v0.6/ChainlinkClient.sol\":{\"keccak256\":\"0xd06166f7798c4c8cbd0e2dc642450c9bca39157c688ae95dbe079f666cc44dfa\",\"urls\":[\"bzz-raw://672af493da8e01492532d7ca8660362d015f317114e405aa55c85cff24aee31c\",\"dweb:/ipfs/QmNZdB2jVwwswrLFr83toTtHM5MPSugKeUdxrxfCJ4mP4K\"]},\"@chainlink/contracts/src/v0.6/interfaces/ChainlinkRequestInterface.sol\":{\"keccak256\":\"0x4b41b021bf58c429891ff291637de29be54741565105de82238dac9f6ecee374\",\"urls\":[\"bzz-raw://84681ff65b31b2e2c6977289661733c0f22409965b9057140f56f8a9ff185048\",\"dweb:/ipfs/QmS4TQJDSHQiKNwQ4LkSCVp7LjuRQwp6gem3271vtCwz9k\"]},\"@chainlink/contracts/src/v0.6/interfaces/ENSInterface.sol\":{\"keccak256\":\"0xf4998e886147b298eda28b4eacbdc90c58ba63ba475469651f2072e188dd5a64\",\"urls\":[\"bzz-raw://c1e2334294a816b7eda9de280e39b9463ebde2db8b242410eb991b2f623b47d4\",\"dweb:/ipfs/QmNY5bajahfFRmhBgcMVQ7712zHKxc6HkuN7LaiKtpjb7t\"]},\"@chainlink/contracts/src/v0.6/interfaces/LinkTokenInterface.sol\":{\"keccak256\":\"0xdbf46b45a4c9f38ba71a0391aed0e7b108854b619f292d907ae537228868bda6\",\"urls\":[\"bzz-raw://3ae40466809630c4731e2e3a697d6885727c577aaf260766c8a2f534ad3f6ee8\",\"dweb:/ipfs/QmTzpN5yP4Y5jvQ1ohfXFrce3sjzUiSChYJgZj9VvhVohG\"]},\"@chainlink/contracts/src/v0.6/interfaces/PointerInterface.sol\":{\"keccak256\":\"0x6458d82762d4f13c020a13efdbd9bf14500e147df707184a693aea91449c2f4f\",\"urls\":[\"bzz-raw://735950f3a544fc6ef2db92405597169bfb5fdb9df83623c0d99fd3d85de8690d\",\"dweb:/ipfs/QmZHxb5Qr7Kw9DHAg4VwEADue9ffNyyhbiyEZ15A5mANUN\"]},\"@chainlink/contracts/src/v0.6/vendor/BufferChainlink.sol\":{\"keccak256\":\"0xe4aa364f56414c4326ffe12c1121d591be6ad168afb42b24a823f6d76299dd63\",\"urls\":[\"bzz-raw://e3e91a0eddb6fc6c53acdfbd59771deff1678330128d3c98014c668763efb45e\",\"dweb:/ipfs/Qmbt5VNT2W2oCN44536JGNuHqAJdmYGqzEFcHvy8W1tAsY\"]},\"@chainlink/contracts/src/v0.6/vendor/CBORChainlink.sol\":{\"keccak256\":\"0xbb4d8257c1af348cac9828ee531428b148bb726517357fe6a80279ac45b658b5\",\"urls\":[\"bzz-raw://8c8c5da0358946437fac595591367066b8d6e5f58414c027a79a093e1f3241c1\",\"dweb:/ipfs/QmNQ5TPzaPEbj5kaX17YLuZEmhv8NGfoCrUVK3s6gQuHdA\"]},\"@chainlink/contracts/src/v0.6/vendor/ENSResolver.sol\":{\"keccak256\":\"0xdddea29d7407c1dbd1e130d885fc1a0934e98f0a7cc9f4d5bfd002bb2cfbcf82\",\"urls\":[\"bzz-raw://c4c764d69c47754d7b219fab558bf4be2a6444470ede7aa0ab1e446aea01dbda\",\"dweb:/ipfs/QmWp2CNUw9xt8ir2P3LhGHuydUsAXnyZ382U2BUjhoYPvy\"]},\"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":{\"keccak256\":\"0x5e6948bb332468d8ef0704b4259babc8aef7ce5969d5997c16db8ad806222a0a\",\"urls\":[\"bzz-raw://8e2bbda1e1168401d0105cc86bf5302000e8555ebb9b235cd68c148916a452e5\",\"dweb:/ipfs/QmbTjbpJr8VfdWfgBknbQov1MGkXXPMysb7eD8bobGAcBV\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3\",\"dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017\",\"dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "immutableReferences": {},
  "sourceMap": "446:5911:2:-:0;;;3029:906;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3346:17;3365:18;3385:16;3403:6;865:17:23;885:12;:10;:12::i;:::-;907:6;:18;;-1:-1:-1;;;;;;907:18:23;-1:-1:-1;;;;;907:18:23;;;;;;;940:43;;-1:-1:-1;;907:18:23;;-1:-1:-1;907:18:23;;:6;;-1:-1:-1;;907:6:23;-1:-1:-1;;;;;940:43:23;907:6;;940:43;831:159;3534:16:3;:23;3505:18;:25;:52;3484:140;;;;-1:-1:-1;;;3484:140:3;;;;;;;:::i;:::-;;;;;;;;;3634:9;:18;;-1:-1:-1;;;;;3634:18:3;;;-1:-1:-1;;;;;;3634:18:3;;;;;;;-1:-1:-1;3705:37:3;;;;;;;;;;;;3752:13;:37;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3799:39:3;;;:20;3752:37;3799:39;;;;:46;;-1:-1:-1;;3799:46:3;;;;;;3856:135;3880:18;:25;3876:1;:29;3856:135;;;3926:54;3937:18;3956:1;3937:21;;;;;;;;;;;;;;3960:16;3977:1;3960:19;;;;;;;;;;;;;;3926:10;;;:54;;:::i;:::-;3907:3;;3856:135;;;;3302:695;;;;3448:1:2::1;3433:5;:12;:16;3425:52;;;::::0;-1:-1:-1;;;3425:52:2;;::::1;::::0;::::1;;;:::i;:::-;3528:5;:12;3508:9;:16;:32;3487:126;;;::::0;-1:-1:-1;;;3487:126:2;;::::1;::::0;::::1;;;:::i;:::-;3629:9;3624:97;3648:5;:12;3644:1;:16;3624:97;;;3702:5;3708:1;3702:8;;;;;;;;;;;;;;3681:4;:18;3686:9;3696:1;3686:12;;;;;;;;;::::0;;::::1;::::0;;;;;;;3681:18;;;::::1;::::0;;;;;;-1:-1:-1;3681:18:2;:29;;-1:-1:-1;;;;;;3681:29:2::1;-1:-1:-1::0;;;;;3681:29:2;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;3662:3:2::1;3624:97;;;-1:-1:-1::0;3731:25:2::1;3749:6:::0;3731:17:::1;:25::i;:::-;3766:20:::0;;::::1;::::0;:8:::1;::::0;:20:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;3796:5:2::1;:14:::0;;;3820:20;;::::1;::::0;:8:::1;::::0;:20:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;;3850:8:2::1;:34:::0;;-1:-1:-1;;;;;;3850:34:2::1;3873:10;3850:34;::::0;;-1:-1:-1;;3916:12:2::1;3894:19;:34:::0;-1:-1:-1;446:5911:2;;-1:-1:-1;;;;446:5911:2;590:104:21;677:10;590:104;:::o;13229:421:3:-;13332:21;;:::i;:::-;13364:44;;;13418:22;;;:40;;;-1:-1:-1;13468:14:3;;;:35;;;13513:11;;;:15;;;13538:17;;;:21;;;13569:7;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13569:21:3;;;;;;;;;;;;13364:44;;13569:21;;;;-1:-1:-1;;13569:21:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13621;13640:1;13621:7;:14;;;;:18;;;;;;:21;;;;:::i;:::-;13606:37;;;;;;;13229:421;;;:::o;1983:240:23:-;1280:12;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:22:23;;;:6;;:22;1262:67;;;;-1:-1:-1;;;1262:67:23;;;;;;;:::i;:::-;-1:-1:-1;;;;;2071:22:23;::::1;2063:73;;;::::0;-1:-1:-1;;;2063:73:23;;::::1;::::0;::::1;;;:::i;:::-;2172:6;::::0;;2151:38:::1;::::0;-1:-1:-1;;;;;;;2151:38:23;;::::1;::::0;2172:6;::::1;::::0;;;;-1:-1:-1;;2172:6:23;-1:-1:-1;;;;;2151:38:23;::::1;2199:6;:17:::0;;-1:-1:-1;;;;;;2199:17:23::1;-1:-1:-1::0;;;;;2199:17:23;;;::::1;::::0;;;::::1;::::0;;1983:240::o;1321:134:24:-;1379:7;1405:43;1409:1;1412;1405:43;;;;;;;;;;;;;;;;;:3;;;:43;;:::i;:::-;1398:50;;1321:134;;;;;:::o;1746:187::-;1832:7;1867:12;1859:6;;;;1851:29;;;;-1:-1:-1;;;1851:29:24;;;;;;;;:::i;:::-;-1:-1:-1;;;1902:5:24;;;1746:187::o;446:5911:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;446:5911:2;;;-1:-1:-1;446:5911:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;5:134:-1;83:13;;101:33;83:13;101:33;:::i;164:722::-;;292:3;285:4;277:6;273:17;269:27;259:2;;-1:-1;;300:12;259:2;340:6;334:13;362:80;377:64;434:6;377:64;:::i;:::-;362:80;:::i;:::-;470:21;;;353:89;-1:-1;514:4;527:14;;;;502:17;;;616;;;607:27;;;;604:36;-1:-1;601:2;;;653:1;;643:12;601:2;678:1;663:217;688:6;685:1;682:13;663:217;;;2509:13;;756:61;;831:14;;;;859;;;;710:1;703:9;663:217;;;667:14;;;;;252:634;;;;:::o;917:758::-;;1057:3;1050:4;1042:6;1038:17;1034:27;1024:2;;-1:-1;;1065:12;1024:2;1105:6;1099:13;1127:92;1142:76;1211:6;1142:76;:::i;1127:92::-;1247:21;;;1118:101;-1:-1;1291:4;1304:14;;;;1279:17;;;1393;;;1384:27;;;;1381:36;-1:-1;1378:2;;;1430:1;;1420:12;1378:2;1455:1;1440:229;1465:6;1462:1;1459:13;1440:229;;;2668:6;2662:13;2680:45;2719:5;2680:45;:::i;:::-;1533:73;;1620:14;;;;1648;;;;1487:1;1480:9;1440:229;;2738:444;;2851:3;2844:4;2836:6;2832:17;2828:27;2818:2;;-1:-1;;2859:12;2818:2;2893:13;;-1:-1;11161:30;;11158:2;;;-1:-1;;11194:12;11158:2;2921:65;11335:4;-1:-1;;11267:9;11248:17;;11244:33;11325:15;2921:65;:::i;:::-;2912:74;;3006:6;2999:5;2992:21;3110:3;11335:4;3101:6;3034;3092:16;;3089:25;3086:2;;;3127:1;;3117:12;3086:2;3137:39;3169:6;11335:4;3068:5;3064:16;11335:4;3034:6;3030:17;3137:39;:::i;:::-;;2811:371;;;;:::o;3331:1859::-;;;;;;;;;3687:3;3675:9;3666:7;3662:23;3658:33;3655:2;;;-1:-1;;3694:12;3655:2;3756:64;3812:7;3788:22;3756:64;:::i;:::-;3878:2;3863:18;;3857:25;3746:74;;-1:-1;;3891:30;;;3888:2;;;-1:-1;;3924:12;3888:2;3954:89;4035:7;4026:6;4015:9;4011:22;3954:89;:::i;:::-;3944:99;;4101:2;4090:9;4086:18;4080:25;4066:39;;3902:18;4117:6;4114:30;4111:2;;;-1:-1;;4147:12;4111:2;4177:101;4270:7;4261:6;4250:9;4246:22;4177:101;:::i;:::-;4167:111;;4315:2;4369:9;4365:22;3268:13;4323:74;;4455:3;4444:9;4440:19;4434:26;4420:40;;3902:18;4472:6;4469:30;4466:2;;;-1:-1;;4502:12;4466:2;4532:74;4598:7;4589:6;4578:9;4574:22;4532:74;:::i;:::-;4522:84;;4662:64;4718:7;4643:3;4698:9;4694:22;4662:64;:::i;:::-;4652:74;;4784:3;4773:9;4769:19;4763:26;4749:40;;3902:18;4801:6;4798:30;4795:2;;;-1:-1;;4831:12;4795:2;4861:89;4942:7;4933:6;4922:9;4918:22;4861:89;:::i;:::-;4851:99;;5008:3;4997:9;4993:19;4987:26;4973:40;;3902:18;5025:6;5022:30;5019:2;;;-1:-1;;5055:12;5019:2;;5085:89;5166:7;5157:6;5146:9;5142:22;5085:89;:::i;:::-;5075:99;;;3649:1541;;;;;;;;;;;:::o;7388:310::-;;7535:2;7556:17;7549:47;5342:5;11445:12;11602:6;7535:2;7524:9;7520:18;11590:19;5436:52;5481:6;11630:14;7524:9;11630:14;7535:2;5462:5;5458:16;5436:52;:::i;:::-;11267:9;12497:14;-1:-1;;12493:28;5500:39;;;;11630:14;5500:39;;7506:192;-1:-1;;7506:192::o;7705:416::-;7905:2;7919:47;;;5776:2;7890:18;;;11590:19;5812:34;11630:14;;;5792:55;-1:-1;;;5867:12;;;5860:30;5909:12;;;7876:245::o;8128:416::-;8328:2;8342:47;;;6160:2;8313:18;;;11590:19;6196:34;11630:14;;;6176:55;-1:-1;;;6251:12;;;6244:33;6296:12;;;8299:245::o;8551:416::-;8751:2;8765:47;;;8736:18;;;11590:19;6583:34;11630:14;;;6563:55;6637:12;;;8722:245::o;8974:416::-;9174:2;9188:47;;;6888:2;9159:18;;;11590:19;6924:34;11630:14;;;6904:55;-1:-1;;;6979:12;;;6972:39;7030:12;;;9145:245::o;9397:416::-;9597:2;9611:47;;;7281:2;9582:18;;;11590:19;-1:-1;;;11630:14;;;7297:46;7362:12;;;9568:245::o;9820:256::-;9882:2;9876:9;9908:17;;;10004:22;;;-1:-1;9968:34;;9965:62;9962:2;;;10040:1;;10030:12;9962:2;9882;10049:22;9860:216;;-1:-1;9860:216::o;10083:304::-;;-1:-1;10231:30;;10228:2;;;-1:-1;;10264:12;10228:2;-1:-1;10309:4;10297:17;;;10362:15;;10165:222::o;12153:268::-;12218:1;12225:101;12239:6;12236:1;12233:13;12225:101;;;12306:11;;;12300:18;12287:11;;;12280:39;12261:2;12254:10;12225:101;;;12341:6;12338:1;12335:13;12332:2;;;12218:1;12397:6;12392:3;12388:16;12381:27;12332:2;;12202:219;;;:::o;12534:117::-;-1:-1;;;;;12007:54;;12593:35;;12583:2;;12642:1;;12632:12;12583:2;12577:74;:::o;:::-;446:5911:2;;;;;;",
  "deployedSourceMap": "446:5911:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4966:107;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4194:174:3;;;;;;:::i;:::-;;:::i;:::-;;1552:52;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4495:226::-;;;;;;:::i;:::-;;:::i;2116:68::-;;;;;;:::i;:::-;;:::i;1937:84::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;594:20:2:-;;;:::i;1263:24:3:-;;;:::i;:::-;;;;;;;:::i;10970:930::-;;;;;;:::i;:::-;;:::i;14518:274::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1459:30::-;;;;;;:::i;:::-;;:::i;1689:145:23:-;;;:::i;8701:1196:3:-;;;;;;:::i;:::-;;:::i;777:27:2:-;;;:::i;1181:26:3:-;;;:::i;14866:103::-;;;:::i;4203:562:2:-;;;;;;:::i;:::-;;:::i;1066:77:23:-;;;:::i;1007:23:3:-;;;:::i;1141:37:2:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;13746:92:3:-;;;:::i;9995:877::-;;;;;;:::i;:::-;;:::i;1033:35:2:-;;;;;;:::i;:::-;;:::i;1790:50:3:-;;;;;;:::i;:::-;;:::i;1672:53::-;;;;;;:::i;:::-;;:::i;698:22:2:-;;;:::i;:::-;;;;;;;:::i;6049:306::-;;;;;;:::i;:::-;;:::i;1332:34::-;;;:::i;1073:23:3:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;14226:124::-;;;;;;:::i;:::-;;:::i;12050:634::-;;;;;;:::i;:::-;;:::i;1983:240:23:-;;;;;;:::i;:::-;;:::i;1253:25:2:-;;;;;;:::i;:::-;;:::i;7490:1007:3:-;;;;;;:::i;:::-;;:::i;5360:466:2:-;;;:::i;:::-;;;;;;;;;;;:::i;13844:261:3:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;2271:45::-;;;;;;:::i;:::-;;:::i;1365:24::-;;;;;;:::i;:::-;;:::i;4966:107:2:-;5021:12;5052:4;:14;5057:8;5052:14;;;;;;;;;;;5045:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4966:107;;;;:::o;4194:174:3:-;1280:12:23;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:22:23;;;:6;;:22;1262:67;;;;-1:-1:-1;;;1262:67:23;;;;;;;:::i;:::-;;;;;;;;;4315:46:3::1;4326:17;4345:15;4315:10;:46::i;:::-;4194:174:::0;;:::o;1552:52::-;;;;;;;;;;;;;;;:::o;4495:226::-;1280:12:23;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:22:23;;;:6;;:22;1262:67;;;;-1:-1:-1;;;1262:67:23;;;;;;;:::i;:::-;-1:-1:-1;;;;;4572:28:3;::::1;;::::0;;;:20:::1;:28;::::0;;;;;::::1;;:37;4564:69;;;::::0;-1:-1:-1;;;4564:69:3;;::::1;::::0;::::1;;;:::i;:::-;4643:13;:26:::0;;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;;4643:26:3::1;-1:-1:-1::0;;;;;4643:26:3;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;4679:28:3;;;:20:::1;4643:26;4679:28:::0;;;;;:35;;-1:-1:-1;;4679:35:3::1;::::0;;::::1;::::0;;4495:226::o;2116:68::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1937:84::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;594:20:2:-;;;;:::o;1263:24:3:-;;;-1:-1:-1;;;;;1263:24:3;;:::o;10970:930::-;11050:7;2771;2779;2771:16;;;;;;;;;;;;;;;;;;:33;;;2752:15;:52;;:122;;;;;2843:7;2851;2843:16;;;;;;;;;;;;;;;;;;:31;;;2824:15;:50;;2752:122;2731:153;;;;;;2505:9:::1;::::0;-1:-1:-1;;;;;2505:9:3::1;2491:10;:23;;2483:57;;;::::0;-1:-1:-1;;;2483:57:3;;::::1;::::0;::::1;;;:::i;:::-;11142:19:::2;11115:7:::0;11123::::2;11115:16;;;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;:46;;;;;;;;;11094:108;;;::::0;-1:-1:-1;;;11094:108:3;;::::2;::::0;::::2;;;:::i;:::-;11233:7;11241;11233:16;;;;;;;;;::::0;;;::::2;::::0;;;11271:10:::2;11233:49:::0;;:37:::2;:16;::::0;;::::2;;:37:::0;;;::::2;:49:::0;;;;;;:54;11212:161:::2;;;::::0;-1:-1:-1;;;11212:161:3;;::::2;::::0;::::2;;;:::i;:::-;11384:20;11407:38;11425:10;11437:7;11407:17;:38::i;:::-;11384:61:::0;-1:-1:-1;11455:12:3::2;11470:27;11494:2;11470:19;11384:61:::0;11487:1:::2;11470:16;:19::i;:::-;:23:::0;::::2;:27::i;:::-;11522:11;::::0;11455:42;;-1:-1:-1;11522:29:3::2;::::0;11538:12;11522:15:::2;:29::i;:::-;11508:11;:43;;;;11613:12;11561:7;11569;11561:16;;;;;;;;;::::0;;;::::2;::::0;;;11599:10:::2;11561:49:::0;;;:16:::2;::::0;;;::::2;;:37;;:49:::0;;;;;;;:64;;;;11636:9:::2;::::0;:44;;-1:-1:-1;;;11636:44:3;;-1:-1:-1;;;;;11636:9:3;;::::2;::::0;-1:-1:-1;;11636:44:3::2;::::0;11599:10;11667:12;;11636:44:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;11730:9:3::2;::::0;918:22:::2;::::0;;;;::::2;::::0;;::::2;::::0;;-1:-1:-1;;;918:22:3::2;::::0;;::::2;::::0;11763:43;-1:-1:-1;;;;;;;11730:9:3::2;::::0;908:33;;11763:43:::2;::::0;11801:4;;11763:43:::2;;;:::i;:::-;;::::0;;-1:-1:-1;;11763:43:3;;::::2;::::0;;;;;;::::2;::::0;::::2;::::0;;-1:-1:-1;;;;;11763:43:3::2;-1:-1:-1::0;;;;;;11763:43:3;;;::::2;::::0;;;::::2;::::0;;;11722:98;;::::2;::::0;11763:43;11722:98:::2;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11690:130;;;11839:8;11831:62;;;::::0;-1:-1:-1;;;11831:62:3;;::::2;::::0;::::2;;;:::i;:::-;2550:1;;;10970:930:::0;;:::o;14518:274::-;-1:-1:-1;;;;;14690:18:3;;14618:20;14690:18;;;:10;:18;;;;;:26;;14618:20;;14690:18;14709:6;;14690:26;;;;;;;;;;;;;;;;;;;;;;:39;-1:-1:-1;;;;;14743:18:3;;;;;:10;:18;;;;;;;:26;;14690:39;;;;;14743:18;14762:6;;14743:26;;;;;;;;;;;;;;;;:32;;;14669:116;;;;14518:274;;;;;:::o;1459:30::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1459:30:3;;-1:-1:-1;1459:30:3;:::o;1689:145:23:-;1280:12;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:22:23;;;:6;;:22;1262:67;;;;-1:-1:-1;;;1262:67:23;;;;;;;:::i;:::-;1795:1:::1;1779:6:::0;;1758:40:::1;::::0;-1:-1:-1;;;;;1779:6:23;;::::1;::::0;1758:40:::1;::::0;1795:1;;1758:40:::1;1825:1;1808:19:::0;;-1:-1:-1;;;;;;1808:19:23::1;::::0;;1689:145::o;8701:1196:3:-;2505:9;;-1:-1:-1;;;;;2505:9:3;2491:10;:23;;2483:57;;;;-1:-1:-1;;;2483:57:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;2968:28:3;::::1;;::::0;;;:20:::1;:28;::::0;;;;;;;::::1;;:36;;-1:-1:-1::0;2968:36:3::1;2960:69;;;::::0;-1:-1:-1;;;2960:69:3;;::::1;::::0;::::1;;;:::i;:::-;8982:1:::2;8928:7;8936;8928:16;;;;;;;;;::::0;;;::::2;::::0;;;-1:-1:-1;;;;;8928:39:3;::::2;::::0;;:16:::2;::::0;;;::::2;::::0;;::::2;:31;;:39:::0;;;;;;8968:10:::2;8928:51:::0;;;;;;;;:55:::2;8907:129;;;::::0;-1:-1:-1;;;8907:129:3;;::::2;::::0;::::2;;;:::i;:::-;9073:63;::::0;-1:-1:-1;;;9073:63:3;;-1:-1:-1;;;;;9073:27:3;::::2;::::0;-1:-1:-1;;9073:63:3::2;::::0;9101:10:::2;::::0;9121:4:::2;::::0;9128:7;;9073:63:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9254:90;9336:7;9254;9262;9254:16;;;;;;;;;::::0;;;::::2;::::0;;;-1:-1:-1;;;;;9254:52:3;::::2;::::0;;:16:::2;::::0;;;::::2;::::0;;::::2;:44;;:52:::0;;;;;;9307:10:::2;9254:64:::0;;;;;;;;;:81:::2;:90::i;:::-;9200:7;9208;9200:16;;;;;;;;;::::0;;;::::2;::::0;;;-1:-1:-1;;;;;9200:39:3;::::2;::::0;;:16:::2;::::0;;;::::2;::::0;;::::2;:31;;:39:::0;;;;;;9240:10:::2;9200:51:::0;;;;;;;:144;9368:11:::2;::::0;:24:::2;::::0;9384:7;9368:15:::2;:24::i;:::-;9354:11;:38:::0;9403::::2;9425:6:::0;9433:7;9403:21:::2;:38::i;:::-;9483:14;9500:7;9508;9500:16;;;;;;;;;::::0;;;::::2;::::0;;;-1:-1:-1;;;;;9500:39:3;::::2;::::0;;:16:::2;::::0;;;::::2;::::0;;::::2;:31;;:39:::0;;;;;;9540:10:::2;9500:51:::0;;;;;;;;9634:7:::2;:14:::0;9598:7:::2;:16:::0;;9500:51;;-1:-1:-1;9598:51:3::2;::::0;9606:7;;9598:16;::::2;;;;;;;;;;;;;;;:31;;;:35;;:51;;;;:::i;:::-;9561:88;;9714:1;9660:7;9668;9660:16;;;;;;;;;::::0;;;::::2;::::0;;;-1:-1:-1;;;;;9660:39:3;::::2;::::0;;:16:::2;::::0;;;::::2;::::0;;::::2;:31;;:39:::0;;;;;;9700:10:::2;9660:51:::0;;;;;;;:55;9739:11:::2;::::0;:23:::2;::::0;9755:6;9739:15:::2;:23::i;:::-;9725:11;:37:::0;9772:9:::2;::::0;-1:-1:-1;;;;;9772:9:3::2;:18;9791:10;9803:26;:6:::0;9814:14;9803:10:::2;:26::i;:::-;9772:58;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;9871:9:3::2;::::0;9841:49:::2;::::0;-1:-1:-1;;;;;9871:9:3::2;9883:6:::0;9841:21:::2;:49::i;:::-;3039:1;;2550::::1;8701:1196:::0;;;:::o;777:27:2:-;;;-1:-1:-1;;;;;777:27:2;;:::o;1181:26:3:-;;;;:::o;14866:103::-;14948:7;:14;14866:103;:::o;4203:562:2:-;1847:8;;:20;;;-1:-1:-1;;;1847:20:2;;;;-1:-1:-1;;;;;1847:8:2;;;;:18;;:20;;;;;;;;;;;;;;;:8;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1825:43:2;:10;:43;1804:127;;;;-1:-1:-1;;;1804:127:2;;;;;;;:::i;:::-;4340:14:::1;::::0;;;:4:::1;:14;::::0;;;;;;;4360:39;;::::1;::::0;::::1;::::0;;4364:15:::1;4360:39:::0;;;;::::1;::::0;;;;;;;;;4340:60;;::::1;::::0;;::::1;::::0;;;;;;;;;;;::::1;::::0;;::::1;;::::0;;;;;;;::::1;::::0;;;::::1;::::0;;::::1;::::0;4410:18;;4381:6;;4340:60;4389:9;;4410:18;::::1;;;;;;;;;;;;;;;:22;;:31;;;;4482:15;4451:7;4459:9;4451:18;;;;;;;;;;;;;;;;;;:28;;:46;;;;4513;4524:15;4541:6;4549:9;4513:46;;;;;;;;:::i;:::-;;;;;;;;4575:14;::::0;;;:4:::1;:14;::::0;;;;;;;:35;;-1:-1:-1;;;4575:35:2;;-1:-1:-1;;;;;4575:14:2;;::::1;::::0;-1:-1:-1;;4575:35:2::1;::::0;4603:6;;4575:35:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4570:189;;4654:19;4626:7:::0;4634:9:::1;4626:18;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:25;;:47:::0;;-1:-1:-1;;4626:47:2::1;;::::0;::::1;::::0;::::1;;;;;;;;;;;4570:189;;;4732:16;4704:7;4712:9;4704:18;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:25;;:44:::0;;-1:-1:-1;;4704:44:2::1;;::::0;::::1;::::0;::::1;;;;;;;;;;;4570:189;4203:562:::0;;;:::o;1066:77:23:-;1104:7;1130:6;-1:-1:-1;;;;;1130:6:23;;1066:77::o;1007:23:3:-;;;-1:-1:-1;;;;;1007:23:3;;:::o;1141:37:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1141:37:2;;-1:-1:-1;1141:37:2;:::o;13746:92:3:-;13817:7;:14;13746:92;:::o;9995:877::-;10069:7;2771;2779;2771:16;;;;;;;;;;;;;;;;;;:33;;;2752:15;:52;;:122;;;;;2843:7;2851;2843:16;;;;;;;;;;;;;;;;;;:31;;;2824:15;:50;;2752:122;2731:153;;;;;;2619:9:::1;::::0;-1:-1:-1;;;;;2619:9:3::1;2605:10;:23;2597:61;;;::::0;-1:-1:-1;;;2597:61:3;;::::1;::::0;::::1;;;:::i;:::-;10162:16:::2;10135:7;10143;10135:16;;;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;:43;;;;;;;;;10114:109;;;::::0;-1:-1:-1;;;10114:109:3;;::::2;::::0;::::2;;;:::i;:::-;10255:7;10263;10255:16;;;;;;;;;::::0;;;::::2;::::0;;;:24:::2;:16;::::0;;::::2;;:24;::::0;::::2;;10254:25;10233:126;;;::::0;-1:-1:-1;;;10233:126:3;;::::2;::::0;::::2;;;:::i;:::-;10403:7;:14:::0;10387:11:::2;::::0;10370:14:::2;::::0;10387:31:::2;::::0;:11;:15:::2;:31::i;:::-;10370:48:::0;-1:-1:-1;10428:12:3::2;10443:21;10461:2;10443:13;10370:48:::0;10454:1:::2;10443:10;:13::i;:21::-;10489:11;::::0;10428:36;;-1:-1:-1;10489:23:3::2;::::0;10505:6;10489:15:::2;:23::i;:::-;10475:11;:37;;;;10556:6;10522:7;10530;10522:16;;;;;;;;;;;;;;;;;;:31;;:40;;;;10599:4;10572:7;10580;10572:16;;;;;;;;;::::0;;;::::2;::::0;;;::::2;::::0;;::::2;;:24;;:31:::0;;-1:-1:-1;;10572:31:3::2;::::0;::::2;;::::0;;;::::2;::::0;;-1:-1:-1;10614:9:3;:38:::2;::::0;-1:-1:-1;;;10614:38:3;;-1:-1:-1;;;;;10614:9:3;;::::2;::::0;-1:-1:-1;;10614:38:3::2;::::0;10633:10:::2;::::0;10645:6;;10614:38:::2;;;:::i;1033:35:2:-:0;;;;;;;;;;;;-1:-1:-1;;;;;1033:35:2;;:::o;1790:50:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1790:50:3;;;;-1:-1:-1;1790:50:3;-1:-1:-1;1790:50:3;:::o;1672:53::-;;;;;;;;;;;;;:::o;698:22:2:-;;;;;;;;;;;;;;;-1:-1:-1;;698:22:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6049:306::-;6182:8;;:38;;-1:-1:-1;;;6182:38:2;;6167:12;;-1:-1:-1;;;;;6182:8:2;;:26;;:38;;6209:10;;6182:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6167:53;;6238:7;6230:70;;;;-1:-1:-1;;;6230:70:2;;;;;;;:::i;:::-;6310:38;6323:7;6332:6;6340:7;6310:12;:38::i;:::-;6049:306;;;;:::o;1332:34::-;;;;:::o;1073:23:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1073:23:3;;;;;;;;;;;;;;;;:::o;14226:124::-;-1:-1:-1;;;;;14318:18:3;14292:7;14318:18;;;:10;:18;;;;;:25;;14226:124::o;12050:634::-;-1:-1:-1;;;;;12213:25:3;;12154:7;12213:25;;;:18;:25;;;;;;12154:7;;12213:29;12209:442;;12280:26;12258:383;12349:13;:20;12328:41;;12258:383;;;12453:173;12489:7;12497;12489:16;;;;;;;;;;;;;;;;;;:31;;:112;12546:13;12560:18;12546:33;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12546:33:3;;;12489:112;;;;;;;;;;;;;;;:119;;;;;;;;;;;;12453:10;;:14;:173::i;:::-;12440:186;-1:-1:-1;12387:20:3;;12258:383;;;;12209:442;12667:10;-1:-1:-1;12050:634:3;;;;;:::o;1983:240:23:-;1280:12;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:22:23;;;:6;;:22;1262:67;;;;-1:-1:-1;;;1262:67:23;;;;;;;:::i;:::-;-1:-1:-1;;;;;2071:22:23;::::1;2063:73;;;::::0;-1:-1:-1;;;2063:73:23;;::::1;::::0;::::1;;;:::i;:::-;2172:6;::::0;;2151:38:::1;::::0;-1:-1:-1;;;;;2151:38:23;;::::1;::::0;2172:6;::::1;::::0;2151:38:::1;::::0;::::1;2199:6;:17:::0;;-1:-1:-1;;;;;;2199:17:23::1;-1:-1:-1::0;;;;;2199:17:23;;;::::1;::::0;;;::::1;::::0;;1983:240::o;1253:25:2:-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1253:25:2;:::o;7490:1007:3:-;2505:9;;-1:-1:-1;;;;;2505:9:3;2491:10;:23;;2483:57;;;;-1:-1:-1;;;2483:57:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;2968:28:3;::::1;;::::0;;;:20:::1;:28;::::0;;;;;;;::::1;;:36;;-1:-1:-1::0;2968:36:3::1;2960:69;;;::::0;-1:-1:-1;;;2960:69:3;;::::1;::::0;::::1;;;:::i;:::-;7744:1:::2;7690:7;7698;7690:16;;;;;;;;;::::0;;;::::2;::::0;;;-1:-1:-1;;;;;7690:39:3;::::2;::::0;;:16:::2;::::0;;;::::2;::::0;;::::2;:31;;:39:::0;;;;;;7730:10:::2;7690:51:::0;;;;;;;;:55:::2;7669:129;;;::::0;-1:-1:-1;;;7669:129:3;;::::2;::::0;::::2;;;:::i;:::-;7809:14;7826:7;7834;7826:16;;;;;;;;;::::0;;;::::2;::::0;;;-1:-1:-1;;;;;7826:39:3;::::2;::::0;;:16:::2;::::0;;;::::2;::::0;;::::2;:31;;:39:::0;;;;;;7866:10:::2;7826:51:::0;;;;;;;;7960:7:::2;:14:::0;7924:7:::2;:16:::0;;7826:51;;-1:-1:-1;7924:51:3::2;::::0;7932:7;;7924:16;::::2;;;;:51;7887:88;;8040:1;7986:7;7994;7986:16;;;;;;;;;::::0;;;::::2;::::0;;;-1:-1:-1;;;;;7986:39:3;::::2;::::0;;:16:::2;::::0;;;::::2;::::0;;::::2;:31;;:39:::0;;;;;;8026:10:::2;7986:51:::0;;;;;;;:55;8065:11:::2;::::0;:23:::2;::::0;8081:6;8065:15:::2;:23::i;:::-;8051:11;:37:::0;-1:-1:-1;;;;;8098:23:3;::::2;;8122:10;8134:26;:6:::0;8145:14;8134:10:::2;:26::i;:::-;8098:63;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;8276:10:3::2;8257:30;::::0;;;:18:::2;:30;::::0;;;;;:37:::2;::::0;8292:1:::2;8257:34;:37::i;:::-;8243:10;8224:30;::::0;;;:18:::2;:30;::::0;;;;:70;;;8305:138:::2;;8360:13;8376:21;8386:10;8376:9;:21::i;:::-;8360:37;;8418:7;8426:5;8418:14;;;;;;;;;::::0;;;::::2;::::0;;;::::2;8411:21:::0;;-1:-1:-1;;;;;;8411:21:3::2;::::0;;-1:-1:-1;8305:138:3::2;8453:37;8475:6;8483;8453:21;:37::i;5360:466:2:-:0;5442:7;5463:13;5490:7;5511:16;5541:12;5578:26;5617:8;:15;;;;5607:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5607:26:2;;5578:55;;5649:9;5644:107;5668:8;:15;5664:19;;5644:107;;;5723:4;:17;5728:8;5737:1;5728:11;;;;;;;;;;;;;;;;;;;;5723:17;;;;;;;;;;;;;5704:16;;-1:-1:-1;;;;;5723:17:2;;;;5704:13;;5718:1;;5704:16;;;;;;-1:-1:-1;;;;;5704:36:2;;;;:16;;;;;;;;;;;:36;-1:-1:-1;5685:3:2;5644:107;;;;5769:7;:5;:7::i;:::-;5788:5;;5778:8;5761:58;;;;;;;;;;;;;-1:-1:-1;;5761:58:2;;;;;;;;;;;;;;;;;;;;;;;;;;5778:8;;5788:5;5795:8;;5805:13;;5778:8;;5761:58;;5778:8;5761:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5360:466;;;;;:::o;13844:261:3:-;13931:19;13952:17;14006:7;14014:9;14006:18;;;;;;;;;;;;;;;;;;:35;;;14055:7;14063:9;14055:18;;;;;;;;;;;;;;;;;;:33;;;13985:113;;;;13844:261;;;:::o;2271:45::-;;;;;;;;;;;;;:::o;1365:24::-;;;;;;;;;;1321:134:24;1379:7;1405:43;1409:1;1412;1405:43;;;;;;;;;;;;;;;;;:3;:43::i;590:104:21:-;677:10;590:104;:::o;13229:421:3:-;13332:21;;:::i;:::-;13364:44;;;13418:22;;;:40;;;-1:-1:-1;13468:14:3;;;:35;;;13513:11;;;:15;;;13538:17;;;:21;;;13569:7;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13569:21:3;;;;;;;;;;;;13364:44;;13569:21;;;;-1:-1:-1;;13569:21:3;;;;;;;;;;;;;;;;;;;-1:-1:-1;13569:21:3;;;;;;;;;;;;;;;;;;13621:7;:14;:21;;13640:1;13621:18;:21::i;:::-;13606:37;;;;;;;13229:421;;;:::o;2180:459:24:-;2238:7;2479:6;2475:45;;-1:-1:-1;2508:1:24;2501:8;;2475:45;2542:5;;;2546:1;2542;:5;:1;2565:5;;;;;:10;2557:56;;;;-1:-1:-1;;;2557:56:24;;;;;;;:::i;3101:130::-;3159:7;3185:39;3189:1;3192;3185:39;;;;;;;;;;;;;;;;;:3;:39::i;874:176::-;932:7;963:5;;;986:6;;;;978:46;;;;-1:-1:-1;;;978:46:24;;;;;;;:::i;4879:802:3:-;4983:10;4966:28;;;;:16;:28;;;;;;;;-1:-1:-1;;;;;4966:36:3;;;;;;;;;;;;4962:651;;5038:10;5027:22;;;;:10;:22;;;;;;;;5072:50;;;;;;;-1:-1:-1;;;;;5072:50:3;;;;;;;;;;;;5027:109;;-1:-1:-1;5027:109:3;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5027:109:3;;;;;;;;;;;;;;;;5174:22;;;:29;;5221:21;:33;;;;;:41;;;;;;;;-1:-1:-1;;5174:33:3;;;;5221:57;;5292:28;;;:16;:28;;;;;:36;;;;;;;;:43;;-1:-1:-1;;5292:43:3;;;;;;4962:651;;;5409:10;5366:18;5387:33;;;:21;:33;;;;;;;;-1:-1:-1;;;;;5387:41:3;;;;;;;;;;5485:22;;;:10;:22;;;;;:64;;:117;;5594:7;;5387:41;;5485:64;;;;;;;;;;;;;;;;:87;;;:108;;:117;;;;:::i;:::-;5453:10;5442:22;;;;:10;:22;;;;;:34;;5465:10;;5442:34;;;;;;;;;;;;;;;;:40;;:160;;;;4962:651;;-1:-1:-1;;;;;5643:18:3;;;;;;:10;:18;;;;;;:31;;5666:7;5643:22;:31::i;:::-;-1:-1:-1;;;;;5622:18:3;;;;;;;;:10;:18;;;;;:52;;;;-1:-1:-1;4879:802:3:o;5842:368::-;5968:10;5925:18;5946:33;;;:21;:33;;;;;;;;-1:-1:-1;;;;;5946:41:3;;;;;;;;;;6040:22;;;:10;:22;;;;;:56;;:101;;6133:7;;5946:41;;6040:56;;;;;;;;;;;;;;;;:75;;;:92;;:101;;;;:::i;:::-;6008:10;5997:22;;;;:10;:22;;;;;:34;;6020:10;;5997:34;;;;;;;;;;;;;;;;;;;;;;:40;;:144;;;;-1:-1:-1;;;;;6172:18:3;;;;:10;:18;;;;;;;:31;;6195:7;6172:22;:31::i;:::-;-1:-1:-1;;;;;6151:18:3;;;;;;;;:10;:18;;;;;:52;;;;-1:-1:-1;;5842:368:3:o;6411:933::-;-1:-1:-1;;;;;2968:28:3;;;;;;:20;:28;;;;;;;;;;:36;;-1:-1:-1;2968:36:3;2960:69;;;;-1:-1:-1;;;2960:69:3;;;;;;;:::i;:::-;6575:1:::1;6565:7;:11;6557:42;;;::::0;-1:-1:-1;;;6557:42:3;;::::1;::::0;::::1;;;:::i;:::-;6680:54;6706:10;6718:6;6726:7;6680:25;:54::i;:::-;6768:63;::::0;-1:-1:-1;;;6768:63:3;;-1:-1:-1;;;;;6768:27:3;::::1;::::0;-1:-1:-1;;6768:63:3::1;::::0;6796:10:::1;::::0;6816:4:::1;::::0;6823:7;;6768:63:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6949:90;7031:7;6949;6957;6949:16;;;;;;;;;::::0;;;::::1;::::0;;;-1:-1:-1;;;;;6949:52:3;::::1;::::0;;:16:::1;::::0;;;::::1;::::0;;::::1;:44;;:52:::0;;;;;;7002:10:::1;6949:64:::0;;;;;;;;;:81:::1;:90::i;:::-;6895:7;6903;6895:16;;;;;;;;;::::0;;;::::1;::::0;;;-1:-1:-1;;;;;6895:39:3;::::1;::::0;;:16:::1;::::0;;;::::1;::::0;;::::1;:31;;:39:::0;;;;;;6935:10:::1;6895:51:::0;;;;;;;:144;7063:11:::1;::::0;:24:::1;::::0;7079:7;7063:15:::1;:24::i;:::-;7049:11;:38:::0;7222:10:::1;7203:30;::::0;;;:18:::1;:30;::::0;;;;;7237:1:::1;7203:35;7199:90;;;7254:7;:24:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;7254:24:3;;;;;::::1;::::0;;-1:-1:-1;;;;;;7254:24:3::1;7267:10;7254:24;::::0;;7199:90:::1;7299:38;7321:6;7329:7;7299:21;:38::i;12976:247::-:0;13033:7;;13052:135;13076:7;:14;13072:18;;13052:135;;;13115:7;:10;;-1:-1:-1;;;;;13115:19:3;;;:7;13123:1;;13115:10;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13115:10:3;:19;13111:66;;;13161:1;-1:-1:-1;13154:8:3;;13111:66;13092:3;;13052:135;;;-1:-1:-1;;;;13212:2:3;-1:-1:-1;;12976:247:3:o;1746:187:24:-;1832:7;1867:12;1859:6;;;;1851:29;;;;-1:-1:-1;;;1851:29:24;;;;;;;;:::i;:::-;-1:-1:-1;;;1902:5:24;;;1746:187::o;3713:272::-;3799:7;3833:12;3826:5;3818:28;;;;-1:-1:-1;;;3818:28:24;;;;;;;;:::i;:::-;;3856:9;3872:1;3868;:5;;;;;;;3713:272;-1:-1:-1;;;;;3713:272:24:o;12690:280:3:-;12876:1;12826:7;12834;12826:16;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12826:39:3;;;;;:16;;;;;;:31;;:39;;;;;;:46;;;;;;;;;;;:51;12822:142;;-1:-1:-1;;;;;12921:25:3;;;;;;:18;:25;;;;;;:32;;-1:-1:-1;12921:29:3;:32::i;:::-;-1:-1:-1;;;;;12893:25:3;;;;;;:18;:25;;;;;:60;12690:280;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;726:241::-;;830:2;818:9;809:7;805:23;801:32;798:2;;;-1:-1;;836:12;798:2;85:6;72:20;97:33;124:5;97:33;:::i;974:366::-;;;1095:2;1083:9;1074:7;1070:23;1066:32;1063:2;;;-1:-1;;1101:12;1063:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;1153:63;-1:-1;1253:2;1292:22;;72:20;97:33;72:20;97:33;:::i;:::-;1261:63;;;;1057:283;;;;;:::o;1347:366::-;;;1468:2;1456:9;1447:7;1443:23;1439:32;1436:2;;;-1:-1;;1474:12;1436:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;1526:63;1626:2;1665:22;;;;656:20;;-1:-1;;;1430:283::o;1720:491::-;;;;1858:2;1846:9;1837:7;1833:23;1829:32;1826:2;;;-1:-1;;1864:12;1826:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;1916:63;2016:2;2055:22;;656:20;;-1:-1;2124:2;2163:22;;;656:20;;1820:391;-1:-1;;;1820:391::o;2218:257::-;;2330:2;2318:9;2309:7;2305:23;2301:32;2298:2;;;-1:-1;;2336:12;2298:2;223:6;217:13;36584:5;33947:13;33940:21;36562:5;36559:32;36549:2;;-1:-1;;36595:12;2482:241;;2586:2;2574:9;2565:7;2561:23;2557:32;2554:2;;;-1:-1;;2592:12;2554:2;-1:-1;344:20;;2548:175;-1:-1;2548:175::o;2730:366::-;;;2851:2;2839:9;2830:7;2826:23;2822:32;2819:2;;;-1:-1;;2857:12;2819:2;-1:-1;;344:20;;;3009:2;3048:22;;;656:20;;-1:-1;2813:283::o;3103:491::-;;;;3241:2;3229:9;3220:7;3216:23;3212:32;3209:2;;;-1:-1;;3247:12;3209:2;-1:-1;;344:20;;;3399:2;3438:22;;656:20;;-1:-1;3507:2;3546:22;;;656:20;;3203:391;-1:-1;3203:391::o;3601:297::-;;3733:2;3721:9;3712:7;3708:23;3704:32;3701:2;;;-1:-1;;3739:12;3701:2;515:6;509:13;527:50;571:5;527:50;:::i;4153:491::-;;;;4291:2;4279:9;4270:7;4266:23;4262:32;4259:2;;;-1:-1;;4297:12;4259:2;669:6;656:20;4349:63;;4449:2;4492:9;4488:22;72:20;97:33;124:5;97:33;:::i;:::-;4253:391;;4457:63;;-1:-1;;;4557:2;4596:22;;;;656:20;;4253:391::o;9862:347::-;;10007:5;31882:12;33008:6;33003:3;32996:19;10101:52;10146:6;33045:4;33040:3;33036:14;33045:4;10127:5;10123:16;10101:52;:::i;:::-;36250:7;36234:14;-1:-1;;36230:28;10165:39;;;;33045:4;10165:39;;9954:255;-1:-1;;9954:255::o;17160:271::-;;8870:5;31882:12;8981:52;9026:6;9021:3;9014:4;9007:5;9003:16;8981:52;:::i;:::-;9045:16;;;;;17294:137;-1:-1;;17294:137::o;17438:222::-;-1:-1;;;;;34362:54;;;;5894:37;;17565:2;17550:18;;17536:124::o;17912:460::-;-1:-1;;;;;34362:54;;;5753:58;;34362:54;;;;18275:2;18260:18;;5894:37;18358:2;18343:18;;8541:37;;;;18103:2;18088:18;;18074:298::o;18379:349::-;-1:-1;;;;;34362:54;;;;5753:58;;18714:2;18699:18;;8541:37;18542:2;18527:18;;18513:215::o;18735:1076::-;-1:-1;;;;;34362:54;;5894:37;;-1:-1;19225:2;19210:18;;;19203:48;;;-1:-1;;19265:78;;19091:19;;19329:6;19265:78;:::i;:::-;19422:2;19407:18;;8541:37;;;19464:20;;;19459:2;19444:18;;19437:48;31882:12;;32996:19;;;31388:14;;;;33036;;;-1:-1;6382:260;6407:6;6404:1;6401:13;6382:260;;;6468:13;;8541:37;;32589:14;;;;5178;;;;6429:1;6422:9;6382:260;;;-1:-1;;19646:20;;;19640:3;19625:19;;19618:49;31882:12;;32996:19;;;33036:14;;;;-1:-1;31388:14;;;;-1:-1;7152:284;7177:6;7174:1;7171:13;7152:284;;;34737:52;7244:6;7238:13;34737:52;:::i;:::-;9159:65;;5384:14;;;;32589;;;;6429:1;7192:9;7152:284;;;-1:-1;19673:128;;19077:734;-1:-1;;;;;;;;;;19077:734::o;20158:450::-;20375:2;20389:47;;;31882:12;;20360:18;;;32996:19;;;20158:450;;20375:2;33036:14;;;;;;31388;;;20158:450;8019:320;8044:6;8041:1;8038:13;8019:320;;;8105:13;;16497:23;;8541:37;;16658:16;;;16652:23;16729:14;;;8541:37;16816:16;;16810:23;16887:14;;;8541:37;5655:4;5646:14;;;;32589;;;;8066:1;8059:9;8019:320;;;-1:-1;20442:156;;20346:262;-1:-1;;;;;;;20346:262::o;20615:210::-;33947:13;;33940:21;8434:34;;20736:2;20721:18;;20707:118::o;20832:222::-;8541:37;;;20959:2;20944:18;;20930:124::o;21842:310::-;;21989:2;22010:17;22003:47;22064:78;21989:2;21978:9;21974:18;22128:6;22064:78;:::i;22159:416::-;22359:2;22373:47;;;10441:2;22344:18;;;32996:19;10477:34;33036:14;;;10457:55;-1:-1;;;10532:12;;;10525:33;10577:12;;;22330:245::o;22582:416::-;22782:2;22796:47;;;10828:2;22767:18;;;32996:19;-1:-1;;;33036:14;;;10844:42;10905:12;;;22753:245::o;23005:416::-;23205:2;23219:47;;;11156:2;23190:18;;;32996:19;-1:-1;;;33036:14;;;11172:38;11229:12;;;23176:245::o;23428:416::-;23628:2;23642:47;;;11480:2;23613:18;;;32996:19;11516:34;33036:14;;;11496:55;-1:-1;;;11571:12;;;11564:30;11613:12;;;23599:245::o;23851:416::-;24051:2;24065:47;;;11864:2;24036:18;;;32996:19;11900:29;33036:14;;;11880:50;11949:12;;;24022:245::o;24274:416::-;24474:2;24488:47;;;12200:2;24459:18;;;32996:19;12236:34;33036:14;;;12216:55;-1:-1;;;12291:12;;;12284:29;12332:12;;;24445:245::o;24697:416::-;24897:2;24911:47;;;12583:2;24882:18;;;32996:19;-1:-1;;;33036:14;;;12599:44;12662:12;;;24868:245::o;25120:416::-;25320:2;25334:47;;;12913:2;25305:18;;;32996:19;12949:29;33036:14;;;12929:50;12998:12;;;25291:245::o;25543:416::-;25743:2;25757:47;;;13249:2;25728:18;;;32996:19;-1:-1;;;33036:14;;;13265:42;13326:12;;;25714:245::o;25966:416::-;26166:2;26180:47;;;13577:2;26151:18;;;32996:19;13613:34;33036:14;;;13593:55;-1:-1;;;13668:12;;;13661:46;13726:12;;;26137:245::o;26389:416::-;26589:2;26603:47;;;13977:2;26574:18;;;32996:19;14013:34;33036:14;;;13993:55;-1:-1;;;14068:12;;;14061:25;14105:12;;;26560:245::o;26812:416::-;27012:2;27026:47;;;14356:2;26997:18;;;32996:19;-1:-1;;;33036:14;;;14372:43;14434:12;;;26983:245::o;27235:416::-;27435:2;27449:47;;;27420:18;;;32996:19;14721:34;33036:14;;;14701:55;14775:12;;;27406:245::o;27658:416::-;27858:2;27872:47;;;15026:2;27843:18;;;32996:19;15062:34;33036:14;;;15042:55;-1:-1;;;15117:12;;;15110:42;15171:12;;;27829:245::o;28081:416::-;28281:2;28295:47;;;15422:2;28266:18;;;32996:19;-1:-1;;;33036:14;;;15438:41;15498:12;;;28252:245::o;28504:416::-;28704:2;28718:47;;;15749:2;28689:18;;;32996:19;-1:-1;;;33036:14;;;15765:48;15832:12;;;28675:245::o;28927:416::-;29127:2;29141:47;;;16083:2;29112:18;;;32996:19;16119:34;33036:14;;;16099:55;16188:30;16174:12;;;16167:52;16238:12;;;29098:245::o;29579:333::-;8541:37;;;29898:2;29883:18;;8541:37;29734:2;29719:18;;29705:207::o;29919:444::-;8541:37;;;30266:2;30251:18;;8541:37;;;;30349:2;30334:18;;8541:37;30102:2;30087:18;;30073:290::o;30370:896::-;8541:37;;;30832:2;30817:18;;8541:37;;;30915:2;30900:18;;8541:37;;;33947:13;;33940:21;30992:2;30977:18;;8434:34;30667:3;30652:19;;36350:1;36340:12;;36330:2;;36356:9;36330:2;35600:34;31083:3;31072:9;31068:19;9792:58;8571:5;31167:3;31156:9;31152:19;8541:37;8571:5;31251:3;31240:9;31236:19;8541:37;30638:628;;;;;;;;;;:::o;33783:91::-;-1:-1;;;;;34362:54;;33828:46::o;35890:268::-;35955:1;35962:101;35976:6;35973:1;35970:13;35962:101;;;36043:11;;;36037:18;36024:11;;;36017:39;35998:2;35991:10;35962:101;;;36078:6;36075:1;36072:13;36069:2;;;-1:-1;;35955:1;36125:16;;36118:27;35939:219::o;36379:117::-;-1:-1;;;;;34362:54;;36438:35;;36428:2;;36487:1;;36477:12;36428:2;36422:74;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\npragma experimental ABIEncoderV2;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\nimport \"../SLO/SLO.sol\";\nimport \"../SLARegistry.sol\";\nimport \"./Staking.sol\";\n\n/**\n * @title SLA\n * @dev SLA is a service level agreement contract used for service downtime\n * compensation\n */\ncontract SLA is Ownable, Staking {\n    using SafeMath for uint256;\n\n    /// @dev The required amount to stake when subscribing to the agreement\n    uint256 public stake;\n\n    /// @dev The ipfs hash that stores extra information about the agreement\n    string public ipfsHash;\n\n    /// @dev The address of the registry contract\n    SLARegistry public registry;\n\n    /// @dev Struct used for storing registered SLI's\n    struct SLI {\n        uint256 timestamp;\n        uint256 value;\n        uint256 periodId;\n    }\n\n    /// @dev mapping to get SLO addresses from SLO names in bytes32\n    mapping(bytes32 => SLO) public SLOs;\n\n    /// @dev mapping to get SLI structs from SLO names in bytes32\n    mapping(bytes32 => SLI[]) public SLIs;\n\n    /// @dev array storing the names of the SLO's of this agreement\n    bytes32[] public SLONames;\n\n    /// @dev block timestamp of SLA deployment\n    uint256 public blockNumberCreation;\n\n    /**\n     * @dev event for SLI creation logging\n     * @param _timestamp 1. the time the SLI has been registered\n     * @param _value 2. the value of the SLI\n     * @param _periodId 3. the id of the given period\n     */\n    event SLICreated(uint256 _timestamp, uint256 _value, uint256 _periodId);\n\n    /**\n     * @dev throws if called by any address other than the messenger contract.\n     */\n    modifier onlyMessenger() {\n        require(\n            msg.sender == address(registry.messenger()),\n            \"Only Messenger can call this function\"\n        );\n        _;\n    }\n\n    /**\n     * @dev throws if called by any address other than the messenger contract.\n     */\n    modifier onlySLARegistry() {\n        require(\n            msg.sender == address(registry),\n            \"Only SLARegistry can call this function\"\n        );\n        _;\n    }\n\n    /**\n     * @param _owner 1. address of the owner of the service level agreement\n     * @param _SLONames 2. array of the names of the service level objectives\n     * in bytes32\n     * @param _SLOs 3. array of service level objective contract addressess\n     * service level objective breach\n     * @param _stake 4. uint of the amount required to stake when signing the\n     * service level agreement\n     * @param _ipfsHash 5. string with the ipfs hash that contains extra\n     * information about the service level agreement\n     * @param _baseTokenAddress 6. address of the Base Token to be unlocked for staking\n     * @param _sla_period_starts 7. array with the values for the \"start\" of every period\n     * @param _sla_period_ends 8. array with the values for the \"end\" of every period\n     */\n    constructor(\n        address _owner,\n        bytes32[] memory _SLONames,\n        SLO[] memory _SLOs,\n        uint256 _stake,\n        string memory _ipfsHash,\n        address _baseTokenAddress,\n        uint256[] memory _sla_period_starts,\n        uint256[] memory _sla_period_ends\n    )\n        public\n        Staking(_baseTokenAddress, _sla_period_starts, _sla_period_ends, _owner)\n    {\n        require(_SLOs.length < 5, \"max amount of SLOs is 5\");\n        require(\n            _SLONames.length == _SLOs.length,\n            \"_SLONames and _SLOs should have the same length\"\n        );\n\n        for (uint256 i = 0; i < _SLOs.length; i++) {\n            SLOs[_SLONames[i]] = _SLOs[i];\n        }\n\n        transferOwnership(_owner);\n        SLONames = _SLONames;\n        stake = _stake;\n        ipfsHash = _ipfsHash;\n        registry = SLARegistry(msg.sender);\n        blockNumberCreation = block.number;\n    }\n\n    /**\n     * @dev external function to register SLI's and check them against the SLO's\n     * @param _SLOName 1. the name of the SLO in bytes32\n     * @param _value 2. the value of the SLI to check\n     * @param _periodId 3. the id of the given period\n     */\n    function registerSLI(\n        bytes32 _SLOName,\n        uint256 _value,\n        uint256 _periodId\n    ) external onlyMessenger {\n        SLIs[_SLOName].push(SLI(block.timestamp, _value, _periodId));\n        periods[_periodId].sli = _value;\n        periods[_periodId].timestamp = block.timestamp;\n\n        emit SLICreated(block.timestamp, _value, _periodId);\n\n        if (!SLOs[_SLOName].isSLOHonored(_value)) {\n            periods[_periodId].status = Status.NotRespected;\n        } else {\n            periods[_periodId].status = Status.Respected;\n        }\n    }\n\n    /**\n     * @dev external function to get SLIs of certain _SLO\n     * @param _SLOName 1. the name of the SLO in bytes32\n     * @return SLI[] array of SLIs associated to the input SLOs\n     */\n    function getSLI(bytes32 _SLOName) public view returns (SLI[] memory) {\n        return SLIs[_SLOName];\n    }\n\n    /**\n     * @dev external view function that returns all agreement information\n     * @return address owner\n     * @return string ipfsHash\n     * @return uint256 amount necessary to stake\n     * @return bytes32[] SLONames array\n     * @return SLO[] SLO addresses array\n     */\n\n    function getDetails()\n        external\n        view\n        returns (\n            address,\n            string memory,\n            uint256,\n            bytes32[] memory,\n            SLO[] memory\n        )\n    {\n        SLO[] memory _SLOAddresses = new SLO[](SLONames.length);\n\n        for (uint256 i = 0; i < SLONames.length; i++) {\n            _SLOAddresses[i] = SLOs[SLONames[i]];\n        }\n\n        return (owner(), ipfsHash, stake, SLONames, _SLOAddresses);\n    }\n\n    /**\n     *@dev increase the _amount staked per _token of _sla\n     *@param _amount 1. amount to be staked\n     *@param _token 2. address of the ERC to be staked\n     *@param _period 3. period id to stake\n     */\n\n    function stakeTokens(\n        uint256 _amount,\n        address _token,\n        uint256 _period\n    ) public {\n        bool success = registry.registerStakedSla(msg.sender);\n        require(success, \"sla was not registered as staked by the msg.sender\");\n        _stakeTokens(_amount, _token, _period);\n    }\n}\n",
  "sourcePath": "/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLA/SLA.sol",
  "ast": {
    "absolutePath": "/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLA/SLA.sol",
    "exportedSymbols": {
      "SLA": [
        909
      ]
    },
    "id": 910,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 541,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:2"
      },
      {
        "id": 542,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 543,
        "nodeType": "ImportDirective",
        "scope": 910,
        "sourceUnit": 6451,
        "src": "91:52:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 544,
        "nodeType": "ImportDirective",
        "scope": 910,
        "sourceUnit": 7461,
        "src": "144:56:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 545,
        "nodeType": "ImportDirective",
        "scope": 910,
        "sourceUnit": 6647,
        "src": "201:51:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLO/SLO.sol",
        "file": "../SLO/SLO.sol",
        "id": 546,
        "nodeType": "ImportDirective",
        "scope": 910,
        "sourceUnit": 3125,
        "src": "253:24:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLARegistry.sol",
        "file": "../SLARegistry.sol",
        "id": 547,
        "nodeType": "ImportDirective",
        "scope": 910,
        "sourceUnit": 2994,
        "src": "278:28:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLA/Staking.sol",
        "file": "./Staking.sol",
        "id": 548,
        "nodeType": "ImportDirective",
        "scope": 910,
        "sourceUnit": 2158,
        "src": "307:23:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 550,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6450,
              "src": "462:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$6450",
                "typeString": "contract Ownable"
              }
            },
            "id": 551,
            "nodeType": "InheritanceSpecifier",
            "src": "462:7:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 552,
              "name": "Staking",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2157,
              "src": "471:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Staking_$2157",
                "typeString": "contract Staking"
              }
            },
            "id": 553,
            "nodeType": "InheritanceSpecifier",
            "src": "471:7:2"
          }
        ],
        "contractDependencies": [
          2157,
          6058,
          6450
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 549,
          "nodeType": "StructuredDocumentation",
          "src": "332:113:2",
          "text": " @title SLA\n @dev SLA is a service level agreement contract used for service downtime\n compensation"
        },
        "fullyImplemented": true,
        "id": 909,
        "linearizedBaseContracts": [
          909,
          2157,
          6450,
          6058
        ],
        "name": "SLA",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 556,
            "libraryName": {
              "contractScope": null,
              "id": 554,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6646,
              "src": "491:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$6646",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "485:27:2",
            "typeName": {
              "id": 555,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "504:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "documentation": {
              "id": 557,
              "nodeType": "StructuredDocumentation",
              "src": "518:71:2",
              "text": "@dev The required amount to stake when subscribing to the agreement"
            },
            "functionSelector": "3a4b66f1",
            "id": 559,
            "mutability": "mutable",
            "name": "stake",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 909,
            "src": "594:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 558,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "594:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 560,
              "nodeType": "StructuredDocumentation",
              "src": "621:72:2",
              "text": "@dev The ipfs hash that stores extra information about the agreement"
            },
            "functionSelector": "c623674f",
            "id": 562,
            "mutability": "mutable",
            "name": "ipfsHash",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 909,
            "src": "698:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 561,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "698:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 563,
              "nodeType": "StructuredDocumentation",
              "src": "727:45:2",
              "text": "@dev The address of the registry contract"
            },
            "functionSelector": "7b103999",
            "id": 565,
            "mutability": "mutable",
            "name": "registry",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 909,
            "src": "777:27:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SLARegistry_$2993",
              "typeString": "contract SLARegistry"
            },
            "typeName": {
              "contractScope": null,
              "id": 564,
              "name": "SLARegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2993,
              "src": "777:11:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SLARegistry_$2993",
                "typeString": "contract SLARegistry"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "SLA.SLI",
            "id": 572,
            "members": [
              {
                "constant": false,
                "id": 567,
                "mutability": "mutable",
                "name": "timestamp",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 572,
                "src": "886:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 566,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "886:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 569,
                "mutability": "mutable",
                "name": "value",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 572,
                "src": "913:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 568,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "913:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 571,
                "mutability": "mutable",
                "name": "periodId",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 572,
                "src": "936:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 570,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "936:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "SLI",
            "nodeType": "StructDefinition",
            "scope": 909,
            "src": "865:94:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 573,
              "nodeType": "StructuredDocumentation",
              "src": "965:63:2",
              "text": "@dev mapping to get SLO addresses from SLO names in bytes32"
            },
            "functionSelector": "b0227b47",
            "id": 577,
            "mutability": "mutable",
            "name": "SLOs",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 909,
            "src": "1033:35:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$3124_$",
              "typeString": "mapping(bytes32 => contract SLO)"
            },
            "typeName": {
              "id": 576,
              "keyType": {
                "id": 574,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1041:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1033:23:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$3124_$",
                "typeString": "mapping(bytes32 => contract SLO)"
              },
              "valueType": {
                "contractScope": null,
                "id": 575,
                "name": "SLO",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 3124,
                "src": "1052:3:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_SLO_$3124",
                  "typeString": "contract SLO"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 578,
              "nodeType": "StructuredDocumentation",
              "src": "1075:61:2",
              "text": "@dev mapping to get SLI structs from SLO names in bytes32"
            },
            "functionSelector": "94199c61",
            "id": 583,
            "mutability": "mutable",
            "name": "SLIs",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 909,
            "src": "1141:37:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$572_storage_$dyn_storage_$",
              "typeString": "mapping(bytes32 => struct SLA.SLI[])"
            },
            "typeName": {
              "id": 582,
              "keyType": {
                "id": 579,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1149:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1141:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$572_storage_$dyn_storage_$",
                "typeString": "mapping(bytes32 => struct SLA.SLI[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 580,
                  "name": "SLI",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 572,
                  "src": "1160:3:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SLI_$572_storage_ptr",
                    "typeString": "struct SLA.SLI"
                  }
                },
                "id": 581,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "1160:5:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_SLI_$572_storage_$dyn_storage_ptr",
                  "typeString": "struct SLA.SLI[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 584,
              "nodeType": "StructuredDocumentation",
              "src": "1185:63:2",
              "text": "@dev array storing the names of the SLO's of this agreement"
            },
            "functionSelector": "f34ed40d",
            "id": 587,
            "mutability": "mutable",
            "name": "SLONames",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 909,
            "src": "1253:25:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
              "typeString": "bytes32[]"
            },
            "typeName": {
              "baseType": {
                "id": 585,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1253:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "id": 586,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "1253:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                "typeString": "bytes32[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 588,
              "nodeType": "StructuredDocumentation",
              "src": "1285:42:2",
              "text": "@dev block timestamp of SLA deployment"
            },
            "functionSelector": "dbc389ec",
            "id": 590,
            "mutability": "mutable",
            "name": "blockNumberCreation",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 909,
            "src": "1332:34:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 589,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1332:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 591,
              "nodeType": "StructuredDocumentation",
              "src": "1373:218:2",
              "text": " @dev event for SLI creation logging\n @param _timestamp 1. the time the SLI has been registered\n @param _value 2. the value of the SLI\n @param _periodId 3. the id of the given period"
            },
            "id": 599,
            "name": "SLICreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 593,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_timestamp",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 599,
                  "src": "1613:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 592,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1613:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 595,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 599,
                  "src": "1633:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 594,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1633:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 597,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_periodId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 599,
                  "src": "1649:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 596,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1649:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1612:55:2"
            },
            "src": "1596:72:2"
          },
          {
            "body": {
              "id": 616,
              "nodeType": "Block",
              "src": "1794:155:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 603,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1825:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1825:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 607,
                                  "name": "registry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 565,
                                  "src": "1847:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SLARegistry_$2993",
                                    "typeString": "contract SLARegistry"
                                  }
                                },
                                "id": 608,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "messenger",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2212,
                                "src": "1847:18:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_Messenger_$482_$",
                                  "typeString": "function () view external returns (contract Messenger)"
                                }
                              },
                              "id": 609,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1847:20:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Messenger_$482",
                                "typeString": "contract Messenger"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Messenger_$482",
                                "typeString": "contract Messenger"
                              }
                            ],
                            "id": 606,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1839:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 605,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1839:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1839:29:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1825:43:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c79204d657373656e6765722063616e2063616c6c20746869732066756e6374696f6e",
                        "id": 612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1882:39:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_39f7759ea2bbdd2e1e81147a101caf620d99fffff64ea441cd110db6a47073aa",
                          "typeString": "literal_string \"Only Messenger can call this function\""
                        },
                        "value": "Only Messenger can call this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_39f7759ea2bbdd2e1e81147a101caf620d99fffff64ea441cd110db6a47073aa",
                          "typeString": "literal_string \"Only Messenger can call this function\""
                        }
                      ],
                      "id": 602,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1804:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1804:127:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 614,
                  "nodeType": "ExpressionStatement",
                  "src": "1804:127:2"
                },
                {
                  "id": 615,
                  "nodeType": "PlaceholderStatement",
                  "src": "1941:1:2"
                }
              ]
            },
            "documentation": {
              "id": 600,
              "nodeType": "StructuredDocumentation",
              "src": "1674:90:2",
              "text": " @dev throws if called by any address other than the messenger contract."
            },
            "id": 617,
            "name": "onlyMessenger",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 601,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1791:2:2"
            },
            "src": "1769:180:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 632,
              "nodeType": "Block",
              "src": "2077:145:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 621,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2108:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2108:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 625,
                              "name": "registry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 565,
                              "src": "2130:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SLARegistry_$2993",
                                "typeString": "contract SLARegistry"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SLARegistry_$2993",
                                "typeString": "contract SLARegistry"
                              }
                            ],
                            "id": 624,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2122:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 623,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2122:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2122:17:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2108:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c7920534c4152656769737472792063616e2063616c6c20746869732066756e6374696f6e",
                        "id": 628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2153:41:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1891e074d231f0eadd49320610779fe4f30315fe978aec173f8d01b1bebd2b42",
                          "typeString": "literal_string \"Only SLARegistry can call this function\""
                        },
                        "value": "Only SLARegistry can call this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1891e074d231f0eadd49320610779fe4f30315fe978aec173f8d01b1bebd2b42",
                          "typeString": "literal_string \"Only SLARegistry can call this function\""
                        }
                      ],
                      "id": 620,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2087:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2087:117:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 630,
                  "nodeType": "ExpressionStatement",
                  "src": "2087:117:2"
                },
                {
                  "id": 631,
                  "nodeType": "PlaceholderStatement",
                  "src": "2214:1:2"
                }
              ]
            },
            "documentation": {
              "id": 618,
              "nodeType": "StructuredDocumentation",
              "src": "1955:90:2",
              "text": " @dev throws if called by any address other than the messenger contract."
            },
            "id": 633,
            "name": "onlySLARegistry",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 619,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2074:2:2"
            },
            "src": "2050:172:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 731,
              "nodeType": "Block",
              "src": "3415:520:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 664,
                            "name": "_SLOs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 642,
                            "src": "3433:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_SLO_$3124_$dyn_memory_ptr",
                              "typeString": "contract SLO[] memory"
                            }
                          },
                          "id": 665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3433:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "35",
                          "id": 666,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3448:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "src": "3433:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6d617820616d6f756e74206f6620534c4f732069732035",
                        "id": 668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3451:25:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be84bcce5cdf21effcf26df15f43c34c7a80dbc4bd54884dca3d795818fbfe95",
                          "typeString": "literal_string \"max amount of SLOs is 5\""
                        },
                        "value": "max amount of SLOs is 5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be84bcce5cdf21effcf26df15f43c34c7a80dbc4bd54884dca3d795818fbfe95",
                          "typeString": "literal_string \"max amount of SLOs is 5\""
                        }
                      ],
                      "id": 663,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3425:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3425:52:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 670,
                  "nodeType": "ExpressionStatement",
                  "src": "3425:52:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 672,
                            "name": "_SLONames",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 639,
                            "src": "3508:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          "id": 673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3508:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 674,
                            "name": "_SLOs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 642,
                            "src": "3528:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_SLO_$3124_$dyn_memory_ptr",
                              "typeString": "contract SLO[] memory"
                            }
                          },
                          "id": 675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3528:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3508:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5f534c4f4e616d657320616e64205f534c4f732073686f756c642068617665207468652073616d65206c656e677468",
                        "id": 677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3554:49:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b3b41b8359a1b0d52aeb9a136881798f1d5820dbfe964604a8e4ebb7ce8ebc0b",
                          "typeString": "literal_string \"_SLONames and _SLOs should have the same length\""
                        },
                        "value": "_SLONames and _SLOs should have the same length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b3b41b8359a1b0d52aeb9a136881798f1d5820dbfe964604a8e4ebb7ce8ebc0b",
                          "typeString": "literal_string \"_SLONames and _SLOs should have the same length\""
                        }
                      ],
                      "id": 671,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3487:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3487:126:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 679,
                  "nodeType": "ExpressionStatement",
                  "src": "3487:126:2"
                },
                {
                  "body": {
                    "id": 701,
                    "nodeType": "Block",
                    "src": "3667:54:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 691,
                              "name": "SLOs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 577,
                              "src": "3681:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$3124_$",
                                "typeString": "mapping(bytes32 => contract SLO)"
                              }
                            },
                            "id": 695,
                            "indexExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 692,
                                "name": "_SLONames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 639,
                                "src": "3686:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                }
                              },
                              "id": 694,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 693,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 681,
                                "src": "3696:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3686:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3681:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLO_$3124",
                              "typeString": "contract SLO"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 696,
                              "name": "_SLOs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 642,
                              "src": "3702:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_SLO_$3124_$dyn_memory_ptr",
                                "typeString": "contract SLO[] memory"
                              }
                            },
                            "id": 698,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 697,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 681,
                              "src": "3708:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3702:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLO_$3124",
                              "typeString": "contract SLO"
                            }
                          },
                          "src": "3681:29:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$3124",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 700,
                        "nodeType": "ExpressionStatement",
                        "src": "3681:29:2"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 684,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 681,
                      "src": "3644:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 685,
                        "name": "_SLOs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 642,
                        "src": "3648:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_SLO_$3124_$dyn_memory_ptr",
                          "typeString": "contract SLO[] memory"
                        }
                      },
                      "id": 686,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3648:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3644:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 702,
                  "initializationExpression": {
                    "assignments": [
                      681
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 681,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 702,
                        "src": "3629:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 680,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3629:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 683,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 682,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3641:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3629:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 689,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3662:3:2",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 688,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 681,
                        "src": "3662:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 690,
                    "nodeType": "ExpressionStatement",
                    "src": "3662:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "3624:97:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 704,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 636,
                        "src": "3749:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 703,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6449,
                      "src": "3731:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3731:25:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 706,
                  "nodeType": "ExpressionStatement",
                  "src": "3731:25:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 707,
                      "name": "SLONames",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 587,
                      "src": "3766:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                        "typeString": "bytes32[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 708,
                      "name": "_SLONames",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 639,
                      "src": "3777:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[] memory"
                      }
                    },
                    "src": "3766:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                      "typeString": "bytes32[] storage ref"
                    }
                  },
                  "id": 710,
                  "nodeType": "ExpressionStatement",
                  "src": "3766:20:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 711,
                      "name": "stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 559,
                      "src": "3796:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 712,
                      "name": "_stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 644,
                      "src": "3804:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3796:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 714,
                  "nodeType": "ExpressionStatement",
                  "src": "3796:14:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 715,
                      "name": "ipfsHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 562,
                      "src": "3820:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 716,
                      "name": "_ipfsHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 646,
                      "src": "3831:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3820:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 718,
                  "nodeType": "ExpressionStatement",
                  "src": "3820:20:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 719,
                      "name": "registry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 565,
                      "src": "3850:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLARegistry_$2993",
                        "typeString": "contract SLARegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 721,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3873:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3873:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 720,
                        "name": "SLARegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2993,
                        "src": "3861:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SLARegistry_$2993_$",
                          "typeString": "type(contract SLARegistry)"
                        }
                      },
                      "id": 723,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3861:23:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLARegistry_$2993",
                        "typeString": "contract SLARegistry"
                      }
                    },
                    "src": "3850:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SLARegistry_$2993",
                      "typeString": "contract SLARegistry"
                    }
                  },
                  "id": 725,
                  "nodeType": "ExpressionStatement",
                  "src": "3850:34:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 726,
                      "name": "blockNumberCreation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 590,
                      "src": "3894:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 727,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "3916:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 728,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3916:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3894:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 730,
                  "nodeType": "ExpressionStatement",
                  "src": "3894:34:2"
                }
              ]
            },
            "documentation": {
              "id": 634,
              "nodeType": "StructuredDocumentation",
              "src": "2228:796:2",
              "text": " @param _owner 1. address of the owner of the service level agreement\n @param _SLONames 2. array of the names of the service level objectives\n in bytes32\n @param _SLOs 3. array of service level objective contract addressess\n service level objective breach\n @param _stake 4. uint of the amount required to stake when signing the\n service level agreement\n @param _ipfsHash 5. string with the ipfs hash that contains extra\n information about the service level agreement\n @param _baseTokenAddress 6. address of the Base Token to be unlocked for staking\n @param _sla_period_starts 7. array with the values for the \"start\" of every period\n @param _sla_period_ends 8. array with the values for the \"end\" of every period"
            },
            "id": 732,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 657,
                    "name": "_baseTokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 648,
                    "src": "3346:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 658,
                    "name": "_sla_period_starts",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 651,
                    "src": "3365:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 659,
                    "name": "_sla_period_ends",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 654,
                    "src": "3385:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 660,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 636,
                    "src": "3403:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 661,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 656,
                  "name": "Staking",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2157,
                  "src": "3338:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Staking_$2157_$",
                    "typeString": "type(contract Staking)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3338:72:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 655,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 636,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 732,
                  "src": "3050:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 635,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3050:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 639,
                  "mutability": "mutable",
                  "name": "_SLONames",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 732,
                  "src": "3074:26:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 637,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "3074:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 638,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3074:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 642,
                  "mutability": "mutable",
                  "name": "_SLOs",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 732,
                  "src": "3110:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_SLO_$3124_$dyn_memory_ptr",
                    "typeString": "contract SLO[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 640,
                      "name": "SLO",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 3124,
                      "src": "3110:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLO_$3124",
                        "typeString": "contract SLO"
                      }
                    },
                    "id": 641,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3110:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_SLO_$3124_$dyn_storage_ptr",
                      "typeString": "contract SLO[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 644,
                  "mutability": "mutable",
                  "name": "_stake",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 732,
                  "src": "3138:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 643,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3138:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 646,
                  "mutability": "mutable",
                  "name": "_ipfsHash",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 732,
                  "src": "3162:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 645,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3162:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 648,
                  "mutability": "mutable",
                  "name": "_baseTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 732,
                  "src": "3195:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 647,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3195:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 651,
                  "mutability": "mutable",
                  "name": "_sla_period_starts",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 732,
                  "src": "3230:35:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 649,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3230:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 650,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3230:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 654,
                  "mutability": "mutable",
                  "name": "_sla_period_ends",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 732,
                  "src": "3275:33:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 652,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3275:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 653,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3275:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3040:274:2"
            },
            "returnParameters": {
              "id": 662,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3415:0:2"
            },
            "scope": 909,
            "src": "3029:906:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 804,
              "nodeType": "Block",
              "src": "4330:435:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 749,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "4364:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 750,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4364:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 751,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 737,
                            "src": "4381:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 752,
                            "name": "_periodId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 739,
                            "src": "4389:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 748,
                          "name": "SLI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 572,
                          "src": "4360:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_SLI_$572_storage_ptr_$",
                            "typeString": "type(struct SLA.SLI storage pointer)"
                          }
                        },
                        "id": 753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4360:39:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SLI_$572_memory_ptr",
                          "typeString": "struct SLA.SLI memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SLI_$572_memory_ptr",
                          "typeString": "struct SLA.SLI memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 744,
                          "name": "SLIs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 583,
                          "src": "4340:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$572_storage_$dyn_storage_$",
                            "typeString": "mapping(bytes32 => struct SLA.SLI storage ref[] storage ref)"
                          }
                        },
                        "id": 746,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 745,
                          "name": "_SLOName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 735,
                          "src": "4345:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4340:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_SLI_$572_storage_$dyn_storage",
                          "typeString": "struct SLA.SLI storage ref[] storage ref"
                        }
                      },
                      "id": 747,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4340:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_SLI_$572_storage_$returns$__$",
                        "typeString": "function (struct SLA.SLI storage ref)"
                      }
                    },
                    "id": 754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4340:60:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 755,
                  "nodeType": "ExpressionStatement",
                  "src": "4340:60:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 756,
                          "name": "periods",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 971,
                          "src": "4410:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Period_$948_storage_$dyn_storage",
                            "typeString": "struct Staking.Period storage ref[] storage ref"
                          }
                        },
                        "id": 758,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 757,
                          "name": "_periodId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 739,
                          "src": "4418:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4410:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Period_$948_storage",
                          "typeString": "struct Staking.Period storage ref"
                        }
                      },
                      "id": 759,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "sli",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 935,
                      "src": "4410:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 760,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 737,
                      "src": "4435:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4410:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 762,
                  "nodeType": "ExpressionStatement",
                  "src": "4410:31:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 763,
                          "name": "periods",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 971,
                          "src": "4451:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Period_$948_storage_$dyn_storage",
                            "typeString": "struct Staking.Period storage ref[] storage ref"
                          }
                        },
                        "id": 765,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 764,
                          "name": "_periodId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 739,
                          "src": "4459:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4451:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Period_$948_storage",
                          "typeString": "struct Staking.Period storage ref"
                        }
                      },
                      "id": 766,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 937,
                      "src": "4451:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 767,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "4482:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 768,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4482:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4451:46:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 770,
                  "nodeType": "ExpressionStatement",
                  "src": "4451:46:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 772,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "4524:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4524:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 774,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 737,
                        "src": "4541:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 775,
                        "name": "_periodId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 739,
                        "src": "4549:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 771,
                      "name": "SLICreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 599,
                      "src": "4513:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256)"
                      }
                    },
                    "id": 776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4513:46:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 777,
                  "nodeType": "EmitStatement",
                  "src": "4508:51:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4574:36:2",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 782,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 737,
                          "src": "4603:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 778,
                            "name": "SLOs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 577,
                            "src": "4575:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$3124_$",
                              "typeString": "mapping(bytes32 => contract SLO)"
                            }
                          },
                          "id": 780,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 779,
                            "name": "_SLOName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 735,
                            "src": "4580:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4575:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$3124",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isSLOHonored",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3123,
                        "src": "4575:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view external returns (bool)"
                        }
                      },
                      "id": 783,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4575:35:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 802,
                    "nodeType": "Block",
                    "src": "4690:69:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 794,
                                "name": "periods",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 971,
                                "src": "4704:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Period_$948_storage_$dyn_storage",
                                  "typeString": "struct Staking.Period storage ref[] storage ref"
                                }
                              },
                              "id": 796,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 795,
                                "name": "_periodId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 739,
                                "src": "4712:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4704:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Period_$948_storage",
                                "typeString": "struct Staking.Period storage ref"
                              }
                            },
                            "id": 797,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 933,
                            "src": "4704:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$923",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 798,
                              "name": "Status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 923,
                              "src": "4732:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Status_$923_$",
                                "typeString": "type(enum Staking.Status)"
                              }
                            },
                            "id": 799,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Respected",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4732:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$923",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "src": "4704:44:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$923",
                            "typeString": "enum Staking.Status"
                          }
                        },
                        "id": 801,
                        "nodeType": "ExpressionStatement",
                        "src": "4704:44:2"
                      }
                    ]
                  },
                  "id": 803,
                  "nodeType": "IfStatement",
                  "src": "4570:189:2",
                  "trueBody": {
                    "id": 793,
                    "nodeType": "Block",
                    "src": "4612:72:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 785,
                                "name": "periods",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 971,
                                "src": "4626:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Period_$948_storage_$dyn_storage",
                                  "typeString": "struct Staking.Period storage ref[] storage ref"
                                }
                              },
                              "id": 787,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 786,
                                "name": "_periodId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 739,
                                "src": "4634:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4626:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Period_$948_storage",
                                "typeString": "struct Staking.Period storage ref"
                              }
                            },
                            "id": 788,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 933,
                            "src": "4626:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$923",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 789,
                              "name": "Status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 923,
                              "src": "4654:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Status_$923_$",
                                "typeString": "type(enum Staking.Status)"
                              }
                            },
                            "id": 790,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "NotRespected",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4654:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$923",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "src": "4626:47:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$923",
                            "typeString": "enum Staking.Status"
                          }
                        },
                        "id": 792,
                        "nodeType": "ExpressionStatement",
                        "src": "4626:47:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 733,
              "nodeType": "StructuredDocumentation",
              "src": "3941:257:2",
              "text": " @dev external function to register SLI's and check them against the SLO's\n @param _SLOName 1. the name of the SLO in bytes32\n @param _value 2. the value of the SLI to check\n @param _periodId 3. the id of the given period"
            },
            "functionSelector": "869c3925",
            "id": 805,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 742,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 741,
                  "name": "onlyMessenger",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 617,
                  "src": "4316:13:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4316:13:2"
              }
            ],
            "name": "registerSLI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 740,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 735,
                  "mutability": "mutable",
                  "name": "_SLOName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 805,
                  "src": "4233:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 734,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4233:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 737,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 805,
                  "src": "4259:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 736,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4259:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 739,
                  "mutability": "mutable",
                  "name": "_periodId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 805,
                  "src": "4283:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 738,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4283:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4223:83:2"
            },
            "returnParameters": {
              "id": 743,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4330:0:2"
            },
            "scope": 909,
            "src": "4203:562:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 818,
              "nodeType": "Block",
              "src": "5035:38:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 814,
                      "name": "SLIs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 583,
                      "src": "5052:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$572_storage_$dyn_storage_$",
                        "typeString": "mapping(bytes32 => struct SLA.SLI storage ref[] storage ref)"
                      }
                    },
                    "id": 816,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 815,
                      "name": "_SLOName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 808,
                      "src": "5057:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5052:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_SLI_$572_storage_$dyn_storage",
                      "typeString": "struct SLA.SLI storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 813,
                  "id": 817,
                  "nodeType": "Return",
                  "src": "5045:21:2"
                }
              ]
            },
            "documentation": {
              "id": 806,
              "nodeType": "StructuredDocumentation",
              "src": "4771:190:2",
              "text": " @dev external function to get SLIs of certain _SLO\n @param _SLOName 1. the name of the SLO in bytes32\n @return SLI[] array of SLIs associated to the input SLOs"
            },
            "functionSelector": "02e8b893",
            "id": 819,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSLI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 809,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 808,
                  "mutability": "mutable",
                  "name": "_SLOName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 819,
                  "src": "4982:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 807,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4982:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4981:18:2"
            },
            "returnParameters": {
              "id": 813,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 812,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 819,
                  "src": "5021:12:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_SLI_$572_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct SLA.SLI[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 810,
                      "name": "SLI",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 572,
                      "src": "5021:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SLI_$572_storage_ptr",
                        "typeString": "struct SLA.SLI"
                      }
                    },
                    "id": 811,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5021:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_SLI_$572_storage_$dyn_storage_ptr",
                      "typeString": "struct SLA.SLI[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5020:14:2"
            },
            "scope": 909,
            "src": "4966:107:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 877,
              "nodeType": "Block",
              "src": "5568:258:2",
              "statements": [
                {
                  "assignments": [
                    838
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 838,
                      "mutability": "mutable",
                      "name": "_SLOAddresses",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 877,
                      "src": "5578:26:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_SLO_$3124_$dyn_memory_ptr",
                        "typeString": "contract SLO[]"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 836,
                          "name": "SLO",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 3124,
                          "src": "5578:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$3124",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 837,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "5578:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_SLO_$3124_$dyn_storage_ptr",
                          "typeString": "contract SLO[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 845,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 842,
                          "name": "SLONames",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 587,
                          "src": "5617:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                            "typeString": "bytes32[] storage ref"
                          }
                        },
                        "id": 843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5617:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 841,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "5607:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_SLO_$3124_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (contract SLO[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 839,
                          "name": "SLO",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 3124,
                          "src": "5611:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$3124",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 840,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "5611:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_SLO_$3124_$dyn_storage_ptr",
                          "typeString": "contract SLO[]"
                        }
                      }
                    },
                    "id": 844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5607:26:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_SLO_$3124_$dyn_memory_ptr",
                      "typeString": "contract SLO[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5578:55:2"
                },
                {
                  "body": {
                    "id": 867,
                    "nodeType": "Block",
                    "src": "5690:61:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 857,
                              "name": "_SLOAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 838,
                              "src": "5704:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_SLO_$3124_$dyn_memory_ptr",
                                "typeString": "contract SLO[] memory"
                              }
                            },
                            "id": 859,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 858,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 847,
                              "src": "5718:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5704:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLO_$3124",
                              "typeString": "contract SLO"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 860,
                              "name": "SLOs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 577,
                              "src": "5723:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$3124_$",
                                "typeString": "mapping(bytes32 => contract SLO)"
                              }
                            },
                            "id": 864,
                            "indexExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 861,
                                "name": "SLONames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 587,
                                "src": "5728:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                  "typeString": "bytes32[] storage ref"
                                }
                              },
                              "id": 863,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 862,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 847,
                                "src": "5737:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5728:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5723:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLO_$3124",
                              "typeString": "contract SLO"
                            }
                          },
                          "src": "5704:36:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$3124",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 866,
                        "nodeType": "ExpressionStatement",
                        "src": "5704:36:2"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 850,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 847,
                      "src": "5664:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 851,
                        "name": "SLONames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 587,
                        "src": "5668:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      "id": 852,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5668:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5664:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 868,
                  "initializationExpression": {
                    "assignments": [
                      847
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 847,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 868,
                        "src": "5649:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 846,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5649:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 849,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 848,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5661:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5649:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 855,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5685:3:2",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 854,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 847,
                        "src": "5685:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 856,
                    "nodeType": "ExpressionStatement",
                    "src": "5685:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "5644:107:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 869,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6386,
                          "src": "5769:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5769:7:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 871,
                        "name": "ipfsHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 562,
                        "src": "5778:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 872,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 559,
                        "src": "5788:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 873,
                        "name": "SLONames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 587,
                        "src": "5795:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 874,
                        "name": "_SLOAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 838,
                        "src": "5805:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_SLO_$3124_$dyn_memory_ptr",
                          "typeString": "contract SLO[] memory"
                        }
                      }
                    ],
                    "id": 875,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5768:51:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_string_storage_$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$_t_array$_t_contract$_SLO_$3124_$dyn_memory_ptr_$",
                      "typeString": "tuple(address,string storage ref,uint256,bytes32[] storage ref,contract SLO[] memory)"
                    }
                  },
                  "functionReturnParameters": 834,
                  "id": 876,
                  "nodeType": "Return",
                  "src": "5761:58:2"
                }
              ]
            },
            "documentation": {
              "id": 820,
              "nodeType": "StructuredDocumentation",
              "src": "5079:275:2",
              "text": " @dev external view function that returns all agreement information\n @return address owner\n @return string ipfsHash\n @return uint256 amount necessary to stake\n @return bytes32[] SLONames array\n @return SLO[] SLO addresses array"
            },
            "functionSelector": "fbbf93a0",
            "id": 878,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDetails",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 821,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5379:2:2"
            },
            "returnParameters": {
              "id": 834,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 823,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 878,
                  "src": "5442:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 822,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5442:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 825,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 878,
                  "src": "5463:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 824,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5463:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 827,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 878,
                  "src": "5490:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 826,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5490:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 830,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 878,
                  "src": "5511:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 828,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "5511:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 829,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5511:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 833,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 878,
                  "src": "5541:12:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_SLO_$3124_$dyn_memory_ptr",
                    "typeString": "contract SLO[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 831,
                      "name": "SLO",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 3124,
                      "src": "5541:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLO_$3124",
                        "typeString": "contract SLO"
                      }
                    },
                    "id": 832,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5541:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_SLO_$3124_$dyn_storage_ptr",
                      "typeString": "contract SLO[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5428:135:2"
            },
            "scope": 909,
            "src": "5360:466:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 907,
              "nodeType": "Block",
              "src": "6157:198:2",
              "statements": [
                {
                  "assignments": [
                    889
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 889,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 907,
                      "src": "6167:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 888,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6167:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 895,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 892,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6209:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6209:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 890,
                        "name": "registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 565,
                        "src": "6182:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SLARegistry_$2993",
                          "typeString": "contract SLARegistry"
                        }
                      },
                      "id": 891,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "registerStakedSla",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2841,
                      "src": "6182:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) external returns (bool)"
                      }
                    },
                    "id": 894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6182:38:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6167:53:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 897,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 889,
                        "src": "6238:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "736c6120776173206e6f742072656769737465726564206173207374616b656420627920746865206d73672e73656e646572",
                        "id": 898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6247:52:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c6e925f21a14f09ac357e8a1a180a64f3d00f4ed281ffa9e5ad393c2a10f11da",
                          "typeString": "literal_string \"sla was not registered as staked by the msg.sender\""
                        },
                        "value": "sla was not registered as staked by the msg.sender"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c6e925f21a14f09ac357e8a1a180a64f3d00f4ed281ffa9e5ad393c2a10f11da",
                          "typeString": "literal_string \"sla was not registered as staked by the msg.sender\""
                        }
                      ],
                      "id": 896,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6230:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6230:70:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 900,
                  "nodeType": "ExpressionStatement",
                  "src": "6230:70:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 902,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 881,
                        "src": "6323:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 903,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 883,
                        "src": "6332:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 904,
                        "name": "_period",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 885,
                        "src": "6340:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 901,
                      "name": "_stakeTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1439,
                      "src": "6310:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,uint256)"
                      }
                    },
                    "id": 905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6310:38:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 906,
                  "nodeType": "ExpressionStatement",
                  "src": "6310:38:2"
                }
              ]
            },
            "documentation": {
              "id": 879,
              "nodeType": "StructuredDocumentation",
              "src": "5832:211:2",
              "text": "@dev increase the _amount staked per _token of _sla\n@param _amount 1. amount to be staked\n@param _token 2. address of the ERC to be staked\n@param _period 3. period id to stake"
            },
            "functionSelector": "cec534d6",
            "id": 908,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakeTokens",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 886,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 881,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 908,
                  "src": "6079:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 880,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6079:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 883,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 908,
                  "src": "6104:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 882,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6104:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 885,
                  "mutability": "mutable",
                  "name": "_period",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 908,
                  "src": "6128:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 884,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6128:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6069:80:2"
            },
            "returnParameters": {
              "id": 887,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6157:0:2"
            },
            "scope": 909,
            "src": "6049:306:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 910,
        "src": "446:5911:2"
      }
    ],
    "src": "32:6326:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLA/SLA.sol",
    "exportedSymbols": {
      "SLA": [
        909
      ]
    },
    "id": 910,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 541,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:2"
      },
      {
        "id": 542,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 543,
        "nodeType": "ImportDirective",
        "scope": 910,
        "sourceUnit": 6451,
        "src": "91:52:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 544,
        "nodeType": "ImportDirective",
        "scope": 910,
        "sourceUnit": 7461,
        "src": "144:56:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 545,
        "nodeType": "ImportDirective",
        "scope": 910,
        "sourceUnit": 6647,
        "src": "201:51:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLO/SLO.sol",
        "file": "../SLO/SLO.sol",
        "id": 546,
        "nodeType": "ImportDirective",
        "scope": 910,
        "sourceUnit": 3125,
        "src": "253:24:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLARegistry.sol",
        "file": "../SLARegistry.sol",
        "id": 547,
        "nodeType": "ImportDirective",
        "scope": 910,
        "sourceUnit": 2994,
        "src": "278:28:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLA/Staking.sol",
        "file": "./Staking.sol",
        "id": 548,
        "nodeType": "ImportDirective",
        "scope": 910,
        "sourceUnit": 2158,
        "src": "307:23:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 550,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6450,
              "src": "462:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$6450",
                "typeString": "contract Ownable"
              }
            },
            "id": 551,
            "nodeType": "InheritanceSpecifier",
            "src": "462:7:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 552,
              "name": "Staking",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2157,
              "src": "471:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Staking_$2157",
                "typeString": "contract Staking"
              }
            },
            "id": 553,
            "nodeType": "InheritanceSpecifier",
            "src": "471:7:2"
          }
        ],
        "contractDependencies": [
          2157,
          6058,
          6450
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 549,
          "nodeType": "StructuredDocumentation",
          "src": "332:113:2",
          "text": " @title SLA\n @dev SLA is a service level agreement contract used for service downtime\n compensation"
        },
        "fullyImplemented": true,
        "id": 909,
        "linearizedBaseContracts": [
          909,
          2157,
          6450,
          6058
        ],
        "name": "SLA",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 556,
            "libraryName": {
              "contractScope": null,
              "id": 554,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6646,
              "src": "491:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$6646",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "485:27:2",
            "typeName": {
              "id": 555,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "504:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "documentation": {
              "id": 557,
              "nodeType": "StructuredDocumentation",
              "src": "518:71:2",
              "text": "@dev The required amount to stake when subscribing to the agreement"
            },
            "functionSelector": "3a4b66f1",
            "id": 559,
            "mutability": "mutable",
            "name": "stake",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 909,
            "src": "594:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 558,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "594:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 560,
              "nodeType": "StructuredDocumentation",
              "src": "621:72:2",
              "text": "@dev The ipfs hash that stores extra information about the agreement"
            },
            "functionSelector": "c623674f",
            "id": 562,
            "mutability": "mutable",
            "name": "ipfsHash",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 909,
            "src": "698:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 561,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "698:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 563,
              "nodeType": "StructuredDocumentation",
              "src": "727:45:2",
              "text": "@dev The address of the registry contract"
            },
            "functionSelector": "7b103999",
            "id": 565,
            "mutability": "mutable",
            "name": "registry",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 909,
            "src": "777:27:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SLARegistry_$2993",
              "typeString": "contract SLARegistry"
            },
            "typeName": {
              "contractScope": null,
              "id": 564,
              "name": "SLARegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2993,
              "src": "777:11:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SLARegistry_$2993",
                "typeString": "contract SLARegistry"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "SLA.SLI",
            "id": 572,
            "members": [
              {
                "constant": false,
                "id": 567,
                "mutability": "mutable",
                "name": "timestamp",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 572,
                "src": "886:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 566,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "886:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 569,
                "mutability": "mutable",
                "name": "value",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 572,
                "src": "913:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 568,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "913:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 571,
                "mutability": "mutable",
                "name": "periodId",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 572,
                "src": "936:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 570,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "936:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "SLI",
            "nodeType": "StructDefinition",
            "scope": 909,
            "src": "865:94:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 573,
              "nodeType": "StructuredDocumentation",
              "src": "965:63:2",
              "text": "@dev mapping to get SLO addresses from SLO names in bytes32"
            },
            "functionSelector": "b0227b47",
            "id": 577,
            "mutability": "mutable",
            "name": "SLOs",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 909,
            "src": "1033:35:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$3124_$",
              "typeString": "mapping(bytes32 => contract SLO)"
            },
            "typeName": {
              "id": 576,
              "keyType": {
                "id": 574,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1041:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1033:23:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$3124_$",
                "typeString": "mapping(bytes32 => contract SLO)"
              },
              "valueType": {
                "contractScope": null,
                "id": 575,
                "name": "SLO",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 3124,
                "src": "1052:3:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_SLO_$3124",
                  "typeString": "contract SLO"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 578,
              "nodeType": "StructuredDocumentation",
              "src": "1075:61:2",
              "text": "@dev mapping to get SLI structs from SLO names in bytes32"
            },
            "functionSelector": "94199c61",
            "id": 583,
            "mutability": "mutable",
            "name": "SLIs",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 909,
            "src": "1141:37:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$572_storage_$dyn_storage_$",
              "typeString": "mapping(bytes32 => struct SLA.SLI[])"
            },
            "typeName": {
              "id": 582,
              "keyType": {
                "id": 579,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1149:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1141:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$572_storage_$dyn_storage_$",
                "typeString": "mapping(bytes32 => struct SLA.SLI[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 580,
                  "name": "SLI",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 572,
                  "src": "1160:3:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SLI_$572_storage_ptr",
                    "typeString": "struct SLA.SLI"
                  }
                },
                "id": 581,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "1160:5:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_SLI_$572_storage_$dyn_storage_ptr",
                  "typeString": "struct SLA.SLI[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 584,
              "nodeType": "StructuredDocumentation",
              "src": "1185:63:2",
              "text": "@dev array storing the names of the SLO's of this agreement"
            },
            "functionSelector": "f34ed40d",
            "id": 587,
            "mutability": "mutable",
            "name": "SLONames",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 909,
            "src": "1253:25:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
              "typeString": "bytes32[]"
            },
            "typeName": {
              "baseType": {
                "id": 585,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1253:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "id": 586,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "1253:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                "typeString": "bytes32[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 588,
              "nodeType": "StructuredDocumentation",
              "src": "1285:42:2",
              "text": "@dev block timestamp of SLA deployment"
            },
            "functionSelector": "dbc389ec",
            "id": 590,
            "mutability": "mutable",
            "name": "blockNumberCreation",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 909,
            "src": "1332:34:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 589,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1332:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 591,
              "nodeType": "StructuredDocumentation",
              "src": "1373:218:2",
              "text": " @dev event for SLI creation logging\n @param _timestamp 1. the time the SLI has been registered\n @param _value 2. the value of the SLI\n @param _periodId 3. the id of the given period"
            },
            "id": 599,
            "name": "SLICreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 593,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_timestamp",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 599,
                  "src": "1613:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 592,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1613:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 595,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 599,
                  "src": "1633:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 594,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1633:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 597,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_periodId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 599,
                  "src": "1649:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 596,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1649:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1612:55:2"
            },
            "src": "1596:72:2"
          },
          {
            "body": {
              "id": 616,
              "nodeType": "Block",
              "src": "1794:155:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 603,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1825:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1825:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 607,
                                  "name": "registry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 565,
                                  "src": "1847:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SLARegistry_$2993",
                                    "typeString": "contract SLARegistry"
                                  }
                                },
                                "id": 608,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "messenger",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2212,
                                "src": "1847:18:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_Messenger_$482_$",
                                  "typeString": "function () view external returns (contract Messenger)"
                                }
                              },
                              "id": 609,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1847:20:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Messenger_$482",
                                "typeString": "contract Messenger"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Messenger_$482",
                                "typeString": "contract Messenger"
                              }
                            ],
                            "id": 606,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1839:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 605,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1839:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1839:29:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1825:43:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c79204d657373656e6765722063616e2063616c6c20746869732066756e6374696f6e",
                        "id": 612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1882:39:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_39f7759ea2bbdd2e1e81147a101caf620d99fffff64ea441cd110db6a47073aa",
                          "typeString": "literal_string \"Only Messenger can call this function\""
                        },
                        "value": "Only Messenger can call this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_39f7759ea2bbdd2e1e81147a101caf620d99fffff64ea441cd110db6a47073aa",
                          "typeString": "literal_string \"Only Messenger can call this function\""
                        }
                      ],
                      "id": 602,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1804:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1804:127:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 614,
                  "nodeType": "ExpressionStatement",
                  "src": "1804:127:2"
                },
                {
                  "id": 615,
                  "nodeType": "PlaceholderStatement",
                  "src": "1941:1:2"
                }
              ]
            },
            "documentation": {
              "id": 600,
              "nodeType": "StructuredDocumentation",
              "src": "1674:90:2",
              "text": " @dev throws if called by any address other than the messenger contract."
            },
            "id": 617,
            "name": "onlyMessenger",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 601,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1791:2:2"
            },
            "src": "1769:180:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 632,
              "nodeType": "Block",
              "src": "2077:145:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 621,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2108:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2108:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 625,
                              "name": "registry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 565,
                              "src": "2130:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SLARegistry_$2993",
                                "typeString": "contract SLARegistry"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SLARegistry_$2993",
                                "typeString": "contract SLARegistry"
                              }
                            ],
                            "id": 624,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2122:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 623,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2122:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2122:17:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2108:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c7920534c4152656769737472792063616e2063616c6c20746869732066756e6374696f6e",
                        "id": 628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2153:41:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1891e074d231f0eadd49320610779fe4f30315fe978aec173f8d01b1bebd2b42",
                          "typeString": "literal_string \"Only SLARegistry can call this function\""
                        },
                        "value": "Only SLARegistry can call this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1891e074d231f0eadd49320610779fe4f30315fe978aec173f8d01b1bebd2b42",
                          "typeString": "literal_string \"Only SLARegistry can call this function\""
                        }
                      ],
                      "id": 620,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2087:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2087:117:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 630,
                  "nodeType": "ExpressionStatement",
                  "src": "2087:117:2"
                },
                {
                  "id": 631,
                  "nodeType": "PlaceholderStatement",
                  "src": "2214:1:2"
                }
              ]
            },
            "documentation": {
              "id": 618,
              "nodeType": "StructuredDocumentation",
              "src": "1955:90:2",
              "text": " @dev throws if called by any address other than the messenger contract."
            },
            "id": 633,
            "name": "onlySLARegistry",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 619,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2074:2:2"
            },
            "src": "2050:172:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 731,
              "nodeType": "Block",
              "src": "3415:520:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 664,
                            "name": "_SLOs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 642,
                            "src": "3433:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_SLO_$3124_$dyn_memory_ptr",
                              "typeString": "contract SLO[] memory"
                            }
                          },
                          "id": 665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3433:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "35",
                          "id": 666,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3448:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "src": "3433:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6d617820616d6f756e74206f6620534c4f732069732035",
                        "id": 668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3451:25:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be84bcce5cdf21effcf26df15f43c34c7a80dbc4bd54884dca3d795818fbfe95",
                          "typeString": "literal_string \"max amount of SLOs is 5\""
                        },
                        "value": "max amount of SLOs is 5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be84bcce5cdf21effcf26df15f43c34c7a80dbc4bd54884dca3d795818fbfe95",
                          "typeString": "literal_string \"max amount of SLOs is 5\""
                        }
                      ],
                      "id": 663,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3425:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3425:52:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 670,
                  "nodeType": "ExpressionStatement",
                  "src": "3425:52:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 672,
                            "name": "_SLONames",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 639,
                            "src": "3508:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          "id": 673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3508:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 674,
                            "name": "_SLOs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 642,
                            "src": "3528:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_SLO_$3124_$dyn_memory_ptr",
                              "typeString": "contract SLO[] memory"
                            }
                          },
                          "id": 675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3528:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3508:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5f534c4f4e616d657320616e64205f534c4f732073686f756c642068617665207468652073616d65206c656e677468",
                        "id": 677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3554:49:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b3b41b8359a1b0d52aeb9a136881798f1d5820dbfe964604a8e4ebb7ce8ebc0b",
                          "typeString": "literal_string \"_SLONames and _SLOs should have the same length\""
                        },
                        "value": "_SLONames and _SLOs should have the same length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b3b41b8359a1b0d52aeb9a136881798f1d5820dbfe964604a8e4ebb7ce8ebc0b",
                          "typeString": "literal_string \"_SLONames and _SLOs should have the same length\""
                        }
                      ],
                      "id": 671,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3487:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3487:126:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 679,
                  "nodeType": "ExpressionStatement",
                  "src": "3487:126:2"
                },
                {
                  "body": {
                    "id": 701,
                    "nodeType": "Block",
                    "src": "3667:54:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 691,
                              "name": "SLOs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 577,
                              "src": "3681:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$3124_$",
                                "typeString": "mapping(bytes32 => contract SLO)"
                              }
                            },
                            "id": 695,
                            "indexExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 692,
                                "name": "_SLONames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 639,
                                "src": "3686:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                }
                              },
                              "id": 694,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 693,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 681,
                                "src": "3696:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3686:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3681:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLO_$3124",
                              "typeString": "contract SLO"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 696,
                              "name": "_SLOs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 642,
                              "src": "3702:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_SLO_$3124_$dyn_memory_ptr",
                                "typeString": "contract SLO[] memory"
                              }
                            },
                            "id": 698,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 697,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 681,
                              "src": "3708:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3702:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLO_$3124",
                              "typeString": "contract SLO"
                            }
                          },
                          "src": "3681:29:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$3124",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 700,
                        "nodeType": "ExpressionStatement",
                        "src": "3681:29:2"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 684,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 681,
                      "src": "3644:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 685,
                        "name": "_SLOs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 642,
                        "src": "3648:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_SLO_$3124_$dyn_memory_ptr",
                          "typeString": "contract SLO[] memory"
                        }
                      },
                      "id": 686,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3648:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3644:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 702,
                  "initializationExpression": {
                    "assignments": [
                      681
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 681,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 702,
                        "src": "3629:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 680,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3629:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 683,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 682,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3641:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3629:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 689,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3662:3:2",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 688,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 681,
                        "src": "3662:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 690,
                    "nodeType": "ExpressionStatement",
                    "src": "3662:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "3624:97:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 704,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 636,
                        "src": "3749:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 703,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6449,
                      "src": "3731:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3731:25:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 706,
                  "nodeType": "ExpressionStatement",
                  "src": "3731:25:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 707,
                      "name": "SLONames",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 587,
                      "src": "3766:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                        "typeString": "bytes32[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 708,
                      "name": "_SLONames",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 639,
                      "src": "3777:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[] memory"
                      }
                    },
                    "src": "3766:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                      "typeString": "bytes32[] storage ref"
                    }
                  },
                  "id": 710,
                  "nodeType": "ExpressionStatement",
                  "src": "3766:20:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 711,
                      "name": "stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 559,
                      "src": "3796:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 712,
                      "name": "_stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 644,
                      "src": "3804:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3796:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 714,
                  "nodeType": "ExpressionStatement",
                  "src": "3796:14:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 715,
                      "name": "ipfsHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 562,
                      "src": "3820:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 716,
                      "name": "_ipfsHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 646,
                      "src": "3831:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3820:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 718,
                  "nodeType": "ExpressionStatement",
                  "src": "3820:20:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 719,
                      "name": "registry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 565,
                      "src": "3850:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLARegistry_$2993",
                        "typeString": "contract SLARegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 721,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3873:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3873:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 720,
                        "name": "SLARegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2993,
                        "src": "3861:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SLARegistry_$2993_$",
                          "typeString": "type(contract SLARegistry)"
                        }
                      },
                      "id": 723,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3861:23:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLARegistry_$2993",
                        "typeString": "contract SLARegistry"
                      }
                    },
                    "src": "3850:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SLARegistry_$2993",
                      "typeString": "contract SLARegistry"
                    }
                  },
                  "id": 725,
                  "nodeType": "ExpressionStatement",
                  "src": "3850:34:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 726,
                      "name": "blockNumberCreation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 590,
                      "src": "3894:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 727,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "3916:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 728,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3916:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3894:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 730,
                  "nodeType": "ExpressionStatement",
                  "src": "3894:34:2"
                }
              ]
            },
            "documentation": {
              "id": 634,
              "nodeType": "StructuredDocumentation",
              "src": "2228:796:2",
              "text": " @param _owner 1. address of the owner of the service level agreement\n @param _SLONames 2. array of the names of the service level objectives\n in bytes32\n @param _SLOs 3. array of service level objective contract addressess\n service level objective breach\n @param _stake 4. uint of the amount required to stake when signing the\n service level agreement\n @param _ipfsHash 5. string with the ipfs hash that contains extra\n information about the service level agreement\n @param _baseTokenAddress 6. address of the Base Token to be unlocked for staking\n @param _sla_period_starts 7. array with the values for the \"start\" of every period\n @param _sla_period_ends 8. array with the values for the \"end\" of every period"
            },
            "id": 732,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 657,
                    "name": "_baseTokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 648,
                    "src": "3346:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 658,
                    "name": "_sla_period_starts",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 651,
                    "src": "3365:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 659,
                    "name": "_sla_period_ends",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 654,
                    "src": "3385:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 660,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 636,
                    "src": "3403:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 661,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 656,
                  "name": "Staking",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2157,
                  "src": "3338:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Staking_$2157_$",
                    "typeString": "type(contract Staking)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3338:72:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 655,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 636,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 732,
                  "src": "3050:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 635,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3050:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 639,
                  "mutability": "mutable",
                  "name": "_SLONames",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 732,
                  "src": "3074:26:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 637,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "3074:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 638,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3074:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 642,
                  "mutability": "mutable",
                  "name": "_SLOs",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 732,
                  "src": "3110:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_SLO_$3124_$dyn_memory_ptr",
                    "typeString": "contract SLO[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 640,
                      "name": "SLO",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 3124,
                      "src": "3110:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLO_$3124",
                        "typeString": "contract SLO"
                      }
                    },
                    "id": 641,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3110:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_SLO_$3124_$dyn_storage_ptr",
                      "typeString": "contract SLO[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 644,
                  "mutability": "mutable",
                  "name": "_stake",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 732,
                  "src": "3138:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 643,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3138:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 646,
                  "mutability": "mutable",
                  "name": "_ipfsHash",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 732,
                  "src": "3162:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 645,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3162:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 648,
                  "mutability": "mutable",
                  "name": "_baseTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 732,
                  "src": "3195:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 647,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3195:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 651,
                  "mutability": "mutable",
                  "name": "_sla_period_starts",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 732,
                  "src": "3230:35:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 649,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3230:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 650,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3230:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 654,
                  "mutability": "mutable",
                  "name": "_sla_period_ends",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 732,
                  "src": "3275:33:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 652,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3275:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 653,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3275:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3040:274:2"
            },
            "returnParameters": {
              "id": 662,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3415:0:2"
            },
            "scope": 909,
            "src": "3029:906:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 804,
              "nodeType": "Block",
              "src": "4330:435:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 749,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "4364:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 750,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4364:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 751,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 737,
                            "src": "4381:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 752,
                            "name": "_periodId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 739,
                            "src": "4389:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 748,
                          "name": "SLI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 572,
                          "src": "4360:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_SLI_$572_storage_ptr_$",
                            "typeString": "type(struct SLA.SLI storage pointer)"
                          }
                        },
                        "id": 753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4360:39:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SLI_$572_memory_ptr",
                          "typeString": "struct SLA.SLI memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SLI_$572_memory_ptr",
                          "typeString": "struct SLA.SLI memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 744,
                          "name": "SLIs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 583,
                          "src": "4340:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$572_storage_$dyn_storage_$",
                            "typeString": "mapping(bytes32 => struct SLA.SLI storage ref[] storage ref)"
                          }
                        },
                        "id": 746,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 745,
                          "name": "_SLOName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 735,
                          "src": "4345:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4340:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_SLI_$572_storage_$dyn_storage",
                          "typeString": "struct SLA.SLI storage ref[] storage ref"
                        }
                      },
                      "id": 747,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4340:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_SLI_$572_storage_$returns$__$",
                        "typeString": "function (struct SLA.SLI storage ref)"
                      }
                    },
                    "id": 754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4340:60:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 755,
                  "nodeType": "ExpressionStatement",
                  "src": "4340:60:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 756,
                          "name": "periods",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 971,
                          "src": "4410:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Period_$948_storage_$dyn_storage",
                            "typeString": "struct Staking.Period storage ref[] storage ref"
                          }
                        },
                        "id": 758,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 757,
                          "name": "_periodId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 739,
                          "src": "4418:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4410:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Period_$948_storage",
                          "typeString": "struct Staking.Period storage ref"
                        }
                      },
                      "id": 759,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "sli",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 935,
                      "src": "4410:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 760,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 737,
                      "src": "4435:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4410:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 762,
                  "nodeType": "ExpressionStatement",
                  "src": "4410:31:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 763,
                          "name": "periods",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 971,
                          "src": "4451:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Period_$948_storage_$dyn_storage",
                            "typeString": "struct Staking.Period storage ref[] storage ref"
                          }
                        },
                        "id": 765,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 764,
                          "name": "_periodId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 739,
                          "src": "4459:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4451:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Period_$948_storage",
                          "typeString": "struct Staking.Period storage ref"
                        }
                      },
                      "id": 766,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 937,
                      "src": "4451:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 767,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "4482:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 768,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4482:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4451:46:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 770,
                  "nodeType": "ExpressionStatement",
                  "src": "4451:46:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 772,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "4524:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4524:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 774,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 737,
                        "src": "4541:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 775,
                        "name": "_periodId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 739,
                        "src": "4549:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 771,
                      "name": "SLICreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 599,
                      "src": "4513:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256)"
                      }
                    },
                    "id": 776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4513:46:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 777,
                  "nodeType": "EmitStatement",
                  "src": "4508:51:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4574:36:2",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 782,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 737,
                          "src": "4603:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 778,
                            "name": "SLOs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 577,
                            "src": "4575:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$3124_$",
                              "typeString": "mapping(bytes32 => contract SLO)"
                            }
                          },
                          "id": 780,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 779,
                            "name": "_SLOName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 735,
                            "src": "4580:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4575:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$3124",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isSLOHonored",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3123,
                        "src": "4575:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view external returns (bool)"
                        }
                      },
                      "id": 783,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4575:35:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 802,
                    "nodeType": "Block",
                    "src": "4690:69:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 794,
                                "name": "periods",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 971,
                                "src": "4704:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Period_$948_storage_$dyn_storage",
                                  "typeString": "struct Staking.Period storage ref[] storage ref"
                                }
                              },
                              "id": 796,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 795,
                                "name": "_periodId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 739,
                                "src": "4712:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4704:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Period_$948_storage",
                                "typeString": "struct Staking.Period storage ref"
                              }
                            },
                            "id": 797,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 933,
                            "src": "4704:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$923",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 798,
                              "name": "Status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 923,
                              "src": "4732:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Status_$923_$",
                                "typeString": "type(enum Staking.Status)"
                              }
                            },
                            "id": 799,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Respected",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4732:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$923",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "src": "4704:44:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$923",
                            "typeString": "enum Staking.Status"
                          }
                        },
                        "id": 801,
                        "nodeType": "ExpressionStatement",
                        "src": "4704:44:2"
                      }
                    ]
                  },
                  "id": 803,
                  "nodeType": "IfStatement",
                  "src": "4570:189:2",
                  "trueBody": {
                    "id": 793,
                    "nodeType": "Block",
                    "src": "4612:72:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 785,
                                "name": "periods",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 971,
                                "src": "4626:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Period_$948_storage_$dyn_storage",
                                  "typeString": "struct Staking.Period storage ref[] storage ref"
                                }
                              },
                              "id": 787,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 786,
                                "name": "_periodId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 739,
                                "src": "4634:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4626:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Period_$948_storage",
                                "typeString": "struct Staking.Period storage ref"
                              }
                            },
                            "id": 788,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 933,
                            "src": "4626:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$923",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 789,
                              "name": "Status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 923,
                              "src": "4654:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Status_$923_$",
                                "typeString": "type(enum Staking.Status)"
                              }
                            },
                            "id": 790,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "NotRespected",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4654:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$923",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "src": "4626:47:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$923",
                            "typeString": "enum Staking.Status"
                          }
                        },
                        "id": 792,
                        "nodeType": "ExpressionStatement",
                        "src": "4626:47:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 733,
              "nodeType": "StructuredDocumentation",
              "src": "3941:257:2",
              "text": " @dev external function to register SLI's and check them against the SLO's\n @param _SLOName 1. the name of the SLO in bytes32\n @param _value 2. the value of the SLI to check\n @param _periodId 3. the id of the given period"
            },
            "functionSelector": "869c3925",
            "id": 805,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 742,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 741,
                  "name": "onlyMessenger",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 617,
                  "src": "4316:13:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4316:13:2"
              }
            ],
            "name": "registerSLI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 740,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 735,
                  "mutability": "mutable",
                  "name": "_SLOName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 805,
                  "src": "4233:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 734,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4233:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 737,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 805,
                  "src": "4259:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 736,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4259:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 739,
                  "mutability": "mutable",
                  "name": "_periodId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 805,
                  "src": "4283:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 738,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4283:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4223:83:2"
            },
            "returnParameters": {
              "id": 743,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4330:0:2"
            },
            "scope": 909,
            "src": "4203:562:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 818,
              "nodeType": "Block",
              "src": "5035:38:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 814,
                      "name": "SLIs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 583,
                      "src": "5052:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$572_storage_$dyn_storage_$",
                        "typeString": "mapping(bytes32 => struct SLA.SLI storage ref[] storage ref)"
                      }
                    },
                    "id": 816,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 815,
                      "name": "_SLOName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 808,
                      "src": "5057:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5052:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_SLI_$572_storage_$dyn_storage",
                      "typeString": "struct SLA.SLI storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 813,
                  "id": 817,
                  "nodeType": "Return",
                  "src": "5045:21:2"
                }
              ]
            },
            "documentation": {
              "id": 806,
              "nodeType": "StructuredDocumentation",
              "src": "4771:190:2",
              "text": " @dev external function to get SLIs of certain _SLO\n @param _SLOName 1. the name of the SLO in bytes32\n @return SLI[] array of SLIs associated to the input SLOs"
            },
            "functionSelector": "02e8b893",
            "id": 819,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSLI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 809,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 808,
                  "mutability": "mutable",
                  "name": "_SLOName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 819,
                  "src": "4982:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 807,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4982:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4981:18:2"
            },
            "returnParameters": {
              "id": 813,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 812,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 819,
                  "src": "5021:12:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_SLI_$572_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct SLA.SLI[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 810,
                      "name": "SLI",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 572,
                      "src": "5021:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SLI_$572_storage_ptr",
                        "typeString": "struct SLA.SLI"
                      }
                    },
                    "id": 811,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5021:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_SLI_$572_storage_$dyn_storage_ptr",
                      "typeString": "struct SLA.SLI[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5020:14:2"
            },
            "scope": 909,
            "src": "4966:107:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 877,
              "nodeType": "Block",
              "src": "5568:258:2",
              "statements": [
                {
                  "assignments": [
                    838
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 838,
                      "mutability": "mutable",
                      "name": "_SLOAddresses",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 877,
                      "src": "5578:26:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_SLO_$3124_$dyn_memory_ptr",
                        "typeString": "contract SLO[]"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 836,
                          "name": "SLO",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 3124,
                          "src": "5578:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$3124",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 837,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "5578:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_SLO_$3124_$dyn_storage_ptr",
                          "typeString": "contract SLO[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 845,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 842,
                          "name": "SLONames",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 587,
                          "src": "5617:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                            "typeString": "bytes32[] storage ref"
                          }
                        },
                        "id": 843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5617:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 841,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "5607:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_SLO_$3124_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (contract SLO[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 839,
                          "name": "SLO",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 3124,
                          "src": "5611:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$3124",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 840,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "5611:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_SLO_$3124_$dyn_storage_ptr",
                          "typeString": "contract SLO[]"
                        }
                      }
                    },
                    "id": 844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5607:26:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_SLO_$3124_$dyn_memory_ptr",
                      "typeString": "contract SLO[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5578:55:2"
                },
                {
                  "body": {
                    "id": 867,
                    "nodeType": "Block",
                    "src": "5690:61:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 857,
                              "name": "_SLOAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 838,
                              "src": "5704:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_SLO_$3124_$dyn_memory_ptr",
                                "typeString": "contract SLO[] memory"
                              }
                            },
                            "id": 859,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 858,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 847,
                              "src": "5718:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5704:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLO_$3124",
                              "typeString": "contract SLO"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 860,
                              "name": "SLOs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 577,
                              "src": "5723:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$3124_$",
                                "typeString": "mapping(bytes32 => contract SLO)"
                              }
                            },
                            "id": 864,
                            "indexExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 861,
                                "name": "SLONames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 587,
                                "src": "5728:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                  "typeString": "bytes32[] storage ref"
                                }
                              },
                              "id": 863,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 862,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 847,
                                "src": "5737:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5728:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5723:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLO_$3124",
                              "typeString": "contract SLO"
                            }
                          },
                          "src": "5704:36:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$3124",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 866,
                        "nodeType": "ExpressionStatement",
                        "src": "5704:36:2"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 850,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 847,
                      "src": "5664:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 851,
                        "name": "SLONames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 587,
                        "src": "5668:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      "id": 852,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5668:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5664:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 868,
                  "initializationExpression": {
                    "assignments": [
                      847
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 847,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 868,
                        "src": "5649:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 846,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5649:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 849,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 848,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5661:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5649:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 855,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5685:3:2",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 854,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 847,
                        "src": "5685:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 856,
                    "nodeType": "ExpressionStatement",
                    "src": "5685:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "5644:107:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 869,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6386,
                          "src": "5769:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5769:7:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 871,
                        "name": "ipfsHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 562,
                        "src": "5778:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 872,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 559,
                        "src": "5788:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 873,
                        "name": "SLONames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 587,
                        "src": "5795:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 874,
                        "name": "_SLOAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 838,
                        "src": "5805:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_SLO_$3124_$dyn_memory_ptr",
                          "typeString": "contract SLO[] memory"
                        }
                      }
                    ],
                    "id": 875,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5768:51:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_string_storage_$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$_t_array$_t_contract$_SLO_$3124_$dyn_memory_ptr_$",
                      "typeString": "tuple(address,string storage ref,uint256,bytes32[] storage ref,contract SLO[] memory)"
                    }
                  },
                  "functionReturnParameters": 834,
                  "id": 876,
                  "nodeType": "Return",
                  "src": "5761:58:2"
                }
              ]
            },
            "documentation": {
              "id": 820,
              "nodeType": "StructuredDocumentation",
              "src": "5079:275:2",
              "text": " @dev external view function that returns all agreement information\n @return address owner\n @return string ipfsHash\n @return uint256 amount necessary to stake\n @return bytes32[] SLONames array\n @return SLO[] SLO addresses array"
            },
            "functionSelector": "fbbf93a0",
            "id": 878,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDetails",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 821,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5379:2:2"
            },
            "returnParameters": {
              "id": 834,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 823,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 878,
                  "src": "5442:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 822,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5442:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 825,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 878,
                  "src": "5463:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 824,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5463:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 827,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 878,
                  "src": "5490:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 826,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5490:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 830,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 878,
                  "src": "5511:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 828,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "5511:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 829,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5511:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 833,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 878,
                  "src": "5541:12:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_SLO_$3124_$dyn_memory_ptr",
                    "typeString": "contract SLO[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 831,
                      "name": "SLO",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 3124,
                      "src": "5541:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLO_$3124",
                        "typeString": "contract SLO"
                      }
                    },
                    "id": 832,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5541:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_SLO_$3124_$dyn_storage_ptr",
                      "typeString": "contract SLO[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5428:135:2"
            },
            "scope": 909,
            "src": "5360:466:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 907,
              "nodeType": "Block",
              "src": "6157:198:2",
              "statements": [
                {
                  "assignments": [
                    889
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 889,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 907,
                      "src": "6167:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 888,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6167:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 895,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 892,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6209:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6209:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 890,
                        "name": "registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 565,
                        "src": "6182:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SLARegistry_$2993",
                          "typeString": "contract SLARegistry"
                        }
                      },
                      "id": 891,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "registerStakedSla",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2841,
                      "src": "6182:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) external returns (bool)"
                      }
                    },
                    "id": 894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6182:38:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6167:53:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 897,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 889,
                        "src": "6238:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "736c6120776173206e6f742072656769737465726564206173207374616b656420627920746865206d73672e73656e646572",
                        "id": 898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6247:52:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c6e925f21a14f09ac357e8a1a180a64f3d00f4ed281ffa9e5ad393c2a10f11da",
                          "typeString": "literal_string \"sla was not registered as staked by the msg.sender\""
                        },
                        "value": "sla was not registered as staked by the msg.sender"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c6e925f21a14f09ac357e8a1a180a64f3d00f4ed281ffa9e5ad393c2a10f11da",
                          "typeString": "literal_string \"sla was not registered as staked by the msg.sender\""
                        }
                      ],
                      "id": 896,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6230:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6230:70:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 900,
                  "nodeType": "ExpressionStatement",
                  "src": "6230:70:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 902,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 881,
                        "src": "6323:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 903,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 883,
                        "src": "6332:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 904,
                        "name": "_period",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 885,
                        "src": "6340:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 901,
                      "name": "_stakeTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1439,
                      "src": "6310:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,uint256)"
                      }
                    },
                    "id": 905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6310:38:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 906,
                  "nodeType": "ExpressionStatement",
                  "src": "6310:38:2"
                }
              ]
            },
            "documentation": {
              "id": 879,
              "nodeType": "StructuredDocumentation",
              "src": "5832:211:2",
              "text": "@dev increase the _amount staked per _token of _sla\n@param _amount 1. amount to be staked\n@param _token 2. address of the ERC to be staked\n@param _period 3. period id to stake"
            },
            "functionSelector": "cec534d6",
            "id": 908,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakeTokens",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 886,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 881,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 908,
                  "src": "6079:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 880,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6079:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 883,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 908,
                  "src": "6104:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 882,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6104:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 885,
                  "mutability": "mutable",
                  "name": "_period",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 908,
                  "src": "6128:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 884,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6128:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6069:80:2"
            },
            "returnParameters": {
              "id": 887,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6157:0:2"
            },
            "scope": 909,
            "src": "6049:306:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 910,
        "src": "446:5911:2"
      }
    ],
    "src": "32:6326:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.5",
  "updatedAt": "2021-01-28T20:43:50.394Z",
  "devdoc": {
    "details": "SLA is a service level agreement contract used for service downtime compensation",
    "events": {
      "SLICreated(uint256,uint256,uint256)": {
        "details": "event for SLI creation logging",
        "params": {
          "_periodId": "3. the id of the given period",
          "_timestamp": "1. the time the SLI has been registered",
          "_value": "2. the value of the SLI"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "addAllowedTokens(address)": {
        "details": "add a token to ve allowed for staking",
        "params": {
          "_token": "1. address of the new allowed token"
        }
      },
      "addNewPeriod(uint256,uint256)": {
        "details": "add a new period to the array",
        "params": {
          "_sla_period_end": "2. uint256 of the end of the period",
          "_sla_period_start": "1. uint256 of the start of the period"
        }
      },
      "claimCompensation(uint256)": {
        "details": "claim from delegators",
        "params": {
          "_period": "1. period id to claim"
        }
      },
      "claimReward(uint256)": {
        "details": "claim from validators",
        "params": {
          "_period": "1. period id to claim"
        }
      },
      "constructor": {
        "params": {
          "_SLONames": "2. array of the names of the service level objectives in bytes32",
          "_SLOs": "3. array of service level objective contract addressess service level objective breach",
          "_baseTokenAddress": "6. address of the Base Token to be unlocked for staking",
          "_ipfsHash": "5. string with the ipfs hash that contains extra information about the service level agreement",
          "_owner": "1. address of the owner of the service level agreement",
          "_sla_period_ends": "8. array with the values for the \"end\" of every period",
          "_sla_period_starts": "7. array with the values for the \"start\" of every period",
          "_stake": "4. uint of the amount required to stake when signing the service level agreement"
        }
      },
      "getDetails()": {
        "details": "external view function that returns all agreement information",
        "returns": {
          "_0": "address owner",
          "_1": "string ipfsHash",
          "_2": "uint256 amount necessary to stake",
          "_3": "bytes32[] SLONames array",
          "_4": "SLO[] SLO addresses array"
        }
      },
      "getPeriodLength()": {
        "details": "returns the lenght of the periods array"
      },
      "getSLI(bytes32)": {
        "details": "external function to get SLIs of certain _SLO",
        "params": {
          "_SLOName": "1. the name of the SLO in bytes32"
        },
        "returns": {
          "_0": "SLI[] array of SLIs associated to the input SLOs"
        }
      },
      "getTokenStake(address,uint256)": {
        "details": "returns the token stake according to index",
        "params": {
          "_index": "2. index of the TokenStake",
          "_owner": "1. owner of the stake"
        }
      },
      "getTokenStakeLength(address)": {
        "details": "returns the length of TokenStakes per user",
        "params": {
          "_owner": "1. owner of the stake"
        }
      },
      "getUserTotalValue(address,uint256)": {
        "details": "get the user total value staked",
        "params": {
          "_period": "2. period id to claim",
          "_user": "1. address of the user"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "registerSLI(bytes32,uint256,uint256)": {
        "details": "external function to register SLI's and check them against the SLO's",
        "params": {
          "_SLOName": "1. the name of the SLO in bytes32",
          "_periodId": "3. the id of the given period",
          "_value": "2. the value of the SLI to check"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "stakeTokens(uint256,address,uint256)": {
        "details": "increase the _amount staked per _token of _sla",
        "params": {
          "_amount": "1. amount to be staked",
          "_period": "3. period id to stake",
          "_token": "2. address of the ERC to be staked"
        }
      },
      "stakersCount()": {
        "details": "public view function that returns the total amount of stakers"
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdraw(address,uint256)": {
        "details": "withdraw staked tokens",
        "params": {
          "_period": "2. period id to withdraw",
          "_token": "1. address of the token"
        }
      },
      "withdrawAndStake(address,uint256,uint256)": {
        "details": "withdraw BaseToken and stake d Tokens",
        "params": {
          "_amount": "2. amount to withdraw",
          "_period": "3. period id to withdraw",
          "_token": "1. address of the token"
        }
      }
    },
    "stateVariables": {
      "SLIs": {
        "details": "mapping to get SLI structs from SLO names in bytes32"
      },
      "SLONames": {
        "details": "array storing the names of the SLO's of this agreement"
      },
      "SLOs": {
        "details": "mapping to get SLO addresses from SLO names in bytes32"
      },
      "blockNumberCreation": {
        "details": "block timestamp of SLA deployment"
      },
      "ipfsHash": {
        "details": "The ipfs hash that stores extra information about the agreement"
      },
      "registry": {
        "details": "The address of the registry contract"
      },
      "stake": {
        "details": "The required amount to stake when subscribing to the agreement"
      }
    },
    "title": "SLA",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}