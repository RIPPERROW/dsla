{
  "contractName": "SLA",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "bytes32[]",
          "name": "_SLONames",
          "type": "bytes32[]"
        },
        {
          "internalType": "contract SLO[]",
          "name": "_SLOs",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "_stake",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_ipfsHash",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_sliInterval",
          "type": "uint256"
        },
        {
          "internalType": "contract bDSLAToken",
          "name": "_tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "_sla_period_starts",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_sla_period_ends",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "period_index",
          "type": "uint256"
        }
      ],
      "name": "NewPeriodAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_periodId",
          "type": "uint256"
        }
      ],
      "name": "SLICreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "SLIs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "periodId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "SLONames",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "SLOs",
      "outputs": [
        {
          "internalType": "contract SLO",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "addAllowedTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_sla_period_start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_sla_period_end",
          "type": "uint256"
        }
      ],
      "name": "addNewPeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allowedTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowedTokensMapping",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bDSLA",
      "outputs": [
        {
          "internalType": "contract bDSLAToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_period",
          "type": "uint256"
        }
      ],
      "name": "claimCompensation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_period",
          "type": "uint256"
        }
      ],
      "name": "claimReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_periodId",
          "type": "uint256"
        }
      ],
      "name": "getPeriodData",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "periodStart",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "periodEnd",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getTokenStake",
      "outputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "stake",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "getTokenStakeLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_period",
          "type": "uint256"
        }
      ],
      "name": "getUserTotalValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ipfsHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "periods",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "sla_period_start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sla_period_end",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "claimed_reward",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "claimed",
          "type": "bool"
        },
        {
          "internalType": "enum Staking.Status",
          "name": "status",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "internalType": "contract SLARegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_period",
          "type": "uint256"
        }
      ],
      "name": "stakeTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakersCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "uniqueTokensStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userStakedTokens",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userStakedTokensIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "userStakes",
      "outputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "stake",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "validator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_period",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_period",
          "type": "uint256"
        }
      ],
      "name": "withdrawAndStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_SLOName",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_periodId",
          "type": "uint256"
        }
      ],
      "name": "registerSLI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_SLOName",
          "type": "bytes32"
        }
      ],
      "name": "getSLI",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "periodId",
              "type": "uint256"
            }
          ],
          "internalType": "struct SLA.SLI[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSliInterval",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDetails",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        },
        {
          "internalType": "contract SLO[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"_SLONames\",\"type\":\"bytes32[]\"},{\"internalType\":\"contract SLO[]\",\"name\":\"_SLOs\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_stake\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_ipfsHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_sliInterval\",\"type\":\"uint256\"},{\"internalType\":\"contract bDSLAToken\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_sla_period_starts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_sla_period_ends\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"period_index\",\"type\":\"uint256\"}],\"name\":\"NewPeriodAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_periodId\",\"type\":\"uint256\"}],\"name\":\"SLICreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"SLIs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"periodId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"SLONames\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"SLOs\",\"outputs\":[{\"internalType\":\"contract SLO\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"addAllowedTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_sla_period_start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sla_period_end\",\"type\":\"uint256\"}],\"name\":\"addNewPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allowedTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowedTokensMapping\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bDSLA\",\"outputs\":[{\"internalType\":\"contract bDSLAToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"claimCompensation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDetails\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"contract SLO[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_periodId\",\"type\":\"uint256\"}],\"name\":\"getPeriodData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"periodStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"periodEnd\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_SLOName\",\"type\":\"bytes32\"}],\"name\":\"getSLI\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"periodId\",\"type\":\"uint256\"}],\"internalType\":\"struct SLA.SLI[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSliInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getTokenStake\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getTokenStakeLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"getUserTotalValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ipfsHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"periods\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sla_period_start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sla_period_end\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimed_reward\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"claimed\",\"type\":\"bool\"},{\"internalType\":\"enum Staking.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_SLOName\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_periodId\",\"type\":\"uint256\"}],\"name\":\"registerSLI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract SLARegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"stakeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakersCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"uniqueTokensStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userStakedTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userStakedTokensIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userStakes\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"validator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"withdrawAndStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"SLA is a service level agreement contract used for service downtime compensation\",\"events\":{\"SLICreated(uint256,uint256,uint256)\":{\"details\":\"event for SLI creation logging\",\"params\":{\"_periodId\":\"3. the id of the given period\",\"_timestamp\":\"1. the time the SLI has been registered\",\"_value\":\"2. the value of the SLI\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_SLONames\":\"2. array of the names of the service level objectives in bytes32\",\"_SLOs\":\"3. array of service level objective contract addressess service level objective breach\",\"_ipfsHash\":\"5. string with the ipfs hash that contains extra information about the service level agreement\",\"_owner\":\"1. address of the owner of the service level agreement\",\"_sla_period_ends\":\"9. array with the values for the \\\"end\\\" of every period\",\"_sla_period_starts\":\"8. array with the values for the \\\"start\\\" of every period\",\"_sliInterval\":\"6. uint the interval in seconds between requesting a new SLI\",\"_stake\":\"4. uint of the amount required to stake when signing the service level agreement\",\"_tokenAddress\":\"7. address of the DSLA token to be unlocked for staking\"}},\"getDetails()\":{\"details\":\"external view function that returns all agreement information\",\"returns\":{\"_0\":\"address owner\",\"_1\":\"string ipfsHash\",\"_2\":\"uint256 amount necessary to stake\",\"_3\":\"bytes32[] SLONames array\",\"_4\":\"SLO[] SLO addresses array\"}},\"getSLI(bytes32)\":{\"details\":\"external function to get SLIs of certain _SLO\",\"params\":{\"_SLOName\":\"1. the name of the SLO in bytes32\"},\"returns\":{\"_0\":\"SLI[] array of SLIs associated to the input SLOs\"}},\"getSliInterval()\":{\"details\":\"external view function that returns the sliInterval value\",\"returns\":{\"_0\":\"uint256 value of the sliInterval\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"registerSLI(bytes32,uint256,uint256)\":{\"details\":\"external function to register SLI's and check them against the SLO's\",\"params\":{\"_SLOName\":\"1. the name of the SLO in bytes32\",\"_periodId\":\"3. the id of the given period\",\"_value\":\"2. the value of the SLI to check\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"stakersCount()\":{\"details\":\"public view function that returns the total amount of stakers\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"SLIs\":{\"details\":\"mapping to get SLI structs from SLO names in bytes32\"},\"SLONames\":{\"details\":\"array storing the names of the SLO's of this agreement\"},\"SLOs\":{\"details\":\"mapping to get SLO addresses from SLO names in bytes32\"},\"ipfsHash\":{\"details\":\"The ipfs hash that stores extra information about the agreement\"},\"registry\":{\"details\":\"The address of the registry contract\"},\"sliInterval\":{\"details\":\"The time between SLI registration\"},\"stake\":{\"details\":\"The required amount to stake when subscribing to the agreement\"}},\"title\":\"SLA\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLA/SLA.sol\":\"SLA\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/Messenger.sol\":{\"keccak256\":\"0x546389407ec1f02e2ea5babf8f2b7ae498b04c2c1a440a28752ecd0bff9992a9\",\"urls\":[\"bzz-raw://a3fabec3ba7252a3281afdcf02e89e54b8b3c43b5ef947acc544370fa16467a0\",\"dweb:/ipfs/QmeMcTysfLakapdSMwJ2WD6tefrMK2dwTB7jgWD6z1czG9\"]},\"/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLA/SLA.sol\":{\"keccak256\":\"0xf59eb98225619d18c78501db494189a840b4512e53d7f694ba80694b8ef7d1fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8986d05698711e70e52ca768d52b4c0d8eae9e41d2ac01e78b14a158ba861cc\",\"dweb:/ipfs/QmQhzaAojKQrF81KzhXVp5WCsrv6fVLGE7KRfxkPbEiorM\"]},\"/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLA/Staking.sol\":{\"keccak256\":\"0x1e46aa48eb00c8fb2164afaf442946a2b6d11e58f4bdc58cb1ed9f5d0589b193\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b896af3f7c20679e4861c81ee510face0cef06a1d37ad3d982b8c1a0ed504c7c\",\"dweb:/ipfs/QmaHBwm7xUnk41jgnzY2czrvLyFgcg97kqxZwSF66NMBuz\"]},\"/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLARegistry.sol\":{\"keccak256\":\"0x6523d9fb6ed17cd11fbeb6e8bece81d0fd2378864a4e16859ea96b7bc24867e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bb2f44fa4ca486fdd760df9c3c73c8efbc11f009eedf44d53a440c256f76ae6\",\"dweb:/ipfs/QmSsWnjPHgEuKSDFhnrxY3yLyfnvs1sqjzk8hJeuEHkwGA\"]},\"/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLO/SLO.sol\":{\"keccak256\":\"0x8b65ee21bcc99350f76e11724268ee0341d15d0fae3bccf0e79434504768b2f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d7e756abbe5b65cb7a8158be59b156936ba55a33b1ac524c679bf1981fbc981\",\"dweb:/ipfs/QmUk7gHqh4XJmXqmu8QWhqbUDy8Bev9ZP74XPjkopfVb6q\"]},\"/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/StringUtils.sol\":{\"keccak256\":\"0xed67dd7772841b09f0a00e6e191f42746f078e0907d38964c7d164ac32e0a7ef\",\"urls\":[\"bzz-raw://b5df848099351c5c9883d690eaaee2e79e1a31552d80f0fc8cd33902f9f01daa\",\"dweb:/ipfs/QmPDQp8CwK1bHyNkwBJPgNz2nqkvx6Fwh3jDrJoojwCB5u\"]},\"/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/bDSLA/bDSLAToken.sol\":{\"keccak256\":\"0x935ff32e24401d6a99292539dff3fefcb399a0591a5c56e79869e5cb71340f47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a3a65b7a9b74e296ae7a94a44318a28d5bc7776eab6eeeeafc2222b96951d8f\",\"dweb:/ipfs/QmcsSPLgWoTuhWWQLjjkS9UdW5N5V75TSRwoYkzY25WzCR\"]},\"@chainlink/contracts/src/v0.6/Chainlink.sol\":{\"keccak256\":\"0x7048bfd6e6fe4e60ea4af01ed44fc0494cec75df75c6b542a6f08ed34c66d39e\",\"urls\":[\"bzz-raw://37efc6a4665b537657283652d75919ec8dd3d48d85150b5285041bc9614fec11\",\"dweb:/ipfs/QmWKgeJEj222kNefTkauHwM5x58KTxSGgcbLseH9Fq8jed\"]},\"@chainlink/contracts/src/v0.6/ChainlinkClient.sol\":{\"keccak256\":\"0xd06166f7798c4c8cbd0e2dc642450c9bca39157c688ae95dbe079f666cc44dfa\",\"urls\":[\"bzz-raw://672af493da8e01492532d7ca8660362d015f317114e405aa55c85cff24aee31c\",\"dweb:/ipfs/QmNZdB2jVwwswrLFr83toTtHM5MPSugKeUdxrxfCJ4mP4K\"]},\"@chainlink/contracts/src/v0.6/interfaces/ChainlinkRequestInterface.sol\":{\"keccak256\":\"0x4b41b021bf58c429891ff291637de29be54741565105de82238dac9f6ecee374\",\"urls\":[\"bzz-raw://84681ff65b31b2e2c6977289661733c0f22409965b9057140f56f8a9ff185048\",\"dweb:/ipfs/QmS4TQJDSHQiKNwQ4LkSCVp7LjuRQwp6gem3271vtCwz9k\"]},\"@chainlink/contracts/src/v0.6/interfaces/ENSInterface.sol\":{\"keccak256\":\"0xf4998e886147b298eda28b4eacbdc90c58ba63ba475469651f2072e188dd5a64\",\"urls\":[\"bzz-raw://c1e2334294a816b7eda9de280e39b9463ebde2db8b242410eb991b2f623b47d4\",\"dweb:/ipfs/QmNY5bajahfFRmhBgcMVQ7712zHKxc6HkuN7LaiKtpjb7t\"]},\"@chainlink/contracts/src/v0.6/interfaces/LinkTokenInterface.sol\":{\"keccak256\":\"0xdbf46b45a4c9f38ba71a0391aed0e7b108854b619f292d907ae537228868bda6\",\"urls\":[\"bzz-raw://3ae40466809630c4731e2e3a697d6885727c577aaf260766c8a2f534ad3f6ee8\",\"dweb:/ipfs/QmTzpN5yP4Y5jvQ1ohfXFrce3sjzUiSChYJgZj9VvhVohG\"]},\"@chainlink/contracts/src/v0.6/interfaces/PointerInterface.sol\":{\"keccak256\":\"0x6458d82762d4f13c020a13efdbd9bf14500e147df707184a693aea91449c2f4f\",\"urls\":[\"bzz-raw://735950f3a544fc6ef2db92405597169bfb5fdb9df83623c0d99fd3d85de8690d\",\"dweb:/ipfs/QmZHxb5Qr7Kw9DHAg4VwEADue9ffNyyhbiyEZ15A5mANUN\"]},\"@chainlink/contracts/src/v0.6/vendor/BufferChainlink.sol\":{\"keccak256\":\"0xe4aa364f56414c4326ffe12c1121d591be6ad168afb42b24a823f6d76299dd63\",\"urls\":[\"bzz-raw://e3e91a0eddb6fc6c53acdfbd59771deff1678330128d3c98014c668763efb45e\",\"dweb:/ipfs/Qmbt5VNT2W2oCN44536JGNuHqAJdmYGqzEFcHvy8W1tAsY\"]},\"@chainlink/contracts/src/v0.6/vendor/CBORChainlink.sol\":{\"keccak256\":\"0xbb4d8257c1af348cac9828ee531428b148bb726517357fe6a80279ac45b658b5\",\"urls\":[\"bzz-raw://8c8c5da0358946437fac595591367066b8d6e5f58414c027a79a093e1f3241c1\",\"dweb:/ipfs/QmNQ5TPzaPEbj5kaX17YLuZEmhv8NGfoCrUVK3s6gQuHdA\"]},\"@chainlink/contracts/src/v0.6/vendor/ENSResolver.sol\":{\"keccak256\":\"0xdddea29d7407c1dbd1e130d885fc1a0934e98f0a7cc9f4d5bfd002bb2cfbcf82\",\"urls\":[\"bzz-raw://c4c764d69c47754d7b219fab558bf4be2a6444470ede7aa0ab1e446aea01dbda\",\"dweb:/ipfs/QmWp2CNUw9xt8ir2P3LhGHuydUsAXnyZ382U2BUjhoYPvy\"]},\"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":{\"keccak256\":\"0x5e6948bb332468d8ef0704b4259babc8aef7ce5969d5997c16db8ad806222a0a\",\"urls\":[\"bzz-raw://8e2bbda1e1168401d0105cc86bf5302000e8555ebb9b235cd68c148916a452e5\",\"dweb:/ipfs/QmbTjbpJr8VfdWfgBknbQov1MGkXXPMysb7eD8bobGAcBV\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x92f7900d382761c7faefeaced81c6b4f1aae909ed0551803bfe8f27101956360\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://407c0864143968542e5cf5aa7556916d2cf292b201e3dadb65662e9a3aa24187\",\"dweb:/ipfs/QmSnXzYAUaGLGr7uofRbgQraTJvatbjQLBPhyYiMd18oUJ\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3\",\"dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"@openzeppelin/contracts/presets/ERC20PresetMinterPauser.sol\":{\"keccak256\":\"0xe30213b0851987b0455057cdfb65660c05805cbb05b12c0d61b0ff7a99cc36cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c61711ecc3ad53890dded63c27909a315ba3053c553be29acaa239bc6a7a0cf\",\"dweb:/ipfs/QmQjriBzSyAYQTm4NfWpnnoH8RhZrayyXm2zvpeHkxQnAk\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x91e0bd6a6762d2a1700dab0849de8422611355100576c4beef1e80d82a4104a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73bbd77af0a8b07255d2ffa20728bcf13b116007c9ddac5d37046cfabb0e1e02\",\"dweb:/ipfs/QmRgZgWCWCSMTTaok6o4QvWA6MgB4goS8qpb3sN7bAvaZ9\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0x657b0d90be17331364211d74359df2a734fac864f6e88c80de7626fa33090ffb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09cca25fefa2354a424d55a97930c76b11dc50697ba62c85d7affc27a37e830c\",\"dweb:/ipfs/QmPTQBYXxQDSNmMKqwe4WnM8E7NwnpLnkFLSRH8hZRvrVK\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol\":{\"keccak256\":\"0xbab4a97af2a6810a8ffc187205dfb331284949ea5b30caa5b9052828853bb149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f53c98e31ed415c2a6f03d99809cd4f2f5fff92a13ee85022922a09df82ee459\",\"dweb:/ipfs/QmXiv4ysuQSRfoXqPpwA1QCreEnqfkrHDGyJTmifoni7dK\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017\",\"dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://774e78a9ff32792cc95db4d2ceaf3a7965bb7f0bea5e6cb7cff182b450d44b37\",\"dweb:/ipfs/QmRRMC4uj7eAcLW7chynA3sNEYULMFazdLwQHKHQPyzAbA\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xb2a11b236f073662f5a196995863f51c11d006bf7c3de158b316dfa1506c4b79\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8651649cf0b9efa18c3b01c030276fa320d41adbdc286833417e7f36e357b2f3\",\"dweb:/ipfs/QmafhM2Nd1aP43QVB1eRRZaqRXQKswNfQcWi8U8xjrxCfN\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0x5d1b1dcbc0396f44c1c8d554857f71e3187503bf1e54062bf9ec6782e21f3a08\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9aa7fa580393aab7ca3d9f606f5ab7434d51e1c0f3632a593fca82c80ef8cc4c\",\"dweb:/ipfs/QmRy84N7QfkwBM2AeR7UB5G1PPHdRLi6s1iyzAwCzevcHe\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200335338038062003353833981016040819052620000349162000796565b8282828b6000620000446200029e565b600080546001600160a01b0319166001600160a01b03831690811782556040519293509160008051602062003333833981519152908290a3508151835114620000aa5760405162461bcd60e51b8152600401620000a19062000928565b60405180910390fd5b600180546001600160a01b038087166001600160a01b031992831617808455600480548086019091557f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180548416918316919091179055825481166000908152600560205260408120805460ff191690941790935560028054918516919092161790555b83518110156200017c57620001738482815181106200014a57fe5b60200260200101518483815181106200015f57fe5b6020026020010151620002a260201b60201c565b6001016200012f565b50505050506005875110620001a55760405162461bcd60e51b8152600401620000a190620009f5565b8651885114620001c95760405162461bcd60e51b8152600401620000a190620009a6565b60005b87518110156200023d57878181518110620001e357fe5b6020026020010151601060008b8481518110620001fc57fe5b602090810291909101810151825281019190915260400160002080546001600160a01b0319166001600160a01b0392909216919091179055600101620001cc565b506200024989620003f1565b87516200025e9060129060208b019062000520565b50600c86905584516200027990600e90602088019062000570565b5050600f80546001600160a01b031916331790555050600d555062000abf9350505050565b3390565b620002ac620005e2565b828152602081018281526000608083018181526006805460018101825592819052845192027ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f810192835592517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4084015560408401517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4184015560608401517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d42909301805493151560ff199094169390931780845590518493909161ff0019166101008360028111156200039c57fe5b02179055505050620003c360016006805490506200049e60201b62001be31790919060201c565b6040517ff791e873e3b67fe74b29aeede7bcbbdaa59c4b64e542571183cd837aa56f6ac990600090a2505050565b620003fb6200029e565b6000546001600160a01b039081169116146200042b5760405162461bcd60e51b8152600401620000a19062000971565b6001600160a01b038116620004545760405162461bcd60e51b8152600401620000a190620008e2565b600080546040516001600160a01b03808516939216916000805160206200333383398151915291a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000620004e883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250620004f160201b60201c565b90505b92915050565b60008184841115620005185760405162461bcd60e51b8152600401620000a19190620008ad565b505050900390565b8280548282559060005260206000209081019282156200055e579160200282015b828111156200055e57825182559160200191906001019062000541565b506200056c9291506200061e565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620005b357805160ff19168380011785556200055e565b828001600101855582156200055e57918201828111156200055e57825182559160200191906001019062000541565b6040518060a00160405280600081526020016000815260200160008152602001600015158152602001600060028111156200061957fe5b905290565b5b808211156200056c57600081556001016200061f565b8051620004eb8162000aa6565b600082601f83011262000653578081fd5b81516200066a620006648262000a53565b62000a2c565b8181529150602080830190848101818402860182018710156200068c57600080fd5b60005b84811015620006ad578151845292820192908201906001016200068f565b505050505092915050565b600082601f830112620006c9578081fd5b8151620006da620006648262000a53565b818152915060208083019084810181840286018201871015620006fc57600080fd5b60005b84811015620006ad578151620007158162000aa6565b84529282019290820190600101620006ff565b600082601f83011262000739578081fd5b81516001600160401b038111156200074f578182fd5b62000764601f8201601f191660200162000a2c565b91508082528360208285010111156200077c57600080fd5b6200078f81602084016020860162000a73565b5092915050565b60008060008060008060008060006101208a8c031215620007b5578485fd5b620007c18b8b62000635565b60208b01519099506001600160401b0380821115620007de578687fd5b620007ec8d838e0162000642565b995060408c015191508082111562000802578687fd5b620008108d838e01620006b8565b985060608c0151975060808c01519150808211156200082d578687fd5b6200083b8d838e0162000728565b965060a08c01519550620008538d60c08e0162000635565b945060e08c015191508082111562000869578384fd5b620008778d838e0162000642565b93506101008c01519150808211156200088e578283fd5b506200089d8c828d0162000642565b9150509295985092959850929598565b6000602082528251806020840152620008ce81604085016020870162000a73565b601f01601f19169190910160400192915050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526029908201527f506c6561736520636865636b2074686520706172616d73206f6620796f757220604082015268706572696f6473202160b81b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602f908201527f5f534c4f4e616d657320616e64205f534c4f732073686f756c6420686176652060408201526e0e8d0ca40e6c2daca40d8cadccee8d608b1b606082015260800190565b60208082526017908201527f6d617820616d6f756e74206f6620534c4f732069732035000000000000000000604082015260600190565b6040518181016001600160401b038111828210171562000a4b57600080fd5b604052919050565b60006001600160401b0382111562000a69578081fd5b5060209081020190565b60005b8381101562000a9057818101518382015260200162000a76565b8381111562000aa0576000848401525b50505050565b6001600160a01b038116811462000abc57600080fd5b50565b6128648062000acf6000396000f3fe608060405234801561001057600080fd5b50600436106101dc5760003560e01c806394199c6111610105578063ea4a11041161009d578063ea4a1104146103dd578063ec04de4814610401578063f10bd77214610414578063f2fde38b14610427578063f34ed40d1461043a578063f3fef3a31461044d578063fbbf93a014610460578063fc875ece14610479578063fd5e6dd11461049a576101dc565b806394199c6114610337578063a2e80c5e14610359578063ae169a5014610361578063b0227b4714610374578063b5d5b5fa14610387578063b83e02341461039a578063c623674f146103ad578063cec534d6146103c2578063e7ab816a146103d5576101dc565b806357ac94f01161017857806357ac94f0146102b55780635e5f2e26146102d65780635f4efaba146102e9578063715018a6146102f157806375fdf2a9146102f95780637b1039991461030c578063817b1cd214610314578063869c39251461031c5780638da5cb5b1461032f576101dc565b806302e8b893146101e15780630e1fcf341461020a578063105237cf1461021f578063171e44ea1461023f5780631934d0e8146102525780632eac9787146102655780633a4b66f1146102855780633a5381b51461028d57806353e85fd5146102a2575b600080fd5b6101f46101ef3660046121e2565b6104ad565b60405161020191906123da565b60405180910390f35b61021d6102183660046121fa565b61053e565b005b61023261022d36600461210f565b61058a565b6040516102019190612433565b61021d61024d36600461210f565b61059f565b61023261026036600461212b565b610674565b61027861027336600461212b565b610694565b604051610201919061243e565b6102786106b1565b6102956106b7565b60405161020191906122e4565b61021d6102b03660046121e2565b6106c6565b6102c86102c3366004612163565b610940565b60405161020192919061231c565b6102956102e43660046121e2565b6109c0565b6102956109e7565b61021d6109f6565b61021d61030736600461218e565b610a75565b610295610dd5565b610278610de4565b61021d61032a36600461221b565b610dea565b610295611048565b61034a6103453660046121fa565b611057565b604051610201939291906127c9565b610278611096565b61021d61036f3660046121e2565b61109c565b6102956103823660046121e2565b611276565b6102c8610395366004612163565b611291565b6102786103a836600461210f565b6112d4565b6103b56112e6565b6040516102019190612447565b61021d6103d0366004612262565b611374565b610278611564565b6103f06103eb3660046121e2565b61156a565b6040516102019594939291906127df565b61027861040f36600461210f565b6115ad565b610278610422366004612163565b6115c8565b61021d61043536600461210f565b611676565b6102786104483660046121e2565b61172c565b61021d61045b366004612163565b61174a565b6104686119bc565b604051610201959493929190612335565b61048c6104873660046121e2565b611b8c565b6040516102019291906127bb565b6102956104a83660046121e2565b611bd6565b606060116000838152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561053257838290600052602060002090600302016040518060600160405290816000820154815260200160018201548152602001600282015481525050815260200190600101906104e2565b5050505090505b919050565b610546611c25565b6000546001600160a01b0390811691161461057c5760405162461bcd60e51b8152600401610573906126ca565b60405180910390fd5b6105868282611c29565b5050565b60056020526000908152604090205460ff1681565b6105a7611c25565b6000546001600160a01b039081169116146105d45760405162461bcd60e51b8152600401610573906126ca565b6001600160a01b03811660009081526005602052604090205460ff161561060d5760405162461bcd60e51b8152600401610573906125d8565b6004805460018181019092557f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b039093166001600160a01b031990931683179055600091825260056020526040909120805460ff19169091179055565b600a60209081526000928352604080842090915290825290205460ff1681565b600960209081526000928352604080842090915290825290205481565b600c5481565b6002546001600160a01b031681565b80600681815481106106d457fe5b90600052602060002090600602016000015442101580156107135750600681815481106106fd57fe5b9060005260206000209060060201600101544211155b61071c57600080fd5b6002546001600160a01b03163314156107475760405162461bcd60e51b815260040161057390612572565b60026006838154811061075657fe5b906000526020600020906006020160030160019054906101000a900460ff16600281111561078057fe5b1461079d5760405162461bcd60e51b815260040161057390612487565b600682815481106107aa57fe5b6000918252602080832033845260056006909302019190910190526040902054156107e75760405162461bcd60e51b81526004016105739061275e565b60006107f333846115c8565b9050600061080d600a610807846003611d63565b90611d9d565b600b5490915061081d9083611be3565b600b81905550816006858154811061083157fe5b600091825260208083203380855260069390930201600501905260409182902092909255600154905163a9059cbb60e01b81526001600160a01b039091169163a9059cbb916108859190869060040161231c565b602060405180830381600087803b15801561089f57600080fd5b505af11580156108b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d791906121c2565b50600154604051630852cd8d60e31b81526001600160a01b03909116906342966c689061090890849060040161243e565b600060405180830381600087803b15801561092257600080fd5b505af1158015610936573d6000803e3d6000fd5b5050505050505050565b6001600160a01b038216600090815260086020526040812080548291908490811061096757fe5b600091825260208083206002909202909101546001600160a01b038781168452600890925260409092208054919092169190859081106109a357fe5b906000526020600020906002020160010154915091509250929050565b600481815481106109cd57fe5b6000918252602090912001546001600160a01b0316905081565b6001546001600160a01b031681565b6109fe611c25565b6000546001600160a01b03908116911614610a2b5760405162461bcd60e51b8152600401610573906126ca565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6002546001600160a01b0316331415610aa05760405162461bcd60e51b815260040161057390612572565b6001600160a01b038316600090815260056020526040902054839060ff161515600114610adf5760405162461bcd60e51b81526004016105739061269c565b600060068381548110610aee57fe5b600091825260208083206001600160a01b03891684526004600690930201919091018152604080832033845290915290205411610b3d5760405162461bcd60e51b8152600401610573906125a1565b6040516323b872dd60e01b81526001600160a01b038516906323b872dd90610b6d903390309088906004016122f8565b602060405180830381600087803b158015610b8757600080fd5b505af1158015610b9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bbf91906121c2565b50610c098360068481548110610bd157fe5b600091825260208083206001600160a01b038a1684526004600690930201919091018152604080832033845290915290205490611ddf565b60068381548110610c1657fe5b600091825260208083206001600160a01b038916845260046006909302019190910181526040808320338452909152902055600b54610c559084611ddf565b600b55610c628484611e04565b600060068381548110610c7157fe5b600091825260208083206001600160a01b0389168452600692830201600401815260408084203385529091528220546003548254919450610cd892909187908110610cb857fe5b906000526020600020906006020160020154611d9d90919063ffffffff16565b9050600060068581548110610ce957fe5b600091825260208083206001600160a01b038b16845260046006909302019190910181526040808320338452909152902055600b54610d289083611be3565b600b556001546001600160a01b031663a9059cbb33610d478585611be3565b6040518363ffffffff1660e01b8152600401610d6492919061231c565b602060405180830381600087803b158015610d7e57600080fd5b505af1158015610d92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db691906121c2565b50600154610dcd906001600160a01b031683611f2f565b505050505050565b600f546001600160a01b031681565b600b5481565b600f60009054906101000a90046001600160a01b03166001600160a01b0316633cb747bf6040518163ffffffff1660e01b815260040160206040518083038186803b158015610e3857600080fd5b505afa158015610e4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e709190612246565b6001600160a01b0316336001600160a01b031614610ea05760405162461bcd60e51b81526004016105739061252d565b600083815260116020908152604080832081516060810183524280825281850188815282850188815284546001818101875595895296909720925160039096029092019485559051918401919091559251600290920191909155517fc95987c1992805ee34bdc915e017cceae36ba1c156b9911fa7e691e6435eb46e91610f2a91859085906127c9565b60405180910390a16000838152601060205260409081902054905163868d08f760e01b81526001600160a01b039091169063868d08f790610f6f90859060040161243e565b60206040518083038186803b158015610f8757600080fd5b505afa158015610f9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fbf91906121c2565b61100557600260068281548110610fd257fe5b60009182526020909120600360069092020101805461ff001916610100836002811115610ffb57fe5b0217905550611043565b60016006828154811061101457fe5b60009182526020909120600360069092020101805461ff00191661010083600281111561103d57fe5b02179055505b505050565b6000546001600160a01b031690565b6011602052816000526040600020818154811061107057fe5b600091825260209091206003909102018054600182015460029092015490935090915083565b60035490565b80600681815481106110aa57fe5b90600052602060002090600602016000015442101580156110e95750600681815481106110d357fe5b9060005260206000209060060201600101544211155b6110f257600080fd5b6002546001600160a01b0316331461111c5760405162461bcd60e51b81526004016105739061272b565b60016006838154811061112b57fe5b906000526020600020906006020160030160019054906101000a900460ff16600281111561115557fe5b146111725760405162461bcd60e51b81526004016105739061245a565b6006828154811061117f57fe5b600091825260209091206003600690920201015460ff16156111b35760405162461bcd60e51b815260040161057390612605565b600654600b546000916111c69190611d9d565b905060006111da600a610807846003611d63565b600b549091506111ea9083611be3565b600b8190555081600685815481106111fe57fe5b90600052602060002090600602016002018190555060016006858154811061122257fe5b60009182526020909120600690910201600301805460ff191691151591909117905560015460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb90610885903390869060040161231c565b6010602052600090815260409020546001600160a01b031681565b600860205281600052604060002081815481106112aa57fe5b6000918252602090912060029091020180546001909101546001600160a01b039091169250905082565b60076020526000908152604090205481565b600e805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561136c5780601f106113415761010080835404028352916020019161136c565b820191906000526020600020905b81548152906001019060200180831161134f57829003601f168201915b505050505081565b6001600160a01b038216600090815260056020526040902054829060ff1615156001146113b35760405162461bcd60e51b81526004016105739061269c565b600084116113d35760405162461bcd60e51b8152600401610573906126ff565b6113de338484611f8f565b6040516323b872dd60e01b81526001600160a01b038416906323b872dd9061140e903390309089906004016122f8565b602060405180830381600087803b15801561142857600080fd5b505af115801561143c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061146091906121c2565b506114aa846006848154811061147257fe5b600091825260208083206001600160a01b03891684526004600690930201919091018152604080832033845290915290205490611ddf565b600683815481106114b757fe5b600091825260208083206001600160a01b038816845260046006909302019190910181526040808320338452909152902055600b546114f69085611ddf565b600b55336000908152600760205260409020546001141561155457600380546001810182556000919091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b031916331790555b61155e8385611e04565b50505050565b600d5490565b6006818154811061157757fe5b60009182526020909120600690910201805460018201546002830154600390930154919350919060ff8082169161010090041685565b6001600160a01b031660009081526008602052604090205490565b6001600160a01b03821660009081526007602052604081205481901561166d5760005b60045481101561166b576116616006858154811061160557fe5b906000526020600020906006020160040160006004848154811061162557fe5b60009182526020808320909101546001600160a01b0390811684528382019490945260409283018220938a168252929092529020548390611ddf565b91506001016115eb565b505b90505b92915050565b61167e611c25565b6000546001600160a01b039081169116146116ab5760405162461bcd60e51b8152600401610573906126ca565b6001600160a01b0381166116d15760405162461bcd60e51b8152600401610573906124b0565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6012818154811061173957fe5b600091825260209091200154905081565b6002546001600160a01b03163314156117755760405162461bcd60e51b815260040161057390612572565b6001600160a01b038216600090815260056020526040902054829060ff1615156001146117b45760405162461bcd60e51b81526004016105739061269c565b6000600683815481106117c357fe5b600091825260208083206001600160a01b038816845260046006909302019190910181526040808320338452909152902054116118125760405162461bcd60e51b8152600401610573906125a1565b60006006838154811061182157fe5b600091825260208083206001600160a01b038816845260069283020160040181526040808420338552909152822054600354825491945061186892909187908110610cb857fe5b905060006006858154811061187957fe5b600091825260208083206001600160a01b038a16845260046006909302019190910181526040808320338452909152902055600b546118b89083611be3565b600b556001600160a01b03851663a9059cbb336118d58585611be3565b6040518363ffffffff1660e01b81526004016118f292919061231c565b602060405180830381600087803b15801561190c57600080fd5b505af1158015611920573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061194491906121c2565b5033600090815260076020526040902054611960906001611be3565b3360009081526007602052604090208190556119ab57600061198133612018565b90506003818154811061199057fe5b600091825260209091200180546001600160a01b0319169055505b6119b58583611f2f565b5050505050565b600060606000606080606060128054905067ffffffffffffffff811180156119e357600080fd5b50604051908082528060200260200182016040528015611a0d578160200160208202803683370190505b50905060005b601254811015611a87576010600060128381548110611a2e57fe5b9060005260206000200154815260200190815260200160002060009054906101000a90046001600160a01b0316828281518110611a6757fe5b6001600160a01b0390921660209283029190910190910152600101611a13565b50611a90611048565b600c54600e805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292939260129287928691830182828015611b215780601f10611af657610100808354040283529160200191611b21565b820191906000526020600020905b815481529060010190602001808311611b0457829003601f168201915b5050505050935081805480602002602001604051908101604052809291908181526020018280548015611b7357602002820191906000526020600020905b815481526020019060010190808311611b5f575b5050505050915095509550955095509550509091929394565b60008060068381548110611b9c57fe5b90600052602060002090600602016000015460068481548110611bbb57fe5b90600052602060002090600602016001015491509150915091565b600381815481106109cd57fe5b600061166d83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612071565b3390565b611c316120d4565b828152602081018281526000608083018181526006805460018101825592819052845192027ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f810192835592517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4084015560408401517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4184015560608401517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d42909301805493151560ff199094169390931780845590518493909161ff001916610100836002811115611d2057fe5b021790555050600654611d3591506001611be3565b6040517ff791e873e3b67fe74b29aeede7bcbbdaa59c4b64e542571183cd837aa56f6ac990600090a2505050565b600082611d7257506000611670565b82820282848281611d7f57fe5b041461166d5760405162461bcd60e51b81526004016105739061265b565b600061166d83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061209d565b60008282018381101561166d5760405162461bcd60e51b8152600401610573906124f6565b336000908152600a602090815260408083206001600160a01b038616845290915290205460ff16611ecf57336000818152600860209081526040808320815180830183526001600160a01b03888116808352828601898152845460018082018755868a52888a209551600290920290950180546001600160a01b0319169190941617835551918301919091558686529154600985528386208387528552838620600019919091019055948452600a83528184209084529091529020805460ff19169091179055610586565b3360008181526009602090815260408083206001600160a01b038716845282528083205493835260089091529020805461155e91849184908110611f0f57fe5b906000526020600020906002020160010154611ddf90919063ffffffff16565b3360008181526009602090815260408083206001600160a01b038716845282528083205493835260089091529020805461155e91849184908110611f6f57fe5b906000526020600020906002020160010154611be390919063ffffffff16565b600060068281548110611f9e57fe5b600091825260208083206001600160a01b0387811685526006939093020160040181526040808420928816845291905290205411611043576001600160a01b038316600090815260076020526040902054611ffa906001611ddf565b6001600160a01b038416600090815260076020526040902055505050565b6000805b60035481101561206757826001600160a01b03166003828154811061203d57fe5b6000918252602090912001546001600160a01b0316141561205f579050610539565b60010161201c565b5060001992915050565b600081848411156120955760405162461bcd60e51b81526004016105739190612447565b505050900390565b600081836120be5760405162461bcd60e51b81526004016105739190612447565b5060008385816120ca57fe5b0495945050505050565b6040518060a001604052806000815260200160008152602001600081526020016000151581526020016000600281111561210a57fe5b905290565b600060208284031215612120578081fd5b813561166d81612816565b6000806040838503121561213d578081fd5b823561214881612816565b9150602083013561215881612816565b809150509250929050565b60008060408385031215612175578182fd5b823561218081612816565b946020939093013593505050565b6000806000606084860312156121a2578081fd5b83356121ad81612816565b95602085013595506040909401359392505050565b6000602082840312156121d3578081fd5b8151801515811461166d578182fd5b6000602082840312156121f3578081fd5b5035919050565b6000806040838503121561220c578182fd5b50508035926020909101359150565b60008060006060848603121561222f578283fd5b505081359360208301359350604090920135919050565b600060208284031215612257578081fd5b815161166d81612816565b600080600060608486031215612276578283fd5b83359250602084013561228881612816565b929592945050506040919091013590565b60008151808452815b818110156122be576020818501810151868301820152016122a2565b818111156122cf5782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b600060018060a01b038088168352602060a08185015261235860a0850189612299565b604085018890528481036060860152865180825282880191830190855b8181101561239157835183529284019291840191600101612375565b505085810360808701528651808252908301915082870190855b818110156123c95782518616845292840192918401916001016123ab565b50919b9a5050505050505050505050565b602080825282518282018190526000919060409081850190868401855b8281101561242657815180518552868101518786015285015185850152606090930192908501906001016123f7565b5091979650505050505050565b901515815260200190565b90815260200190565b60006020825261166d6020830184612299565b602080825260139082015272534c41206e6f7420726573706563746564202160681b604082015260600190565b6020808252600f908201526e534c4120726573706563746564202160881b604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b60208082526025908201527f4f6e6c79204d657373656e6765722063616e2063616c6c20746869732066756e6040820152643a31b4b7b760d91b606082015260800190565b602080825260159082015274596f752061726520612076616c696461746f72202160581b604082015260600190565b6020808252601b908201527f7374616b696e672062616c616e63652063616e6e6f7420626520300000000000604082015260600190565b6020808252601390820152721d1bdad95b88185b1c9958591e481859191959606a1b604082015260600190565b60208082526036908201527f596f75206861766520616c726561647920636c61696d656420796f75722072656040820152757761726420666f72207468697320706572696f64202160501b606082015260800190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6040820152607760f81b606082015260800190565b6020808252601490820152731d1bdad95b881a5cc81b9bdd08185b1b1bddd95960621b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601290820152710616d6f756e742063616e6e6f7420626520360741b604082015260600190565b602080825260199082015278596f7520617265206e6f7420612076616c696461746f72202160381b604082015260600190565b6020808252603c908201527f596f75206861766520616c726561647920636c61696d656420796f757220636f60408201527f6d70656e736174696f6e20666f72207468697320706572696f64202100000000606082015260800190565b918252602082015260400190565b9283526020830191909152604082015260600190565b8581526020810185905260408101849052821515606082015260a081016003831061280657fe5b8260808301529695505050505050565b6001600160a01b038116811461282b57600080fd5b5056fea2646970667358221220cbf7b6a04f1899541ef9698cb649107f7d35419959d0786db9b34b81cf41b17964736f6c634300060c00338be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101dc5760003560e01c806394199c6111610105578063ea4a11041161009d578063ea4a1104146103dd578063ec04de4814610401578063f10bd77214610414578063f2fde38b14610427578063f34ed40d1461043a578063f3fef3a31461044d578063fbbf93a014610460578063fc875ece14610479578063fd5e6dd11461049a576101dc565b806394199c6114610337578063a2e80c5e14610359578063ae169a5014610361578063b0227b4714610374578063b5d5b5fa14610387578063b83e02341461039a578063c623674f146103ad578063cec534d6146103c2578063e7ab816a146103d5576101dc565b806357ac94f01161017857806357ac94f0146102b55780635e5f2e26146102d65780635f4efaba146102e9578063715018a6146102f157806375fdf2a9146102f95780637b1039991461030c578063817b1cd214610314578063869c39251461031c5780638da5cb5b1461032f576101dc565b806302e8b893146101e15780630e1fcf341461020a578063105237cf1461021f578063171e44ea1461023f5780631934d0e8146102525780632eac9787146102655780633a4b66f1146102855780633a5381b51461028d57806353e85fd5146102a2575b600080fd5b6101f46101ef3660046121e2565b6104ad565b60405161020191906123da565b60405180910390f35b61021d6102183660046121fa565b61053e565b005b61023261022d36600461210f565b61058a565b6040516102019190612433565b61021d61024d36600461210f565b61059f565b61023261026036600461212b565b610674565b61027861027336600461212b565b610694565b604051610201919061243e565b6102786106b1565b6102956106b7565b60405161020191906122e4565b61021d6102b03660046121e2565b6106c6565b6102c86102c3366004612163565b610940565b60405161020192919061231c565b6102956102e43660046121e2565b6109c0565b6102956109e7565b61021d6109f6565b61021d61030736600461218e565b610a75565b610295610dd5565b610278610de4565b61021d61032a36600461221b565b610dea565b610295611048565b61034a6103453660046121fa565b611057565b604051610201939291906127c9565b610278611096565b61021d61036f3660046121e2565b61109c565b6102956103823660046121e2565b611276565b6102c8610395366004612163565b611291565b6102786103a836600461210f565b6112d4565b6103b56112e6565b6040516102019190612447565b61021d6103d0366004612262565b611374565b610278611564565b6103f06103eb3660046121e2565b61156a565b6040516102019594939291906127df565b61027861040f36600461210f565b6115ad565b610278610422366004612163565b6115c8565b61021d61043536600461210f565b611676565b6102786104483660046121e2565b61172c565b61021d61045b366004612163565b61174a565b6104686119bc565b604051610201959493929190612335565b61048c6104873660046121e2565b611b8c565b6040516102019291906127bb565b6102956104a83660046121e2565b611bd6565b606060116000838152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561053257838290600052602060002090600302016040518060600160405290816000820154815260200160018201548152602001600282015481525050815260200190600101906104e2565b5050505090505b919050565b610546611c25565b6000546001600160a01b0390811691161461057c5760405162461bcd60e51b8152600401610573906126ca565b60405180910390fd5b6105868282611c29565b5050565b60056020526000908152604090205460ff1681565b6105a7611c25565b6000546001600160a01b039081169116146105d45760405162461bcd60e51b8152600401610573906126ca565b6001600160a01b03811660009081526005602052604090205460ff161561060d5760405162461bcd60e51b8152600401610573906125d8565b6004805460018181019092557f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b039093166001600160a01b031990931683179055600091825260056020526040909120805460ff19169091179055565b600a60209081526000928352604080842090915290825290205460ff1681565b600960209081526000928352604080842090915290825290205481565b600c5481565b6002546001600160a01b031681565b80600681815481106106d457fe5b90600052602060002090600602016000015442101580156107135750600681815481106106fd57fe5b9060005260206000209060060201600101544211155b61071c57600080fd5b6002546001600160a01b03163314156107475760405162461bcd60e51b815260040161057390612572565b60026006838154811061075657fe5b906000526020600020906006020160030160019054906101000a900460ff16600281111561078057fe5b1461079d5760405162461bcd60e51b815260040161057390612487565b600682815481106107aa57fe5b6000918252602080832033845260056006909302019190910190526040902054156107e75760405162461bcd60e51b81526004016105739061275e565b60006107f333846115c8565b9050600061080d600a610807846003611d63565b90611d9d565b600b5490915061081d9083611be3565b600b81905550816006858154811061083157fe5b600091825260208083203380855260069390930201600501905260409182902092909255600154905163a9059cbb60e01b81526001600160a01b039091169163a9059cbb916108859190869060040161231c565b602060405180830381600087803b15801561089f57600080fd5b505af11580156108b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d791906121c2565b50600154604051630852cd8d60e31b81526001600160a01b03909116906342966c689061090890849060040161243e565b600060405180830381600087803b15801561092257600080fd5b505af1158015610936573d6000803e3d6000fd5b5050505050505050565b6001600160a01b038216600090815260086020526040812080548291908490811061096757fe5b600091825260208083206002909202909101546001600160a01b038781168452600890925260409092208054919092169190859081106109a357fe5b906000526020600020906002020160010154915091509250929050565b600481815481106109cd57fe5b6000918252602090912001546001600160a01b0316905081565b6001546001600160a01b031681565b6109fe611c25565b6000546001600160a01b03908116911614610a2b5760405162461bcd60e51b8152600401610573906126ca565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6002546001600160a01b0316331415610aa05760405162461bcd60e51b815260040161057390612572565b6001600160a01b038316600090815260056020526040902054839060ff161515600114610adf5760405162461bcd60e51b81526004016105739061269c565b600060068381548110610aee57fe5b600091825260208083206001600160a01b03891684526004600690930201919091018152604080832033845290915290205411610b3d5760405162461bcd60e51b8152600401610573906125a1565b6040516323b872dd60e01b81526001600160a01b038516906323b872dd90610b6d903390309088906004016122f8565b602060405180830381600087803b158015610b8757600080fd5b505af1158015610b9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bbf91906121c2565b50610c098360068481548110610bd157fe5b600091825260208083206001600160a01b038a1684526004600690930201919091018152604080832033845290915290205490611ddf565b60068381548110610c1657fe5b600091825260208083206001600160a01b038916845260046006909302019190910181526040808320338452909152902055600b54610c559084611ddf565b600b55610c628484611e04565b600060068381548110610c7157fe5b600091825260208083206001600160a01b0389168452600692830201600401815260408084203385529091528220546003548254919450610cd892909187908110610cb857fe5b906000526020600020906006020160020154611d9d90919063ffffffff16565b9050600060068581548110610ce957fe5b600091825260208083206001600160a01b038b16845260046006909302019190910181526040808320338452909152902055600b54610d289083611be3565b600b556001546001600160a01b031663a9059cbb33610d478585611be3565b6040518363ffffffff1660e01b8152600401610d6492919061231c565b602060405180830381600087803b158015610d7e57600080fd5b505af1158015610d92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db691906121c2565b50600154610dcd906001600160a01b031683611f2f565b505050505050565b600f546001600160a01b031681565b600b5481565b600f60009054906101000a90046001600160a01b03166001600160a01b0316633cb747bf6040518163ffffffff1660e01b815260040160206040518083038186803b158015610e3857600080fd5b505afa158015610e4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e709190612246565b6001600160a01b0316336001600160a01b031614610ea05760405162461bcd60e51b81526004016105739061252d565b600083815260116020908152604080832081516060810183524280825281850188815282850188815284546001818101875595895296909720925160039096029092019485559051918401919091559251600290920191909155517fc95987c1992805ee34bdc915e017cceae36ba1c156b9911fa7e691e6435eb46e91610f2a91859085906127c9565b60405180910390a16000838152601060205260409081902054905163868d08f760e01b81526001600160a01b039091169063868d08f790610f6f90859060040161243e565b60206040518083038186803b158015610f8757600080fd5b505afa158015610f9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fbf91906121c2565b61100557600260068281548110610fd257fe5b60009182526020909120600360069092020101805461ff001916610100836002811115610ffb57fe5b0217905550611043565b60016006828154811061101457fe5b60009182526020909120600360069092020101805461ff00191661010083600281111561103d57fe5b02179055505b505050565b6000546001600160a01b031690565b6011602052816000526040600020818154811061107057fe5b600091825260209091206003909102018054600182015460029092015490935090915083565b60035490565b80600681815481106110aa57fe5b90600052602060002090600602016000015442101580156110e95750600681815481106110d357fe5b9060005260206000209060060201600101544211155b6110f257600080fd5b6002546001600160a01b0316331461111c5760405162461bcd60e51b81526004016105739061272b565b60016006838154811061112b57fe5b906000526020600020906006020160030160019054906101000a900460ff16600281111561115557fe5b146111725760405162461bcd60e51b81526004016105739061245a565b6006828154811061117f57fe5b600091825260209091206003600690920201015460ff16156111b35760405162461bcd60e51b815260040161057390612605565b600654600b546000916111c69190611d9d565b905060006111da600a610807846003611d63565b600b549091506111ea9083611be3565b600b8190555081600685815481106111fe57fe5b90600052602060002090600602016002018190555060016006858154811061122257fe5b60009182526020909120600690910201600301805460ff191691151591909117905560015460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb90610885903390869060040161231c565b6010602052600090815260409020546001600160a01b031681565b600860205281600052604060002081815481106112aa57fe5b6000918252602090912060029091020180546001909101546001600160a01b039091169250905082565b60076020526000908152604090205481565b600e805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561136c5780601f106113415761010080835404028352916020019161136c565b820191906000526020600020905b81548152906001019060200180831161134f57829003601f168201915b505050505081565b6001600160a01b038216600090815260056020526040902054829060ff1615156001146113b35760405162461bcd60e51b81526004016105739061269c565b600084116113d35760405162461bcd60e51b8152600401610573906126ff565b6113de338484611f8f565b6040516323b872dd60e01b81526001600160a01b038416906323b872dd9061140e903390309089906004016122f8565b602060405180830381600087803b15801561142857600080fd5b505af115801561143c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061146091906121c2565b506114aa846006848154811061147257fe5b600091825260208083206001600160a01b03891684526004600690930201919091018152604080832033845290915290205490611ddf565b600683815481106114b757fe5b600091825260208083206001600160a01b038816845260046006909302019190910181526040808320338452909152902055600b546114f69085611ddf565b600b55336000908152600760205260409020546001141561155457600380546001810182556000919091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b031916331790555b61155e8385611e04565b50505050565b600d5490565b6006818154811061157757fe5b60009182526020909120600690910201805460018201546002830154600390930154919350919060ff8082169161010090041685565b6001600160a01b031660009081526008602052604090205490565b6001600160a01b03821660009081526007602052604081205481901561166d5760005b60045481101561166b576116616006858154811061160557fe5b906000526020600020906006020160040160006004848154811061162557fe5b60009182526020808320909101546001600160a01b0390811684528382019490945260409283018220938a168252929092529020548390611ddf565b91506001016115eb565b505b90505b92915050565b61167e611c25565b6000546001600160a01b039081169116146116ab5760405162461bcd60e51b8152600401610573906126ca565b6001600160a01b0381166116d15760405162461bcd60e51b8152600401610573906124b0565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6012818154811061173957fe5b600091825260209091200154905081565b6002546001600160a01b03163314156117755760405162461bcd60e51b815260040161057390612572565b6001600160a01b038216600090815260056020526040902054829060ff1615156001146117b45760405162461bcd60e51b81526004016105739061269c565b6000600683815481106117c357fe5b600091825260208083206001600160a01b038816845260046006909302019190910181526040808320338452909152902054116118125760405162461bcd60e51b8152600401610573906125a1565b60006006838154811061182157fe5b600091825260208083206001600160a01b038816845260069283020160040181526040808420338552909152822054600354825491945061186892909187908110610cb857fe5b905060006006858154811061187957fe5b600091825260208083206001600160a01b038a16845260046006909302019190910181526040808320338452909152902055600b546118b89083611be3565b600b556001600160a01b03851663a9059cbb336118d58585611be3565b6040518363ffffffff1660e01b81526004016118f292919061231c565b602060405180830381600087803b15801561190c57600080fd5b505af1158015611920573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061194491906121c2565b5033600090815260076020526040902054611960906001611be3565b3360009081526007602052604090208190556119ab57600061198133612018565b90506003818154811061199057fe5b600091825260209091200180546001600160a01b0319169055505b6119b58583611f2f565b5050505050565b600060606000606080606060128054905067ffffffffffffffff811180156119e357600080fd5b50604051908082528060200260200182016040528015611a0d578160200160208202803683370190505b50905060005b601254811015611a87576010600060128381548110611a2e57fe5b9060005260206000200154815260200190815260200160002060009054906101000a90046001600160a01b0316828281518110611a6757fe5b6001600160a01b0390921660209283029190910190910152600101611a13565b50611a90611048565b600c54600e805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292939260129287928691830182828015611b215780601f10611af657610100808354040283529160200191611b21565b820191906000526020600020905b815481529060010190602001808311611b0457829003601f168201915b5050505050935081805480602002602001604051908101604052809291908181526020018280548015611b7357602002820191906000526020600020905b815481526020019060010190808311611b5f575b5050505050915095509550955095509550509091929394565b60008060068381548110611b9c57fe5b90600052602060002090600602016000015460068481548110611bbb57fe5b90600052602060002090600602016001015491509150915091565b600381815481106109cd57fe5b600061166d83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612071565b3390565b611c316120d4565b828152602081018281526000608083018181526006805460018101825592819052845192027ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f810192835592517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4084015560408401517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4184015560608401517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d42909301805493151560ff199094169390931780845590518493909161ff001916610100836002811115611d2057fe5b021790555050600654611d3591506001611be3565b6040517ff791e873e3b67fe74b29aeede7bcbbdaa59c4b64e542571183cd837aa56f6ac990600090a2505050565b600082611d7257506000611670565b82820282848281611d7f57fe5b041461166d5760405162461bcd60e51b81526004016105739061265b565b600061166d83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061209d565b60008282018381101561166d5760405162461bcd60e51b8152600401610573906124f6565b336000908152600a602090815260408083206001600160a01b038616845290915290205460ff16611ecf57336000818152600860209081526040808320815180830183526001600160a01b03888116808352828601898152845460018082018755868a52888a209551600290920290950180546001600160a01b0319169190941617835551918301919091558686529154600985528386208387528552838620600019919091019055948452600a83528184209084529091529020805460ff19169091179055610586565b3360008181526009602090815260408083206001600160a01b038716845282528083205493835260089091529020805461155e91849184908110611f0f57fe5b906000526020600020906002020160010154611ddf90919063ffffffff16565b3360008181526009602090815260408083206001600160a01b038716845282528083205493835260089091529020805461155e91849184908110611f6f57fe5b906000526020600020906002020160010154611be390919063ffffffff16565b600060068281548110611f9e57fe5b600091825260208083206001600160a01b0387811685526006939093020160040181526040808420928816845291905290205411611043576001600160a01b038316600090815260076020526040902054611ffa906001611ddf565b6001600160a01b038416600090815260076020526040902055505050565b6000805b60035481101561206757826001600160a01b03166003828154811061203d57fe5b6000918252602090912001546001600160a01b0316141561205f579050610539565b60010161201c565b5060001992915050565b600081848411156120955760405162461bcd60e51b81526004016105739190612447565b505050900390565b600081836120be5760405162461bcd60e51b81526004016105739190612447565b5060008385816120ca57fe5b0495945050505050565b6040518060a001604052806000815260200160008152602001600081526020016000151581526020016000600281111561210a57fe5b905290565b600060208284031215612120578081fd5b813561166d81612816565b6000806040838503121561213d578081fd5b823561214881612816565b9150602083013561215881612816565b809150509250929050565b60008060408385031215612175578182fd5b823561218081612816565b946020939093013593505050565b6000806000606084860312156121a2578081fd5b83356121ad81612816565b95602085013595506040909401359392505050565b6000602082840312156121d3578081fd5b8151801515811461166d578182fd5b6000602082840312156121f3578081fd5b5035919050565b6000806040838503121561220c578182fd5b50508035926020909101359150565b60008060006060848603121561222f578283fd5b505081359360208301359350604090920135919050565b600060208284031215612257578081fd5b815161166d81612816565b600080600060608486031215612276578283fd5b83359250602084013561228881612816565b929592945050506040919091013590565b60008151808452815b818110156122be576020818501810151868301820152016122a2565b818111156122cf5782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b600060018060a01b038088168352602060a08185015261235860a0850189612299565b604085018890528481036060860152865180825282880191830190855b8181101561239157835183529284019291840191600101612375565b505085810360808701528651808252908301915082870190855b818110156123c95782518616845292840192918401916001016123ab565b50919b9a5050505050505050505050565b602080825282518282018190526000919060409081850190868401855b8281101561242657815180518552868101518786015285015185850152606090930192908501906001016123f7565b5091979650505050505050565b901515815260200190565b90815260200190565b60006020825261166d6020830184612299565b602080825260139082015272534c41206e6f7420726573706563746564202160681b604082015260600190565b6020808252600f908201526e534c4120726573706563746564202160881b604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b60208082526025908201527f4f6e6c79204d657373656e6765722063616e2063616c6c20746869732066756e6040820152643a31b4b7b760d91b606082015260800190565b602080825260159082015274596f752061726520612076616c696461746f72202160581b604082015260600190565b6020808252601b908201527f7374616b696e672062616c616e63652063616e6e6f7420626520300000000000604082015260600190565b6020808252601390820152721d1bdad95b88185b1c9958591e481859191959606a1b604082015260600190565b60208082526036908201527f596f75206861766520616c726561647920636c61696d656420796f75722072656040820152757761726420666f72207468697320706572696f64202160501b606082015260800190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6040820152607760f81b606082015260800190565b6020808252601490820152731d1bdad95b881a5cc81b9bdd08185b1b1bddd95960621b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601290820152710616d6f756e742063616e6e6f7420626520360741b604082015260600190565b602080825260199082015278596f7520617265206e6f7420612076616c696461746f72202160381b604082015260600190565b6020808252603c908201527f596f75206861766520616c726561647920636c61696d656420796f757220636f60408201527f6d70656e736174696f6e20666f72207468697320706572696f64202100000000606082015260800190565b918252602082015260400190565b9283526020830191909152604082015260600190565b8581526020810185905260408101849052821515606082015260a081016003831061280657fe5b8260808301529695505050505050565b6001600160a01b038116811461282b57600080fd5b5056fea2646970667358221220cbf7b6a04f1899541ef9698cb649107f7d35419959d0786db9b34b81cf41b17964736f6c634300060c0033",
  "immutableReferences": {},
  "sourceMap": "446:5340:2:-:0;;;2833:923;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3179:13;3194:18;3214:16;3232:6;865:17:22;885:12;:10;:12::i;:::-;907:6;:18;;-1:-1:-1;;;;;;907:18:22;-1:-1:-1;;;;;907:18:22;;;;;;;940:43;;-1:-1:-1;;907:18:22;;-1:-1:-1;907:18:22;;:6;;-1:-1:-1;;907:6:22;-1:-1:-1;;;;;940:43:22;907:6;;940:43;831:159;2631:16:3;:23;2602:18;:25;:52;2581:140;;;;-1:-1:-1;;;2581:140:3;;;;;;;:::i;:::-;;;;;;;;;2731:5;:33;;-1:-1:-1;;;;;2731:33:3;;;-1:-1:-1;;;;;;2731:33:3;;;;;;;2774:13;:34;;;;;;;;;;;;;;2801:5;;;2774:34;;;;;;2847:5;;;;-1:-1:-1;2818:36:3;;;:20;2774:34;2818:36;;;;:43;;-1:-1:-1;;2818:43:3;;;;;;;2871:9;:18;;;;;;;;;;;;2900:135;2924:18;:25;2920:1;:29;2900:135;;;2970:54;2981:18;3000:1;2981:21;;;;;;;;;;;;;;3004:16;3021:1;3004:19;;;;;;;;;;;;;;2970:10;;;:54;;:::i;:::-;2951:3;;2900:135;;;;2400:641;;;;3277:1:2::1;3262:5;:12;:16;3254:52;;;::::0;-1:-1:-1;;;3254:52:2;;::::1;::::0;::::1;;;:::i;:::-;3357:5;:12;3337:9;:16;:32;3316:126;;;::::0;-1:-1:-1;;;3316:126:2;;::::1;::::0;::::1;;;:::i;:::-;3458:9;3453:97;3477:5;:12;3473:1;:16;3453:97;;;3531:5;3537:1;3531:8;;;;;;;;;;;;;;3510:4;:18;3515:9;3525:1;3515:12;;;;;;;;;::::0;;::::1;::::0;;;;;;;3510:18;;;::::1;::::0;;;;;;-1:-1:-1;3510:18:2;:29;;-1:-1:-1;;;;;;3510:29:2::1;-1:-1:-1::0;;;;;3510:29:2;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;3491:3:2::1;3453:97;;;-1:-1:-1::0;3560:25:2::1;3578:6:::0;3560:17:::1;:25::i;:::-;3595:20:::0;;::::1;::::0;:8:::1;::::0;:20:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;3625:5:2::1;:14:::0;;;3649:20;;::::1;::::0;:8:::1;::::0;:20:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;;3679:8:2::1;:34:::0;;-1:-1:-1;;;;;;3679:34:2::1;3702:10;3679:34;::::0;;-1:-1:-1;;3723:11:2::1;:26:::0;-1:-1:-1;446:5340:2;;-1:-1:-1;;;;446:5340:2;590:104:20;677:10;590:104;:::o;10330:366:3:-;10433:21;;:::i;:::-;10465:44;;;10519:22;;;:40;;;-1:-1:-1;10569:14:3;;;:35;;;10615:7;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10615:21:3;;;;;;;;;;;;10465:44;;10615:21;;-1:-1:-1;;10615:21:3;;;;;;;;;;;;;;;;;;10667;10686:1;10667:7;:14;;;;:18;;;;;;:21;;;;:::i;:::-;10652:37;;;;;;;10330:366;;;:::o;1983:240:22:-;1280:12;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:22:22;;;:6;;:22;1262:67;;;;-1:-1:-1;;;1262:67:22;;;;;;;:::i;:::-;-1:-1:-1;;;;;2071:22:22;::::1;2063:73;;;::::0;-1:-1:-1;;;2063:73:22;;::::1;::::0;::::1;;;:::i;:::-;2172:6;::::0;;2151:38:::1;::::0;-1:-1:-1;;;;;;;2151:38:22;;::::1;::::0;2172:6;::::1;::::0;;;;-1:-1:-1;;2172:6:22;-1:-1:-1;;;;;2151:38:22;::::1;2199:6;:17:::0;;-1:-1:-1;;;;;;2199:17:22::1;-1:-1:-1::0;;;;;2199:17:22;;;::::1;::::0;;;::::1;::::0;;1983:240::o;1321:134:23:-;1379:7;1405:43;1409:1;1412;1405:43;;;;;;;;;;;;;;;;;:3;;;:43;;:::i;:::-;1398:50;;1321:134;;;;;:::o;1746:187::-;1832:7;1867:12;1859:6;;;;1851:29;;;;-1:-1:-1;;;1851:29:23;;;;;;;;:::i;:::-;-1:-1:-1;;;1902:5:23;;;1746:187::o;446:5340:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;446:5340:2;;;-1:-1:-1;446:5340:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;5:134:-1;83:13;;101:33;83:13;101:33;:::i;164:722::-;;292:3;285:4;277:6;273:17;269:27;259:2;;-1:-1;;300:12;259:2;340:6;334:13;362:80;377:64;434:6;377:64;:::i;:::-;362:80;:::i;:::-;470:21;;;353:89;-1:-1;514:4;527:14;;;;502:17;;;616;;;607:27;;;;604:36;-1:-1;601:2;;;653:1;;643:12;601:2;678:1;663:217;688:6;685:1;682:13;663:217;;;2509:13;;756:61;;831:14;;;;859;;;;710:1;703:9;663:217;;;667:14;;;;;252:634;;;;:::o;917:758::-;;1057:3;1050:4;1042:6;1038:17;1034:27;1024:2;;-1:-1;;1065:12;1024:2;1105:6;1099:13;1127:92;1142:76;1211:6;1142:76;:::i;1127:92::-;1247:21;;;1118:101;-1:-1;1291:4;1304:14;;;;1279:17;;;1393;;;1384:27;;;;1381:36;-1:-1;1378:2;;;1430:1;;1420:12;1378:2;1455:1;1440:229;1465:6;1462:1;1459:13;1440:229;;;2668:6;2662:13;2680:45;2719:5;2680:45;:::i;:::-;1533:73;;1620:14;;;;1648;;;;1487:1;1480:9;1440:229;;2917:444;;3030:3;3023:4;3015:6;3011:17;3007:27;2997:2;;-1:-1;;3038:12;2997:2;3072:13;;-1:-1;11515:30;;11512:2;;;-1:-1;;11548:12;11512:2;3100:65;11689:4;-1:-1;;11621:9;11602:17;;11598:33;11679:15;3100:65;:::i;:::-;3091:74;;3185:6;3178:5;3171:21;3289:3;11689:4;3280:6;3213;3271:16;;3268:25;3265:2;;;3306:1;;3296:12;3265:2;3316:39;3348:6;11689:4;3247:5;3243:16;11689:4;3213:6;3209:17;3316:39;:::i;:::-;;2990:371;;;;:::o;3510:2034::-;;;;;;;;;;3902:3;3890:9;3881:7;3877:23;3873:33;3870:2;;;-1:-1;;3909:12;3870:2;3971:64;4027:7;4003:22;3971:64;:::i;:::-;4093:2;4078:18;;4072:25;3961:74;;-1:-1;;4106:30;;;4103:2;;;-1:-1;;4139:12;4103:2;4169:89;4250:7;4241:6;4230:9;4226:22;4169:89;:::i;:::-;4159:99;;4316:2;4305:9;4301:18;4295:25;4281:39;;4117:18;4332:6;4329:30;4326:2;;;-1:-1;;4362:12;4326:2;4392:101;4485:7;4476:6;4465:9;4461:22;4392:101;:::i;:::-;4382:111;;4530:2;4584:9;4580:22;3447:13;4538:74;;4670:3;4659:9;4655:19;4649:26;4635:40;;4117:18;4687:6;4684:30;4681:2;;;-1:-1;;4717:12;4681:2;4747:74;4813:7;4804:6;4793:9;4789:22;4747:74;:::i;:::-;4737:84;;4858:3;4913:9;4909:22;3447:13;4867:74;;4997:83;5072:7;4978:3;5052:9;5048:22;4997:83;:::i;:::-;4987:93;;5138:3;5127:9;5123:19;5117:26;5103:40;;4117:18;5155:6;5152:30;5149:2;;;-1:-1;;5185:12;5149:2;5215:89;5296:7;5287:6;5276:9;5272:22;5215:89;:::i;:::-;5205:99;;5362:3;5351:9;5347:19;5341:26;5327:40;;4117:18;5379:6;5376:30;5373:2;;;-1:-1;;5409:12;5373:2;;5439:89;5520:7;5511:6;5500:9;5496:22;5439:89;:::i;:::-;5429:99;;;3864:1680;;;;;;;;;;;:::o;7742:310::-;;7889:2;7910:17;7903:47;5696:5;11799:12;11956:6;7889:2;7878:9;7874:18;11944:19;5790:52;5835:6;11984:14;7878:9;11984:14;7889:2;5816:5;5812:16;5790:52;:::i;:::-;11621:9;12968:14;-1:-1;;12964:28;5854:39;;;;11984:14;5854:39;;7860:192;-1:-1;;7860:192::o;8059:416::-;8259:2;8273:47;;;6130:2;8244:18;;;11944:19;6166:34;11984:14;;;6146:55;-1:-1;;;6221:12;;;6214:30;6263:12;;;8230:245::o;8482:416::-;8682:2;8696:47;;;6514:2;8667:18;;;11944:19;6550:34;11984:14;;;6530:55;-1:-1;;;6605:12;;;6598:33;6650:12;;;8653:245::o;8905:416::-;9105:2;9119:47;;;9090:18;;;11944:19;6937:34;11984:14;;;6917:55;6991:12;;;9076:245::o;9328:416::-;9528:2;9542:47;;;7242:2;9513:18;;;11944:19;7278:34;11984:14;;;7258:55;-1:-1;;;7333:12;;;7326:39;7384:12;;;9499:245::o;9751:416::-;9951:2;9965:47;;;7635:2;9936:18;;;11944:19;-1:-1;;;11984:14;;;7651:46;7716:12;;;9922:245::o;10174:256::-;10236:2;10230:9;10262:17;;;10358:22;;;-1:-1;10322:34;;10319:62;10316:2;;;10394:1;;10384:12;10316:2;10236;10403:22;10214:216;;-1:-1;10214:216::o;10437:304::-;;-1:-1;10585:30;;10582:2;;;-1:-1;;10618:12;10582:2;-1:-1;10663:4;10651:17;;;10716:15;;10519:222::o;12624:268::-;12689:1;12696:101;12710:6;12707:1;12704:13;12696:101;;;12777:11;;;12771:18;12758:11;;;12751:39;12732:2;12725:10;12696:101;;;12812:6;12809:1;12806:13;12803:2;;;12689:1;12868:6;12863:3;12859:16;12852:27;12803:2;;12673:219;;;:::o;13005:117::-;-1:-1;;;;;12478:54;;13064:35;;13054:2;;13113:1;;13103:12;13054:2;13048:74;:::o;:::-;446:5340:2;;;;;;",
  "deployedSourceMap": "446:5340:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4690:107;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3069:174:3;;;;;;:::i;:::-;;:::i;:::-;;1073:52;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3291:226::-;;;;;;:::i;:::-;;:::i;1581:68::-;;;;;;:::i;:::-;;:::i;1423:84::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;594:20:2:-;;;:::i;868:24:3:-;;;:::i;:::-;;;;;;;:::i;8406:739::-;;;;;;:::i;:::-;;:::i;11294:274::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;990:30::-;;;;;;:::i;:::-;;:::i;839:23::-;;;:::i;1689:145:22:-;;;:::i;6461:1189:3:-;;;;;;:::i;:::-;;:::i;858:27:2:-;;;:::i;1708:26:3:-;;;:::i;4024:465:2:-;;;;;;:::i;:::-;;:::i;1066:77:22:-;;;:::i;1222:37:2:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;10799:92:3:-;;;:::i;7685:686::-;;;;;;:::i;:::-;;:::i;1114:35:2:-;;;;;;:::i;:::-;;:::i;1301:50:3:-;;;;;;:::i;:::-;;:::i;1186:53::-;;;;;;:::i;:::-;;:::i;779:22:2:-;;;:::i;:::-;;;;;;;:::i;4415:930:3:-;;;;;;:::i;:::-;;:::i;4938:93:2:-;;;:::i;1131:23:3:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;11164:124::-;;;;;;:::i;:::-;;:::i;9151:634::-;;;;;;:::i;:::-;;:::i;1983:240:22:-;;;;;;:::i;:::-;;:::i;1334:25:2:-;;;;;;:::i;:::-;;:::i;5375:1039:3:-;;;;;;:::i;:::-;;:::i;5318:466:2:-;;;:::i;:::-;;;;;;;;;;;:::i;10897:261:3:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;898:24::-;;;;;;:::i;:::-;;:::i;4690:107:2:-;4745:12;4776:4;:14;4781:8;4776:14;;;;;;;;;;;4769:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4690:107;;;;:::o;3069:174:3:-;1280:12:22;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:22:22;;;:6;;:22;1262:67;;;;-1:-1:-1;;;1262:67:22;;;;;;;:::i;:::-;;;;;;;;;3190:46:3::1;3201:17;3220:15;3190:10;:46::i;:::-;3069:174:::0;;:::o;1073:52::-;;;;;;;;;;;;;;;:::o;3291:226::-;1280:12:22;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:22:22;;;:6;;:22;1262:67;;;;-1:-1:-1;;;1262:67:22;;;;;;;:::i;:::-;-1:-1:-1;;;;;3368:28:3;::::1;;::::0;;;:20:::1;:28;::::0;;;;;::::1;;:37;3360:69;;;::::0;-1:-1:-1;;;3360:69:3;;::::1;::::0;::::1;;;:::i;:::-;3439:13;:26:::0;;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;;3439:26:3::1;-1:-1:-1::0;;;;;3439:26:3;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;3475:28:3;;;:20:::1;3439:26;3475:28:::0;;;;;:35;;-1:-1:-1;;3475:35:3::1;::::0;;::::1;::::0;;3291:226::o;1581:68::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1423:84::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;594:20:2:-;;;;:::o;868:24:3:-;;;-1:-1:-1;;;;;868:24:3;;:::o;8406:739::-;8486:7;2118;2126;2118:16;;;;;;;;;;;;;;;;;;:33;;;2099:15;:52;;:122;;;;;2190:7;2198;2190:16;;;;;;;;;;;;;;;;;;:31;;;2171:15;:50;;2099:122;2078:153;;;;;;1852:9:::1;::::0;-1:-1:-1;;;;;1852:9:3::1;1838:10;:23;;1830:57;;;::::0;-1:-1:-1;;;1830:57:3;;::::1;::::0;::::1;;;:::i;:::-;8578:19:::2;8551:7;8559;8551:16;;;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;:46;;;;;;;;;8530:108;;;::::0;-1:-1:-1;;;8530:108:3;;::::2;::::0;::::2;;;:::i;:::-;8669:7;8677;8669:16;;;;;;;;;::::0;;;::::2;::::0;;;8707:10:::2;8669:49:::0;;:37:::2;:16;::::0;;::::2;;:37:::0;;;::::2;:49:::0;;;;;;:54;8648:161:::2;;;::::0;-1:-1:-1;;;8648:161:3;;::::2;::::0;::::2;;;:::i;:::-;8820:20;8843:38;8861:10;8873:7;8843:17;:38::i;:::-;8820:61:::0;-1:-1:-1;8891:12:3::2;8906:27;8930:2;8906:19;8820:61:::0;8923:1:::2;8906:16;:19::i;:::-;:23:::0;::::2;:27::i;:::-;8958:11;::::0;8891:42;;-1:-1:-1;8958:29:3::2;::::0;8974:12;8958:15:::2;:29::i;:::-;8944:11;:43;;;;9049:12;8997:7;9005;8997:16;;;;;;;;;::::0;;;::::2;::::0;;;9035:10:::2;8997:49:::0;;;:16:::2;::::0;;;::::2;;:37;;:49:::0;;;;;;;:64;;;;9072:5:::2;::::0;:40;;-1:-1:-1;;;9072:40:3;;-1:-1:-1;;;;;9072:5:3;;::::2;::::0;-1:-1:-1;;9072:40:3::2;::::0;9035:10;9099:12;;9072:40:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;9122:5:3::2;::::0;:16:::2;::::0;-1:-1:-1;;;9122:16:3;;-1:-1:-1;;;;;9122:5:3;;::::2;::::0;:10:::2;::::0;:16:::2;::::0;9133:4;;9122:16:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;1897:1;;8406:739:::0;;:::o;11294:274::-;-1:-1:-1;;;;;11466:18:3;;11394:20;11466:18;;;:10;:18;;;;;:26;;11394:20;;11466:18;11485:6;;11466:26;;;;;;;;;;;;;;;;;;;;;;:39;-1:-1:-1;;;;;11519:18:3;;;;;:10;:18;;;;;;;:26;;11466:39;;;;;11519:18;11538:6;;11519:26;;;;;;;;;;;;;;;;:32;;;11445:116;;;;11294:274;;;;;:::o;990:30::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;990:30:3;;-1:-1:-1;990:30:3;:::o;839:23::-;;;-1:-1:-1;;;;;839:23:3;;:::o;1689:145:22:-;1280:12;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:22:22;;;:6;;:22;1262:67;;;;-1:-1:-1;;;1262:67:22;;;;;;;:::i;:::-;1795:1:::1;1779:6:::0;;1758:40:::1;::::0;-1:-1:-1;;;;;1779:6:22;;::::1;::::0;1758:40:::1;::::0;1795:1;;1758:40:::1;1825:1;1808:19:::0;;-1:-1:-1;;;;;;1808:19:22::1;::::0;;1689:145::o;6461:1189:3:-;1852:9;;-1:-1:-1;;;;;1852:9:3;1838:10;:23;;1830:57;;;;-1:-1:-1;;;1830:57:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;2315:28:3;::::1;;::::0;;;:20:::1;:28;::::0;;;;;;;::::1;;:36;;-1:-1:-1::0;2315:36:3::1;2307:69;;;::::0;-1:-1:-1;;;2307:69:3;;::::1;::::0;::::1;;;:::i;:::-;6742:1:::2;6688:7;6696;6688:16;;;;;;;;;::::0;;;::::2;::::0;;;-1:-1:-1;;;;;6688:39:3;::::2;::::0;;:16:::2;::::0;;;::::2;::::0;;::::2;:31;;:39:::0;;;;;;6728:10:::2;6688:51:::0;;;;;;;;:55:::2;6667:129;;;::::0;-1:-1:-1;;;6667:129:3;;::::2;::::0;::::2;;;:::i;:::-;6833:63;::::0;-1:-1:-1;;;6833:63:3;;-1:-1:-1;;;;;6833:27:3;::::2;::::0;-1:-1:-1;;6833:63:3::2;::::0;6861:10:::2;::::0;6881:4:::2;::::0;6888:7;;6833:63:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7014:90;7096:7;7014;7022;7014:16;;;;;;;;;::::0;;;::::2;::::0;;;-1:-1:-1;;;;;7014:52:3;::::2;::::0;;:16:::2;::::0;;;::::2;::::0;;::::2;:44;;:52:::0;;;;;;7067:10:::2;7014:64:::0;;;;;;;;;:81:::2;:90::i;:::-;6960:7;6968;6960:16;;;;;;;;;::::0;;;::::2;::::0;;;-1:-1:-1;;;;;6960:39:3;::::2;::::0;;:16:::2;::::0;;;::::2;::::0;;::::2;:31;;:39:::0;;;;;;7000:10:::2;6960:51:::0;;;;;;;:144;7128:11:::2;::::0;:24:::2;::::0;7144:7;7128:15:::2;:24::i;:::-;7114:11;:38:::0;7163::::2;7185:6:::0;7193:7;7163:21:::2;:38::i;:::-;7244:14;7261:7;7269;7261:16;;;;;;;;;::::0;;;::::2;::::0;;;-1:-1:-1;;;;;7261:39:3;::::2;::::0;;:16:::2;::::0;;::::2;;:31;;:39:::0;;;;;;7301:10:::2;7261:51:::0;;;;;;;;7395:7:::2;:14:::0;7359:16;;7261:51;;-1:-1:-1;7359:51:3::2;::::0;7395:14;;7367:7;;7359:16;::::2;;;;;;;;;;;;;;;:31;;;:35;;:51;;;;:::i;:::-;7322:88;;7475:1;7421:7;7429;7421:16;;;;;;;;;::::0;;;::::2;::::0;;;-1:-1:-1;;;;;7421:39:3;::::2;::::0;;:16:::2;::::0;;;::::2;::::0;;::::2;:31;;:39:::0;;;;;;7461:10:::2;7421:51:::0;;;;;;;:55;7500:11:::2;::::0;:23:::2;::::0;7516:6;7500:15:::2;:23::i;:::-;7486:11;:37:::0;7533:5:::2;::::0;-1:-1:-1;;;;;7533:5:3::2;:14;7548:10;7560:26;:6:::0;7571:14;7560:10:::2;:26::i;:::-;7533:54;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;7628:5:3::2;::::0;7598:45:::2;::::0;-1:-1:-1;;;;;7628:5:3::2;7636:6:::0;7598:21:::2;:45::i;:::-;2386:1;;1897::::1;6461:1189:::0;;;:::o;858:27:2:-;;;-1:-1:-1;;;;;858:27:2;;:::o;1708:26:3:-;;;;:::o;4024:465:2:-;1840:8;;:20;;;-1:-1:-1;;;1840:20:2;;;;-1:-1:-1;;;;;1840:8:2;;;;:18;;:20;;;;;;;;;;;;;;;:8;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1818:43:2;:10;:43;1797:127;;;;-1:-1:-1;;;1797:127:2;;;;;;;:::i;:::-;4161:14:::1;::::0;;;:4:::1;:14;::::0;;;;;;;4181:39;;::::1;::::0;::::1;::::0;;4185:15:::1;4181:39:::0;;;;;::::1;::::0;;;;;;;;;4161:60;;::::1;::::0;;::::1;::::0;;;;;;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;::::1;::::0;;;;;;::::1;::::0;;::::1;::::0;;;;4237:46;::::1;::::0;::::1;::::0;4202:6;;4210:9;;4237:46:::1;:::i;:::-;;;;;;;;4299:14;::::0;;;:4:::1;:14;::::0;;;;;;;:35;;-1:-1:-1;;;4299:35:2;;-1:-1:-1;;;;;4299:14:2;;::::1;::::0;-1:-1:-1;;4299:35:2::1;::::0;4327:6;;4299:35:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4294:189;;4378:19;4350:7;4358:9;4350:18;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:25;;:47:::0;;-1:-1:-1;;4350:47:2::1;;::::0;::::1;::::0;::::1;;;;;;;;;;;4294:189;;;4456:16;4428:7;4436:9;4428:18;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:25;;:44:::0;;-1:-1:-1;;4428:44:2::1;;::::0;::::1;::::0;::::1;;;;;;;;;;;4294:189;4024:465:::0;;;:::o;1066:77:22:-;1104:7;1130:6;-1:-1:-1;;;;;1130:6:22;;1066:77::o;1222:37:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1222:37:2;;-1:-1:-1;1222:37:2;:::o;10799:92:3:-;10870:7;:14;10799:92;:::o;7685:686::-;7759:7;2118;2126;2118:16;;;;;;;;;;;;;;;;;;:33;;;2099:15;:52;;:122;;;;;2190:7;2198;2190:16;;;;;;;;;;;;;;;;;;:31;;;2171:15;:50;;2099:122;2078:153;;;;;;1966:9:::1;::::0;-1:-1:-1;;;;;1966:9:3::1;1952:10;:23;1944:61;;;::::0;-1:-1:-1;;;1944:61:3;;::::1;::::0;::::1;;;:::i;:::-;7852:16:::2;7825:7;7833;7825:16;;;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;:43;;;;;;;;;7804:109;;;::::0;-1:-1:-1;;;7804:109:3;;::::2;::::0;::::2;;;:::i;:::-;7945:7;7953;7945:16;;;;;;;;;::::0;;;::::2;::::0;;;:24:::2;:16;::::0;;::::2;;:24;::::0;::::2;;7944:25;7923:126;;;::::0;-1:-1:-1;;;7923:126:3;;::::2;::::0;::::2;;;:::i;:::-;8093:7;:14:::0;8077:11:::2;::::0;8060:14:::2;::::0;8077:31:::2;::::0;:11;:15:::2;:31::i;:::-;8060:48:::0;-1:-1:-1;8118:12:3::2;8133:21;8151:2;8133:13;8060:48:::0;8144:1:::2;8133:10;:13::i;:21::-;8179:11;::::0;8118:36;;-1:-1:-1;8179:23:3::2;::::0;8195:6;8179:15:::2;:23::i;:::-;8165:11;:37;;;;8246:6;8212:7;8220;8212:16;;;;;;;;;;;;;;;;;;:31;;:40;;;;8289:4;8262:7;8270;8262:16;;;;;;;;;::::0;;;::::2;::::0;;;::::2;::::0;;::::2;;:24;;:31:::0;;-1:-1:-1;;8262:31:3::2;::::0;::::2;;::::0;;;::::2;::::0;;-1:-1:-1;8304:5:3;:34:::2;::::0;-1:-1:-1;;;8304:34:3;;-1:-1:-1;;;;;8304:5:3;;::::2;::::0;-1:-1:-1;;8304:34:3::2;::::0;8319:10:::2;::::0;8331:6;;8304:34:::2;;;:::i;1114:35:2:-:0;;;;;;;;;;;;-1:-1:-1;;;;;1114:35:2;;:::o;1301:50:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1301:50:3;;;;-1:-1:-1;1301:50:3;-1:-1:-1;1301:50:3;:::o;1186:53::-;;;;;;;;;;;;;:::o;779:22:2:-;;;;;;;;;;;;;;;-1:-1:-1;;779:22:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4415:930:3:-;-1:-1:-1;;;;;2315:28:3;;;;;;:20;:28;;;;;;;;;;:36;;-1:-1:-1;2315:36:3;2307:69;;;;-1:-1:-1;;;2307:69:3;;;;;;;:::i;:::-;4576:1:::1;4566:7;:11;4558:42;;;::::0;-1:-1:-1;;;4558:42:3;;::::1;::::0;::::1;;;:::i;:::-;4681:54;4707:10;4719:6;4727:7;4681:25;:54::i;:::-;4769:63;::::0;-1:-1:-1;;;4769:63:3;;-1:-1:-1;;;;;4769:27:3;::::1;::::0;-1:-1:-1;;4769:63:3::1;::::0;4797:10:::1;::::0;4817:4:::1;::::0;4824:7;;4769:63:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4950:90;5032:7;4950;4958;4950:16;;;;;;;;;::::0;;;::::1;::::0;;;-1:-1:-1;;;;;4950:52:3;::::1;::::0;;:16:::1;::::0;;;::::1;::::0;;::::1;:44;;:52:::0;;;;;;5003:10:::1;4950:64:::0;;;;;;;;;:81:::1;:90::i;:::-;4896:7;4904;4896:16;;;;;;;;;::::0;;;::::1;::::0;;;-1:-1:-1;;;;;4896:39:3;::::1;::::0;;:16:::1;::::0;;;::::1;::::0;;::::1;:31;;:39:::0;;;;;;4936:10:::1;4896:51:::0;;;;;;;:144;5064:11:::1;::::0;:24:::1;::::0;5080:7;5064:15:::1;:24::i;:::-;5050:11;:38:::0;5223:10:::1;5204:30;::::0;;;:18:::1;:30;::::0;;;;;5238:1:::1;5204:35;5200:90;;;5255:7;:24:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;5255:24:3;;;;;::::1;::::0;;-1:-1:-1;;;;;;5255:24:3::1;5268:10;5255:24;::::0;;5200:90:::1;5300:38;5322:6;5330:7;5300:21;:38::i;:::-;4415:930:::0;;;;:::o;4938:93:2:-;5013:11;;4938:93;:::o;1131:23:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1131:23:3;;;;;;;;;;;;:::o;11164:124::-;-1:-1:-1;;;;;11256:18:3;11230:7;11256:18;;;:10;:18;;;;;:25;;11164:124::o;9151:634::-;-1:-1:-1;;;;;9314:25:3;;9255:7;9314:25;;;:18;:25;;;;;;9255:7;;9314:29;9310:442;;9381:26;9359:383;9450:13;:20;9429:41;;9359:383;;;9554:173;9590:7;9598;9590:16;;;;;;;;;;;;;;;;;;:31;;:112;9647:13;9661:18;9647:33;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9647:33:3;;;9590:112;;;;;;;;;;;;;;;:119;;;;;;;;;;;;9554:10;;:14;:173::i;:::-;9541:186;-1:-1:-1;9488:20:3;;9359:383;;;;9310:442;9768:10;-1:-1:-1;9151:634:3;;;;;:::o;1983:240:22:-;1280:12;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:22:22;;;:6;;:22;1262:67;;;;-1:-1:-1;;;1262:67:22;;;;;;;:::i;:::-;-1:-1:-1;;;;;2071:22:22;::::1;2063:73;;;::::0;-1:-1:-1;;;2063:73:22;;::::1;::::0;::::1;;;:::i;:::-;2172:6;::::0;;2151:38:::1;::::0;-1:-1:-1;;;;;2151:38:22;;::::1;::::0;2172:6;::::1;::::0;2151:38:::1;::::0;::::1;2199:6;:17:::0;;-1:-1:-1;;;;;;2199:17:22::1;-1:-1:-1::0;;;;;2199:17:22;;;::::1;::::0;;;::::1;::::0;;1983:240::o;1334:25:2:-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1334:25:2;:::o;5375:1039:3:-;1852:9;;-1:-1:-1;;;;;1852:9:3;1838:10;:23;;1830:57;;;;-1:-1:-1;;;1830:57:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;2315:28:3;::::1;;::::0;;;:20:::1;:28;::::0;;;;;;;::::1;;:36;;-1:-1:-1::0;2315:36:3::1;2307:69;;;::::0;-1:-1:-1;;;2307:69:3;;::::1;::::0;::::1;;;:::i;:::-;5629:1:::2;5575:7;5583;5575:16;;;;;;;;;::::0;;;::::2;::::0;;;-1:-1:-1;;;;;5575:39:3;::::2;::::0;;:16:::2;::::0;;;::::2;::::0;;::::2;:31;;:39:::0;;;;;;5615:10:::2;5575:51:::0;;;;;;;;:55:::2;5554:129;;;::::0;-1:-1:-1;;;5554:129:3;;::::2;::::0;::::2;;;:::i;:::-;5726:14;5743:7;5751;5743:16;;;;;;;;;::::0;;;::::2;::::0;;;-1:-1:-1;;;;;5743:39:3;::::2;::::0;;:16:::2;::::0;;::::2;;:31;;:39:::0;;;;;;5783:10:::2;5743:51:::0;;;;;;;;5877:7:::2;:14:::0;5841:16;;5743:51;;-1:-1:-1;5841:51:3::2;::::0;5877:14;;5849:7;;5841:16;::::2;;;;:51;5804:88;;5957:1;5903:7;5911;5903:16;;;;;;;;;::::0;;;::::2;::::0;;;-1:-1:-1;;;;;5903:39:3;::::2;::::0;;:16:::2;::::0;;;::::2;::::0;;::::2;:31;;:39:::0;;;;;;5943:10:::2;5903:51:::0;;;;;;;:55;5982:11:::2;::::0;:23:::2;::::0;5998:6;5982:15:::2;:23::i;:::-;5968:11;:37:::0;-1:-1:-1;;;;;6015:23:3;::::2;;6039:10;6051:26;:6:::0;6062:14;6051:10:::2;:26::i;:::-;6015:63;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;6193:10:3::2;6174:30;::::0;;;:18:::2;:30;::::0;;;;;:37:::2;::::0;6209:1:::2;6174:34;:37::i;:::-;6160:10;6141:30;::::0;;;:18:::2;:30;::::0;;;;:70;;;6222:138:::2;;6277:13;6293:21;6303:10;6293:9;:21::i;:::-;6277:37;;6335:7;6343:5;6335:14;;;;;;;;;::::0;;;::::2;::::0;;;::::2;6328:21:::0;;-1:-1:-1;;;;;;6328:21:3::2;::::0;;-1:-1:-1;6222:138:3::2;6370:37;6392:6;6400;6370:21;:37::i;:::-;2386:1;;1897::::1;5375:1039:::0;;:::o;5318:466:2:-;5400:7;5421:13;5448:7;5469:16;5499:12;5536:26;5575:8;:15;;;;5565:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5565:26:2;;5536:55;;5607:9;5602:107;5626:8;:15;5622:19;;5602:107;;;5681:4;:17;5686:8;5695:1;5686:11;;;;;;;;;;;;;;;;;;;;5681:17;;;;;;;;;;;;;5662:16;;-1:-1:-1;;;;;5681:17:2;;;;5662:13;;5676:1;;5662:16;;;;;;-1:-1:-1;;;;;5662:36:2;;;;:16;;;;;;;;;;;:36;-1:-1:-1;5643:3:2;5602:107;;;;5727:7;:5;:7::i;:::-;5746:5;;5736:8;5719:58;;;;;;;;;;;;;-1:-1:-1;;5719:58:2;;;;;;;;;;;;;;;;;;;;;;;;;;5736:8;;5746:5;5753:8;;5763:13;;5736:8;;5719:58;;5736:8;5719:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5318:466;;;;;:::o;10897:261:3:-;10984:19;11005:17;11059:7;11067:9;11059:18;;;;;;;;;;;;;;;;;;:35;;;11108:7;11116:9;11108:18;;;;;;;;;;;;;;;;;;:33;;;11038:113;;;;10897:261;;;:::o;898:24::-;;;;;;;;;;1321:134:23;1379:7;1405:43;1409:1;1412;1405:43;;;;;;;;;;;;;;;;;:3;:43::i;590:104:20:-;677:10;590:104;:::o;10330:366:3:-;10433:21;;:::i;:::-;10465:44;;;10519:22;;;:40;;;-1:-1:-1;10569:14:3;;;:35;;;10615:7;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10615:21:3;;;;;;;;;;;;10465:44;;10615:21;;-1:-1:-1;;10615:21:3;;;;;;;;;;;;;;;-1:-1:-1;;10667:7:3;:14;:21;;-1:-1:-1;10686:1:3;10667:18;:21::i;:::-;10652:37;;;;;;;10330:366;;;:::o;2180:459:23:-;2238:7;2479:6;2475:45;;-1:-1:-1;2508:1:23;2501:8;;2475:45;2542:5;;;2546:1;2542;:5;:1;2565:5;;;;;:10;2557:56;;;;-1:-1:-1;;;2557:56:23;;;;;;;:::i;3101:130::-;3159:7;3185:39;3189:1;3192;3185:39;;;;;;;;;;;;;;;;;:3;:39::i;874:176::-;932:7;963:5;;;986:6;;;;978:46;;;;-1:-1:-1;;;978:46:23;;;;;;;:::i;3523:633:3:-;3627:10;3610:28;;;;:16;:28;;;;;;;;-1:-1:-1;;;;;3610:36:3;;;;;;;;;;;;3606:544;;3682:10;3671:22;;;;:10;:22;;;;;;;;3716:50;;;;;;;-1:-1:-1;;;;;3716:50:3;;;;;;;;;;;;3671:109;;-1:-1:-1;3671:109:3;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3671:109:3;;;;;;;;;;;;;;;;3818:22;;;:29;;3865:21;:33;;;;;:41;;;;;;;;-1:-1:-1;;3818:33:3;;;;3865:57;;3936:28;;;:16;:28;;;;;:36;;;;;;;;:43;;-1:-1:-1;;3936:43:3;;;;;;3606:544;;;4053:10;4010:18;4031:33;;;:21;:33;;;;;;;;-1:-1:-1;;;;;4031:41:3;;;;;;;;;;4086:22;;;:10;:22;;;;;:34;;:53;;4131:7;;4031:41;;4086:34;;;;;;;;;;;;;;;;:40;;;:44;;:53;;;;:::i;4162:215::-;4288:10;4245:18;4266:33;;;:21;:33;;;;;;;;-1:-1:-1;;;;;4266:41:3;;;;;;;;;;4317:22;;;:10;:22;;;;;:34;;:53;;4362:7;;4266:41;;4317:34;;;;;;;;;;;;;;;;:40;;;:44;;:53;;;;:::i;9791:280::-;9977:1;9927:7;9935;9927:16;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9927:39:3;;;;;:16;;;;;;:31;;:39;;;;;;:46;;;;;;;;;;;:51;9923:142;;-1:-1:-1;;;;;10022:25:3;;;;;;:18;:25;;;;;;:32;;-1:-1:-1;10022:29:3;:32::i;:::-;-1:-1:-1;;;;;9994:25:3;;;;;;:18;:25;;;;;:60;9791:280;;;:::o;10077:247::-;10134:7;;10153:135;10177:7;:14;10173:18;;10153:135;;;10216:7;:10;;-1:-1:-1;;;;;10216:19:3;;;:7;10224:1;;10216:10;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10216:10:3;:19;10212:66;;;10262:1;-1:-1:-1;10255:8:3;;10212:66;10193:3;;10153:135;;;-1:-1:-1;;;;10313:2:3;-1:-1:-1;;10077:247:3:o;1746:187:23:-;1832:7;1867:12;1859:6;;;;1851:29;;;;-1:-1:-1;;;1851:29:23;;;;;;;;:::i;:::-;-1:-1:-1;;;1902:5:23;;;1746:187::o;3713:272::-;3799:7;3833:12;3826:5;3818:28;;;;-1:-1:-1;;;3818:28:23;;;;;;;;:::i;:::-;;3856:9;3872:1;3868;:5;;;;;;;3713:272;-1:-1:-1;;;;;3713:272:23:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;726:241::-;;830:2;818:9;809:7;805:23;801:32;798:2;;;-1:-1;;836:12;798:2;85:6;72:20;97:33;124:5;97:33;:::i;974:366::-;;;1095:2;1083:9;1074:7;1070:23;1066:32;1063:2;;;-1:-1;;1101:12;1063:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;1153:63;-1:-1;1253:2;1292:22;;72:20;97:33;72:20;97:33;:::i;:::-;1261:63;;;;1057:283;;;;;:::o;1347:366::-;;;1468:2;1456:9;1447:7;1443:23;1439:32;1436:2;;;-1:-1;;1474:12;1436:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;1526:63;1626:2;1665:22;;;;656:20;;-1:-1;;;1430:283::o;1720:491::-;;;;1858:2;1846:9;1837:7;1833:23;1829:32;1826:2;;;-1:-1;;1864:12;1826:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;1916:63;2016:2;2055:22;;656:20;;-1:-1;2124:2;2163:22;;;656:20;;1820:391;-1:-1;;;1820:391::o;2218:257::-;;2330:2;2318:9;2309:7;2305:23;2301:32;2298:2;;;-1:-1;;2336:12;2298:2;223:6;217:13;33592:5;30943:13;30936:21;33570:5;33567:32;33557:2;;-1:-1;;33603:12;2482:241;;2586:2;2574:9;2565:7;2561:23;2557:32;2554:2;;;-1:-1;;2592:12;2554:2;-1:-1;344:20;;2548:175;-1:-1;2548:175::o;2730:366::-;;;2851:2;2839:9;2830:7;2826:23;2822:32;2819:2;;;-1:-1;;2857:12;2819:2;-1:-1;;344:20;;;3009:2;3048:22;;;656:20;;-1:-1;2813:283::o;3103:491::-;;;;3241:2;3229:9;3220:7;3216:23;3212:32;3209:2;;;-1:-1;;3247:12;3209:2;-1:-1;;344:20;;;3399:2;3438:22;;656:20;;-1:-1;3507:2;3546:22;;;656:20;;3203:391;-1:-1;3203:391::o;3601:297::-;;3733:2;3721:9;3712:7;3708:23;3704:32;3701:2;;;-1:-1;;3739:12;3701:2;515:6;509:13;527:50;571:5;527:50;:::i;4153:491::-;;;;4291:2;4279:9;4270:7;4266:23;4262:32;4259:2;;;-1:-1;;4297:12;4259:2;669:6;656:20;4349:63;;4449:2;4492:9;4488:22;72:20;97:33;124:5;97:33;:::i;:::-;4253:391;;4457:63;;-1:-1;;;4557:2;4596:22;;;;656:20;;4253:391::o;9507:347::-;;9652:5;29159:12;30157:6;30152:3;30145:19;-1:-1;32970:101;32984:6;32981:1;32978:13;32970:101;;;30194:4;33051:11;;;;;33045:18;33032:11;;;;;33025:39;32999:10;32970:101;;;33086:6;33083:1;33080:13;33077:2;;;-1:-1;30194:4;33142:6;30189:3;33133:16;;33126:27;33077:2;-1:-1;33258:7;33242:14;-1:-1;;33238:28;9810:39;;;;30194:4;9810:39;;9599:255;-1:-1;;9599:255::o;16022:222::-;-1:-1;;;;;31358:54;;;;5894:37;;16149:2;16134:18;;16120:124::o;16251:460::-;-1:-1;;;;;31358:54;;;5753:58;;31358:54;;;;16614:2;16599:18;;5894:37;16697:2;16682:18;;8541:37;;;;16442:2;16427:18;;16413:298::o;16718:349::-;-1:-1;;;;;31358:54;;;;5753:58;;17053:2;17038:18;;8541:37;16881:2;16866:18;;16852:215::o;17074:1076::-;;31369:42;;;;;;30859:5;31358:54;5901:3;5894:37;17564:2;17445:3;17564:2;17553:9;17549:18;17542:48;17604:78;17445:3;17434:9;17430:19;17668:6;17604:78;:::i;:::-;17761:2;17746:18;;8541:37;;;17803:20;;;17798:2;17783:18;;17776:48;29159:12;;30145:19;;;28665:14;;;;30185;;;-1:-1;6382:260;6407:6;6404:1;6401:13;6382:260;;;6468:13;;8541:37;;29738:14;;;;5178;;;;6429:1;6422:9;6382:260;;;-1:-1;;17985:20;;;17979:3;17964:19;;17957:49;29159:12;;30145:19;;;30185:14;;;;-1:-1;28665:14;;;;-1:-1;7152:284;7177:6;7174:1;7171:13;7152:284;;;7238:13;;31358:54;;8801:70;;5384:14;;;;29738;;;;6429:1;7192:9;7152:284;;;-1:-1;18012:128;;17416:734;-1:-1;;;;;;;;;;;17416:734::o;18497:450::-;18714:2;18728:47;;;29159:12;;18699:18;;;30145:19;;;18497:450;;18714:2;30185:14;;;;;;28665;;;18497:450;8019:320;8044:6;8041:1;8038:13;8019:320;;;8105:13;;15359:23;;8541:37;;15520:16;;;15514:23;15591:14;;;8541:37;15678:16;;15672:23;15749:14;;;8541:37;5655:4;5646:14;;;;29738;;;;8066:1;8059:9;8019:320;;;-1:-1;18781:156;;18685:262;-1:-1;;;;;;;18685:262::o;18954:210::-;30943:13;;30936:21;8434:34;;19075:2;19060:18;;19046:118::o;19171:222::-;8541:37;;;19298:2;19283:18;;19269:124::o;20189:310::-;;20336:2;20357:17;20350:47;20411:78;20336:2;20325:9;20321:18;20475:6;20411:78;:::i;20506:416::-;20706:2;20720:47;;;10086:2;20691:18;;;30145:19;-1:-1;;;30185:14;;;10102:42;10163:12;;;20677:245::o;20929:416::-;21129:2;21143:47;;;10414:2;21114:18;;;30145:19;-1:-1;;;30185:14;;;10430:38;10487:12;;;21100:245::o;21352:416::-;21552:2;21566:47;;;10738:2;21537:18;;;30145:19;10774:34;30185:14;;;10754:55;-1:-1;;;10829:12;;;10822:30;10871:12;;;21523:245::o;21775:416::-;21975:2;21989:47;;;11122:2;21960:18;;;30145:19;11158:29;30185:14;;;11138:50;11207:12;;;21946:245::o;22198:416::-;22398:2;22412:47;;;11458:2;22383:18;;;30145:19;11494:34;30185:14;;;11474:55;-1:-1;;;11549:12;;;11542:29;11590:12;;;22369:245::o;22621:416::-;22821:2;22835:47;;;11841:2;22806:18;;;30145:19;-1:-1;;;30185:14;;;11857:44;11920:12;;;22792:245::o;23044:416::-;23244:2;23258:47;;;12171:2;23229:18;;;30145:19;12207:29;30185:14;;;12187:50;12256:12;;;23215:245::o;23467:416::-;23667:2;23681:47;;;12507:2;23652:18;;;30145:19;-1:-1;;;30185:14;;;12523:42;12584:12;;;23638:245::o;23890:416::-;24090:2;24104:47;;;12835:2;24075:18;;;30145:19;12871:34;30185:14;;;12851:55;-1:-1;;;12926:12;;;12919:46;12984:12;;;24061:245::o;24313:416::-;24513:2;24527:47;;;13235:2;24498:18;;;30145:19;13271:34;30185:14;;;13251:55;-1:-1;;;13326:12;;;13319:25;13363:12;;;24484:245::o;24736:416::-;24936:2;24950:47;;;13614:2;24921:18;;;30145:19;-1:-1;;;30185:14;;;13630:43;13692:12;;;24907:245::o;25159:416::-;25359:2;25373:47;;;25344:18;;;30145:19;13979:34;30185:14;;;13959:55;14033:12;;;25330:245::o;25582:416::-;25782:2;25796:47;;;14284:2;25767:18;;;30145:19;-1:-1;;;30185:14;;;14300:41;14360:12;;;25753:245::o;26005:416::-;26205:2;26219:47;;;14611:2;26190:18;;;30145:19;-1:-1;;;30185:14;;;14627:48;14694:12;;;26176:245::o;26428:416::-;26628:2;26642:47;;;14945:2;26613:18;;;30145:19;14981:34;30185:14;;;14961:55;15050:30;15036:12;;;15029:52;15100:12;;;26599:245::o;27080:333::-;8541:37;;;27399:2;27384:18;;8541:37;27235:2;27220:18;;27206:207::o;27420:444::-;8541:37;;;27767:2;27752:18;;8541:37;;;;27850:2;27835:18;;8541:37;27603:2;27588:18;;27574:290::o;27871:672::-;8541:37;;;28277:2;28262:18;;8541:37;;;28360:2;28345:18;;8541:37;;;30943:13;;30936:21;28437:2;28422:18;;8434:34;28112:3;28097:19;;33358:1;33348:12;;33338:2;;33364:9;33338:2;32608:34;28528:3;28517:9;28513:19;9437:58;28083:460;;;;;;;;:::o;33387:117::-;-1:-1;;;;;31358:54;;33446:35;;33436:2;;33495:1;;33485:12;33436:2;33430:74;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\npragma experimental ABIEncoderV2;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\nimport \"../SLO/SLO.sol\";\nimport \"../SLARegistry.sol\";\nimport \"./Staking.sol\";\n\n/**\n * @title SLA\n * @dev SLA is a service level agreement contract used for service downtime\n * compensation\n */\ncontract SLA is Ownable, Staking {\n    using SafeMath for uint256;\n\n    /// @dev The required amount to stake when subscribing to the agreement\n    uint256 public stake;\n\n    /// @dev The time between SLI registration\n    uint256 private sliInterval;\n\n    /// @dev The ipfs hash that stores extra information about the agreement\n    string public ipfsHash;\n\n    /// @dev The address of the registry contract\n    SLARegistry public registry;\n\n    /// @dev Struct used for storing registered SLI's\n    struct SLI {\n        uint256 timestamp;\n        uint256 value;\n        uint256 periodId;\n    }\n\n    /// @dev mapping to get SLO addresses from SLO names in bytes32\n    mapping(bytes32 => SLO) public SLOs;\n\n    /// @dev mapping to get SLI structs from SLO names in bytes32\n    mapping(bytes32 => SLI[]) public SLIs;\n\n    /// @dev array storing the names of the SLO's of this agreement\n    bytes32[] public SLONames;\n\n    /**\n     * @dev event for SLI creation logging\n     * @param _timestamp 1. the time the SLI has been registered\n     * @param _value 2. the value of the SLI\n     * @param _periodId 3. the id of the given period\n     */\n    event SLICreated(uint256 _timestamp, uint256 _value, uint256 _periodId);\n\n    /**\n     * @dev throws if called by any address other than the messenger contract.\n     */\n    modifier onlyMessenger() {\n        require(\n            msg.sender == address(registry.messenger()),\n            \"Only Messenger can call this funtcion\"\n        );\n        _;\n    }\n\n    /**\n     * @param _owner 1. address of the owner of the service level agreement\n     * @param _SLONames 2. array of the names of the service level objectives\n     * in bytes32\n     * @param _SLOs 3. array of service level objective contract addressess\n     * service level objective breach\n     * @param _stake 4. uint of the amount required to stake when signing the\n     * service level agreement\n     * @param _ipfsHash 5. string with the ipfs hash that contains extra\n     * information about the service level agreement\n     * @param _sliInterval 6. uint the interval in seconds between requesting a new SLI\n     * @param _tokenAddress 7. address of the DSLA token to be unlocked for staking\n     * @param _sla_period_starts 8. array with the values for the \"start\" of every period\n     * @param _sla_period_ends 9. array with the values for the \"end\" of every period\n     */\n    constructor(\n        address _owner,\n        bytes32[] memory _SLONames,\n        SLO[] memory _SLOs,\n        uint256 _stake,\n        string memory _ipfsHash,\n        uint256 _sliInterval,\n        bDSLAToken _tokenAddress,\n        uint256[] memory _sla_period_starts,\n        uint256[] memory _sla_period_ends\n    )\n        public\n        Staking(_tokenAddress, _sla_period_starts, _sla_period_ends, _owner)\n    {\n        require(_SLOs.length < 5, \"max amount of SLOs is 5\");\n        require(\n            _SLONames.length == _SLOs.length,\n            \"_SLONames and _SLOs should have the same length\"\n        );\n\n        for (uint256 i = 0; i < _SLOs.length; i++) {\n            SLOs[_SLONames[i]] = _SLOs[i];\n        }\n\n        transferOwnership(_owner);\n        SLONames = _SLONames;\n        stake = _stake;\n        ipfsHash = _ipfsHash;\n        registry = SLARegistry(msg.sender);\n        sliInterval = _sliInterval;\n    }\n\n    /**\n     * @dev external function to register SLI's and check them against the SLO's\n     * @param _SLOName 1. the name of the SLO in bytes32\n     * @param _value 2. the value of the SLI to check\n     * @param _periodId 3. the id of the given period\n     */\n    function registerSLI(\n        bytes32 _SLOName,\n        uint256 _value,\n        uint256 _periodId\n    ) external onlyMessenger {\n        SLIs[_SLOName].push(SLI(block.timestamp, _value, _periodId));\n\n        emit SLICreated(block.timestamp, _value, _periodId);\n\n        if (!SLOs[_SLOName].isSLOHonored(_value)) {\n            periods[_periodId].status = Status.NotRespected;\n        } else {\n            periods[_periodId].status = Status.Respected;\n        }\n    }\n\n    /**\n     * @dev external function to get SLIs of certain _SLO\n     * @param _SLOName 1. the name of the SLO in bytes32\n     * @return SLI[] array of SLIs associated to the input SLOs\n     */\n    function getSLI(bytes32 _SLOName) public view returns (SLI[] memory) {\n        return SLIs[_SLOName];\n    }\n\n    /**\n     * @dev external view function that returns the sliInterval value\n     · @return uint256 value of the sliInterval\n     */\n    function getSliInterval() external view returns (uint256) {\n        return sliInterval;\n    }\n\n    /**\n     * @dev external view function that returns all agreement information\n     * @return address owner\n     * @return string ipfsHash\n     * @return uint256 amount necessary to stake\n     * @return bytes32[] SLONames array\n     * @return SLO[] SLO addresses array\n     */\n\n    function getDetails()\n        external\n        view\n        returns (\n            address,\n            string memory,\n            uint256,\n            bytes32[] memory,\n            SLO[] memory\n        )\n    {\n        SLO[] memory _SLOAddresses = new SLO[](SLONames.length);\n\n        for (uint256 i = 0; i < SLONames.length; i++) {\n            _SLOAddresses[i] = SLOs[SLONames[i]];\n        }\n\n        return (owner(), ipfsHash, stake, SLONames, _SLOAddresses);\n    }\n}\n",
  "sourcePath": "/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLA/SLA.sol",
  "ast": {
    "absolutePath": "/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLA/SLA.sol",
    "exportedSymbols": {
      "SLA": [
        667
      ]
    },
    "id": 668,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 350,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:2"
      },
      {
        "id": 351,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 352,
        "nodeType": "ImportDirective",
        "scope": 668,
        "sourceUnit": 5229,
        "src": "91:52:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 353,
        "nodeType": "ImportDirective",
        "scope": 668,
        "sourceUnit": 6239,
        "src": "144:56:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 354,
        "nodeType": "ImportDirective",
        "scope": 668,
        "sourceUnit": 5425,
        "src": "201:51:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLO/SLO.sol",
        "file": "../SLO/SLO.sol",
        "id": 355,
        "nodeType": "ImportDirective",
        "scope": 668,
        "sourceUnit": 2301,
        "src": "253:24:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLARegistry.sol",
        "file": "../SLARegistry.sol",
        "id": 356,
        "nodeType": "ImportDirective",
        "scope": 668,
        "sourceUnit": 2170,
        "src": "278:28:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLA/Staking.sol",
        "file": "./Staking.sol",
        "id": 357,
        "nodeType": "ImportDirective",
        "scope": 668,
        "sourceUnit": 1792,
        "src": "307:23:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 359,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5228,
              "src": "462:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$5228",
                "typeString": "contract Ownable"
              }
            },
            "id": 360,
            "nodeType": "InheritanceSpecifier",
            "src": "462:7:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 361,
              "name": "Staking",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1791,
              "src": "471:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Staking_$1791",
                "typeString": "contract Staking"
              }
            },
            "id": 362,
            "nodeType": "InheritanceSpecifier",
            "src": "471:7:2"
          }
        ],
        "contractDependencies": [
          1791,
          4836,
          5228
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 358,
          "nodeType": "StructuredDocumentation",
          "src": "332:113:2",
          "text": " @title SLA\n @dev SLA is a service level agreement contract used for service downtime\n compensation"
        },
        "fullyImplemented": true,
        "id": 667,
        "linearizedBaseContracts": [
          667,
          1791,
          5228,
          4836
        ],
        "name": "SLA",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 365,
            "libraryName": {
              "contractScope": null,
              "id": 363,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5424,
              "src": "491:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$5424",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "485:27:2",
            "typeName": {
              "id": 364,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "504:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "documentation": {
              "id": 366,
              "nodeType": "StructuredDocumentation",
              "src": "518:71:2",
              "text": "@dev The required amount to stake when subscribing to the agreement"
            },
            "functionSelector": "3a4b66f1",
            "id": 368,
            "mutability": "mutable",
            "name": "stake",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 667,
            "src": "594:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 367,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "594:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 369,
              "nodeType": "StructuredDocumentation",
              "src": "621:42:2",
              "text": "@dev The time between SLI registration"
            },
            "id": 371,
            "mutability": "mutable",
            "name": "sliInterval",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 667,
            "src": "668:27:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 370,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "668:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 372,
              "nodeType": "StructuredDocumentation",
              "src": "702:72:2",
              "text": "@dev The ipfs hash that stores extra information about the agreement"
            },
            "functionSelector": "c623674f",
            "id": 374,
            "mutability": "mutable",
            "name": "ipfsHash",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 667,
            "src": "779:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 373,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "779:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 375,
              "nodeType": "StructuredDocumentation",
              "src": "808:45:2",
              "text": "@dev The address of the registry contract"
            },
            "functionSelector": "7b103999",
            "id": 377,
            "mutability": "mutable",
            "name": "registry",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 667,
            "src": "858:27:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SLARegistry_$2169",
              "typeString": "contract SLARegistry"
            },
            "typeName": {
              "contractScope": null,
              "id": 376,
              "name": "SLARegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2169,
              "src": "858:11:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SLARegistry_$2169",
                "typeString": "contract SLARegistry"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "SLA.SLI",
            "id": 384,
            "members": [
              {
                "constant": false,
                "id": 379,
                "mutability": "mutable",
                "name": "timestamp",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 384,
                "src": "967:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 378,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "967:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 381,
                "mutability": "mutable",
                "name": "value",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 384,
                "src": "994:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 380,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "994:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 383,
                "mutability": "mutable",
                "name": "periodId",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 384,
                "src": "1017:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 382,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1017:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "SLI",
            "nodeType": "StructDefinition",
            "scope": 667,
            "src": "946:94:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 385,
              "nodeType": "StructuredDocumentation",
              "src": "1046:63:2",
              "text": "@dev mapping to get SLO addresses from SLO names in bytes32"
            },
            "functionSelector": "b0227b47",
            "id": 389,
            "mutability": "mutable",
            "name": "SLOs",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 667,
            "src": "1114:35:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$2300_$",
              "typeString": "mapping(bytes32 => contract SLO)"
            },
            "typeName": {
              "id": 388,
              "keyType": {
                "id": 386,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1122:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1114:23:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$2300_$",
                "typeString": "mapping(bytes32 => contract SLO)"
              },
              "valueType": {
                "contractScope": null,
                "id": 387,
                "name": "SLO",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 2300,
                "src": "1133:3:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_SLO_$2300",
                  "typeString": "contract SLO"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 390,
              "nodeType": "StructuredDocumentation",
              "src": "1156:61:2",
              "text": "@dev mapping to get SLI structs from SLO names in bytes32"
            },
            "functionSelector": "94199c61",
            "id": 395,
            "mutability": "mutable",
            "name": "SLIs",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 667,
            "src": "1222:37:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$384_storage_$dyn_storage_$",
              "typeString": "mapping(bytes32 => struct SLA.SLI[])"
            },
            "typeName": {
              "id": 394,
              "keyType": {
                "id": 391,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1230:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1222:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$384_storage_$dyn_storage_$",
                "typeString": "mapping(bytes32 => struct SLA.SLI[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 392,
                  "name": "SLI",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 384,
                  "src": "1241:3:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SLI_$384_storage_ptr",
                    "typeString": "struct SLA.SLI"
                  }
                },
                "id": 393,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "1241:5:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_SLI_$384_storage_$dyn_storage_ptr",
                  "typeString": "struct SLA.SLI[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 396,
              "nodeType": "StructuredDocumentation",
              "src": "1266:63:2",
              "text": "@dev array storing the names of the SLO's of this agreement"
            },
            "functionSelector": "f34ed40d",
            "id": 399,
            "mutability": "mutable",
            "name": "SLONames",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 667,
            "src": "1334:25:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
              "typeString": "bytes32[]"
            },
            "typeName": {
              "baseType": {
                "id": 397,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1334:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "id": 398,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "1334:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                "typeString": "bytes32[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 400,
              "nodeType": "StructuredDocumentation",
              "src": "1366:218:2",
              "text": " @dev event for SLI creation logging\n @param _timestamp 1. the time the SLI has been registered\n @param _value 2. the value of the SLI\n @param _periodId 3. the id of the given period"
            },
            "id": 408,
            "name": "SLICreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 402,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_timestamp",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 408,
                  "src": "1606:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 401,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1606:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 404,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 408,
                  "src": "1626:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 403,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1626:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 406,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_periodId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 408,
                  "src": "1642:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 405,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1642:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1605:55:2"
            },
            "src": "1589:72:2"
          },
          {
            "body": {
              "id": 425,
              "nodeType": "Block",
              "src": "1787:155:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 412,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1818:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1818:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 416,
                                  "name": "registry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 377,
                                  "src": "1840:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SLARegistry_$2169",
                                    "typeString": "contract SLARegistry"
                                  }
                                },
                                "id": 417,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "messenger",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1827,
                                "src": "1840:18:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_Messenger_$291_$",
                                  "typeString": "function () view external returns (contract Messenger)"
                                }
                              },
                              "id": 418,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1840:20:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Messenger_$291",
                                "typeString": "contract Messenger"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Messenger_$291",
                                "typeString": "contract Messenger"
                              }
                            ],
                            "id": 415,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1832:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 414,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1832:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1832:29:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1818:43:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c79204d657373656e6765722063616e2063616c6c20746869732066756e7463696f6e",
                        "id": 421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1875:39:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_467737b4c3c908f2cdc14d03ad6e6083b866bad6901b6ebb82e8ea7edaea96db",
                          "typeString": "literal_string \"Only Messenger can call this funtcion\""
                        },
                        "value": "Only Messenger can call this funtcion"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_467737b4c3c908f2cdc14d03ad6e6083b866bad6901b6ebb82e8ea7edaea96db",
                          "typeString": "literal_string \"Only Messenger can call this funtcion\""
                        }
                      ],
                      "id": 411,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1797:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1797:127:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 423,
                  "nodeType": "ExpressionStatement",
                  "src": "1797:127:2"
                },
                {
                  "id": 424,
                  "nodeType": "PlaceholderStatement",
                  "src": "1934:1:2"
                }
              ]
            },
            "documentation": {
              "id": 409,
              "nodeType": "StructuredDocumentation",
              "src": "1667:90:2",
              "text": " @dev throws if called by any address other than the messenger contract."
            },
            "id": 426,
            "name": "onlyMessenger",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1784:2:2"
            },
            "src": "1762:180:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 525,
              "nodeType": "Block",
              "src": "3244:512:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 459,
                            "name": "_SLOs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 435,
                            "src": "3262:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_SLO_$2300_$dyn_memory_ptr",
                              "typeString": "contract SLO[] memory"
                            }
                          },
                          "id": 460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3262:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "35",
                          "id": 461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3277:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "src": "3262:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6d617820616d6f756e74206f6620534c4f732069732035",
                        "id": 463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3280:25:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be84bcce5cdf21effcf26df15f43c34c7a80dbc4bd54884dca3d795818fbfe95",
                          "typeString": "literal_string \"max amount of SLOs is 5\""
                        },
                        "value": "max amount of SLOs is 5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be84bcce5cdf21effcf26df15f43c34c7a80dbc4bd54884dca3d795818fbfe95",
                          "typeString": "literal_string \"max amount of SLOs is 5\""
                        }
                      ],
                      "id": 458,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3254:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3254:52:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 465,
                  "nodeType": "ExpressionStatement",
                  "src": "3254:52:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 467,
                            "name": "_SLONames",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 432,
                            "src": "3337:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          "id": 468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3337:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 469,
                            "name": "_SLOs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 435,
                            "src": "3357:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_SLO_$2300_$dyn_memory_ptr",
                              "typeString": "contract SLO[] memory"
                            }
                          },
                          "id": 470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3357:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3337:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5f534c4f4e616d657320616e64205f534c4f732073686f756c642068617665207468652073616d65206c656e677468",
                        "id": 472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3383:49:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b3b41b8359a1b0d52aeb9a136881798f1d5820dbfe964604a8e4ebb7ce8ebc0b",
                          "typeString": "literal_string \"_SLONames and _SLOs should have the same length\""
                        },
                        "value": "_SLONames and _SLOs should have the same length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b3b41b8359a1b0d52aeb9a136881798f1d5820dbfe964604a8e4ebb7ce8ebc0b",
                          "typeString": "literal_string \"_SLONames and _SLOs should have the same length\""
                        }
                      ],
                      "id": 466,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3316:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3316:126:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 474,
                  "nodeType": "ExpressionStatement",
                  "src": "3316:126:2"
                },
                {
                  "body": {
                    "id": 496,
                    "nodeType": "Block",
                    "src": "3496:54:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 486,
                              "name": "SLOs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 389,
                              "src": "3510:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$2300_$",
                                "typeString": "mapping(bytes32 => contract SLO)"
                              }
                            },
                            "id": 490,
                            "indexExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 487,
                                "name": "_SLONames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 432,
                                "src": "3515:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                }
                              },
                              "id": 489,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 488,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 476,
                                "src": "3525:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3515:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3510:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLO_$2300",
                              "typeString": "contract SLO"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 491,
                              "name": "_SLOs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 435,
                              "src": "3531:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_SLO_$2300_$dyn_memory_ptr",
                                "typeString": "contract SLO[] memory"
                              }
                            },
                            "id": 493,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 492,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 476,
                              "src": "3537:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3531:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLO_$2300",
                              "typeString": "contract SLO"
                            }
                          },
                          "src": "3510:29:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$2300",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 495,
                        "nodeType": "ExpressionStatement",
                        "src": "3510:29:2"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 479,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 476,
                      "src": "3473:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 480,
                        "name": "_SLOs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 435,
                        "src": "3477:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_SLO_$2300_$dyn_memory_ptr",
                          "typeString": "contract SLO[] memory"
                        }
                      },
                      "id": 481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3477:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3473:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 497,
                  "initializationExpression": {
                    "assignments": [
                      476
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 476,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 497,
                        "src": "3458:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 475,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3458:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 478,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 477,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3470:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3458:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 484,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3491:3:2",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 483,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 476,
                        "src": "3491:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 485,
                    "nodeType": "ExpressionStatement",
                    "src": "3491:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "3453:97:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 499,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 429,
                        "src": "3578:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 498,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5227,
                      "src": "3560:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3560:25:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 501,
                  "nodeType": "ExpressionStatement",
                  "src": "3560:25:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 502,
                      "name": "SLONames",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 399,
                      "src": "3595:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                        "typeString": "bytes32[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 503,
                      "name": "_SLONames",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 432,
                      "src": "3606:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[] memory"
                      }
                    },
                    "src": "3595:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                      "typeString": "bytes32[] storage ref"
                    }
                  },
                  "id": 505,
                  "nodeType": "ExpressionStatement",
                  "src": "3595:20:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 506,
                      "name": "stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 368,
                      "src": "3625:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 507,
                      "name": "_stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 437,
                      "src": "3633:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3625:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 509,
                  "nodeType": "ExpressionStatement",
                  "src": "3625:14:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 510,
                      "name": "ipfsHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 374,
                      "src": "3649:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 511,
                      "name": "_ipfsHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 439,
                      "src": "3660:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3649:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 513,
                  "nodeType": "ExpressionStatement",
                  "src": "3649:20:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 514,
                      "name": "registry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 377,
                      "src": "3679:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLARegistry_$2169",
                        "typeString": "contract SLARegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 516,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3702:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3702:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 515,
                        "name": "SLARegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2169,
                        "src": "3690:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SLARegistry_$2169_$",
                          "typeString": "type(contract SLARegistry)"
                        }
                      },
                      "id": 518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3690:23:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLARegistry_$2169",
                        "typeString": "contract SLARegistry"
                      }
                    },
                    "src": "3679:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SLARegistry_$2169",
                      "typeString": "contract SLARegistry"
                    }
                  },
                  "id": 520,
                  "nodeType": "ExpressionStatement",
                  "src": "3679:34:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 521,
                      "name": "sliInterval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 371,
                      "src": "3723:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 522,
                      "name": "_sliInterval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 441,
                      "src": "3737:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3723:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 524,
                  "nodeType": "ExpressionStatement",
                  "src": "3723:26:2"
                }
              ]
            },
            "documentation": {
              "id": 427,
              "nodeType": "StructuredDocumentation",
              "src": "1948:880:2",
              "text": " @param _owner 1. address of the owner of the service level agreement\n @param _SLONames 2. array of the names of the service level objectives\n in bytes32\n @param _SLOs 3. array of service level objective contract addressess\n service level objective breach\n @param _stake 4. uint of the amount required to stake when signing the\n service level agreement\n @param _ipfsHash 5. string with the ipfs hash that contains extra\n information about the service level agreement\n @param _sliInterval 6. uint the interval in seconds between requesting a new SLI\n @param _tokenAddress 7. address of the DSLA token to be unlocked for staking\n @param _sla_period_starts 8. array with the values for the \"start\" of every period\n @param _sla_period_ends 9. array with the values for the \"end\" of every period"
            },
            "id": 526,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 452,
                    "name": "_tokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 443,
                    "src": "3179:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_bDSLAToken_$2796",
                      "typeString": "contract bDSLAToken"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 453,
                    "name": "_sla_period_starts",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 446,
                    "src": "3194:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 454,
                    "name": "_sla_period_ends",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 449,
                    "src": "3214:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 455,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 429,
                    "src": "3232:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 456,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 451,
                  "name": "Staking",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1791,
                  "src": "3171:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Staking_$1791_$",
                    "typeString": "type(contract Staking)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3171:68:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 429,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 526,
                  "src": "2854:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 428,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2854:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 432,
                  "mutability": "mutable",
                  "name": "_SLONames",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 526,
                  "src": "2878:26:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 430,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2878:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 431,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2878:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 435,
                  "mutability": "mutable",
                  "name": "_SLOs",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 526,
                  "src": "2914:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_SLO_$2300_$dyn_memory_ptr",
                    "typeString": "contract SLO[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 433,
                      "name": "SLO",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 2300,
                      "src": "2914:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLO_$2300",
                        "typeString": "contract SLO"
                      }
                    },
                    "id": 434,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2914:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_SLO_$2300_$dyn_storage_ptr",
                      "typeString": "contract SLO[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 437,
                  "mutability": "mutable",
                  "name": "_stake",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 526,
                  "src": "2942:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 436,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2942:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 439,
                  "mutability": "mutable",
                  "name": "_ipfsHash",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 526,
                  "src": "2966:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 438,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2966:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 441,
                  "mutability": "mutable",
                  "name": "_sliInterval",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 526,
                  "src": "2999:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 440,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2999:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 443,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 526,
                  "src": "3029:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_bDSLAToken_$2796",
                    "typeString": "contract bDSLAToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 442,
                    "name": "bDSLAToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2796,
                    "src": "3029:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_bDSLAToken_$2796",
                      "typeString": "contract bDSLAToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 446,
                  "mutability": "mutable",
                  "name": "_sla_period_starts",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 526,
                  "src": "3063:35:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 444,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3063:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 445,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3063:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 449,
                  "mutability": "mutable",
                  "name": "_sla_period_ends",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 526,
                  "src": "3108:33:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 447,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3108:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 448,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3108:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2844:303:2"
            },
            "returnParameters": {
              "id": 457,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3244:0:2"
            },
            "scope": 667,
            "src": "2833:923:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 583,
              "nodeType": "Block",
              "src": "4151:338:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 543,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "4185:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 544,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4185:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 545,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 531,
                            "src": "4202:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 546,
                            "name": "_periodId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 533,
                            "src": "4210:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 542,
                          "name": "SLI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 384,
                          "src": "4181:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_SLI_$384_storage_ptr_$",
                            "typeString": "type(struct SLA.SLI storage pointer)"
                          }
                        },
                        "id": 547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4181:39:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SLI_$384_memory_ptr",
                          "typeString": "struct SLA.SLI memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SLI_$384_memory_ptr",
                          "typeString": "struct SLA.SLI memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 538,
                          "name": "SLIs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 395,
                          "src": "4161:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$384_storage_$dyn_storage_$",
                            "typeString": "mapping(bytes32 => struct SLA.SLI storage ref[] storage ref)"
                          }
                        },
                        "id": 540,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 539,
                          "name": "_SLOName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 529,
                          "src": "4166:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4161:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_SLI_$384_storage_$dyn_storage",
                          "typeString": "struct SLA.SLI storage ref[] storage ref"
                        }
                      },
                      "id": 541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4161:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_SLI_$384_storage_$returns$__$",
                        "typeString": "function (struct SLA.SLI storage ref)"
                      }
                    },
                    "id": 548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4161:60:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 549,
                  "nodeType": "ExpressionStatement",
                  "src": "4161:60:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 551,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "4248:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4248:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 553,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 531,
                        "src": "4265:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 554,
                        "name": "_periodId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 533,
                        "src": "4273:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 550,
                      "name": "SLICreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 408,
                      "src": "4237:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256)"
                      }
                    },
                    "id": 555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4237:46:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 556,
                  "nodeType": "EmitStatement",
                  "src": "4232:51:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4298:36:2",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 561,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 531,
                          "src": "4327:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 557,
                            "name": "SLOs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 389,
                            "src": "4299:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$2300_$",
                              "typeString": "mapping(bytes32 => contract SLO)"
                            }
                          },
                          "id": 559,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 558,
                            "name": "_SLOName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 529,
                            "src": "4304:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4299:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$2300",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isSLOHonored",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2299,
                        "src": "4299:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view external returns (bool)"
                        }
                      },
                      "id": 562,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4299:35:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 581,
                    "nodeType": "Block",
                    "src": "4414:69:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 573,
                                "name": "periods",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 725,
                                "src": "4428:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Period_$703_storage_$dyn_storage",
                                  "typeString": "struct Staking.Period storage ref[] storage ref"
                                }
                              },
                              "id": 575,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 574,
                                "name": "_periodId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 533,
                                "src": "4436:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4428:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Period_$703_storage",
                                "typeString": "struct Staking.Period storage ref"
                              }
                            },
                            "id": 576,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 692,
                            "src": "4428:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$682",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 577,
                              "name": "Status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 682,
                              "src": "4456:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Status_$682_$",
                                "typeString": "type(enum Staking.Status)"
                              }
                            },
                            "id": 578,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Respected",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4456:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$682",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "src": "4428:44:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$682",
                            "typeString": "enum Staking.Status"
                          }
                        },
                        "id": 580,
                        "nodeType": "ExpressionStatement",
                        "src": "4428:44:2"
                      }
                    ]
                  },
                  "id": 582,
                  "nodeType": "IfStatement",
                  "src": "4294:189:2",
                  "trueBody": {
                    "id": 572,
                    "nodeType": "Block",
                    "src": "4336:72:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 564,
                                "name": "periods",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 725,
                                "src": "4350:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Period_$703_storage_$dyn_storage",
                                  "typeString": "struct Staking.Period storage ref[] storage ref"
                                }
                              },
                              "id": 566,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 565,
                                "name": "_periodId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 533,
                                "src": "4358:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4350:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Period_$703_storage",
                                "typeString": "struct Staking.Period storage ref"
                              }
                            },
                            "id": 567,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 692,
                            "src": "4350:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$682",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 568,
                              "name": "Status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 682,
                              "src": "4378:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Status_$682_$",
                                "typeString": "type(enum Staking.Status)"
                              }
                            },
                            "id": 569,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "NotRespected",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4378:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$682",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "src": "4350:47:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$682",
                            "typeString": "enum Staking.Status"
                          }
                        },
                        "id": 571,
                        "nodeType": "ExpressionStatement",
                        "src": "4350:47:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 527,
              "nodeType": "StructuredDocumentation",
              "src": "3762:257:2",
              "text": " @dev external function to register SLI's and check them against the SLO's\n @param _SLOName 1. the name of the SLO in bytes32\n @param _value 2. the value of the SLI to check\n @param _periodId 3. the id of the given period"
            },
            "functionSelector": "869c3925",
            "id": 584,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 536,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 535,
                  "name": "onlyMessenger",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 426,
                  "src": "4137:13:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4137:13:2"
              }
            ],
            "name": "registerSLI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 534,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 529,
                  "mutability": "mutable",
                  "name": "_SLOName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 584,
                  "src": "4054:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 528,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4054:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 531,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 584,
                  "src": "4080:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 530,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4080:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 533,
                  "mutability": "mutable",
                  "name": "_periodId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 584,
                  "src": "4104:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 532,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4104:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4044:83:2"
            },
            "returnParameters": {
              "id": 537,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4151:0:2"
            },
            "scope": 667,
            "src": "4024:465:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 597,
              "nodeType": "Block",
              "src": "4759:38:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 593,
                      "name": "SLIs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 395,
                      "src": "4776:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$384_storage_$dyn_storage_$",
                        "typeString": "mapping(bytes32 => struct SLA.SLI storage ref[] storage ref)"
                      }
                    },
                    "id": 595,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 594,
                      "name": "_SLOName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 587,
                      "src": "4781:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4776:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_SLI_$384_storage_$dyn_storage",
                      "typeString": "struct SLA.SLI storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 592,
                  "id": 596,
                  "nodeType": "Return",
                  "src": "4769:21:2"
                }
              ]
            },
            "documentation": {
              "id": 585,
              "nodeType": "StructuredDocumentation",
              "src": "4495:190:2",
              "text": " @dev external function to get SLIs of certain _SLO\n @param _SLOName 1. the name of the SLO in bytes32\n @return SLI[] array of SLIs associated to the input SLOs"
            },
            "functionSelector": "02e8b893",
            "id": 598,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSLI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 588,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 587,
                  "mutability": "mutable",
                  "name": "_SLOName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 598,
                  "src": "4706:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 586,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4706:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4705:18:2"
            },
            "returnParameters": {
              "id": 592,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 591,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 598,
                  "src": "4745:12:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_SLI_$384_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct SLA.SLI[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 589,
                      "name": "SLI",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 384,
                      "src": "4745:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SLI_$384_storage_ptr",
                        "typeString": "struct SLA.SLI"
                      }
                    },
                    "id": 590,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4745:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_SLI_$384_storage_$dyn_storage_ptr",
                      "typeString": "struct SLA.SLI[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4744:14:2"
            },
            "scope": 667,
            "src": "4690:107:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 606,
              "nodeType": "Block",
              "src": "4996:35:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 604,
                    "name": "sliInterval",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 371,
                    "src": "5013:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 603,
                  "id": 605,
                  "nodeType": "Return",
                  "src": "5006:18:2"
                }
              ]
            },
            "documentation": {
              "id": 599,
              "nodeType": "StructuredDocumentation",
              "src": "4803:130:2",
              "text": " @dev external view function that returns the sliInterval value\n· @return uint256 value of the sliInterval"
            },
            "functionSelector": "e7ab816a",
            "id": 607,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSliInterval",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 600,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4961:2:2"
            },
            "returnParameters": {
              "id": 603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 602,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 607,
                  "src": "4987:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 601,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4987:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4986:9:2"
            },
            "scope": 667,
            "src": "4938:93:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 665,
              "nodeType": "Block",
              "src": "5526:258:2",
              "statements": [
                {
                  "assignments": [
                    626
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 626,
                      "mutability": "mutable",
                      "name": "_SLOAddresses",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 665,
                      "src": "5536:26:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_SLO_$2300_$dyn_memory_ptr",
                        "typeString": "contract SLO[]"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 624,
                          "name": "SLO",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 2300,
                          "src": "5536:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$2300",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 625,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "5536:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_SLO_$2300_$dyn_storage_ptr",
                          "typeString": "contract SLO[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 633,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 630,
                          "name": "SLONames",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 399,
                          "src": "5575:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                            "typeString": "bytes32[] storage ref"
                          }
                        },
                        "id": 631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5575:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 629,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "5565:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_SLO_$2300_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (contract SLO[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 627,
                          "name": "SLO",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 2300,
                          "src": "5569:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$2300",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 628,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "5569:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_SLO_$2300_$dyn_storage_ptr",
                          "typeString": "contract SLO[]"
                        }
                      }
                    },
                    "id": 632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5565:26:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_SLO_$2300_$dyn_memory_ptr",
                      "typeString": "contract SLO[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5536:55:2"
                },
                {
                  "body": {
                    "id": 655,
                    "nodeType": "Block",
                    "src": "5648:61:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 645,
                              "name": "_SLOAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 626,
                              "src": "5662:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_SLO_$2300_$dyn_memory_ptr",
                                "typeString": "contract SLO[] memory"
                              }
                            },
                            "id": 647,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 646,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 635,
                              "src": "5676:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5662:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLO_$2300",
                              "typeString": "contract SLO"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 648,
                              "name": "SLOs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 389,
                              "src": "5681:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$2300_$",
                                "typeString": "mapping(bytes32 => contract SLO)"
                              }
                            },
                            "id": 652,
                            "indexExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 649,
                                "name": "SLONames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 399,
                                "src": "5686:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                  "typeString": "bytes32[] storage ref"
                                }
                              },
                              "id": 651,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 650,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 635,
                                "src": "5695:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5686:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5681:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLO_$2300",
                              "typeString": "contract SLO"
                            }
                          },
                          "src": "5662:36:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$2300",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 654,
                        "nodeType": "ExpressionStatement",
                        "src": "5662:36:2"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 638,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 635,
                      "src": "5622:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 639,
                        "name": "SLONames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 399,
                        "src": "5626:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      "id": 640,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5626:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5622:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 656,
                  "initializationExpression": {
                    "assignments": [
                      635
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 635,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 656,
                        "src": "5607:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 634,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5607:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 637,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5619:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5607:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5643:3:2",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 642,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 635,
                        "src": "5643:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 644,
                    "nodeType": "ExpressionStatement",
                    "src": "5643:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "5602:107:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 657,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5164,
                          "src": "5727:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5727:7:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 659,
                        "name": "ipfsHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 374,
                        "src": "5736:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 660,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 368,
                        "src": "5746:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 661,
                        "name": "SLONames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 399,
                        "src": "5753:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 662,
                        "name": "_SLOAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 626,
                        "src": "5763:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_SLO_$2300_$dyn_memory_ptr",
                          "typeString": "contract SLO[] memory"
                        }
                      }
                    ],
                    "id": 663,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5726:51:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_string_storage_$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$_t_array$_t_contract$_SLO_$2300_$dyn_memory_ptr_$",
                      "typeString": "tuple(address,string storage ref,uint256,bytes32[] storage ref,contract SLO[] memory)"
                    }
                  },
                  "functionReturnParameters": 622,
                  "id": 664,
                  "nodeType": "Return",
                  "src": "5719:58:2"
                }
              ]
            },
            "documentation": {
              "id": 608,
              "nodeType": "StructuredDocumentation",
              "src": "5037:275:2",
              "text": " @dev external view function that returns all agreement information\n @return address owner\n @return string ipfsHash\n @return uint256 amount necessary to stake\n @return bytes32[] SLONames array\n @return SLO[] SLO addresses array"
            },
            "functionSelector": "fbbf93a0",
            "id": 666,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDetails",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 609,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5337:2:2"
            },
            "returnParameters": {
              "id": 622,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 611,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 666,
                  "src": "5400:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 610,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5400:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 613,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 666,
                  "src": "5421:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 612,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5421:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 615,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 666,
                  "src": "5448:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 614,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5448:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 618,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 666,
                  "src": "5469:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 616,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "5469:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 617,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5469:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 621,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 666,
                  "src": "5499:12:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_SLO_$2300_$dyn_memory_ptr",
                    "typeString": "contract SLO[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 619,
                      "name": "SLO",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 2300,
                      "src": "5499:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLO_$2300",
                        "typeString": "contract SLO"
                      }
                    },
                    "id": 620,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5499:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_SLO_$2300_$dyn_storage_ptr",
                      "typeString": "contract SLO[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5386:135:2"
            },
            "scope": 667,
            "src": "5318:466:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 668,
        "src": "446:5340:2"
      }
    ],
    "src": "32:5755:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLA/SLA.sol",
    "exportedSymbols": {
      "SLA": [
        667
      ]
    },
    "id": 668,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 350,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:2"
      },
      {
        "id": 351,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 352,
        "nodeType": "ImportDirective",
        "scope": 668,
        "sourceUnit": 5229,
        "src": "91:52:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 353,
        "nodeType": "ImportDirective",
        "scope": 668,
        "sourceUnit": 6239,
        "src": "144:56:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 354,
        "nodeType": "ImportDirective",
        "scope": 668,
        "sourceUnit": 5425,
        "src": "201:51:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLO/SLO.sol",
        "file": "../SLO/SLO.sol",
        "id": 355,
        "nodeType": "ImportDirective",
        "scope": 668,
        "sourceUnit": 2301,
        "src": "253:24:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLARegistry.sol",
        "file": "../SLARegistry.sol",
        "id": 356,
        "nodeType": "ImportDirective",
        "scope": 668,
        "sourceUnit": 2170,
        "src": "278:28:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLA/Staking.sol",
        "file": "./Staking.sol",
        "id": 357,
        "nodeType": "ImportDirective",
        "scope": 668,
        "sourceUnit": 1792,
        "src": "307:23:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 359,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5228,
              "src": "462:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$5228",
                "typeString": "contract Ownable"
              }
            },
            "id": 360,
            "nodeType": "InheritanceSpecifier",
            "src": "462:7:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 361,
              "name": "Staking",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1791,
              "src": "471:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Staking_$1791",
                "typeString": "contract Staking"
              }
            },
            "id": 362,
            "nodeType": "InheritanceSpecifier",
            "src": "471:7:2"
          }
        ],
        "contractDependencies": [
          1791,
          4836,
          5228
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 358,
          "nodeType": "StructuredDocumentation",
          "src": "332:113:2",
          "text": " @title SLA\n @dev SLA is a service level agreement contract used for service downtime\n compensation"
        },
        "fullyImplemented": true,
        "id": 667,
        "linearizedBaseContracts": [
          667,
          1791,
          5228,
          4836
        ],
        "name": "SLA",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 365,
            "libraryName": {
              "contractScope": null,
              "id": 363,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5424,
              "src": "491:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$5424",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "485:27:2",
            "typeName": {
              "id": 364,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "504:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "documentation": {
              "id": 366,
              "nodeType": "StructuredDocumentation",
              "src": "518:71:2",
              "text": "@dev The required amount to stake when subscribing to the agreement"
            },
            "functionSelector": "3a4b66f1",
            "id": 368,
            "mutability": "mutable",
            "name": "stake",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 667,
            "src": "594:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 367,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "594:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 369,
              "nodeType": "StructuredDocumentation",
              "src": "621:42:2",
              "text": "@dev The time between SLI registration"
            },
            "id": 371,
            "mutability": "mutable",
            "name": "sliInterval",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 667,
            "src": "668:27:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 370,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "668:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 372,
              "nodeType": "StructuredDocumentation",
              "src": "702:72:2",
              "text": "@dev The ipfs hash that stores extra information about the agreement"
            },
            "functionSelector": "c623674f",
            "id": 374,
            "mutability": "mutable",
            "name": "ipfsHash",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 667,
            "src": "779:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 373,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "779:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 375,
              "nodeType": "StructuredDocumentation",
              "src": "808:45:2",
              "text": "@dev The address of the registry contract"
            },
            "functionSelector": "7b103999",
            "id": 377,
            "mutability": "mutable",
            "name": "registry",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 667,
            "src": "858:27:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SLARegistry_$2169",
              "typeString": "contract SLARegistry"
            },
            "typeName": {
              "contractScope": null,
              "id": 376,
              "name": "SLARegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2169,
              "src": "858:11:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SLARegistry_$2169",
                "typeString": "contract SLARegistry"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "SLA.SLI",
            "id": 384,
            "members": [
              {
                "constant": false,
                "id": 379,
                "mutability": "mutable",
                "name": "timestamp",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 384,
                "src": "967:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 378,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "967:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 381,
                "mutability": "mutable",
                "name": "value",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 384,
                "src": "994:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 380,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "994:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 383,
                "mutability": "mutable",
                "name": "periodId",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 384,
                "src": "1017:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 382,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1017:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "SLI",
            "nodeType": "StructDefinition",
            "scope": 667,
            "src": "946:94:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 385,
              "nodeType": "StructuredDocumentation",
              "src": "1046:63:2",
              "text": "@dev mapping to get SLO addresses from SLO names in bytes32"
            },
            "functionSelector": "b0227b47",
            "id": 389,
            "mutability": "mutable",
            "name": "SLOs",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 667,
            "src": "1114:35:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$2300_$",
              "typeString": "mapping(bytes32 => contract SLO)"
            },
            "typeName": {
              "id": 388,
              "keyType": {
                "id": 386,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1122:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1114:23:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$2300_$",
                "typeString": "mapping(bytes32 => contract SLO)"
              },
              "valueType": {
                "contractScope": null,
                "id": 387,
                "name": "SLO",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 2300,
                "src": "1133:3:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_SLO_$2300",
                  "typeString": "contract SLO"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 390,
              "nodeType": "StructuredDocumentation",
              "src": "1156:61:2",
              "text": "@dev mapping to get SLI structs from SLO names in bytes32"
            },
            "functionSelector": "94199c61",
            "id": 395,
            "mutability": "mutable",
            "name": "SLIs",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 667,
            "src": "1222:37:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$384_storage_$dyn_storage_$",
              "typeString": "mapping(bytes32 => struct SLA.SLI[])"
            },
            "typeName": {
              "id": 394,
              "keyType": {
                "id": 391,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1230:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1222:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$384_storage_$dyn_storage_$",
                "typeString": "mapping(bytes32 => struct SLA.SLI[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 392,
                  "name": "SLI",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 384,
                  "src": "1241:3:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SLI_$384_storage_ptr",
                    "typeString": "struct SLA.SLI"
                  }
                },
                "id": 393,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "1241:5:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_SLI_$384_storage_$dyn_storage_ptr",
                  "typeString": "struct SLA.SLI[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 396,
              "nodeType": "StructuredDocumentation",
              "src": "1266:63:2",
              "text": "@dev array storing the names of the SLO's of this agreement"
            },
            "functionSelector": "f34ed40d",
            "id": 399,
            "mutability": "mutable",
            "name": "SLONames",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 667,
            "src": "1334:25:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
              "typeString": "bytes32[]"
            },
            "typeName": {
              "baseType": {
                "id": 397,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1334:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "id": 398,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "1334:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                "typeString": "bytes32[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 400,
              "nodeType": "StructuredDocumentation",
              "src": "1366:218:2",
              "text": " @dev event for SLI creation logging\n @param _timestamp 1. the time the SLI has been registered\n @param _value 2. the value of the SLI\n @param _periodId 3. the id of the given period"
            },
            "id": 408,
            "name": "SLICreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 402,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_timestamp",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 408,
                  "src": "1606:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 401,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1606:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 404,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 408,
                  "src": "1626:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 403,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1626:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 406,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_periodId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 408,
                  "src": "1642:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 405,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1642:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1605:55:2"
            },
            "src": "1589:72:2"
          },
          {
            "body": {
              "id": 425,
              "nodeType": "Block",
              "src": "1787:155:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 412,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1818:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1818:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 416,
                                  "name": "registry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 377,
                                  "src": "1840:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SLARegistry_$2169",
                                    "typeString": "contract SLARegistry"
                                  }
                                },
                                "id": 417,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "messenger",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1827,
                                "src": "1840:18:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_Messenger_$291_$",
                                  "typeString": "function () view external returns (contract Messenger)"
                                }
                              },
                              "id": 418,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1840:20:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Messenger_$291",
                                "typeString": "contract Messenger"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Messenger_$291",
                                "typeString": "contract Messenger"
                              }
                            ],
                            "id": 415,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1832:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 414,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1832:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1832:29:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1818:43:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c79204d657373656e6765722063616e2063616c6c20746869732066756e7463696f6e",
                        "id": 421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1875:39:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_467737b4c3c908f2cdc14d03ad6e6083b866bad6901b6ebb82e8ea7edaea96db",
                          "typeString": "literal_string \"Only Messenger can call this funtcion\""
                        },
                        "value": "Only Messenger can call this funtcion"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_467737b4c3c908f2cdc14d03ad6e6083b866bad6901b6ebb82e8ea7edaea96db",
                          "typeString": "literal_string \"Only Messenger can call this funtcion\""
                        }
                      ],
                      "id": 411,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1797:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1797:127:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 423,
                  "nodeType": "ExpressionStatement",
                  "src": "1797:127:2"
                },
                {
                  "id": 424,
                  "nodeType": "PlaceholderStatement",
                  "src": "1934:1:2"
                }
              ]
            },
            "documentation": {
              "id": 409,
              "nodeType": "StructuredDocumentation",
              "src": "1667:90:2",
              "text": " @dev throws if called by any address other than the messenger contract."
            },
            "id": 426,
            "name": "onlyMessenger",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1784:2:2"
            },
            "src": "1762:180:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 525,
              "nodeType": "Block",
              "src": "3244:512:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 459,
                            "name": "_SLOs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 435,
                            "src": "3262:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_SLO_$2300_$dyn_memory_ptr",
                              "typeString": "contract SLO[] memory"
                            }
                          },
                          "id": 460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3262:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "35",
                          "id": 461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3277:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "src": "3262:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6d617820616d6f756e74206f6620534c4f732069732035",
                        "id": 463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3280:25:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be84bcce5cdf21effcf26df15f43c34c7a80dbc4bd54884dca3d795818fbfe95",
                          "typeString": "literal_string \"max amount of SLOs is 5\""
                        },
                        "value": "max amount of SLOs is 5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be84bcce5cdf21effcf26df15f43c34c7a80dbc4bd54884dca3d795818fbfe95",
                          "typeString": "literal_string \"max amount of SLOs is 5\""
                        }
                      ],
                      "id": 458,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3254:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3254:52:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 465,
                  "nodeType": "ExpressionStatement",
                  "src": "3254:52:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 467,
                            "name": "_SLONames",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 432,
                            "src": "3337:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          "id": 468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3337:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 469,
                            "name": "_SLOs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 435,
                            "src": "3357:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_SLO_$2300_$dyn_memory_ptr",
                              "typeString": "contract SLO[] memory"
                            }
                          },
                          "id": 470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3357:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3337:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5f534c4f4e616d657320616e64205f534c4f732073686f756c642068617665207468652073616d65206c656e677468",
                        "id": 472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3383:49:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b3b41b8359a1b0d52aeb9a136881798f1d5820dbfe964604a8e4ebb7ce8ebc0b",
                          "typeString": "literal_string \"_SLONames and _SLOs should have the same length\""
                        },
                        "value": "_SLONames and _SLOs should have the same length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b3b41b8359a1b0d52aeb9a136881798f1d5820dbfe964604a8e4ebb7ce8ebc0b",
                          "typeString": "literal_string \"_SLONames and _SLOs should have the same length\""
                        }
                      ],
                      "id": 466,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3316:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3316:126:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 474,
                  "nodeType": "ExpressionStatement",
                  "src": "3316:126:2"
                },
                {
                  "body": {
                    "id": 496,
                    "nodeType": "Block",
                    "src": "3496:54:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 486,
                              "name": "SLOs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 389,
                              "src": "3510:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$2300_$",
                                "typeString": "mapping(bytes32 => contract SLO)"
                              }
                            },
                            "id": 490,
                            "indexExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 487,
                                "name": "_SLONames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 432,
                                "src": "3515:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                }
                              },
                              "id": 489,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 488,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 476,
                                "src": "3525:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3515:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3510:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLO_$2300",
                              "typeString": "contract SLO"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 491,
                              "name": "_SLOs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 435,
                              "src": "3531:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_SLO_$2300_$dyn_memory_ptr",
                                "typeString": "contract SLO[] memory"
                              }
                            },
                            "id": 493,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 492,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 476,
                              "src": "3537:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3531:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLO_$2300",
                              "typeString": "contract SLO"
                            }
                          },
                          "src": "3510:29:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$2300",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 495,
                        "nodeType": "ExpressionStatement",
                        "src": "3510:29:2"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 479,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 476,
                      "src": "3473:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 480,
                        "name": "_SLOs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 435,
                        "src": "3477:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_SLO_$2300_$dyn_memory_ptr",
                          "typeString": "contract SLO[] memory"
                        }
                      },
                      "id": 481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3477:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3473:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 497,
                  "initializationExpression": {
                    "assignments": [
                      476
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 476,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 497,
                        "src": "3458:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 475,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3458:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 478,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 477,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3470:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3458:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 484,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3491:3:2",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 483,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 476,
                        "src": "3491:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 485,
                    "nodeType": "ExpressionStatement",
                    "src": "3491:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "3453:97:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 499,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 429,
                        "src": "3578:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 498,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5227,
                      "src": "3560:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3560:25:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 501,
                  "nodeType": "ExpressionStatement",
                  "src": "3560:25:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 502,
                      "name": "SLONames",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 399,
                      "src": "3595:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                        "typeString": "bytes32[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 503,
                      "name": "_SLONames",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 432,
                      "src": "3606:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[] memory"
                      }
                    },
                    "src": "3595:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                      "typeString": "bytes32[] storage ref"
                    }
                  },
                  "id": 505,
                  "nodeType": "ExpressionStatement",
                  "src": "3595:20:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 506,
                      "name": "stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 368,
                      "src": "3625:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 507,
                      "name": "_stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 437,
                      "src": "3633:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3625:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 509,
                  "nodeType": "ExpressionStatement",
                  "src": "3625:14:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 510,
                      "name": "ipfsHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 374,
                      "src": "3649:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 511,
                      "name": "_ipfsHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 439,
                      "src": "3660:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3649:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 513,
                  "nodeType": "ExpressionStatement",
                  "src": "3649:20:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 514,
                      "name": "registry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 377,
                      "src": "3679:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLARegistry_$2169",
                        "typeString": "contract SLARegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 516,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3702:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3702:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 515,
                        "name": "SLARegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2169,
                        "src": "3690:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SLARegistry_$2169_$",
                          "typeString": "type(contract SLARegistry)"
                        }
                      },
                      "id": 518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3690:23:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLARegistry_$2169",
                        "typeString": "contract SLARegistry"
                      }
                    },
                    "src": "3679:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SLARegistry_$2169",
                      "typeString": "contract SLARegistry"
                    }
                  },
                  "id": 520,
                  "nodeType": "ExpressionStatement",
                  "src": "3679:34:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 521,
                      "name": "sliInterval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 371,
                      "src": "3723:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 522,
                      "name": "_sliInterval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 441,
                      "src": "3737:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3723:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 524,
                  "nodeType": "ExpressionStatement",
                  "src": "3723:26:2"
                }
              ]
            },
            "documentation": {
              "id": 427,
              "nodeType": "StructuredDocumentation",
              "src": "1948:880:2",
              "text": " @param _owner 1. address of the owner of the service level agreement\n @param _SLONames 2. array of the names of the service level objectives\n in bytes32\n @param _SLOs 3. array of service level objective contract addressess\n service level objective breach\n @param _stake 4. uint of the amount required to stake when signing the\n service level agreement\n @param _ipfsHash 5. string with the ipfs hash that contains extra\n information about the service level agreement\n @param _sliInterval 6. uint the interval in seconds between requesting a new SLI\n @param _tokenAddress 7. address of the DSLA token to be unlocked for staking\n @param _sla_period_starts 8. array with the values for the \"start\" of every period\n @param _sla_period_ends 9. array with the values for the \"end\" of every period"
            },
            "id": 526,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 452,
                    "name": "_tokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 443,
                    "src": "3179:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_bDSLAToken_$2796",
                      "typeString": "contract bDSLAToken"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 453,
                    "name": "_sla_period_starts",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 446,
                    "src": "3194:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 454,
                    "name": "_sla_period_ends",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 449,
                    "src": "3214:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 455,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 429,
                    "src": "3232:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 456,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 451,
                  "name": "Staking",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1791,
                  "src": "3171:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Staking_$1791_$",
                    "typeString": "type(contract Staking)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3171:68:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 429,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 526,
                  "src": "2854:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 428,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2854:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 432,
                  "mutability": "mutable",
                  "name": "_SLONames",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 526,
                  "src": "2878:26:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 430,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2878:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 431,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2878:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 435,
                  "mutability": "mutable",
                  "name": "_SLOs",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 526,
                  "src": "2914:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_SLO_$2300_$dyn_memory_ptr",
                    "typeString": "contract SLO[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 433,
                      "name": "SLO",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 2300,
                      "src": "2914:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLO_$2300",
                        "typeString": "contract SLO"
                      }
                    },
                    "id": 434,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2914:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_SLO_$2300_$dyn_storage_ptr",
                      "typeString": "contract SLO[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 437,
                  "mutability": "mutable",
                  "name": "_stake",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 526,
                  "src": "2942:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 436,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2942:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 439,
                  "mutability": "mutable",
                  "name": "_ipfsHash",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 526,
                  "src": "2966:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 438,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2966:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 441,
                  "mutability": "mutable",
                  "name": "_sliInterval",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 526,
                  "src": "2999:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 440,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2999:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 443,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 526,
                  "src": "3029:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_bDSLAToken_$2796",
                    "typeString": "contract bDSLAToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 442,
                    "name": "bDSLAToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2796,
                    "src": "3029:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_bDSLAToken_$2796",
                      "typeString": "contract bDSLAToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 446,
                  "mutability": "mutable",
                  "name": "_sla_period_starts",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 526,
                  "src": "3063:35:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 444,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3063:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 445,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3063:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 449,
                  "mutability": "mutable",
                  "name": "_sla_period_ends",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 526,
                  "src": "3108:33:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 447,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3108:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 448,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3108:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2844:303:2"
            },
            "returnParameters": {
              "id": 457,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3244:0:2"
            },
            "scope": 667,
            "src": "2833:923:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 583,
              "nodeType": "Block",
              "src": "4151:338:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 543,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "4185:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 544,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4185:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 545,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 531,
                            "src": "4202:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 546,
                            "name": "_periodId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 533,
                            "src": "4210:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 542,
                          "name": "SLI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 384,
                          "src": "4181:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_SLI_$384_storage_ptr_$",
                            "typeString": "type(struct SLA.SLI storage pointer)"
                          }
                        },
                        "id": 547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4181:39:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SLI_$384_memory_ptr",
                          "typeString": "struct SLA.SLI memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SLI_$384_memory_ptr",
                          "typeString": "struct SLA.SLI memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 538,
                          "name": "SLIs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 395,
                          "src": "4161:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$384_storage_$dyn_storage_$",
                            "typeString": "mapping(bytes32 => struct SLA.SLI storage ref[] storage ref)"
                          }
                        },
                        "id": 540,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 539,
                          "name": "_SLOName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 529,
                          "src": "4166:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4161:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_SLI_$384_storage_$dyn_storage",
                          "typeString": "struct SLA.SLI storage ref[] storage ref"
                        }
                      },
                      "id": 541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4161:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_SLI_$384_storage_$returns$__$",
                        "typeString": "function (struct SLA.SLI storage ref)"
                      }
                    },
                    "id": 548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4161:60:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 549,
                  "nodeType": "ExpressionStatement",
                  "src": "4161:60:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 551,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "4248:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4248:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 553,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 531,
                        "src": "4265:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 554,
                        "name": "_periodId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 533,
                        "src": "4273:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 550,
                      "name": "SLICreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 408,
                      "src": "4237:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256)"
                      }
                    },
                    "id": 555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4237:46:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 556,
                  "nodeType": "EmitStatement",
                  "src": "4232:51:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4298:36:2",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 561,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 531,
                          "src": "4327:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 557,
                            "name": "SLOs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 389,
                            "src": "4299:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$2300_$",
                              "typeString": "mapping(bytes32 => contract SLO)"
                            }
                          },
                          "id": 559,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 558,
                            "name": "_SLOName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 529,
                            "src": "4304:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4299:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$2300",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isSLOHonored",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2299,
                        "src": "4299:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view external returns (bool)"
                        }
                      },
                      "id": 562,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4299:35:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 581,
                    "nodeType": "Block",
                    "src": "4414:69:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 573,
                                "name": "periods",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 725,
                                "src": "4428:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Period_$703_storage_$dyn_storage",
                                  "typeString": "struct Staking.Period storage ref[] storage ref"
                                }
                              },
                              "id": 575,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 574,
                                "name": "_periodId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 533,
                                "src": "4436:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4428:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Period_$703_storage",
                                "typeString": "struct Staking.Period storage ref"
                              }
                            },
                            "id": 576,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 692,
                            "src": "4428:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$682",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 577,
                              "name": "Status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 682,
                              "src": "4456:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Status_$682_$",
                                "typeString": "type(enum Staking.Status)"
                              }
                            },
                            "id": 578,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Respected",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4456:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$682",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "src": "4428:44:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$682",
                            "typeString": "enum Staking.Status"
                          }
                        },
                        "id": 580,
                        "nodeType": "ExpressionStatement",
                        "src": "4428:44:2"
                      }
                    ]
                  },
                  "id": 582,
                  "nodeType": "IfStatement",
                  "src": "4294:189:2",
                  "trueBody": {
                    "id": 572,
                    "nodeType": "Block",
                    "src": "4336:72:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 564,
                                "name": "periods",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 725,
                                "src": "4350:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Period_$703_storage_$dyn_storage",
                                  "typeString": "struct Staking.Period storage ref[] storage ref"
                                }
                              },
                              "id": 566,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 565,
                                "name": "_periodId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 533,
                                "src": "4358:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4350:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Period_$703_storage",
                                "typeString": "struct Staking.Period storage ref"
                              }
                            },
                            "id": 567,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 692,
                            "src": "4350:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$682",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 568,
                              "name": "Status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 682,
                              "src": "4378:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Status_$682_$",
                                "typeString": "type(enum Staking.Status)"
                              }
                            },
                            "id": 569,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "NotRespected",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4378:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$682",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "src": "4350:47:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$682",
                            "typeString": "enum Staking.Status"
                          }
                        },
                        "id": 571,
                        "nodeType": "ExpressionStatement",
                        "src": "4350:47:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 527,
              "nodeType": "StructuredDocumentation",
              "src": "3762:257:2",
              "text": " @dev external function to register SLI's and check them against the SLO's\n @param _SLOName 1. the name of the SLO in bytes32\n @param _value 2. the value of the SLI to check\n @param _periodId 3. the id of the given period"
            },
            "functionSelector": "869c3925",
            "id": 584,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 536,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 535,
                  "name": "onlyMessenger",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 426,
                  "src": "4137:13:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4137:13:2"
              }
            ],
            "name": "registerSLI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 534,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 529,
                  "mutability": "mutable",
                  "name": "_SLOName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 584,
                  "src": "4054:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 528,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4054:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 531,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 584,
                  "src": "4080:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 530,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4080:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 533,
                  "mutability": "mutable",
                  "name": "_periodId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 584,
                  "src": "4104:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 532,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4104:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4044:83:2"
            },
            "returnParameters": {
              "id": 537,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4151:0:2"
            },
            "scope": 667,
            "src": "4024:465:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 597,
              "nodeType": "Block",
              "src": "4759:38:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 593,
                      "name": "SLIs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 395,
                      "src": "4776:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$384_storage_$dyn_storage_$",
                        "typeString": "mapping(bytes32 => struct SLA.SLI storage ref[] storage ref)"
                      }
                    },
                    "id": 595,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 594,
                      "name": "_SLOName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 587,
                      "src": "4781:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4776:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_SLI_$384_storage_$dyn_storage",
                      "typeString": "struct SLA.SLI storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 592,
                  "id": 596,
                  "nodeType": "Return",
                  "src": "4769:21:2"
                }
              ]
            },
            "documentation": {
              "id": 585,
              "nodeType": "StructuredDocumentation",
              "src": "4495:190:2",
              "text": " @dev external function to get SLIs of certain _SLO\n @param _SLOName 1. the name of the SLO in bytes32\n @return SLI[] array of SLIs associated to the input SLOs"
            },
            "functionSelector": "02e8b893",
            "id": 598,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSLI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 588,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 587,
                  "mutability": "mutable",
                  "name": "_SLOName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 598,
                  "src": "4706:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 586,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4706:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4705:18:2"
            },
            "returnParameters": {
              "id": 592,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 591,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 598,
                  "src": "4745:12:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_SLI_$384_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct SLA.SLI[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 589,
                      "name": "SLI",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 384,
                      "src": "4745:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SLI_$384_storage_ptr",
                        "typeString": "struct SLA.SLI"
                      }
                    },
                    "id": 590,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4745:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_SLI_$384_storage_$dyn_storage_ptr",
                      "typeString": "struct SLA.SLI[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4744:14:2"
            },
            "scope": 667,
            "src": "4690:107:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 606,
              "nodeType": "Block",
              "src": "4996:35:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 604,
                    "name": "sliInterval",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 371,
                    "src": "5013:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 603,
                  "id": 605,
                  "nodeType": "Return",
                  "src": "5006:18:2"
                }
              ]
            },
            "documentation": {
              "id": 599,
              "nodeType": "StructuredDocumentation",
              "src": "4803:130:2",
              "text": " @dev external view function that returns the sliInterval value\n· @return uint256 value of the sliInterval"
            },
            "functionSelector": "e7ab816a",
            "id": 607,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSliInterval",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 600,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4961:2:2"
            },
            "returnParameters": {
              "id": 603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 602,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 607,
                  "src": "4987:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 601,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4987:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4986:9:2"
            },
            "scope": 667,
            "src": "4938:93:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 665,
              "nodeType": "Block",
              "src": "5526:258:2",
              "statements": [
                {
                  "assignments": [
                    626
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 626,
                      "mutability": "mutable",
                      "name": "_SLOAddresses",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 665,
                      "src": "5536:26:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_SLO_$2300_$dyn_memory_ptr",
                        "typeString": "contract SLO[]"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 624,
                          "name": "SLO",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 2300,
                          "src": "5536:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$2300",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 625,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "5536:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_SLO_$2300_$dyn_storage_ptr",
                          "typeString": "contract SLO[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 633,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 630,
                          "name": "SLONames",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 399,
                          "src": "5575:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                            "typeString": "bytes32[] storage ref"
                          }
                        },
                        "id": 631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5575:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 629,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "5565:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_SLO_$2300_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (contract SLO[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 627,
                          "name": "SLO",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 2300,
                          "src": "5569:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$2300",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 628,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "5569:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_SLO_$2300_$dyn_storage_ptr",
                          "typeString": "contract SLO[]"
                        }
                      }
                    },
                    "id": 632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5565:26:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_SLO_$2300_$dyn_memory_ptr",
                      "typeString": "contract SLO[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5536:55:2"
                },
                {
                  "body": {
                    "id": 655,
                    "nodeType": "Block",
                    "src": "5648:61:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 645,
                              "name": "_SLOAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 626,
                              "src": "5662:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_SLO_$2300_$dyn_memory_ptr",
                                "typeString": "contract SLO[] memory"
                              }
                            },
                            "id": 647,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 646,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 635,
                              "src": "5676:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5662:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLO_$2300",
                              "typeString": "contract SLO"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 648,
                              "name": "SLOs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 389,
                              "src": "5681:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$2300_$",
                                "typeString": "mapping(bytes32 => contract SLO)"
                              }
                            },
                            "id": 652,
                            "indexExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 649,
                                "name": "SLONames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 399,
                                "src": "5686:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                  "typeString": "bytes32[] storage ref"
                                }
                              },
                              "id": 651,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 650,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 635,
                                "src": "5695:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5686:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5681:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLO_$2300",
                              "typeString": "contract SLO"
                            }
                          },
                          "src": "5662:36:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$2300",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 654,
                        "nodeType": "ExpressionStatement",
                        "src": "5662:36:2"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 638,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 635,
                      "src": "5622:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 639,
                        "name": "SLONames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 399,
                        "src": "5626:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      "id": 640,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5626:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5622:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 656,
                  "initializationExpression": {
                    "assignments": [
                      635
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 635,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 656,
                        "src": "5607:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 634,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5607:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 637,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5619:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5607:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5643:3:2",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 642,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 635,
                        "src": "5643:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 644,
                    "nodeType": "ExpressionStatement",
                    "src": "5643:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "5602:107:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 657,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5164,
                          "src": "5727:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5727:7:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 659,
                        "name": "ipfsHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 374,
                        "src": "5736:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 660,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 368,
                        "src": "5746:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 661,
                        "name": "SLONames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 399,
                        "src": "5753:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 662,
                        "name": "_SLOAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 626,
                        "src": "5763:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_SLO_$2300_$dyn_memory_ptr",
                          "typeString": "contract SLO[] memory"
                        }
                      }
                    ],
                    "id": 663,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5726:51:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_string_storage_$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$_t_array$_t_contract$_SLO_$2300_$dyn_memory_ptr_$",
                      "typeString": "tuple(address,string storage ref,uint256,bytes32[] storage ref,contract SLO[] memory)"
                    }
                  },
                  "functionReturnParameters": 622,
                  "id": 664,
                  "nodeType": "Return",
                  "src": "5719:58:2"
                }
              ]
            },
            "documentation": {
              "id": 608,
              "nodeType": "StructuredDocumentation",
              "src": "5037:275:2",
              "text": " @dev external view function that returns all agreement information\n @return address owner\n @return string ipfsHash\n @return uint256 amount necessary to stake\n @return bytes32[] SLONames array\n @return SLO[] SLO addresses array"
            },
            "functionSelector": "fbbf93a0",
            "id": 666,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDetails",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 609,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5337:2:2"
            },
            "returnParameters": {
              "id": 622,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 611,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 666,
                  "src": "5400:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 610,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5400:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 613,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 666,
                  "src": "5421:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 612,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5421:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 615,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 666,
                  "src": "5448:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 614,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5448:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 618,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 666,
                  "src": "5469:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 616,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "5469:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 617,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5469:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 621,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 666,
                  "src": "5499:12:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_SLO_$2300_$dyn_memory_ptr",
                    "typeString": "contract SLO[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 619,
                      "name": "SLO",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 2300,
                      "src": "5499:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLO_$2300",
                        "typeString": "contract SLO"
                      }
                    },
                    "id": 620,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5499:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_SLO_$2300_$dyn_storage_ptr",
                      "typeString": "contract SLO[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5386:135:2"
            },
            "scope": 667,
            "src": "5318:466:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 668,
        "src": "446:5340:2"
      }
    ],
    "src": "32:5755:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.5",
  "updatedAt": "2020-12-27T19:37:07.377Z",
  "devdoc": {
    "details": "SLA is a service level agreement contract used for service downtime compensation",
    "events": {
      "SLICreated(uint256,uint256,uint256)": {
        "details": "event for SLI creation logging",
        "params": {
          "_periodId": "3. the id of the given period",
          "_timestamp": "1. the time the SLI has been registered",
          "_value": "2. the value of the SLI"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "_SLONames": "2. array of the names of the service level objectives in bytes32",
          "_SLOs": "3. array of service level objective contract addressess service level objective breach",
          "_ipfsHash": "5. string with the ipfs hash that contains extra information about the service level agreement",
          "_owner": "1. address of the owner of the service level agreement",
          "_sla_period_ends": "9. array with the values for the \"end\" of every period",
          "_sla_period_starts": "8. array with the values for the \"start\" of every period",
          "_sliInterval": "6. uint the interval in seconds between requesting a new SLI",
          "_stake": "4. uint of the amount required to stake when signing the service level agreement",
          "_tokenAddress": "7. address of the DSLA token to be unlocked for staking"
        }
      },
      "getDetails()": {
        "details": "external view function that returns all agreement information",
        "returns": {
          "_0": "address owner",
          "_1": "string ipfsHash",
          "_2": "uint256 amount necessary to stake",
          "_3": "bytes32[] SLONames array",
          "_4": "SLO[] SLO addresses array"
        }
      },
      "getSLI(bytes32)": {
        "details": "external function to get SLIs of certain _SLO",
        "params": {
          "_SLOName": "1. the name of the SLO in bytes32"
        },
        "returns": {
          "_0": "SLI[] array of SLIs associated to the input SLOs"
        }
      },
      "getSliInterval()": {
        "details": "external view function that returns the sliInterval value",
        "returns": {
          "_0": "uint256 value of the sliInterval"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "registerSLI(bytes32,uint256,uint256)": {
        "details": "external function to register SLI's and check them against the SLO's",
        "params": {
          "_SLOName": "1. the name of the SLO in bytes32",
          "_periodId": "3. the id of the given period",
          "_value": "2. the value of the SLI to check"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "stakersCount()": {
        "details": "public view function that returns the total amount of stakers"
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "stateVariables": {
      "SLIs": {
        "details": "mapping to get SLI structs from SLO names in bytes32"
      },
      "SLONames": {
        "details": "array storing the names of the SLO's of this agreement"
      },
      "SLOs": {
        "details": "mapping to get SLO addresses from SLO names in bytes32"
      },
      "ipfsHash": {
        "details": "The ipfs hash that stores extra information about the agreement"
      },
      "registry": {
        "details": "The address of the registry contract"
      },
      "sliInterval": {
        "details": "The time between SLI registration"
      },
      "stake": {
        "details": "The required amount to stake when subscribing to the agreement"
      }
    },
    "title": "SLA",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}