{
  "contractName": "SLA",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "bytes32[]",
          "name": "_SLONames",
          "type": "bytes32[]"
        },
        {
          "internalType": "contract SLO[]",
          "name": "_SLOs",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "_stake",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_ipfsHash",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_sliInterval",
          "type": "uint256"
        },
        {
          "internalType": "contract bDSLAToken",
          "name": "_tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "_sla_period_starts",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_sla_period_ends",
          "type": "uint256[]"
        },
        {
          "internalType": "address",
          "name": "_daiAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "period_index",
          "type": "uint256"
        }
      ],
      "name": "NewPeriodAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_periodId",
          "type": "uint256"
        }
      ],
      "name": "SLICreated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DAI",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "SLIs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "periodId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "SLONames",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "SLOs",
      "outputs": [
        {
          "internalType": "contract SLO",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "addAllowedTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_sla_period_start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_sla_period_end",
          "type": "uint256"
        }
      ],
      "name": "addNewPeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allowedTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowedTokensMapping",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bDSLA",
      "outputs": [
        {
          "internalType": "contract bDSLAToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_period",
          "type": "uint256"
        }
      ],
      "name": "claimCompensation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_period",
          "type": "uint256"
        }
      ],
      "name": "claimReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_periodId",
          "type": "uint256"
        }
      ],
      "name": "getPeriodData",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "periodStart",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "periodEnd",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getTokenStake",
      "outputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "stake",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "getTokenStakeLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_period",
          "type": "uint256"
        }
      ],
      "name": "getUserTotalValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ipfsHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "periods",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "sla_period_start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sla_period_end",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "claimed_reward",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "claimed",
          "type": "bool"
        },
        {
          "internalType": "enum Staking.Status",
          "name": "status",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "internalType": "contract SLARegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_period",
          "type": "uint256"
        }
      ],
      "name": "stakeTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakersCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "uniqueTokensStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userStakedTokens",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userStakedTokensIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "userStakes",
      "outputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "stake",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "validator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_period",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_period",
          "type": "uint256"
        }
      ],
      "name": "withdrawAndStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_SLOName",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_periodId",
          "type": "uint256"
        }
      ],
      "name": "registerSLI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_SLOName",
          "type": "bytes32"
        }
      ],
      "name": "getSLI",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "periodId",
              "type": "uint256"
            }
          ],
          "internalType": "struct SLA.SLI[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSliInterval",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDetails",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        },
        {
          "internalType": "contract SLO[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"_SLONames\",\"type\":\"bytes32[]\"},{\"internalType\":\"contract SLO[]\",\"name\":\"_SLOs\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_stake\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_ipfsHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_sliInterval\",\"type\":\"uint256\"},{\"internalType\":\"contract bDSLAToken\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_sla_period_starts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_sla_period_ends\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"_daiAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"period_index\",\"type\":\"uint256\"}],\"name\":\"NewPeriodAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_periodId\",\"type\":\"uint256\"}],\"name\":\"SLICreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DAI\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"SLIs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"periodId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"SLONames\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"SLOs\",\"outputs\":[{\"internalType\":\"contract SLO\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"addAllowedTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_sla_period_start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sla_period_end\",\"type\":\"uint256\"}],\"name\":\"addNewPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allowedTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowedTokensMapping\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bDSLA\",\"outputs\":[{\"internalType\":\"contract bDSLAToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"claimCompensation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDetails\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"contract SLO[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_periodId\",\"type\":\"uint256\"}],\"name\":\"getPeriodData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"periodStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"periodEnd\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_SLOName\",\"type\":\"bytes32\"}],\"name\":\"getSLI\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"periodId\",\"type\":\"uint256\"}],\"internalType\":\"struct SLA.SLI[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSliInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getTokenStake\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getTokenStakeLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"getUserTotalValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ipfsHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"periods\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sla_period_start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sla_period_end\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimed_reward\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"claimed\",\"type\":\"bool\"},{\"internalType\":\"enum Staking.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_SLOName\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_periodId\",\"type\":\"uint256\"}],\"name\":\"registerSLI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract SLARegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"stakeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakersCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"uniqueTokensStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userStakedTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userStakedTokensIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userStakes\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"validator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"withdrawAndStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"SLA is a service level agreement contract used for service downtime compensation\",\"events\":{\"SLICreated(uint256,uint256,uint256)\":{\"details\":\"event for SLI creation logging\",\"params\":{\"_periodId\":\"3. the id of the given period\",\"_timestamp\":\"1. the time the SLI has been registered\",\"_value\":\"2. the value of the SLI\"}}},\"kind\":\"dev\",\"methods\":{\"addAllowedTokens(address)\":{\"details\":\"add a token to ve allowed for staking\",\"params\":{\"_token\":\"1. address of the new allowed token\"}},\"addNewPeriod(uint256,uint256)\":{\"details\":\"add a new period to the array\",\"params\":{\"_sla_period_end\":\"2. uint256 of the end of the period\",\"_sla_period_start\":\"1. uint256 of the start of the period\"}},\"claimCompensation(uint256)\":{\"details\":\"claim from delegators\",\"params\":{\"_period\":\"1. period id to claim\"}},\"claimReward(uint256)\":{\"details\":\"claim from validators\",\"params\":{\"_period\":\"1. period id to claim\"}},\"constructor\":{\"params\":{\"_SLONames\":\"2. array of the names of the service level objectives in bytes32\",\"_SLOs\":\"3. array of service level objective contract addressess service level objective breach\",\"_daiAddress\":\"10. DAI Token Address to accept by default\",\"_ipfsHash\":\"5. string with the ipfs hash that contains extra information about the service level agreement\",\"_owner\":\"1. address of the owner of the service level agreement\",\"_sla_period_ends\":\"9. array with the values for the \\\"end\\\" of every period\",\"_sla_period_starts\":\"8. array with the values for the \\\"start\\\" of every period\",\"_sliInterval\":\"6. uint the interval in seconds between requesting a new SLI\",\"_stake\":\"4. uint of the amount required to stake when signing the service level agreement\",\"_tokenAddress\":\"7. address of the DSLA token to be unlocked for staking\"}},\"getDetails()\":{\"details\":\"external view function that returns all agreement information\",\"returns\":{\"_0\":\"address owner\",\"_1\":\"string ipfsHash\",\"_2\":\"uint256 amount necessary to stake\",\"_3\":\"bytes32[] SLONames array\",\"_4\":\"SLO[] SLO addresses array\"}},\"getSLI(bytes32)\":{\"details\":\"external function to get SLIs of certain _SLO\",\"params\":{\"_SLOName\":\"1. the name of the SLO in bytes32\"},\"returns\":{\"_0\":\"SLI[] array of SLIs associated to the input SLOs\"}},\"getSliInterval()\":{\"details\":\"external view function that returns the sliInterval value\",\"returns\":{\"_0\":\"uint256 value of the sliInterval\"}},\"getTokenStake(address,uint256)\":{\"details\":\"returns the token stake according to index\",\"params\":{\"_index\":\"2. index of the TokenStake\",\"_owner\":\"1. owner of the stake\"}},\"getTokenStakeLength(address)\":{\"details\":\"returns the length of TokenStakes per user\",\"params\":{\"_owner\":\"1. owner of the stake\"}},\"getUserTotalValue(address,uint256)\":{\"details\":\"get the user total value staked\",\"params\":{\"_period\":\"2. period id to claim\",\"_user\":\"1. address of the user\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"registerSLI(bytes32,uint256,uint256)\":{\"details\":\"external function to register SLI's and check them against the SLO's\",\"params\":{\"_SLOName\":\"1. the name of the SLO in bytes32\",\"_periodId\":\"3. the id of the given period\",\"_value\":\"2. the value of the SLI to check\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"stakeTokens(uint256,address,uint256)\":{\"details\":\"increase the amount staked per token\",\"params\":{\"_amount\":\"1. amount to be staked\",\"_period\":\"3. period id to stake\",\"_token\":\"2. address of the token\"}},\"stakersCount()\":{\"details\":\"public view function that returns the total amount of stakers\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(address,uint256)\":{\"details\":\"withdraw staked tokens\",\"params\":{\"_period\":\"2. period id to withdraw\",\"_token\":\"1. address of the token\"}},\"withdrawAndStake(address,uint256,uint256)\":{\"details\":\"withdraw bDSLA and stake d Tokens\",\"params\":{\"_amount\":\"2. amount to withdraw\",\"_period\":\"3. period id to withdraw\",\"_token\":\"1. address of the token\"}}},\"stateVariables\":{\"SLIs\":{\"details\":\"mapping to get SLI structs from SLO names in bytes32\"},\"SLONames\":{\"details\":\"array storing the names of the SLO's of this agreement\"},\"SLOs\":{\"details\":\"mapping to get SLO addresses from SLO names in bytes32\"},\"ipfsHash\":{\"details\":\"The ipfs hash that stores extra information about the agreement\"},\"registry\":{\"details\":\"The address of the registry contract\"},\"sliInterval\":{\"details\":\"The time between SLI registration\"},\"stake\":{\"details\":\"The required amount to stake when subscribing to the agreement\"}},\"title\":\"SLA\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLA/SLA.sol\":\"SLA\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/Messenger.sol\":{\"keccak256\":\"0x546389407ec1f02e2ea5babf8f2b7ae498b04c2c1a440a28752ecd0bff9992a9\",\"urls\":[\"bzz-raw://a3fabec3ba7252a3281afdcf02e89e54b8b3c43b5ef947acc544370fa16467a0\",\"dweb:/ipfs/QmeMcTysfLakapdSMwJ2WD6tefrMK2dwTB7jgWD6z1czG9\"]},\"/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLA/SLA.sol\":{\"keccak256\":\"0xc8e8ae4f470d181046fd07947d277f57b956690b9b4973dc7cf57af8833f1090\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c1144e1b323b55585598e1a79cb0441cb787b09ef756706698cf2063e0982dc\",\"dweb:/ipfs/QmZF2gkW2exsF52ia7RdD2wwpHozfzrikPGTj1cyniXdQd\"]},\"/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLA/Staking.sol\":{\"keccak256\":\"0x84f580e70cc7e9e67e612f6d8224dd71e6d46a45679b3492049b865639ca20d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5fe8471a08cb7d49e535b06724f68d0d8b1874cb17f368a22db11e0341a05bd5\",\"dweb:/ipfs/QmfRmdwEFhdgHuaZhZ7PnnmtJ8qJNjWtVaH5TTCi4qHcnh\"]},\"/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLARegistry.sol\":{\"keccak256\":\"0x09ccc4c2abcbb344cd58369c64d7ae7952722c24f85a624fd45a88701ccb1f82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb4108e55d73a14e963eb84cda56de80c25ef45a0ae29f4bb2db9bd4d9d0127c\",\"dweb:/ipfs/QmbfaLRsnG6eh6LsWgPAQ337vEboxLPw5f7C6XF4NVVFXq\"]},\"/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLO/SLO.sol\":{\"keccak256\":\"0x8b65ee21bcc99350f76e11724268ee0341d15d0fae3bccf0e79434504768b2f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d7e756abbe5b65cb7a8158be59b156936ba55a33b1ac524c679bf1981fbc981\",\"dweb:/ipfs/QmUk7gHqh4XJmXqmu8QWhqbUDy8Bev9ZP74XPjkopfVb6q\"]},\"/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/StringUtils.sol\":{\"keccak256\":\"0xed67dd7772841b09f0a00e6e191f42746f078e0907d38964c7d164ac32e0a7ef\",\"urls\":[\"bzz-raw://b5df848099351c5c9883d690eaaee2e79e1a31552d80f0fc8cd33902f9f01daa\",\"dweb:/ipfs/QmPDQp8CwK1bHyNkwBJPgNz2nqkvx6Fwh3jDrJoojwCB5u\"]},\"/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/bDSLA/bDSLAToken.sol\":{\"keccak256\":\"0x935ff32e24401d6a99292539dff3fefcb399a0591a5c56e79869e5cb71340f47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a3a65b7a9b74e296ae7a94a44318a28d5bc7776eab6eeeeafc2222b96951d8f\",\"dweb:/ipfs/QmcsSPLgWoTuhWWQLjjkS9UdW5N5V75TSRwoYkzY25WzCR\"]},\"@chainlink/contracts/src/v0.6/Chainlink.sol\":{\"keccak256\":\"0x7048bfd6e6fe4e60ea4af01ed44fc0494cec75df75c6b542a6f08ed34c66d39e\",\"urls\":[\"bzz-raw://37efc6a4665b537657283652d75919ec8dd3d48d85150b5285041bc9614fec11\",\"dweb:/ipfs/QmWKgeJEj222kNefTkauHwM5x58KTxSGgcbLseH9Fq8jed\"]},\"@chainlink/contracts/src/v0.6/ChainlinkClient.sol\":{\"keccak256\":\"0xd06166f7798c4c8cbd0e2dc642450c9bca39157c688ae95dbe079f666cc44dfa\",\"urls\":[\"bzz-raw://672af493da8e01492532d7ca8660362d015f317114e405aa55c85cff24aee31c\",\"dweb:/ipfs/QmNZdB2jVwwswrLFr83toTtHM5MPSugKeUdxrxfCJ4mP4K\"]},\"@chainlink/contracts/src/v0.6/interfaces/ChainlinkRequestInterface.sol\":{\"keccak256\":\"0x4b41b021bf58c429891ff291637de29be54741565105de82238dac9f6ecee374\",\"urls\":[\"bzz-raw://84681ff65b31b2e2c6977289661733c0f22409965b9057140f56f8a9ff185048\",\"dweb:/ipfs/QmS4TQJDSHQiKNwQ4LkSCVp7LjuRQwp6gem3271vtCwz9k\"]},\"@chainlink/contracts/src/v0.6/interfaces/ENSInterface.sol\":{\"keccak256\":\"0xf4998e886147b298eda28b4eacbdc90c58ba63ba475469651f2072e188dd5a64\",\"urls\":[\"bzz-raw://c1e2334294a816b7eda9de280e39b9463ebde2db8b242410eb991b2f623b47d4\",\"dweb:/ipfs/QmNY5bajahfFRmhBgcMVQ7712zHKxc6HkuN7LaiKtpjb7t\"]},\"@chainlink/contracts/src/v0.6/interfaces/LinkTokenInterface.sol\":{\"keccak256\":\"0xdbf46b45a4c9f38ba71a0391aed0e7b108854b619f292d907ae537228868bda6\",\"urls\":[\"bzz-raw://3ae40466809630c4731e2e3a697d6885727c577aaf260766c8a2f534ad3f6ee8\",\"dweb:/ipfs/QmTzpN5yP4Y5jvQ1ohfXFrce3sjzUiSChYJgZj9VvhVohG\"]},\"@chainlink/contracts/src/v0.6/interfaces/PointerInterface.sol\":{\"keccak256\":\"0x6458d82762d4f13c020a13efdbd9bf14500e147df707184a693aea91449c2f4f\",\"urls\":[\"bzz-raw://735950f3a544fc6ef2db92405597169bfb5fdb9df83623c0d99fd3d85de8690d\",\"dweb:/ipfs/QmZHxb5Qr7Kw9DHAg4VwEADue9ffNyyhbiyEZ15A5mANUN\"]},\"@chainlink/contracts/src/v0.6/vendor/BufferChainlink.sol\":{\"keccak256\":\"0xe4aa364f56414c4326ffe12c1121d591be6ad168afb42b24a823f6d76299dd63\",\"urls\":[\"bzz-raw://e3e91a0eddb6fc6c53acdfbd59771deff1678330128d3c98014c668763efb45e\",\"dweb:/ipfs/Qmbt5VNT2W2oCN44536JGNuHqAJdmYGqzEFcHvy8W1tAsY\"]},\"@chainlink/contracts/src/v0.6/vendor/CBORChainlink.sol\":{\"keccak256\":\"0xbb4d8257c1af348cac9828ee531428b148bb726517357fe6a80279ac45b658b5\",\"urls\":[\"bzz-raw://8c8c5da0358946437fac595591367066b8d6e5f58414c027a79a093e1f3241c1\",\"dweb:/ipfs/QmNQ5TPzaPEbj5kaX17YLuZEmhv8NGfoCrUVK3s6gQuHdA\"]},\"@chainlink/contracts/src/v0.6/vendor/ENSResolver.sol\":{\"keccak256\":\"0xdddea29d7407c1dbd1e130d885fc1a0934e98f0a7cc9f4d5bfd002bb2cfbcf82\",\"urls\":[\"bzz-raw://c4c764d69c47754d7b219fab558bf4be2a6444470ede7aa0ab1e446aea01dbda\",\"dweb:/ipfs/QmWp2CNUw9xt8ir2P3LhGHuydUsAXnyZ382U2BUjhoYPvy\"]},\"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":{\"keccak256\":\"0x5e6948bb332468d8ef0704b4259babc8aef7ce5969d5997c16db8ad806222a0a\",\"urls\":[\"bzz-raw://8e2bbda1e1168401d0105cc86bf5302000e8555ebb9b235cd68c148916a452e5\",\"dweb:/ipfs/QmbTjbpJr8VfdWfgBknbQov1MGkXXPMysb7eD8bobGAcBV\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x92f7900d382761c7faefeaced81c6b4f1aae909ed0551803bfe8f27101956360\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://407c0864143968542e5cf5aa7556916d2cf292b201e3dadb65662e9a3aa24187\",\"dweb:/ipfs/QmSnXzYAUaGLGr7uofRbgQraTJvatbjQLBPhyYiMd18oUJ\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3\",\"dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"@openzeppelin/contracts/presets/ERC20PresetMinterPauser.sol\":{\"keccak256\":\"0xe30213b0851987b0455057cdfb65660c05805cbb05b12c0d61b0ff7a99cc36cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c61711ecc3ad53890dded63c27909a315ba3053c553be29acaa239bc6a7a0cf\",\"dweb:/ipfs/QmQjriBzSyAYQTm4NfWpnnoH8RhZrayyXm2zvpeHkxQnAk\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x91e0bd6a6762d2a1700dab0849de8422611355100576c4beef1e80d82a4104a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73bbd77af0a8b07255d2ffa20728bcf13b116007c9ddac5d37046cfabb0e1e02\",\"dweb:/ipfs/QmRgZgWCWCSMTTaok6o4QvWA6MgB4goS8qpb3sN7bAvaZ9\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0x657b0d90be17331364211d74359df2a734fac864f6e88c80de7626fa33090ffb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09cca25fefa2354a424d55a97930c76b11dc50697ba62c85d7affc27a37e830c\",\"dweb:/ipfs/QmPTQBYXxQDSNmMKqwe4WnM8E7NwnpLnkFLSRH8hZRvrVK\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol\":{\"keccak256\":\"0xbab4a97af2a6810a8ffc187205dfb331284949ea5b30caa5b9052828853bb149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f53c98e31ed415c2a6f03d99809cd4f2f5fff92a13ee85022922a09df82ee459\",\"dweb:/ipfs/QmXiv4ysuQSRfoXqPpwA1QCreEnqfkrHDGyJTmifoni7dK\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017\",\"dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://774e78a9ff32792cc95db4d2ceaf3a7965bb7f0bea5e6cb7cff182b450d44b37\",\"dweb:/ipfs/QmRRMC4uj7eAcLW7chynA3sNEYULMFazdLwQHKHQPyzAbA\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xb2a11b236f073662f5a196995863f51c11d006bf7c3de158b316dfa1506c4b79\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8651649cf0b9efa18c3b01c030276fa320d41adbdc286833417e7f36e357b2f3\",\"dweb:/ipfs/QmafhM2Nd1aP43QVB1eRRZaqRXQKswNfQcWi8U8xjrxCfN\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0x5d1b1dcbc0396f44c1c8d554857f71e3187503bf1e54062bf9ec6782e21f3a08\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9aa7fa580393aab7ca3d9f606f5ab7434d51e1c0f3632a593fca82c80ef8cc4c\",\"dweb:/ipfs/QmRy84N7QfkwBM2AeR7UB5G1PPHdRLi6s1iyzAwCzevcHe\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162003425380380620034258339810160408190526200003491620007da565b8383838c84600062000045620002e1565b600080546001600160a01b0319166001600160a01b03831690811782556040519293509160008051602062003405833981519152908290a3508251845114620000ab5760405162461bcd60e51b8152600401620000a29062000981565b60405180910390fd5b600580546001600160a01b038085166001600160a01b03199283161790925560018054888416908316178082556007805480840182557fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688908101805486169387169390931790925582548516600090815260086020526040808220805460ff199081168717909155600280548a8a1690891617808255855480890190965594909501805490971693881693909317909555915490941681529182208054909316179091555b8451811015620001bd57620001b48582815181106200018b57fe5b6020026020010151858381518110620001a057fe5b6020026020010151620002e560201b60201c565b60010162000170565b5050505050506005885110620001e75760405162461bcd60e51b8152600401620000a29062000a4e565b87518951146200020b5760405162461bcd60e51b8152600401620000a290620009ff565b60005b88518110156200027f578881815181106200022557fe5b6020026020010151601160008c84815181106200023e57fe5b602090810291909101810151825281019190915260400160002080546001600160a01b0319166001600160a01b03929092169190911790556001016200020e565b506200028b8a62000435565b8851620002a09060139060208c019062000564565b50600d8790558551620002bb90600f906020890190620005b4565b5050601080546001600160a01b03191633179055505050600e555062000b189350505050565b3390565b620002ef62000626565b82815260208101828152600060808301818152600380546001810182559252835160069092027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b810192835592517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85c84015560408401517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85d84015560608401517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85e909301805493151560ff199094169390931780845590518493909161ff001916610100836002811115620003e057fe5b02179055505050620004076001600380549050620004e260201b62001c131790919060201c565b6040517ff791e873e3b67fe74b29aeede7bcbbdaa59c4b64e542571183cd837aa56f6ac990600090a2505050565b6200043f620002e1565b6000546001600160a01b039081169116146200046f5760405162461bcd60e51b8152600401620000a290620009ca565b6001600160a01b038116620004985760405162461bcd60e51b8152600401620000a2906200093b565b600080546040516001600160a01b03808516939216916000805160206200340583398151915291a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006200052c83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506200053560201b60201c565b90505b92915050565b600081848411156200055c5760405162461bcd60e51b8152600401620000a2919062000906565b505050900390565b828054828255906000526020600020908101928215620005a2579160200282015b82811115620005a257825182559160200191906001019062000585565b50620005b092915062000662565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620005f757805160ff1916838001178555620005a2565b82800160010185558215620005a25791820182811115620005a257825182559160200191906001019062000585565b6040518060a00160405280600081526020016000815260200160008152602001600015158152602001600060028111156200065d57fe5b905290565b5b80821115620005b0576000815560010162000663565b80516200052f8162000aff565b600082601f83011262000697578081fd5b8151620006ae620006a88262000aac565b62000a85565b818152915060208083019084810181840286018201871015620006d057600080fd5b60005b84811015620006f157815184529282019290820190600101620006d3565b505050505092915050565b600082601f8301126200070d578081fd5b81516200071e620006a88262000aac565b8181529150602080830190848101818402860182018710156200074057600080fd5b60005b84811015620006f1578151620007598162000aff565b8452928201929082019060010162000743565b600082601f8301126200077d578081fd5b81516001600160401b0381111562000793578182fd5b620007a8601f8201601f191660200162000a85565b9150808252836020828501011115620007c057600080fd5b620007d381602084016020860162000acc565b5092915050565b6000806000806000806000806000806101408b8d031215620007fa578586fd5b620008068c8c62000679565b60208c0151909a506001600160401b038082111562000823578788fd5b620008318e838f0162000686565b9a5060408d015191508082111562000847578788fd5b620008558e838f01620006fc565b995060608d0151985060808d015191508082111562000872578788fd5b620008808e838f016200076c565b975060a08d01519650620008988e60c08f0162000679565b955060e08d0151915080821115620008ae578485fd5b620008bc8e838f0162000686565b94506101008d0151915080821115620008d3578384fd5b50620008e28d828e0162000686565b925050620008f58c6101208d0162000679565b90509295989b9194979a5092959850565b60006020825282518060208401526200092781604085016020870162000acc565b601f01601f19169190910160400192915050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526029908201527f506c6561736520636865636b2074686520706172616d73206f6620796f757220604082015268706572696f6473202160b81b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602f908201527f5f534c4f4e616d657320616e64205f534c4f732073686f756c6420686176652060408201526e0e8d0ca40e6c2daca40d8cadccee8d608b1b606082015260800190565b60208082526017908201527f6d617820616d6f756e74206f6620534c4f732069732035000000000000000000604082015260600190565b6040518181016001600160401b038111828210171562000aa457600080fd5b604052919050565b60006001600160401b0382111562000ac2578081fd5b5060209081020190565b60005b8381101562000ae957818101518382015260200162000acf565b8381111562000af9576000848401525b50505050565b6001600160a01b038116811462000b1557600080fd5b50565b6128dd8062000b286000396000f3fe608060405234801561001057600080fd5b50600436106101f75760003560e01c806394199c6111610120578063e7ab816a116100b8578063f34ed40d1161007c578063f34ed40d1461045d578063f3fef3a314610470578063fbbf93a014610483578063fc875ece1461049c578063fd5e6dd1146104bd576101f7565b8063e7ab816a146103f8578063ea4a110414610400578063ec04de4814610424578063f10bd77214610437578063f2fde38b1461044a576101f7565b806394199c6114610352578063a2e80c5e14610374578063ae169a501461037c578063b0227b471461038f578063b5d5b5fa146103a2578063b83e0234146103b5578063c623674f146103c8578063cec534d6146103dd578063e0bab4c4146103f0576101f7565b806357ac94f01161019357806357ac94f0146102d05780635e5f2e26146102f15780635f4efaba14610304578063715018a61461030c57806375fdf2a9146103145780637b10399914610327578063817b1cd21461032f578063869c3925146103375780638da5cb5b1461034a576101f7565b806302e8b893146101fc5780630e1fcf3414610225578063105237cf1461023a578063171e44ea1461025a5780631934d0e81461026d5780632eac9787146102805780633a4b66f1146102a05780633a5381b5146102a857806353e85fd5146102bd575b600080fd5b61020f61020a366004612248565b6104d0565b60405161021c9190612447565b60405180910390f35b610238610233366004612260565b610561565b005b61024d610248366004612175565b6105ad565b60405161021c91906124a0565b610238610268366004612175565b6105c2565b61024d61027b366004612191565b610697565b61029361028e366004612191565b6106b7565b60405161021c91906124ab565b6102936106d4565b6102b06106da565b60405161021c919061234a565b6102386102cb366004612248565b6106e9565b6102e36102de3660046121c9565b610963565b60405161021c929190612382565b6102b06102ff366004612248565b6109e3565b6102b0610a0a565b610238610a19565b6102386103223660046121f4565b610a98565b6102b0610df7565b610293610e06565b610238610345366004612281565b610e0c565b6102b061106a565b610365610360366004612260565b611079565b60405161021c93929190612836565b6102936110b8565b61023861038a366004612248565b6110be565b6102b061039d366004612248565b611298565b6102e36103b03660046121c9565b6112b3565b6102936103c3366004612175565b6112f6565b6103d0611308565b60405161021c91906124b4565b6102386103eb3660046122c8565b611396565b6102b0611586565b610293611595565b61041361040e366004612248565b61159b565b60405161021c95949392919061284c565b610293610432366004612175565b6115de565b6102936104453660046121c9565b6115f9565b610238610458366004612175565b6116a7565b61029361046b366004612248565b61175d565b61023861047e3660046121c9565b61177b565b61048b6119ec565b60405161021c95949392919061239b565b6104af6104aa366004612248565b611bbc565b60405161021c929190612828565b6102b06104cb366004612248565b611c06565b606060126000838152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156105555783829060005260206000209060030201604051806060016040529081600082015481526020016001820154815260200160028201548152505081526020019060010190610505565b5050505090505b919050565b610569611c55565b6000546001600160a01b0390811691161461059f5760405162461bcd60e51b815260040161059690612737565b60405180910390fd5b6105a98282611c59565b5050565b60086020526000908152604090205460ff1681565b6105ca611c55565b6000546001600160a01b039081169116146105f75760405162461bcd60e51b815260040161059690612737565b6001600160a01b03811660009081526008602052604090205460ff16156106305760405162461bcd60e51b815260040161059690612645565b6007805460018181019092557fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880180546001600160a01b039093166001600160a01b031990931683179055600091825260086020526040909120805460ff19169091179055565b600c60209081526000928352604080842090915290825290205460ff1681565b600b60209081526000928352604080842090915290825290205481565b600d5481565b6005546001600160a01b031681565b80600381815481106106f757fe5b906000526020600020906006020160000154421015801561073657506003818154811061072057fe5b9060005260206000209060060201600101544211155b61073f57600080fd5b6005546001600160a01b031633141561076a5760405162461bcd60e51b8152600401610596906125df565b60026003838154811061077957fe5b906000526020600020906006020160030160019054906101000a900460ff1660028111156107a357fe5b146107c05760405162461bcd60e51b8152600401610596906124f4565b600382815481106107cd57fe5b60009182526020808320338452600560069093020191909101905260409020541561080a5760405162461bcd60e51b8152600401610596906127cb565b600061081633846115f9565b90506000610830600a61082a846003611d94565b90611dce565b6004549091506108409083611c13565b600481905550816003858154811061085457fe5b600091825260208083203380855260069390930201600501905260409182902092909255600154905163a9059cbb60e01b81526001600160a01b039091169163a9059cbb916108a891908690600401612382565b602060405180830381600087803b1580156108c257600080fd5b505af11580156108d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108fa9190612228565b50600154604051630852cd8d60e31b81526001600160a01b03909116906342966c689061092b9084906004016124ab565b600060405180830381600087803b15801561094557600080fd5b505af1158015610959573d6000803e3d6000fd5b5050505050505050565b6001600160a01b0382166000908152600a6020526040812080548291908490811061098a57fe5b600091825260208083206002909202909101546001600160a01b038781168452600a90925260409092208054919092169190859081106109c657fe5b906000526020600020906002020160010154915091509250929050565b600781815481106109f057fe5b6000918252602090912001546001600160a01b0316905081565b6001546001600160a01b031681565b610a21611c55565b6000546001600160a01b03908116911614610a4e5760405162461bcd60e51b815260040161059690612737565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6005546001600160a01b0316331415610ac35760405162461bcd60e51b8152600401610596906125df565b6001600160a01b038316600090815260086020526040902054839060ff161515600114610b025760405162461bcd60e51b815260040161059690612709565b600060038381548110610b1157fe5b600091825260208083206001600160a01b03891684526004600690930201919091018152604080832033845290915290205411610b605760405162461bcd60e51b81526004016105969061260e565b6040516323b872dd60e01b81526001600160a01b038516906323b872dd90610b909033903090889060040161235e565b602060405180830381600087803b158015610baa57600080fd5b505af1158015610bbe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be29190612228565b50610c2c8360038481548110610bf457fe5b600091825260208083206001600160a01b038a1684526004600690930201919091018152604080832033845290915290205490611e10565b60038381548110610c3957fe5b600091825260208083206001600160a01b038916845260046006909302018201815260408084203385529091529091209190915554610c789084611e10565b600455610c858484611e35565b600060038381548110610c9457fe5b600091825260208083206001600160a01b038916845260069283020160040181526040808420338552909152822054905460038054929450610cfa9287908110610cda57fe5b906000526020600020906006020160020154611dce90919063ffffffff16565b9050600060038581548110610d0b57fe5b600091825260208083206001600160a01b038b16845260046006909302018201815260408084203385529091529091209190915554610d4a9083611c13565b6004556001546001600160a01b031663a9059cbb33610d698585611c13565b6040518363ffffffff1660e01b8152600401610d86929190612382565b602060405180830381600087803b158015610da057600080fd5b505af1158015610db4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd89190612228565b50600154610def906001600160a01b031683611f95565b505050505050565b6010546001600160a01b031681565b60045481565b601060009054906101000a90046001600160a01b03166001600160a01b0316633cb747bf6040518163ffffffff1660e01b815260040160206040518083038186803b158015610e5a57600080fd5b505afa158015610e6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9291906122ac565b6001600160a01b0316336001600160a01b031614610ec25760405162461bcd60e51b81526004016105969061259a565b600083815260126020908152604080832081516060810183524280825281850188815282850188815284546001818101875595895296909720925160039096029092019485559051918401919091559251600290920191909155517fc95987c1992805ee34bdc915e017cceae36ba1c156b9911fa7e691e6435eb46e91610f4c9185908590612836565b60405180910390a16000838152601160205260409081902054905163868d08f760e01b81526001600160a01b039091169063868d08f790610f919085906004016124ab565b60206040518083038186803b158015610fa957600080fd5b505afa158015610fbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe19190612228565b61102757600260038281548110610ff457fe5b60009182526020909120600360069092020101805461ff00191661010083600281111561101d57fe5b0217905550611065565b60016003828154811061103657fe5b60009182526020909120600360069092020101805461ff00191661010083600281111561105f57fe5b02179055505b505050565b6000546001600160a01b031690565b6012602052816000526040600020818154811061109257fe5b600091825260209091206003909102018054600182015460029092015490935090915083565b60065490565b80600381815481106110cc57fe5b906000526020600020906006020160000154421015801561110b5750600381815481106110f557fe5b9060005260206000209060060201600101544211155b61111457600080fd5b6005546001600160a01b0316331461113e5760405162461bcd60e51b815260040161059690612798565b60016003838154811061114d57fe5b906000526020600020906006020160030160019054906101000a900460ff16600281111561117757fe5b146111945760405162461bcd60e51b8152600401610596906124c7565b600382815481106111a157fe5b600091825260209091206003600690920201015460ff16156111d55760405162461bcd60e51b815260040161059690612672565b6003546004546000916111e89190611dce565b905060006111fc600a61082a846003611d94565b60045490915061120c9083611c13565b600481905550816003858154811061122057fe5b90600052602060002090600602016002018190555060016003858154811061124457fe5b60009182526020909120600690910201600301805460ff191691151591909117905560015460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906108a89033908690600401612382565b6011602052600090815260409020546001600160a01b031681565b600a60205281600052604060002081815481106112cc57fe5b6000918252602090912060029091020180546001909101546001600160a01b039091169250905082565b60096020526000908152604090205481565b600f805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561138e5780601f106113635761010080835404028352916020019161138e565b820191906000526020600020905b81548152906001019060200180831161137157829003601f168201915b505050505081565b6001600160a01b038216600090815260086020526040902054829060ff1615156001146113d55760405162461bcd60e51b815260040161059690612709565b600084116113f55760405162461bcd60e51b81526004016105969061276c565b611400338484611ff5565b6040516323b872dd60e01b81526001600160a01b038416906323b872dd906114309033903090899060040161235e565b602060405180830381600087803b15801561144a57600080fd5b505af115801561145e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114829190612228565b506114cc846003848154811061149457fe5b600091825260208083206001600160a01b03891684526004600690930201919091018152604080832033845290915290205490611e10565b600383815481106114d957fe5b600091825260208083206001600160a01b0388168452600460069093020182018152604080842033855290915290912091909155546115189085611e10565b600455336000908152600960205260409020546001141561157657600680546001810182556000919091527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b031916331790555b6115808385611e35565b50505050565b6002546001600160a01b031681565b600e5490565b600381815481106115a857fe5b60009182526020909120600690910201805460018201546002830154600390930154919350919060ff8082169161010090041685565b6001600160a01b03166000908152600a602052604090205490565b6001600160a01b03821660009081526009602052604081205481901561169e5760005b60075481101561169c576116926003858154811061163657fe5b906000526020600020906006020160040160006007848154811061165657fe5b60009182526020808320909101546001600160a01b0390811684528382019490945260409283018220938a168252929092529020548390611e10565b915060010161161c565b505b90505b92915050565b6116af611c55565b6000546001600160a01b039081169116146116dc5760405162461bcd60e51b815260040161059690612737565b6001600160a01b0381166117025760405162461bcd60e51b81526004016105969061251d565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6013818154811061176a57fe5b600091825260209091200154905081565b6005546001600160a01b03163314156117a65760405162461bcd60e51b8152600401610596906125df565b6001600160a01b038216600090815260086020526040902054829060ff1615156001146117e55760405162461bcd60e51b815260040161059690612709565b6000600383815481106117f457fe5b600091825260208083206001600160a01b038816845260046006909302019190910181526040808320338452909152902054116118435760405162461bcd60e51b81526004016105969061260e565b60006003838154811061185257fe5b600091825260208083206001600160a01b0388168452600692830201600401815260408084203385529091528220549054600380549294506118989287908110610cda57fe5b90506000600385815481106118a957fe5b600091825260208083206001600160a01b038a168452600460069093020182018152604080842033855290915290912091909155546118e89083611c13565b6004556001600160a01b03851663a9059cbb336119058585611c13565b6040518363ffffffff1660e01b8152600401611922929190612382565b602060405180830381600087803b15801561193c57600080fd5b505af1158015611950573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119749190612228565b5033600090815260096020526040902054611990906001611c13565b3360009081526009602052604090208190556119db5760006119b13361207e565b9050600681815481106119c057fe5b600091825260209091200180546001600160a01b0319169055505b6119e58583611f95565b5050505050565b600060606000606080606060138054905067ffffffffffffffff81118015611a1357600080fd5b50604051908082528060200260200182016040528015611a3d578160200160208202803683370190505b50905060005b601354811015611ab7576011600060138381548110611a5e57fe5b9060005260206000200154815260200190815260200160002060009054906101000a90046001600160a01b0316828281518110611a9757fe5b6001600160a01b0390921660209283029190910190910152600101611a43565b50611ac061106a565b600d54600f805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292939260139287928691830182828015611b515780601f10611b2657610100808354040283529160200191611b51565b820191906000526020600020905b815481529060010190602001808311611b3457829003601f168201915b5050505050935081805480602002602001604051908101604052809291908181526020018280548015611ba357602002820191906000526020600020905b815481526020019060010190808311611b8f575b5050505050915095509550955095509550509091929394565b60008060038381548110611bcc57fe5b90600052602060002090600602016000015460038481548110611beb57fe5b90600052602060002090600602016001015491509150915091565b600681815481106109f057fe5b600061169e83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506120d7565b3390565b611c6161213a565b82815260208101828152600060808301818152600380546001810182559252835160069092027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b810192835592517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85c84015560408401517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85d84015560608401517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85e909301805493151560ff199094169390931780845590518493909161ff001916610100836002811115611d5157fe5b021790555050600354611d6691506001611c13565b6040517ff791e873e3b67fe74b29aeede7bcbbdaa59c4b64e542571183cd837aa56f6ac990600090a2505050565b600082611da3575060006116a1565b82820282848281611db057fe5b041461169e5760405162461bcd60e51b8152600401610596906126c8565b600061169e83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612103565b60008282018381101561169e5760405162461bcd60e51b815260040161059690612563565b336000908152600c602090815260408083206001600160a01b038616845290915290205460ff16611f0057336000818152600a60209081526040808320815180830183526001600160a01b03888116808352828601898152845460018082018755868a52888a209551600290920290950180546001600160a01b0319169190941617835551918301919091558686529154600b85528386208387528552838620600019919091019055948452600c83528184209084529091529020805460ff191690911790556105a9565b336000818152600b602090815260408083206001600160a01b0387168452825280832054938352600a90915290208054611f6091849184908110611f4057fe5b906000526020600020906002020160010154611e1090919063ffffffff16565b336000908152600a60205260409020805483908110611f7b57fe5b906000526020600020906002020160010181905550505050565b336000818152600b602090815260408083206001600160a01b0387168452825280832054938352600a9091529020805461158091849184908110611fd557fe5b906000526020600020906002020160010154611c1390919063ffffffff16565b60006003828154811061200457fe5b600091825260208083206001600160a01b0387811685526006939093020160040181526040808420928816845291905290205411611065576001600160a01b038316600090815260096020526040902054612060906001611e10565b6001600160a01b038416600090815260096020526040902055505050565b6000805b6006548110156120cd57826001600160a01b0316600682815481106120a357fe5b6000918252602090912001546001600160a01b031614156120c557905061055c565b600101612082565b5060001992915050565b600081848411156120fb5760405162461bcd60e51b815260040161059691906124b4565b505050900390565b600081836121245760405162461bcd60e51b815260040161059691906124b4565b50600083858161213057fe5b0495945050505050565b6040518060a001604052806000815260200160008152602001600081526020016000151581526020016000600281111561217057fe5b905290565b600060208284031215612186578081fd5b813561169e8161288f565b600080604083850312156121a3578081fd5b82356121ae8161288f565b915060208301356121be8161288f565b809150509250929050565b600080604083850312156121db578182fd5b82356121e68161288f565b946020939093013593505050565b600080600060608486031215612208578081fd5b83356122138161288f565b95602085013595506040909401359392505050565b600060208284031215612239578081fd5b8151801515811461169e578182fd5b600060208284031215612259578081fd5b5035919050565b60008060408385031215612272578182fd5b50508035926020909101359150565b600080600060608486031215612295578283fd5b505081359360208301359350604090920135919050565b6000602082840312156122bd578081fd5b815161169e8161288f565b6000806000606084860312156122dc578283fd5b8335925060208401356122ee8161288f565b929592945050506040919091013590565b60008151808452815b8181101561232457602081850181015186830182015201612308565b818111156123355782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b038616815260a060208083018290526000916123c0908401886122ff565b604084018790528381036060850152855180825282870191830190845b818110156123f9578351835292840192918401916001016123dd565b505084810360808601528551808252908301915082860190845b81811015612437576124258351612883565b84529284019291840191600101612413565b50919a9950505050505050505050565b602080825282518282018190526000919060409081850190868401855b828110156124935781518051855286810151878601528501518585015260609093019290850190600101612464565b5091979650505050505050565b901515815260200190565b90815260200190565b60006020825261169e60208301846122ff565b602080825260139082015272534c41206e6f7420726573706563746564202160681b604082015260600190565b6020808252600f908201526e534c4120726573706563746564202160881b604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b60208082526025908201527f4f6e6c79204d657373656e6765722063616e2063616c6c20746869732066756e6040820152643a31b4b7b760d91b606082015260800190565b602080825260159082015274596f752061726520612076616c696461746f72202160581b604082015260600190565b6020808252601b908201527f7374616b696e672062616c616e63652063616e6e6f7420626520300000000000604082015260600190565b6020808252601390820152721d1bdad95b88185b1c9958591e481859191959606a1b604082015260600190565b60208082526036908201527f596f75206861766520616c726561647920636c61696d656420796f75722072656040820152757761726420666f72207468697320706572696f64202160501b606082015260800190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6040820152607760f81b606082015260800190565b6020808252601490820152731d1bdad95b881a5cc81b9bdd08185b1b1bddd95960621b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601290820152710616d6f756e742063616e6e6f7420626520360741b604082015260600190565b602080825260199082015278596f7520617265206e6f7420612076616c696461746f72202160381b604082015260600190565b6020808252603c908201527f596f75206861766520616c726561647920636c61696d656420796f757220636f60408201527f6d70656e736174696f6e20666f72207468697320706572696f64202100000000606082015260800190565b918252602082015260400190565b9283526020830191909152604082015260600190565b8581526020810185905260408101849052821515606082015260a081016003831061287357fe5b8260808301529695505050505050565b6001600160a01b031690565b6001600160a01b03811681146128a457600080fd5b5056fea2646970667358221220ee0d30581eb572c3c3cf011c3527bd8d104d067e0f5bbeadd79bd40869944b2164736f6c634300060c00338be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
  "deployedBytecode": "",
  "immutableReferences": {},
  "sourceMap": "446:5521:2:-:0;;;2902:1035;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3290:13;3317:18;3349:16;3379:6;3399:11;865:17:23;885:12;:10;:12::i;:::-;907:6;:18;;-1:-1:-1;;;;;;907:18:23;-1:-1:-1;;;;;907:18:23;;;;;;;940:43;;-1:-1:-1;;907:18:23;;-1:-1:-1;907:18:23;;:6;;-1:-1:-1;;907:6:23;-1:-1:-1;;;;;940:43:23;907:6;;940:43;831:159;3437:16:3;:23;3408:18;:25;:52;3387:140;;;;-1:-1:-1;;;3387:140:3;;;;;;;:::i;:::-;;;;;;;;;3537:9;:18;;-1:-1:-1;;;;;3537:18:3;;;-1:-1:-1;;;;;;3537:18:3;;;;;;;-1:-1:-1;3603:33:3;;;;;;;;;;;;3646:13;:34;;;;;;;;;;;;;;;3673:5;;;3646:34;;;;;;;3719:5;;;;-1:-1:-1;3690:36:3;;;:20;3646:34;3690:36;;;;;:43;;-1:-1:-1;;3690:43:3;;;;;;;;3782:3;:25;;;;;;;;;;;;3817:32;;;;;;;;;;;;;;;;;3844:3;;;3817:32;;;;;;;3888:3;;;;;3859:34;;;;;:41;;;;;;;;;3911:135;3935:18;:25;3931:1;:29;3911:135;;;3981:54;3992:18;4011:1;3992:21;;;;;;;;;;;;;;4015:16;4032:1;4015:19;;;;;;;;;;;;;;3981:10;;;:54;;:::i;:::-;3962:3;;3911:135;;;;3177:875;;;;;3458:1:2::1;3443:5;:12;:16;3435:52;;;::::0;-1:-1:-1;;;3435:52:2;;::::1;::::0;::::1;;;:::i;:::-;3538:5;:12;3518:9;:16;:32;3497:126;;;::::0;-1:-1:-1;;;3497:126:2;;::::1;::::0;::::1;;;:::i;:::-;3639:9;3634:97;3658:5;:12;3654:1;:16;3634:97;;;3712:5;3718:1;3712:8;;;;;;;;;;;;;;3691:4;:18;3696:9;3706:1;3696:12;;;;;;;;;::::0;;::::1;::::0;;;;;;;3691:18;;;::::1;::::0;;;;;;-1:-1:-1;3691:18:2;:29;;-1:-1:-1;;;;;;3691:29:2::1;-1:-1:-1::0;;;;;3691:29:2;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;3672:3:2::1;3634:97;;;-1:-1:-1::0;3741:25:2::1;3759:6:::0;3741:17:::1;:25::i;:::-;3776:20:::0;;::::1;::::0;:8:::1;::::0;:20:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;3806:5:2::1;:14:::0;;;3830:20;;::::1;::::0;:8:::1;::::0;:20:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;;3860:8:2::1;:34:::0;;-1:-1:-1;;;;;;3860:34:2::1;3883:10;3860:34;::::0;;-1:-1:-1;;;3904:11:2::1;:26:::0;-1:-1:-1;446:5521:2;;-1:-1:-1;;;;446:5521:2;590:104:21;677:10;590:104;:::o;12705:366:3:-;12808:21;;:::i;:::-;12840:44;;;12894:22;;;:40;;;-1:-1:-1;12944:14:3;;;:35;;;12990:7;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12990:21:3;;;;;;;;;;;;;12840:44;;12990:21;;;-1:-1:-1;;12990:21:3;;;;;;;;;;;;;;;;;;13042;13061:1;13042:7;:14;;;;:18;;;;;;:21;;;;:::i;:::-;13027:37;;;;;;;12705:366;;;:::o;1983:240:23:-;1280:12;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:22:23;;;:6;;:22;1262:67;;;;-1:-1:-1;;;1262:67:23;;;;;;;:::i;:::-;-1:-1:-1;;;;;2071:22:23;::::1;2063:73;;;::::0;-1:-1:-1;;;2063:73:23;;::::1;::::0;::::1;;;:::i;:::-;2172:6;::::0;;2151:38:::1;::::0;-1:-1:-1;;;;;;;2151:38:23;;::::1;::::0;2172:6;::::1;::::0;;;;-1:-1:-1;;2172:6:23;-1:-1:-1;;;;;2151:38:23;::::1;2199:6;:17:::0;;-1:-1:-1;;;;;;2199:17:23::1;-1:-1:-1::0;;;;;2199:17:23;;;::::1;::::0;;;::::1;::::0;;1983:240::o;1321:134:24:-;1379:7;1405:43;1409:1;1412;1405:43;;;;;;;;;;;;;;;;;:3;;;:43;;:::i;:::-;1398:50;;1321:134;;;;;:::o;1746:187::-;1832:7;1867:12;1859:6;;;;1851:29;;;;-1:-1:-1;;;1851:29:24;;;;;;;;:::i;:::-;-1:-1:-1;;;1902:5:24;;;1746:187::o;446:5521:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;446:5521:2;;;-1:-1:-1;446:5521:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;5:134:-1;83:13;;101:33;83:13;101:33;:::i;164:722::-;;292:3;285:4;277:6;273:17;269:27;259:2;;-1:-1;;300:12;259:2;340:6;334:13;362:80;377:64;434:6;377:64;:::i;:::-;362:80;:::i;:::-;470:21;;;353:89;-1:-1;514:4;527:14;;;;502:17;;;616;;;607:27;;;;604:36;-1:-1;601:2;;;653:1;;643:12;601:2;678:1;663:217;688:6;685:1;682:13;663:217;;;2509:13;;756:61;;831:14;;;;859;;;;710:1;703:9;663:217;;;667:14;;;;;252:634;;;;:::o;917:758::-;;1057:3;1050:4;1042:6;1038:17;1034:27;1024:2;;-1:-1;;1065:12;1024:2;1105:6;1099:13;1127:92;1142:76;1211:6;1142:76;:::i;1127:92::-;1247:21;;;1118:101;-1:-1;1291:4;1304:14;;;;1279:17;;;1393;;;1384:27;;;;1381:36;-1:-1;1378:2;;;1430:1;;1420:12;1378:2;1455:1;1440:229;1465:6;1462:1;1459:13;1440:229;;;2668:6;2662:13;2680:45;2719:5;2680:45;:::i;:::-;1533:73;;1620:14;;;;1648;;;;1487:1;1480:9;1440:229;;2917:444;;3030:3;3023:4;3015:6;3011:17;3007:27;2997:2;;-1:-1;;3038:12;2997:2;3072:13;;-1:-1;11652:30;;11649:2;;;-1:-1;;11685:12;11649:2;3100:65;11826:4;-1:-1;;11758:9;11739:17;;11735:33;11816:15;3100:65;:::i;:::-;3091:74;;3185:6;3178:5;3171:21;3289:3;11826:4;3280:6;3213;3271:16;;3268:25;3265:2;;;3306:1;;3296:12;3265:2;3316:39;3348:6;11826:4;3247:5;3243:16;11826:4;3213:6;3209:17;3316:39;:::i;:::-;;2990:371;;;;:::o;3510:2171::-;;;;;;;;;;;3919:3;3907:9;3898:7;3894:23;3890:33;3887:2;;;-1:-1;;3926:12;3887:2;3988:64;4044:7;4020:22;3988:64;:::i;:::-;4110:2;4095:18;;4089:25;3978:74;;-1:-1;;4123:30;;;4120:2;;;-1:-1;;4156:12;4120:2;4186:89;4267:7;4258:6;4247:9;4243:22;4186:89;:::i;:::-;4176:99;;4333:2;4322:9;4318:18;4312:25;4298:39;;4134:18;4349:6;4346:30;4343:2;;;-1:-1;;4379:12;4343:2;4409:101;4502:7;4493:6;4482:9;4478:22;4409:101;:::i;:::-;4399:111;;4547:2;4601:9;4597:22;3447:13;4555:74;;4687:3;4676:9;4672:19;4666:26;4652:40;;4134:18;4704:6;4701:30;4698:2;;;-1:-1;;4734:12;4698:2;4764:74;4830:7;4821:6;4810:9;4806:22;4764:74;:::i;:::-;4754:84;;4875:3;4930:9;4926:22;3447:13;4884:74;;5014:83;5089:7;4995:3;5069:9;5065:22;5014:83;:::i;:::-;5004:93;;5155:3;5144:9;5140:19;5134:26;5120:40;;4134:18;5172:6;5169:30;5166:2;;;-1:-1;;5202:12;5166:2;5232:89;5313:7;5304:6;5293:9;5289:22;5232:89;:::i;:::-;5222:99;;5379:3;5368:9;5364:19;5358:26;5344:40;;4134:18;5396:6;5393:30;5390:2;;;-1:-1;;5426:12;5390:2;;5456:89;5537:7;5528:6;5517:9;5513:22;5456:89;:::i;:::-;5446:99;;;5601:64;5657:7;5582:3;5637:9;5633:22;5601:64;:::i;:::-;5591:74;;3881:1800;;;;;;;;;;;;;:::o;7879:310::-;;8026:2;8047:17;8040:47;5833:5;11936:12;12093:6;8026:2;8015:9;8011:18;12081:19;5927:52;5972:6;12121:14;8015:9;12121:14;8026:2;5953:5;5949:16;5927:52;:::i;:::-;11758:9;13105:14;-1:-1;;13101:28;5991:39;;;;12121:14;5991:39;;7997:192;-1:-1;;7997:192::o;8196:416::-;8396:2;8410:47;;;6267:2;8381:18;;;12081:19;6303:34;12121:14;;;6283:55;-1:-1;;;6358:12;;;6351:30;6400:12;;;8367:245::o;8619:416::-;8819:2;8833:47;;;6651:2;8804:18;;;12081:19;6687:34;12121:14;;;6667:55;-1:-1;;;6742:12;;;6735:33;6787:12;;;8790:245::o;9042:416::-;9242:2;9256:47;;;9227:18;;;12081:19;7074:34;12121:14;;;7054:55;7128:12;;;9213:245::o;9465:416::-;9665:2;9679:47;;;7379:2;9650:18;;;12081:19;7415:34;12121:14;;;7395:55;-1:-1;;;7470:12;;;7463:39;7521:12;;;9636:245::o;9888:416::-;10088:2;10102:47;;;7772:2;10073:18;;;12081:19;-1:-1;;;12121:14;;;7788:46;7853:12;;;10059:245::o;10311:256::-;10373:2;10367:9;10399:17;;;10495:22;;;-1:-1;10459:34;;10456:62;10453:2;;;10531:1;;10521:12;10453:2;10373;10540:22;10351:216;;-1:-1;10351:216::o;10574:304::-;;-1:-1;10722:30;;10719:2;;;-1:-1;;10755:12;10719:2;-1:-1;10800:4;10788:17;;;10853:15;;10656:222::o;12761:268::-;12826:1;12833:101;12847:6;12844:1;12841:13;12833:101;;;12914:11;;;12908:18;12895:11;;;12888:39;12869:2;12862:10;12833:101;;;12949:6;12946:1;12943:13;12940:2;;;12826:1;13005:6;13000:3;12996:16;12989:27;12940:2;;12810:219;;;:::o;13142:117::-;-1:-1;;;;;12615:54;;13201:35;;13191:2;;13250:1;;13240:12;13191:2;13185:74;:::o;:::-;446:5521:2;;;;;;",
  "deployedSourceMap": "446:5521:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4871:107;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4249:174:3;;;;;;:::i;:::-;;:::i;:::-;;1473:52;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4550:226::-;;;;;;:::i;:::-;;:::i;2033:68::-;;;;;;:::i;:::-;;:::i;1855:84::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;594:20:2:-;;;:::i;1184:24:3:-;;;:::i;:::-;;;;;;;:::i;10637:739::-;;;;;;:::i;:::-;;:::i;13939:274::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1380:30::-;;;;;;:::i;:::-;;:::i;882:23::-;;;:::i;1689:145:23:-;;;:::i;8566:1189:3:-;;;;;;:::i;:::-;;:::i;858:27:2:-;;;:::i;1102:26:3:-;;;:::i;4205:465:2:-;;;;;;:::i;:::-;;:::i;1066:77:23:-;;;:::i;1222:37:2:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;13167:92:3:-;;;:::i;9853:686::-;;;;;;:::i;:::-;;:::i;1114:35:2:-;;;;;;:::i;:::-;;:::i;1711:50:3:-;;;;;;:::i;:::-;;:::i;1593:53::-;;;;;;:::i;:::-;;:::i;779:22:2:-;;;:::i;:::-;;;;;;;:::i;6251:930:3:-;;;;;;:::i;:::-;;:::i;934:17::-;;;:::i;5119:93:2:-;;;:::i;994:23:3:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;13647:124::-;;;;;;:::i;:::-;;:::i;11526:634::-;;;;;;:::i;:::-;;:::i;1983:240:23:-;;;;;;:::i;:::-;;:::i;1334:25:2:-;;;;;;:::i;:::-;;:::i;7327:1039:3:-;;;;;;:::i;:::-;;:::i;5499:466:2:-;;;:::i;:::-;;;;;;;;;;;:::i;13265:261:3:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1286:24::-;;;;;;:::i;:::-;;:::i;4871:107:2:-;4926:12;4957:4;:14;4962:8;4957:14;;;;;;;;;;;4950:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4871:107;;;;:::o;4249:174:3:-;1280:12:23;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:22:23;;;:6;;:22;1262:67;;;;-1:-1:-1;;;1262:67:23;;;;;;;:::i;:::-;;;;;;;;;4370:46:3::1;4381:17;4400:15;4370:10;:46::i;:::-;4249:174:::0;;:::o;1473:52::-;;;;;;;;;;;;;;;:::o;4550:226::-;1280:12:23;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:22:23;;;:6;;:22;1262:67;;;;-1:-1:-1;;;1262:67:23;;;;;;;:::i;:::-;-1:-1:-1;;;;;4627:28:3;::::1;;::::0;;;:20:::1;:28;::::0;;;;;::::1;;:37;4619:69;;;::::0;-1:-1:-1;;;4619:69:3;;::::1;::::0;::::1;;;:::i;:::-;4698:13;:26:::0;;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;;4698:26:3::1;-1:-1:-1::0;;;;;4698:26:3;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;4734:28:3;;;:20:::1;4698:26;4734:28:::0;;;;;:35;;-1:-1:-1;;4734:35:3::1;::::0;;::::1;::::0;;4550:226::o;2033:68::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1855:84::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;594:20:2:-;;;;:::o;1184:24:3:-;;;-1:-1:-1;;;;;1184:24:3;;:::o;10637:739::-;10717:7;2609;2617;2609:16;;;;;;;;;;;;;;;;;;:33;;;2590:15;:52;;:122;;;;;2681:7;2689;2681:16;;;;;;;;;;;;;;;;;;:31;;;2662:15;:50;;2590:122;2569:153;;;;;;2343:9:::1;::::0;-1:-1:-1;;;;;2343:9:3::1;2329:10;:23;;2321:57;;;::::0;-1:-1:-1;;;2321:57:3;;::::1;::::0;::::1;;;:::i;:::-;10809:19:::2;10782:7;10790;10782:16;;;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;:46;;;;;;;;;10761:108;;;::::0;-1:-1:-1;;;10761:108:3;;::::2;::::0;::::2;;;:::i;:::-;10900:7;10908;10900:16;;;;;;;;;::::0;;;::::2;::::0;;;10938:10:::2;10900:49:::0;;:37:::2;:16;::::0;;::::2;;:37:::0;;;::::2;:49:::0;;;;;;:54;10879:161:::2;;;::::0;-1:-1:-1;;;10879:161:3;;::::2;::::0;::::2;;;:::i;:::-;11051:20;11074:38;11092:10;11104:7;11074:17;:38::i;:::-;11051:61:::0;-1:-1:-1;11122:12:3::2;11137:27;11161:2;11137:19;11051:61:::0;11154:1:::2;11137:16;:19::i;:::-;:23:::0;::::2;:27::i;:::-;11189:11;::::0;11122:42;;-1:-1:-1;11189:29:3::2;::::0;11205:12;11189:15:::2;:29::i;:::-;11175:11;:43;;;;11280:12;11228:7;11236;11228:16;;;;;;;;;::::0;;;::::2;::::0;;;11266:10:::2;11228:49:::0;;;:16:::2;::::0;;;::::2;;:37;;:49:::0;;;;;;;:64;;;;11303:5:::2;::::0;:40;;-1:-1:-1;;;11303:40:3;;-1:-1:-1;;;;;11303:5:3;;::::2;::::0;-1:-1:-1;;11303:40:3::2;::::0;11266:10;11330:12;;11303:40:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;11353:5:3::2;::::0;:16:::2;::::0;-1:-1:-1;;;11353:16:3;;-1:-1:-1;;;;;11353:5:3;;::::2;::::0;:10:::2;::::0;:16:::2;::::0;11364:4;;11353:16:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;2388:1;;10637:739:::0;;:::o;13939:274::-;-1:-1:-1;;;;;14111:18:3;;14039:20;14111:18;;;:10;:18;;;;;:26;;14039:20;;14111:18;14130:6;;14111:26;;;;;;;;;;;;;;;;;;;;;;:39;-1:-1:-1;;;;;14164:18:3;;;;;:10;:18;;;;;;;:26;;14111:39;;;;;14164:18;14183:6;;14164:26;;;;;;;;;;;;;;;;:32;;;14090:116;;;;13939:274;;;;;:::o;1380:30::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1380:30:3;;-1:-1:-1;1380:30:3;:::o;882:23::-;;;-1:-1:-1;;;;;882:23:3;;:::o;1689:145:23:-;1280:12;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:22:23;;;:6;;:22;1262:67;;;;-1:-1:-1;;;1262:67:23;;;;;;;:::i;:::-;1795:1:::1;1779:6:::0;;1758:40:::1;::::0;-1:-1:-1;;;;;1779:6:23;;::::1;::::0;1758:40:::1;::::0;1795:1;;1758:40:::1;1825:1;1808:19:::0;;-1:-1:-1;;;;;;1808:19:23::1;::::0;;1689:145::o;8566:1189:3:-;2343:9;;-1:-1:-1;;;;;2343:9:3;2329:10;:23;;2321:57;;;;-1:-1:-1;;;2321:57:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;2806:28:3;::::1;;::::0;;;:20:::1;:28;::::0;;;;;;;::::1;;:36;;-1:-1:-1::0;2806:36:3::1;2798:69;;;::::0;-1:-1:-1;;;2798:69:3;;::::1;::::0;::::1;;;:::i;:::-;8847:1:::2;8793:7;8801;8793:16;;;;;;;;;::::0;;;::::2;::::0;;;-1:-1:-1;;;;;8793:39:3;::::2;::::0;;:16:::2;::::0;;;::::2;::::0;;::::2;:31;;:39:::0;;;;;;8833:10:::2;8793:51:::0;;;;;;;;:55:::2;8772:129;;;::::0;-1:-1:-1;;;8772:129:3;;::::2;::::0;::::2;;;:::i;:::-;8938:63;::::0;-1:-1:-1;;;8938:63:3;;-1:-1:-1;;;;;8938:27:3;::::2;::::0;-1:-1:-1;;8938:63:3::2;::::0;8966:10:::2;::::0;8986:4:::2;::::0;8993:7;;8938:63:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9119:90;9201:7;9119;9127;9119:16;;;;;;;;;::::0;;;::::2;::::0;;;-1:-1:-1;;;;;9119:52:3;::::2;::::0;;:16:::2;::::0;;;::::2;::::0;;::::2;:44;;:52:::0;;;;;;9172:10:::2;9119:64:::0;;;;;;;;;:81:::2;:90::i;:::-;9065:7;9073;9065:16;;;;;;;;;::::0;;;::::2;::::0;;;-1:-1:-1;;;;;9065:39:3;::::2;::::0;;:31:::2;:16;::::0;;;::::2;;:31:::0;::::2;:39:::0;;;;;;9105:10:::2;9065:51:::0;;;;;;;;:144;;;;9233:11;:24:::2;::::0;9249:7;9233:15:::2;:24::i;:::-;9219:11;:38:::0;9268::::2;9290:6:::0;9298:7;9268:21:::2;:38::i;:::-;9349:14;9366:7;9374;9366:16;;;;;;;;;::::0;;;::::2;::::0;;;-1:-1:-1;;;;;9366:39:3;::::2;::::0;;:16:::2;::::0;;::::2;;:31;;:39:::0;;;;;;9406:10:::2;9366:51:::0;;;;;;;;9500:14;;9464:7:::2;:16:::0;;9366:51;;-1:-1:-1;9464:51:3::2;::::0;9472:7;;9464:16;::::2;;;;;;;;;;;;;;;:31;;;:35;;:51;;;;:::i;:::-;9427:88;;9580:1;9526:7;9534;9526:16;;;;;;;;;::::0;;;::::2;::::0;;;-1:-1:-1;;;;;9526:39:3;::::2;::::0;;:31:::2;:16;::::0;;;::::2;;:31:::0;::::2;:39:::0;;;;;;9566:10:::2;9526:51:::0;;;;;;;;:55;;;;9605:11;:23:::2;::::0;9621:6;9605:15:::2;:23::i;:::-;9591:11;:37:::0;9638:5:::2;::::0;-1:-1:-1;;;;;9638:5:3::2;:14;9653:10;9665:26;:6:::0;9676:14;9665:10:::2;:26::i;:::-;9638:54;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;9733:5:3::2;::::0;9703:45:::2;::::0;-1:-1:-1;;;;;9733:5:3::2;9741:6:::0;9703:21:::2;:45::i;:::-;2877:1;;2388::::1;8566:1189:::0;;;:::o;858:27:2:-;;;-1:-1:-1;;;;;858:27:2;;:::o;1102:26:3:-;;;;:::o;4205:465:2:-;1840:8;;:20;;;-1:-1:-1;;;1840:20:2;;;;-1:-1:-1;;;;;1840:8:2;;;;:18;;:20;;;;;;;;;;;;;;;:8;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1818:43:2;:10;:43;1797:127;;;;-1:-1:-1;;;1797:127:2;;;;;;;:::i;:::-;4342:14:::1;::::0;;;:4:::1;:14;::::0;;;;;;;4362:39;;::::1;::::0;::::1;::::0;;4366:15:::1;4362:39:::0;;;;;::::1;::::0;;;;;;;;;4342:60;;::::1;::::0;;::::1;::::0;;;;;;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;::::1;::::0;;;;;;::::1;::::0;;::::1;::::0;;;;4418:46;::::1;::::0;::::1;::::0;4383:6;;4391:9;;4418:46:::1;:::i;:::-;;;;;;;;4480:14;::::0;;;:4:::1;:14;::::0;;;;;;;:35;;-1:-1:-1;;;4480:35:2;;-1:-1:-1;;;;;4480:14:2;;::::1;::::0;-1:-1:-1;;4480:35:2::1;::::0;4508:6;;4480:35:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4475:189;;4559:19;4531:7;4539:9;4531:18;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:25;;:47:::0;;-1:-1:-1;;4531:47:2::1;;::::0;::::1;::::0;::::1;;;;;;;;;;;4475:189;;;4637:16;4609:7;4617:9;4609:18;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:25;;:44:::0;;-1:-1:-1;;4609:44:2::1;;::::0;::::1;::::0;::::1;;;;;;;;;;;4475:189;4205:465:::0;;;:::o;1066:77:23:-;1104:7;1130:6;-1:-1:-1;;;;;1130:6:23;;1066:77::o;1222:37:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1222:37:2;;-1:-1:-1;1222:37:2;:::o;13167:92:3:-;13238:7;:14;13167:92;:::o;9853:686::-;9927:7;2609;2617;2609:16;;;;;;;;;;;;;;;;;;:33;;;2590:15;:52;;:122;;;;;2681:7;2689;2681:16;;;;;;;;;;;;;;;;;;:31;;;2662:15;:50;;2590:122;2569:153;;;;;;2457:9:::1;::::0;-1:-1:-1;;;;;2457:9:3::1;2443:10;:23;2435:61;;;::::0;-1:-1:-1;;;2435:61:3;;::::1;::::0;::::1;;;:::i;:::-;10020:16:::2;9993:7;10001;9993:16;;;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;:43;;;;;;;;;9972:109;;;::::0;-1:-1:-1;;;9972:109:3;;::::2;::::0;::::2;;;:::i;:::-;10113:7;10121;10113:16;;;;;;;;;::::0;;;::::2;::::0;;;:24:::2;:16;::::0;;::::2;;:24;::::0;::::2;;10112:25;10091:126;;;::::0;-1:-1:-1;;;10091:126:3;;::::2;::::0;::::2;;;:::i;:::-;10261:7;:14:::0;10245:11:::2;::::0;10228:14:::2;::::0;10245:31:::2;::::0;:11;:15:::2;:31::i;:::-;10228:48:::0;-1:-1:-1;10286:12:3::2;10301:21;10319:2;10301:13;10228:48:::0;10312:1:::2;10301:10;:13::i;:21::-;10347:11;::::0;10286:36;;-1:-1:-1;10347:23:3::2;::::0;10363:6;10347:15:::2;:23::i;:::-;10333:11;:37;;;;10414:6;10380:7;10388;10380:16;;;;;;;;;;;;;;;;;;:31;;:40;;;;10457:4;10430:7;10438;10430:16;;;;;;;;;::::0;;;::::2;::::0;;;::::2;::::0;;::::2;;:24;;:31:::0;;-1:-1:-1;;10430:31:3::2;::::0;::::2;;::::0;;;::::2;::::0;;-1:-1:-1;10472:5:3;:34:::2;::::0;-1:-1:-1;;;10472:34:3;;-1:-1:-1;;;;;10472:5:3;;::::2;::::0;-1:-1:-1;;10472:34:3::2;::::0;10487:10:::2;::::0;10499:6;;10472:34:::2;;;:::i;1114:35:2:-:0;;;;;;;;;;;;-1:-1:-1;;;;;1114:35:2;;:::o;1711:50:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1711:50:3;;;;-1:-1:-1;1711:50:3;-1:-1:-1;1711:50:3;:::o;1593:53::-;;;;;;;;;;;;;:::o;779:22:2:-;;;;;;;;;;;;;;;-1:-1:-1;;779:22:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6251:930:3:-;-1:-1:-1;;;;;2806:28:3;;;;;;:20;:28;;;;;;;;;;:36;;-1:-1:-1;2806:36:3;2798:69;;;;-1:-1:-1;;;2798:69:3;;;;;;;:::i;:::-;6412:1:::1;6402:7;:11;6394:42;;;::::0;-1:-1:-1;;;6394:42:3;;::::1;::::0;::::1;;;:::i;:::-;6517:54;6543:10;6555:6;6563:7;6517:25;:54::i;:::-;6605:63;::::0;-1:-1:-1;;;6605:63:3;;-1:-1:-1;;;;;6605:27:3;::::1;::::0;-1:-1:-1;;6605:63:3::1;::::0;6633:10:::1;::::0;6653:4:::1;::::0;6660:7;;6605:63:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6786:90;6868:7;6786;6794;6786:16;;;;;;;;;::::0;;;::::1;::::0;;;-1:-1:-1;;;;;6786:52:3;::::1;::::0;;:16:::1;::::0;;;::::1;::::0;;::::1;:44;;:52:::0;;;;;;6839:10:::1;6786:64:::0;;;;;;;;;:81:::1;:90::i;:::-;6732:7;6740;6732:16;;;;;;;;;::::0;;;::::1;::::0;;;-1:-1:-1;;;;;6732:39:3;::::1;::::0;;:31:::1;:16;::::0;;;::::1;;:31:::0;::::1;:39:::0;;;;;;6772:10:::1;6732:51:::0;;;;;;;;:144;;;;6900:11;:24:::1;::::0;6916:7;6900:15:::1;:24::i;:::-;6886:11;:38:::0;7059:10:::1;7040:30;::::0;;;:18:::1;:30;::::0;;;;;7074:1:::1;7040:35;7036:90;;;7091:7;:24:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;7091:24:3;;;;;::::1;::::0;;-1:-1:-1;;;;;;7091:24:3::1;7104:10;7091:24;::::0;;7036:90:::1;7136:38;7158:6;7166:7;7136:21;:38::i;:::-;6251:930:::0;;;;:::o;934:17::-;;;-1:-1:-1;;;;;934:17:3;;:::o;5119:93:2:-;5194:11;;5119:93;:::o;994:23:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;994:23:3;;;;;;;;;;;;:::o;13647:124::-;-1:-1:-1;;;;;13739:18:3;13713:7;13739:18;;;:10;:18;;;;;:25;;13647:124::o;11526:634::-;-1:-1:-1;;;;;11689:25:3;;11630:7;11689:25;;;:18;:25;;;;;;11630:7;;11689:29;11685:442;;11756:26;11734:383;11825:13;:20;11804:41;;11734:383;;;11929:173;11965:7;11973;11965:16;;;;;;;;;;;;;;;;;;:31;;:112;12022:13;12036:18;12022:33;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12022:33:3;;;11965:112;;;;;;;;;;;;;;;:119;;;;;;;;;;;;11929:10;;:14;:173::i;:::-;11916:186;-1:-1:-1;11863:20:3;;11734:383;;;;11685:442;12143:10;-1:-1:-1;11526:634:3;;;;;:::o;1983:240:23:-;1280:12;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:22:23;;;:6;;:22;1262:67;;;;-1:-1:-1;;;1262:67:23;;;;;;;:::i;:::-;-1:-1:-1;;;;;2071:22:23;::::1;2063:73;;;::::0;-1:-1:-1;;;2063:73:23;;::::1;::::0;::::1;;;:::i;:::-;2172:6;::::0;;2151:38:::1;::::0;-1:-1:-1;;;;;2151:38:23;;::::1;::::0;2172:6;::::1;::::0;2151:38:::1;::::0;::::1;2199:6;:17:::0;;-1:-1:-1;;;;;;2199:17:23::1;-1:-1:-1::0;;;;;2199:17:23;;;::::1;::::0;;;::::1;::::0;;1983:240::o;1334:25:2:-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1334:25:2;:::o;7327:1039:3:-;2343:9;;-1:-1:-1;;;;;2343:9:3;2329:10;:23;;2321:57;;;;-1:-1:-1;;;2321:57:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;2806:28:3;::::1;;::::0;;;:20:::1;:28;::::0;;;;;;;::::1;;:36;;-1:-1:-1::0;2806:36:3::1;2798:69;;;::::0;-1:-1:-1;;;2798:69:3;;::::1;::::0;::::1;;;:::i;:::-;7581:1:::2;7527:7;7535;7527:16;;;;;;;;;::::0;;;::::2;::::0;;;-1:-1:-1;;;;;7527:39:3;::::2;::::0;;:16:::2;::::0;;;::::2;::::0;;::::2;:31;;:39:::0;;;;;;7567:10:::2;7527:51:::0;;;;;;;;:55:::2;7506:129;;;::::0;-1:-1:-1;;;7506:129:3;;::::2;::::0;::::2;;;:::i;:::-;7678:14;7695:7;7703;7695:16;;;;;;;;;::::0;;;::::2;::::0;;;-1:-1:-1;;;;;7695:39:3;::::2;::::0;;:16:::2;::::0;;::::2;;:31;;:39:::0;;;;;;7735:10:::2;7695:51:::0;;;;;;;;7829:14;;7793:7:::2;:16:::0;;7695:51;;-1:-1:-1;7793:51:3::2;::::0;7801:7;;7793:16;::::2;;;;:51;7756:88;;7909:1;7855:7;7863;7855:16;;;;;;;;;::::0;;;::::2;::::0;;;-1:-1:-1;;;;;7855:39:3;::::2;::::0;;:31:::2;:16;::::0;;;::::2;;:31:::0;::::2;:39:::0;;;;;;7895:10:::2;7855:51:::0;;;;;;;;:55;;;;7934:11;:23:::2;::::0;7950:6;7934:15:::2;:23::i;:::-;7920:11;:37:::0;-1:-1:-1;;;;;7967:23:3;::::2;;7991:10;8003:26;:6:::0;8014:14;8003:10:::2;:26::i;:::-;7967:63;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;8145:10:3::2;8126:30;::::0;;;:18:::2;:30;::::0;;;;;:37:::2;::::0;8161:1:::2;8126:34;:37::i;:::-;8112:10;8093:30;::::0;;;:18:::2;:30;::::0;;;;:70;;;8174:138:::2;;8229:13;8245:21;8255:10;8245:9;:21::i;:::-;8229:37;;8287:7;8295:5;8287:14;;;;;;;;;::::0;;;::::2;::::0;;;::::2;8280:21:::0;;-1:-1:-1;;;;;;8280:21:3::2;::::0;;-1:-1:-1;8174:138:3::2;8322:37;8344:6;8352;8322:21;:37::i;:::-;2877:1;;2388::::1;7327:1039:::0;;:::o;5499:466:2:-;5581:7;5602:13;5629:7;5650:16;5680:12;5717:26;5756:8;:15;;;;5746:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5746:26:2;;5717:55;;5788:9;5783:107;5807:8;:15;5803:19;;5783:107;;;5862:4;:17;5867:8;5876:1;5867:11;;;;;;;;;;;;;;;;;;;;5862:17;;;;;;;;;;;;;5843:16;;-1:-1:-1;;;;;5862:17:2;;;;5843:13;;5857:1;;5843:16;;;;;;-1:-1:-1;;;;;5843:36:2;;;;:16;;;;;;;;;;;:36;-1:-1:-1;5824:3:2;5783:107;;;;5908:7;:5;:7::i;:::-;5927:5;;5917:8;5900:58;;;;;;;;;;;;;-1:-1:-1;;5900:58:2;;;;;;;;;;;;;;;;;;;;;;;;;;5917:8;;5927:5;5934:8;;5944:13;;5917:8;;5900:58;;5917:8;5900:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5499:466;;;;;:::o;13265:261:3:-;13352:19;13373:17;13427:7;13435:9;13427:18;;;;;;;;;;;;;;;;;;:35;;;13476:7;13484:9;13476:18;;;;;;;;;;;;;;;;;;:33;;;13406:113;;;;13265:261;;;:::o;1286:24::-;;;;;;;;;;1321:134:24;1379:7;1405:43;1409:1;1412;1405:43;;;;;;;;;;;;;;;;;:3;:43::i;590:104:21:-;677:10;590:104;:::o;12705:366:3:-;12808:21;;:::i;:::-;12840:44;;;12894:22;;;:40;;;-1:-1:-1;12944:14:3;;;:35;;;12990:7;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12990:21:3;;;;;;;;;;;;;12840:44;;12990:21;;;-1:-1:-1;;12990:21:3;;;;;;;;;;;;;;;-1:-1:-1;;13042:7:3;:14;:21;;-1:-1:-1;13061:1:3;13042:18;:21::i;:::-;13027:37;;;;;;;12705:366;;;:::o;2180:459:24:-;2238:7;2479:6;2475:45;;-1:-1:-1;2508:1:24;2501:8;;2475:45;2542:5;;;2546:1;2542;:5;:1;2565:5;;;;;:10;2557:56;;;;-1:-1:-1;;;2557:56:24;;;;;;;:::i;3101:130::-;3159:7;3185:39;3189:1;3192;3185:39;;;;;;;;;;;;;;;;;:3;:39::i;874:176::-;932:7;963:5;;;986:6;;;;978:46;;;;-1:-1:-1;;;978:46:24;;;;;;;:::i;4934:740:3:-;5038:10;5021:28;;;;:16;:28;;;;;;;;-1:-1:-1;;;;;5021:36:3;;;;;;;;;;;;5017:651;;5093:10;5082:22;;;;:10;:22;;;;;;;;5127:50;;;;;;;-1:-1:-1;;;;;5127:50:3;;;;;;;;;;;;5082:109;;-1:-1:-1;5082:109:3;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5082:109:3;;;;;;;;;;;;;;;;5229:22;;;:29;;5276:21;:33;;;;;:41;;;;;;;;-1:-1:-1;;5229:33:3;;;;5276:57;;5347:28;;;:16;:28;;;;;:36;;;;;;;;:43;;-1:-1:-1;;5347:43:3;;;;;;5017:651;;;5464:10;5421:18;5442:33;;;:21;:33;;;;;;;;-1:-1:-1;;;;;5442:41:3;;;;;;;;;;5540:22;;;:10;:22;;;;;:64;;:117;;5649:7;;5442:41;;5540:64;;;;;;;;;;;;;;;;:87;;;:108;;:117;;;;:::i;:::-;5508:10;5497:22;;;;:10;:22;;;;;:34;;5520:10;;5497:34;;;;;;;;;;;;;;;;:40;;:160;;;;5017:651;4934:740;;:::o;5835:215::-;5961:10;5918:18;5939:33;;;:21;:33;;;;;;;;-1:-1:-1;;;;;5939:41:3;;;;;;;;;;5990:22;;;:10;:22;;;;;:34;;:53;;6035:7;;5939:41;;5990:34;;;;;;;;;;;;;;;;:40;;;:44;;:53;;;;:::i;12166:280::-;12352:1;12302:7;12310;12302:16;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12302:39:3;;;;;:16;;;;;;:31;;:39;;;;;;:46;;;;;;;;;;;:51;12298:142;;-1:-1:-1;;;;;12397:25:3;;;;;;:18;:25;;;;;;:32;;-1:-1:-1;12397:29:3;:32::i;:::-;-1:-1:-1;;;;;12369:25:3;;;;;;:18;:25;;;;;:60;12166:280;;;:::o;12452:247::-;12509:7;;12528:135;12552:7;:14;12548:18;;12528:135;;;12591:7;:10;;-1:-1:-1;;;;;12591:19:3;;;:7;12599:1;;12591:10;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12591:10:3;:19;12587:66;;;12637:1;-1:-1:-1;12630:8:3;;12587:66;12568:3;;12528:135;;;-1:-1:-1;;;;12688:2:3;-1:-1:-1;;12452:247:3:o;1746:187:24:-;1832:7;1867:12;1859:6;;;;1851:29;;;;-1:-1:-1;;;1851:29:24;;;;;;;;:::i;:::-;-1:-1:-1;;;1902:5:24;;;1746:187::o;3713:272::-;3799:7;3833:12;3826:5;3818:28;;;;-1:-1:-1;;;3818:28:24;;;;;;;;:::i;:::-;;3856:9;3872:1;3868;:5;;;;;;;3713:272;-1:-1:-1;;;;;3713:272:24:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;726:241::-;;830:2;818:9;809:7;805:23;801:32;798:2;;;-1:-1;;836:12;798:2;85:6;72:20;97:33;124:5;97:33;:::i;974:366::-;;;1095:2;1083:9;1074:7;1070:23;1066:32;1063:2;;;-1:-1;;1101:12;1063:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;1153:63;-1:-1;1253:2;1292:22;;72:20;97:33;72:20;97:33;:::i;:::-;1261:63;;;;1057:283;;;;;:::o;1347:366::-;;;1468:2;1456:9;1447:7;1443:23;1439:32;1436:2;;;-1:-1;;1474:12;1436:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;1526:63;1626:2;1665:22;;;;656:20;;-1:-1;;;1430:283::o;1720:491::-;;;;1858:2;1846:9;1837:7;1833:23;1829:32;1826:2;;;-1:-1;;1864:12;1826:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;1916:63;2016:2;2055:22;;656:20;;-1:-1;2124:2;2163:22;;;656:20;;1820:391;-1:-1;;;1820:391::o;2218:257::-;;2330:2;2318:9;2309:7;2305:23;2301:32;2298:2;;;-1:-1;;2336:12;2298:2;223:6;217:13;34302:5;31365:13;31358:21;34280:5;34277:32;34267:2;;-1:-1;;34313:12;2482:241;;2586:2;2574:9;2565:7;2561:23;2557:32;2554:2;;;-1:-1;;2592:12;2554:2;-1:-1;344:20;;2548:175;-1:-1;2548:175::o;2730:366::-;;;2851:2;2839:9;2830:7;2826:23;2822:32;2819:2;;;-1:-1;;2857:12;2819:2;-1:-1;;344:20;;;3009:2;3048:22;;;656:20;;-1:-1;2813:283::o;3103:491::-;;;;3241:2;3229:9;3220:7;3216:23;3212:32;3209:2;;;-1:-1;;3247:12;3209:2;-1:-1;;344:20;;;3399:2;3438:22;;656:20;;-1:-1;3507:2;3546:22;;;656:20;;3203:391;-1:-1;3203:391::o;3601:297::-;;3733:2;3721:9;3712:7;3708:23;3704:32;3701:2;;;-1:-1;;3739:12;3701:2;515:6;509:13;527:50;571:5;527:50;:::i;4153:491::-;;;;4291:2;4279:9;4270:7;4266:23;4262:32;4259:2;;;-1:-1;;4297:12;4259:2;669:6;656:20;4349:63;;4449:2;4492:9;4488:22;72:20;97:33;124:5;97:33;:::i;:::-;4253:391;;4457:63;;-1:-1;;;4557:2;4596:22;;;;656:20;;4253:391::o;9670:347::-;;9815:5;29581:12;30579:6;30574:3;30567:19;-1:-1;33680:101;33694:6;33691:1;33688:13;33680:101;;;30616:4;33761:11;;;;;33755:18;33742:11;;;;;33735:39;33709:10;33680:101;;;33796:6;33793:1;33790:13;33787:2;;;-1:-1;30616:4;33852:6;30611:3;33843:16;;33836:27;33787:2;-1:-1;33968:7;33952:14;-1:-1;;33948:28;9973:39;;;;30616:4;9973:39;;9762:255;-1:-1;;9762:255::o;16185:222::-;-1:-1;;;;;31780:54;;;;5894:37;;16312:2;16297:18;;16283:124::o;16414:460::-;-1:-1;;;;;31780:54;;;5753:58;;31780:54;;;;16777:2;16762:18;;5894:37;16860:2;16845:18;;8541:37;;;;16605:2;16590:18;;16576:298::o;16881:349::-;-1:-1;;;;;31780:54;;;;5753:58;;17216:2;17201:18;;8541:37;17044:2;17029:18;;17015:215::o;17237:1076::-;-1:-1;;;;;31780:54;;5894:37;;-1:-1;17727:2;17712:18;;;17705:48;;;-1:-1;;17767:78;;17593:19;;17831:6;17767:78;:::i;:::-;17924:2;17909:18;;8541:37;;;17966:20;;;17961:2;17946:18;;17939:48;29581:12;;30567:19;;;29087:14;;;;30607;;;-1:-1;6382:260;6407:6;6404:1;6401:13;6382:260;;;6468:13;;8541:37;;30160:14;;;;5178;;;;6429:1;6422:9;6382:260;;;-1:-1;;18148:20;;;18142:3;18127:19;;18120:49;29581:12;;30567:19;;;30607:14;;;;-1:-1;29087:14;;;;-1:-1;7152:284;7177:6;7174:1;7171:13;7152:284;;;32155:52;7244:6;7238:13;32155:52;:::i;:::-;8796:65;;5384:14;;;;30160;;;;6429:1;7192:9;7152:284;;;-1:-1;18175:128;;17579:734;-1:-1;;;;;;;;;;17579:734::o;18660:450::-;18877:2;18891:47;;;29581:12;;18862:18;;;30567:19;;;18660:450;;18877:2;30607:14;;;;;;29087;;;18660:450;8019:320;8044:6;8041:1;8038:13;8019:320;;;8105:13;;15522:23;;8541:37;;15683:16;;;15677:23;15754:14;;;8541:37;15841:16;;15835:23;15912:14;;;8541:37;5655:4;5646:14;;;;30160;;;;8066:1;8059:9;8019:320;;;-1:-1;18944:156;;18848:262;-1:-1;;;;;;;18848:262::o;19117:210::-;31365:13;;31358:21;8434:34;;19238:2;19223:18;;19209:118::o;19334:222::-;8541:37;;;19461:2;19446:18;;19432:124::o;20611:310::-;;20758:2;20779:17;20772:47;20833:78;20758:2;20747:9;20743:18;20897:6;20833:78;:::i;20928:416::-;21128:2;21142:47;;;10249:2;21113:18;;;30567:19;-1:-1;;;30607:14;;;10265:42;10326:12;;;21099:245::o;21351:416::-;21551:2;21565:47;;;10577:2;21536:18;;;30567:19;-1:-1;;;30607:14;;;10593:38;10650:12;;;21522:245::o;21774:416::-;21974:2;21988:47;;;10901:2;21959:18;;;30567:19;10937:34;30607:14;;;10917:55;-1:-1;;;10992:12;;;10985:30;11034:12;;;21945:245::o;22197:416::-;22397:2;22411:47;;;11285:2;22382:18;;;30567:19;11321:29;30607:14;;;11301:50;11370:12;;;22368:245::o;22620:416::-;22820:2;22834:47;;;11621:2;22805:18;;;30567:19;11657:34;30607:14;;;11637:55;-1:-1;;;11712:12;;;11705:29;11753:12;;;22791:245::o;23043:416::-;23243:2;23257:47;;;12004:2;23228:18;;;30567:19;-1:-1;;;30607:14;;;12020:44;12083:12;;;23214:245::o;23466:416::-;23666:2;23680:47;;;12334:2;23651:18;;;30567:19;12370:29;30607:14;;;12350:50;12419:12;;;23637:245::o;23889:416::-;24089:2;24103:47;;;12670:2;24074:18;;;30567:19;-1:-1;;;30607:14;;;12686:42;12747:12;;;24060:245::o;24312:416::-;24512:2;24526:47;;;12998:2;24497:18;;;30567:19;13034:34;30607:14;;;13014:55;-1:-1;;;13089:12;;;13082:46;13147:12;;;24483:245::o;24735:416::-;24935:2;24949:47;;;13398:2;24920:18;;;30567:19;13434:34;30607:14;;;13414:55;-1:-1;;;13489:12;;;13482:25;13526:12;;;24906:245::o;25158:416::-;25358:2;25372:47;;;13777:2;25343:18;;;30567:19;-1:-1;;;30607:14;;;13793:43;13855:12;;;25329:245::o;25581:416::-;25781:2;25795:47;;;25766:18;;;30567:19;14142:34;30607:14;;;14122:55;14196:12;;;25752:245::o;26004:416::-;26204:2;26218:47;;;14447:2;26189:18;;;30567:19;-1:-1;;;30607:14;;;14463:41;14523:12;;;26175:245::o;26427:416::-;26627:2;26641:47;;;14774:2;26612:18;;;30567:19;-1:-1;;;30607:14;;;14790:48;14857:12;;;26598:245::o;26850:416::-;27050:2;27064:47;;;15108:2;27035:18;;;30567:19;15144:34;30607:14;;;15124:55;15213:30;15199:12;;;15192:52;15263:12;;;27021:245::o;27502:333::-;8541:37;;;27821:2;27806:18;;8541:37;27657:2;27642:18;;27628:207::o;27842:444::-;8541:37;;;28189:2;28174:18;;8541:37;;;;28272:2;28257:18;;8541:37;28025:2;28010:18;;27996:290::o;28293:672::-;8541:37;;;28699:2;28684:18;;8541:37;;;28782:2;28767:18;;8541:37;;;31365:13;;31358:21;28859:2;28844:18;;8434:34;28534:3;28519:19;;34068:1;34058:12;;34048:2;;34074:9;34048:2;33318:34;28950:3;28939:9;28935:19;9600:58;28505:460;;;;;;;;:::o;31201:91::-;-1:-1;;;;;31780:54;;31246:46::o;34097:117::-;-1:-1;;;;;31780:54;;34156:35;;34146:2;;34205:1;;34195:12;34146:2;34140:74;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\npragma experimental ABIEncoderV2;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\nimport \"../SLO/SLO.sol\";\nimport \"../SLARegistry.sol\";\nimport \"./Staking.sol\";\n\n/**\n * @title SLA\n * @dev SLA is a service level agreement contract used for service downtime\n * compensation\n */\ncontract SLA is Ownable, Staking {\n    using SafeMath for uint256;\n\n    /// @dev The required amount to stake when subscribing to the agreement\n    uint256 public stake;\n\n    /// @dev The time between SLI registration\n    uint256 private sliInterval;\n\n    /// @dev The ipfs hash that stores extra information about the agreement\n    string public ipfsHash;\n\n    /// @dev The address of the registry contract\n    SLARegistry public registry;\n\n    /// @dev Struct used for storing registered SLI's\n    struct SLI {\n        uint256 timestamp;\n        uint256 value;\n        uint256 periodId;\n    }\n\n    /// @dev mapping to get SLO addresses from SLO names in bytes32\n    mapping(bytes32 => SLO) public SLOs;\n\n    /// @dev mapping to get SLI structs from SLO names in bytes32\n    mapping(bytes32 => SLI[]) public SLIs;\n\n    /// @dev array storing the names of the SLO's of this agreement\n    bytes32[] public SLONames;\n\n    /**\n     * @dev event for SLI creation logging\n     * @param _timestamp 1. the time the SLI has been registered\n     * @param _value 2. the value of the SLI\n     * @param _periodId 3. the id of the given period\n     */\n    event SLICreated(uint256 _timestamp, uint256 _value, uint256 _periodId);\n\n    /**\n     * @dev throws if called by any address other than the messenger contract.\n     */\n    modifier onlyMessenger() {\n        require(\n            msg.sender == address(registry.messenger()),\n            \"Only Messenger can call this funtcion\"\n        );\n        _;\n    }\n\n    /**\n     * @param _owner 1. address of the owner of the service level agreement\n     * @param _SLONames 2. array of the names of the service level objectives\n     * in bytes32\n     * @param _SLOs 3. array of service level objective contract addressess\n     * service level objective breach\n     * @param _stake 4. uint of the amount required to stake when signing the\n     * service level agreement\n     * @param _ipfsHash 5. string with the ipfs hash that contains extra\n     * information about the service level agreement\n     * @param _sliInterval 6. uint the interval in seconds between requesting a new SLI\n     * @param _tokenAddress 7. address of the DSLA token to be unlocked for staking\n     * @param _sla_period_starts 8. array with the values for the \"start\" of every period\n     * @param _sla_period_ends 9. array with the values for the \"end\" of every period\n     * @param _daiAddress 10. DAI Token Address to accept by default\n     */\n    constructor(\n        address _owner,\n        bytes32[] memory _SLONames,\n        SLO[] memory _SLOs,\n        uint256 _stake,\n        string memory _ipfsHash,\n        uint256 _sliInterval,\n        bDSLAToken _tokenAddress,\n        uint256[] memory _sla_period_starts,\n        uint256[] memory _sla_period_ends,\n        address _daiAddress\n    )\n        public\n        Staking(\n            _tokenAddress,\n            _sla_period_starts,\n            _sla_period_ends,\n            _owner,\n            _daiAddress\n        )\n    {\n        require(_SLOs.length < 5, \"max amount of SLOs is 5\");\n        require(\n            _SLONames.length == _SLOs.length,\n            \"_SLONames and _SLOs should have the same length\"\n        );\n\n        for (uint256 i = 0; i < _SLOs.length; i++) {\n            SLOs[_SLONames[i]] = _SLOs[i];\n        }\n\n        transferOwnership(_owner);\n        SLONames = _SLONames;\n        stake = _stake;\n        ipfsHash = _ipfsHash;\n        registry = SLARegistry(msg.sender);\n        sliInterval = _sliInterval;\n    }\n\n    /**\n     * @dev external function to register SLI's and check them against the SLO's\n     * @param _SLOName 1. the name of the SLO in bytes32\n     * @param _value 2. the value of the SLI to check\n     * @param _periodId 3. the id of the given period\n     */\n    function registerSLI(\n        bytes32 _SLOName,\n        uint256 _value,\n        uint256 _periodId\n    ) external onlyMessenger {\n        SLIs[_SLOName].push(SLI(block.timestamp, _value, _periodId));\n\n        emit SLICreated(block.timestamp, _value, _periodId);\n\n        if (!SLOs[_SLOName].isSLOHonored(_value)) {\n            periods[_periodId].status = Status.NotRespected;\n        } else {\n            periods[_periodId].status = Status.Respected;\n        }\n    }\n\n    /**\n     * @dev external function to get SLIs of certain _SLO\n     * @param _SLOName 1. the name of the SLO in bytes32\n     * @return SLI[] array of SLIs associated to the input SLOs\n     */\n    function getSLI(bytes32 _SLOName) public view returns (SLI[] memory) {\n        return SLIs[_SLOName];\n    }\n\n    /**\n     * @dev external view function that returns the sliInterval value\n     · @return uint256 value of the sliInterval\n     */\n    function getSliInterval() external view returns (uint256) {\n        return sliInterval;\n    }\n\n    /**\n     * @dev external view function that returns all agreement information\n     * @return address owner\n     * @return string ipfsHash\n     * @return uint256 amount necessary to stake\n     * @return bytes32[] SLONames array\n     * @return SLO[] SLO addresses array\n     */\n\n    function getDetails()\n        external\n        view\n        returns (\n            address,\n            string memory,\n            uint256,\n            bytes32[] memory,\n            SLO[] memory\n        )\n    {\n        SLO[] memory _SLOAddresses = new SLO[](SLONames.length);\n\n        for (uint256 i = 0; i < SLONames.length; i++) {\n            _SLOAddresses[i] = SLOs[SLONames[i]];\n        }\n\n        return (owner(), ipfsHash, stake, SLONames, _SLOAddresses);\n    }\n}\n",
  "sourcePath": "/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLA/SLA.sol",
  "ast": {
    "absolutePath": "/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLA/SLA.sol",
    "exportedSymbols": {
      "SLA": [
        670
      ]
    },
    "id": 671,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 350,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:2"
      },
      {
        "id": 351,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 352,
        "nodeType": "ImportDirective",
        "scope": 671,
        "sourceUnit": 5494,
        "src": "91:52:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 353,
        "nodeType": "ImportDirective",
        "scope": 671,
        "sourceUnit": 6504,
        "src": "144:56:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 354,
        "nodeType": "ImportDirective",
        "scope": 671,
        "sourceUnit": 5690,
        "src": "201:51:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLO/SLO.sol",
        "file": "../SLO/SLO.sol",
        "id": 355,
        "nodeType": "ImportDirective",
        "scope": 671,
        "sourceUnit": 2369,
        "src": "253:24:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLARegistry.sol",
        "file": "../SLARegistry.sol",
        "id": 356,
        "nodeType": "ImportDirective",
        "scope": 671,
        "sourceUnit": 2238,
        "src": "278:28:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLA/Staking.sol",
        "file": "./Staking.sol",
        "id": 357,
        "nodeType": "ImportDirective",
        "scope": 671,
        "sourceUnit": 1857,
        "src": "307:23:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 359,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5493,
              "src": "462:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$5493",
                "typeString": "contract Ownable"
              }
            },
            "id": 360,
            "nodeType": "InheritanceSpecifier",
            "src": "462:7:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 361,
              "name": "Staking",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1856,
              "src": "471:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Staking_$1856",
                "typeString": "contract Staking"
              }
            },
            "id": 362,
            "nodeType": "InheritanceSpecifier",
            "src": "471:7:2"
          }
        ],
        "contractDependencies": [
          1856,
          5101,
          5493
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 358,
          "nodeType": "StructuredDocumentation",
          "src": "332:113:2",
          "text": " @title SLA\n @dev SLA is a service level agreement contract used for service downtime\n compensation"
        },
        "fullyImplemented": true,
        "id": 670,
        "linearizedBaseContracts": [
          670,
          1856,
          5493,
          5101
        ],
        "name": "SLA",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 365,
            "libraryName": {
              "contractScope": null,
              "id": 363,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5689,
              "src": "491:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$5689",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "485:27:2",
            "typeName": {
              "id": 364,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "504:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "documentation": {
              "id": 366,
              "nodeType": "StructuredDocumentation",
              "src": "518:71:2",
              "text": "@dev The required amount to stake when subscribing to the agreement"
            },
            "functionSelector": "3a4b66f1",
            "id": 368,
            "mutability": "mutable",
            "name": "stake",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 670,
            "src": "594:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 367,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "594:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 369,
              "nodeType": "StructuredDocumentation",
              "src": "621:42:2",
              "text": "@dev The time between SLI registration"
            },
            "id": 371,
            "mutability": "mutable",
            "name": "sliInterval",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 670,
            "src": "668:27:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 370,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "668:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 372,
              "nodeType": "StructuredDocumentation",
              "src": "702:72:2",
              "text": "@dev The ipfs hash that stores extra information about the agreement"
            },
            "functionSelector": "c623674f",
            "id": 374,
            "mutability": "mutable",
            "name": "ipfsHash",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 670,
            "src": "779:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 373,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "779:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 375,
              "nodeType": "StructuredDocumentation",
              "src": "808:45:2",
              "text": "@dev The address of the registry contract"
            },
            "functionSelector": "7b103999",
            "id": 377,
            "mutability": "mutable",
            "name": "registry",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 670,
            "src": "858:27:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SLARegistry_$2237",
              "typeString": "contract SLARegistry"
            },
            "typeName": {
              "contractScope": null,
              "id": 376,
              "name": "SLARegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2237,
              "src": "858:11:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SLARegistry_$2237",
                "typeString": "contract SLARegistry"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "SLA.SLI",
            "id": 384,
            "members": [
              {
                "constant": false,
                "id": 379,
                "mutability": "mutable",
                "name": "timestamp",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 384,
                "src": "967:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 378,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "967:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 381,
                "mutability": "mutable",
                "name": "value",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 384,
                "src": "994:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 380,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "994:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 383,
                "mutability": "mutable",
                "name": "periodId",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 384,
                "src": "1017:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 382,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1017:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "SLI",
            "nodeType": "StructDefinition",
            "scope": 670,
            "src": "946:94:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 385,
              "nodeType": "StructuredDocumentation",
              "src": "1046:63:2",
              "text": "@dev mapping to get SLO addresses from SLO names in bytes32"
            },
            "functionSelector": "b0227b47",
            "id": 389,
            "mutability": "mutable",
            "name": "SLOs",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 670,
            "src": "1114:35:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$2368_$",
              "typeString": "mapping(bytes32 => contract SLO)"
            },
            "typeName": {
              "id": 388,
              "keyType": {
                "id": 386,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1122:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1114:23:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$2368_$",
                "typeString": "mapping(bytes32 => contract SLO)"
              },
              "valueType": {
                "contractScope": null,
                "id": 387,
                "name": "SLO",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 2368,
                "src": "1133:3:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_SLO_$2368",
                  "typeString": "contract SLO"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 390,
              "nodeType": "StructuredDocumentation",
              "src": "1156:61:2",
              "text": "@dev mapping to get SLI structs from SLO names in bytes32"
            },
            "functionSelector": "94199c61",
            "id": 395,
            "mutability": "mutable",
            "name": "SLIs",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 670,
            "src": "1222:37:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$384_storage_$dyn_storage_$",
              "typeString": "mapping(bytes32 => struct SLA.SLI[])"
            },
            "typeName": {
              "id": 394,
              "keyType": {
                "id": 391,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1230:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1222:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$384_storage_$dyn_storage_$",
                "typeString": "mapping(bytes32 => struct SLA.SLI[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 392,
                  "name": "SLI",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 384,
                  "src": "1241:3:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SLI_$384_storage_ptr",
                    "typeString": "struct SLA.SLI"
                  }
                },
                "id": 393,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "1241:5:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_SLI_$384_storage_$dyn_storage_ptr",
                  "typeString": "struct SLA.SLI[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 396,
              "nodeType": "StructuredDocumentation",
              "src": "1266:63:2",
              "text": "@dev array storing the names of the SLO's of this agreement"
            },
            "functionSelector": "f34ed40d",
            "id": 399,
            "mutability": "mutable",
            "name": "SLONames",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 670,
            "src": "1334:25:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
              "typeString": "bytes32[]"
            },
            "typeName": {
              "baseType": {
                "id": 397,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1334:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "id": 398,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "1334:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                "typeString": "bytes32[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 400,
              "nodeType": "StructuredDocumentation",
              "src": "1366:218:2",
              "text": " @dev event for SLI creation logging\n @param _timestamp 1. the time the SLI has been registered\n @param _value 2. the value of the SLI\n @param _periodId 3. the id of the given period"
            },
            "id": 408,
            "name": "SLICreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 402,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_timestamp",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 408,
                  "src": "1606:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 401,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1606:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 404,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 408,
                  "src": "1626:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 403,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1626:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 406,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_periodId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 408,
                  "src": "1642:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 405,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1642:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1605:55:2"
            },
            "src": "1589:72:2"
          },
          {
            "body": {
              "id": 425,
              "nodeType": "Block",
              "src": "1787:155:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 412,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1818:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1818:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 416,
                                  "name": "registry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 377,
                                  "src": "1840:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SLARegistry_$2237",
                                    "typeString": "contract SLARegistry"
                                  }
                                },
                                "id": 417,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "messenger",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1892,
                                "src": "1840:18:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_Messenger_$291_$",
                                  "typeString": "function () view external returns (contract Messenger)"
                                }
                              },
                              "id": 418,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1840:20:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Messenger_$291",
                                "typeString": "contract Messenger"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Messenger_$291",
                                "typeString": "contract Messenger"
                              }
                            ],
                            "id": 415,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1832:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 414,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1832:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1832:29:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1818:43:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c79204d657373656e6765722063616e2063616c6c20746869732066756e7463696f6e",
                        "id": 421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1875:39:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_467737b4c3c908f2cdc14d03ad6e6083b866bad6901b6ebb82e8ea7edaea96db",
                          "typeString": "literal_string \"Only Messenger can call this funtcion\""
                        },
                        "value": "Only Messenger can call this funtcion"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_467737b4c3c908f2cdc14d03ad6e6083b866bad6901b6ebb82e8ea7edaea96db",
                          "typeString": "literal_string \"Only Messenger can call this funtcion\""
                        }
                      ],
                      "id": 411,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1797:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1797:127:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 423,
                  "nodeType": "ExpressionStatement",
                  "src": "1797:127:2"
                },
                {
                  "id": 424,
                  "nodeType": "PlaceholderStatement",
                  "src": "1934:1:2"
                }
              ]
            },
            "documentation": {
              "id": 409,
              "nodeType": "StructuredDocumentation",
              "src": "1667:90:2",
              "text": " @dev throws if called by any address other than the messenger contract."
            },
            "id": 426,
            "name": "onlyMessenger",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1784:2:2"
            },
            "src": "1762:180:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 528,
              "nodeType": "Block",
              "src": "3425:512:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 462,
                            "name": "_SLOs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 435,
                            "src": "3443:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_SLO_$2368_$dyn_memory_ptr",
                              "typeString": "contract SLO[] memory"
                            }
                          },
                          "id": 463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3443:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "35",
                          "id": 464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3458:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "src": "3443:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6d617820616d6f756e74206f6620534c4f732069732035",
                        "id": 466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3461:25:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be84bcce5cdf21effcf26df15f43c34c7a80dbc4bd54884dca3d795818fbfe95",
                          "typeString": "literal_string \"max amount of SLOs is 5\""
                        },
                        "value": "max amount of SLOs is 5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be84bcce5cdf21effcf26df15f43c34c7a80dbc4bd54884dca3d795818fbfe95",
                          "typeString": "literal_string \"max amount of SLOs is 5\""
                        }
                      ],
                      "id": 461,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3435:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3435:52:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 468,
                  "nodeType": "ExpressionStatement",
                  "src": "3435:52:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 470,
                            "name": "_SLONames",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 432,
                            "src": "3518:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          "id": 471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3518:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 472,
                            "name": "_SLOs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 435,
                            "src": "3538:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_SLO_$2368_$dyn_memory_ptr",
                              "typeString": "contract SLO[] memory"
                            }
                          },
                          "id": 473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3538:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3518:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5f534c4f4e616d657320616e64205f534c4f732073686f756c642068617665207468652073616d65206c656e677468",
                        "id": 475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3564:49:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b3b41b8359a1b0d52aeb9a136881798f1d5820dbfe964604a8e4ebb7ce8ebc0b",
                          "typeString": "literal_string \"_SLONames and _SLOs should have the same length\""
                        },
                        "value": "_SLONames and _SLOs should have the same length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b3b41b8359a1b0d52aeb9a136881798f1d5820dbfe964604a8e4ebb7ce8ebc0b",
                          "typeString": "literal_string \"_SLONames and _SLOs should have the same length\""
                        }
                      ],
                      "id": 469,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3497:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3497:126:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 477,
                  "nodeType": "ExpressionStatement",
                  "src": "3497:126:2"
                },
                {
                  "body": {
                    "id": 499,
                    "nodeType": "Block",
                    "src": "3677:54:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 489,
                              "name": "SLOs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 389,
                              "src": "3691:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$2368_$",
                                "typeString": "mapping(bytes32 => contract SLO)"
                              }
                            },
                            "id": 493,
                            "indexExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 490,
                                "name": "_SLONames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 432,
                                "src": "3696:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                }
                              },
                              "id": 492,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 491,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 479,
                                "src": "3706:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3696:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3691:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLO_$2368",
                              "typeString": "contract SLO"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 494,
                              "name": "_SLOs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 435,
                              "src": "3712:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_SLO_$2368_$dyn_memory_ptr",
                                "typeString": "contract SLO[] memory"
                              }
                            },
                            "id": 496,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 495,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 479,
                              "src": "3718:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3712:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLO_$2368",
                              "typeString": "contract SLO"
                            }
                          },
                          "src": "3691:29:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$2368",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 498,
                        "nodeType": "ExpressionStatement",
                        "src": "3691:29:2"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 482,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 479,
                      "src": "3654:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 483,
                        "name": "_SLOs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 435,
                        "src": "3658:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_SLO_$2368_$dyn_memory_ptr",
                          "typeString": "contract SLO[] memory"
                        }
                      },
                      "id": 484,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3658:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3654:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 500,
                  "initializationExpression": {
                    "assignments": [
                      479
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 479,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 500,
                        "src": "3639:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 478,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3639:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 481,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 480,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3651:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3639:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3672:3:2",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 486,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 479,
                        "src": "3672:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 488,
                    "nodeType": "ExpressionStatement",
                    "src": "3672:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "3634:97:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 502,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 429,
                        "src": "3759:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 501,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5492,
                      "src": "3741:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3741:25:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 504,
                  "nodeType": "ExpressionStatement",
                  "src": "3741:25:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 505,
                      "name": "SLONames",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 399,
                      "src": "3776:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                        "typeString": "bytes32[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 506,
                      "name": "_SLONames",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 432,
                      "src": "3787:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[] memory"
                      }
                    },
                    "src": "3776:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                      "typeString": "bytes32[] storage ref"
                    }
                  },
                  "id": 508,
                  "nodeType": "ExpressionStatement",
                  "src": "3776:20:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 509,
                      "name": "stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 368,
                      "src": "3806:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 510,
                      "name": "_stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 437,
                      "src": "3814:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3806:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 512,
                  "nodeType": "ExpressionStatement",
                  "src": "3806:14:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 513,
                      "name": "ipfsHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 374,
                      "src": "3830:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 514,
                      "name": "_ipfsHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 439,
                      "src": "3841:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3830:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 516,
                  "nodeType": "ExpressionStatement",
                  "src": "3830:20:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 517,
                      "name": "registry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 377,
                      "src": "3860:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLARegistry_$2237",
                        "typeString": "contract SLARegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 519,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3883:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3883:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 518,
                        "name": "SLARegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2237,
                        "src": "3871:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SLARegistry_$2237_$",
                          "typeString": "type(contract SLARegistry)"
                        }
                      },
                      "id": 521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3871:23:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLARegistry_$2237",
                        "typeString": "contract SLARegistry"
                      }
                    },
                    "src": "3860:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SLARegistry_$2237",
                      "typeString": "contract SLARegistry"
                    }
                  },
                  "id": 523,
                  "nodeType": "ExpressionStatement",
                  "src": "3860:34:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 524,
                      "name": "sliInterval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 371,
                      "src": "3904:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 525,
                      "name": "_sliInterval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 441,
                      "src": "3918:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3904:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 527,
                  "nodeType": "ExpressionStatement",
                  "src": "3904:26:2"
                }
              ]
            },
            "documentation": {
              "id": 427,
              "nodeType": "StructuredDocumentation",
              "src": "1948:949:2",
              "text": " @param _owner 1. address of the owner of the service level agreement\n @param _SLONames 2. array of the names of the service level objectives\n in bytes32\n @param _SLOs 3. array of service level objective contract addressess\n service level objective breach\n @param _stake 4. uint of the amount required to stake when signing the\n service level agreement\n @param _ipfsHash 5. string with the ipfs hash that contains extra\n information about the service level agreement\n @param _sliInterval 6. uint the interval in seconds between requesting a new SLI\n @param _tokenAddress 7. address of the DSLA token to be unlocked for staking\n @param _sla_period_starts 8. array with the values for the \"start\" of every period\n @param _sla_period_ends 9. array with the values for the \"end\" of every period\n @param _daiAddress 10. DAI Token Address to accept by default"
            },
            "id": 529,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 454,
                    "name": "_tokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 443,
                    "src": "3290:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_bDSLAToken_$2864",
                      "typeString": "contract bDSLAToken"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 455,
                    "name": "_sla_period_starts",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 446,
                    "src": "3317:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 456,
                    "name": "_sla_period_ends",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 449,
                    "src": "3349:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 457,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 429,
                    "src": "3379:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 458,
                    "name": "_daiAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 451,
                    "src": "3399:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 459,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 453,
                  "name": "Staking",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1856,
                  "src": "3269:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Staking_$1856_$",
                    "typeString": "type(contract Staking)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3269:151:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 452,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 429,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 529,
                  "src": "2923:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 428,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2923:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 432,
                  "mutability": "mutable",
                  "name": "_SLONames",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 529,
                  "src": "2947:26:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 430,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2947:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 431,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2947:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 435,
                  "mutability": "mutable",
                  "name": "_SLOs",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 529,
                  "src": "2983:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_SLO_$2368_$dyn_memory_ptr",
                    "typeString": "contract SLO[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 433,
                      "name": "SLO",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 2368,
                      "src": "2983:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLO_$2368",
                        "typeString": "contract SLO"
                      }
                    },
                    "id": 434,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2983:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_SLO_$2368_$dyn_storage_ptr",
                      "typeString": "contract SLO[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 437,
                  "mutability": "mutable",
                  "name": "_stake",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 529,
                  "src": "3011:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 436,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3011:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 439,
                  "mutability": "mutable",
                  "name": "_ipfsHash",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 529,
                  "src": "3035:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 438,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3035:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 441,
                  "mutability": "mutable",
                  "name": "_sliInterval",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 529,
                  "src": "3068:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 440,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3068:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 443,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 529,
                  "src": "3098:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_bDSLAToken_$2864",
                    "typeString": "contract bDSLAToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 442,
                    "name": "bDSLAToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2864,
                    "src": "3098:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_bDSLAToken_$2864",
                      "typeString": "contract bDSLAToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 446,
                  "mutability": "mutable",
                  "name": "_sla_period_starts",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 529,
                  "src": "3132:35:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 444,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3132:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 445,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3132:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 449,
                  "mutability": "mutable",
                  "name": "_sla_period_ends",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 529,
                  "src": "3177:33:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 447,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3177:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 448,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3177:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 451,
                  "mutability": "mutable",
                  "name": "_daiAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 529,
                  "src": "3220:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 450,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3220:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2913:332:2"
            },
            "returnParameters": {
              "id": 460,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3425:0:2"
            },
            "scope": 670,
            "src": "2902:1035:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 586,
              "nodeType": "Block",
              "src": "4332:338:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 546,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "4366:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 547,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4366:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 548,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 534,
                            "src": "4383:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 549,
                            "name": "_periodId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 536,
                            "src": "4391:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 545,
                          "name": "SLI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 384,
                          "src": "4362:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_SLI_$384_storage_ptr_$",
                            "typeString": "type(struct SLA.SLI storage pointer)"
                          }
                        },
                        "id": 550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4362:39:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SLI_$384_memory_ptr",
                          "typeString": "struct SLA.SLI memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SLI_$384_memory_ptr",
                          "typeString": "struct SLA.SLI memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 541,
                          "name": "SLIs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 395,
                          "src": "4342:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$384_storage_$dyn_storage_$",
                            "typeString": "mapping(bytes32 => struct SLA.SLI storage ref[] storage ref)"
                          }
                        },
                        "id": 543,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 542,
                          "name": "_SLOName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 532,
                          "src": "4347:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4342:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_SLI_$384_storage_$dyn_storage",
                          "typeString": "struct SLA.SLI storage ref[] storage ref"
                        }
                      },
                      "id": 544,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4342:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_SLI_$384_storage_$returns$__$",
                        "typeString": "function (struct SLA.SLI storage ref)"
                      }
                    },
                    "id": 551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4342:60:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 552,
                  "nodeType": "ExpressionStatement",
                  "src": "4342:60:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 554,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "4429:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4429:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 556,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 534,
                        "src": "4446:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 557,
                        "name": "_periodId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 536,
                        "src": "4454:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 553,
                      "name": "SLICreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 408,
                      "src": "4418:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256)"
                      }
                    },
                    "id": 558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4418:46:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 559,
                  "nodeType": "EmitStatement",
                  "src": "4413:51:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4479:36:2",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 564,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 534,
                          "src": "4508:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 560,
                            "name": "SLOs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 389,
                            "src": "4480:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$2368_$",
                              "typeString": "mapping(bytes32 => contract SLO)"
                            }
                          },
                          "id": 562,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 561,
                            "name": "_SLOName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 532,
                            "src": "4485:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4480:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$2368",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isSLOHonored",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2367,
                        "src": "4480:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view external returns (bool)"
                        }
                      },
                      "id": 565,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4480:35:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 584,
                    "nodeType": "Block",
                    "src": "4595:69:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 576,
                                "name": "periods",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 721,
                                "src": "4609:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Period_$706_storage_$dyn_storage",
                                  "typeString": "struct Staking.Period storage ref[] storage ref"
                                }
                              },
                              "id": 578,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 577,
                                "name": "_periodId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 536,
                                "src": "4617:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4609:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Period_$706_storage",
                                "typeString": "struct Staking.Period storage ref"
                              }
                            },
                            "id": 579,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 695,
                            "src": "4609:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$685",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 580,
                              "name": "Status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 685,
                              "src": "4637:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Status_$685_$",
                                "typeString": "type(enum Staking.Status)"
                              }
                            },
                            "id": 581,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Respected",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4637:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$685",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "src": "4609:44:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$685",
                            "typeString": "enum Staking.Status"
                          }
                        },
                        "id": 583,
                        "nodeType": "ExpressionStatement",
                        "src": "4609:44:2"
                      }
                    ]
                  },
                  "id": 585,
                  "nodeType": "IfStatement",
                  "src": "4475:189:2",
                  "trueBody": {
                    "id": 575,
                    "nodeType": "Block",
                    "src": "4517:72:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 567,
                                "name": "periods",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 721,
                                "src": "4531:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Period_$706_storage_$dyn_storage",
                                  "typeString": "struct Staking.Period storage ref[] storage ref"
                                }
                              },
                              "id": 569,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 568,
                                "name": "_periodId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 536,
                                "src": "4539:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4531:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Period_$706_storage",
                                "typeString": "struct Staking.Period storage ref"
                              }
                            },
                            "id": 570,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 695,
                            "src": "4531:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$685",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 571,
                              "name": "Status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 685,
                              "src": "4559:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Status_$685_$",
                                "typeString": "type(enum Staking.Status)"
                              }
                            },
                            "id": 572,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "NotRespected",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4559:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$685",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "src": "4531:47:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$685",
                            "typeString": "enum Staking.Status"
                          }
                        },
                        "id": 574,
                        "nodeType": "ExpressionStatement",
                        "src": "4531:47:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 530,
              "nodeType": "StructuredDocumentation",
              "src": "3943:257:2",
              "text": " @dev external function to register SLI's and check them against the SLO's\n @param _SLOName 1. the name of the SLO in bytes32\n @param _value 2. the value of the SLI to check\n @param _periodId 3. the id of the given period"
            },
            "functionSelector": "869c3925",
            "id": 587,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 539,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 538,
                  "name": "onlyMessenger",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 426,
                  "src": "4318:13:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4318:13:2"
              }
            ],
            "name": "registerSLI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 532,
                  "mutability": "mutable",
                  "name": "_SLOName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 587,
                  "src": "4235:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 531,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4235:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 534,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 587,
                  "src": "4261:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 533,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4261:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 536,
                  "mutability": "mutable",
                  "name": "_periodId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 587,
                  "src": "4285:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 535,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4285:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4225:83:2"
            },
            "returnParameters": {
              "id": 540,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4332:0:2"
            },
            "scope": 670,
            "src": "4205:465:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 600,
              "nodeType": "Block",
              "src": "4940:38:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 596,
                      "name": "SLIs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 395,
                      "src": "4957:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$384_storage_$dyn_storage_$",
                        "typeString": "mapping(bytes32 => struct SLA.SLI storage ref[] storage ref)"
                      }
                    },
                    "id": 598,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 597,
                      "name": "_SLOName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 590,
                      "src": "4962:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4957:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_SLI_$384_storage_$dyn_storage",
                      "typeString": "struct SLA.SLI storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 595,
                  "id": 599,
                  "nodeType": "Return",
                  "src": "4950:21:2"
                }
              ]
            },
            "documentation": {
              "id": 588,
              "nodeType": "StructuredDocumentation",
              "src": "4676:190:2",
              "text": " @dev external function to get SLIs of certain _SLO\n @param _SLOName 1. the name of the SLO in bytes32\n @return SLI[] array of SLIs associated to the input SLOs"
            },
            "functionSelector": "02e8b893",
            "id": 601,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSLI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 591,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 590,
                  "mutability": "mutable",
                  "name": "_SLOName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 601,
                  "src": "4887:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 589,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4887:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4886:18:2"
            },
            "returnParameters": {
              "id": 595,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 594,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 601,
                  "src": "4926:12:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_SLI_$384_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct SLA.SLI[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 592,
                      "name": "SLI",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 384,
                      "src": "4926:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SLI_$384_storage_ptr",
                        "typeString": "struct SLA.SLI"
                      }
                    },
                    "id": 593,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4926:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_SLI_$384_storage_$dyn_storage_ptr",
                      "typeString": "struct SLA.SLI[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4925:14:2"
            },
            "scope": 670,
            "src": "4871:107:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 609,
              "nodeType": "Block",
              "src": "5177:35:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 607,
                    "name": "sliInterval",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 371,
                    "src": "5194:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 606,
                  "id": 608,
                  "nodeType": "Return",
                  "src": "5187:18:2"
                }
              ]
            },
            "documentation": {
              "id": 602,
              "nodeType": "StructuredDocumentation",
              "src": "4984:130:2",
              "text": " @dev external view function that returns the sliInterval value\n· @return uint256 value of the sliInterval"
            },
            "functionSelector": "e7ab816a",
            "id": 610,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSliInterval",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 603,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5142:2:2"
            },
            "returnParameters": {
              "id": 606,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 605,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 610,
                  "src": "5168:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 604,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5168:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5167:9:2"
            },
            "scope": 670,
            "src": "5119:93:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 668,
              "nodeType": "Block",
              "src": "5707:258:2",
              "statements": [
                {
                  "assignments": [
                    629
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 629,
                      "mutability": "mutable",
                      "name": "_SLOAddresses",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 668,
                      "src": "5717:26:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_SLO_$2368_$dyn_memory_ptr",
                        "typeString": "contract SLO[]"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 627,
                          "name": "SLO",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 2368,
                          "src": "5717:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$2368",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 628,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "5717:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_SLO_$2368_$dyn_storage_ptr",
                          "typeString": "contract SLO[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 636,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 633,
                          "name": "SLONames",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 399,
                          "src": "5756:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                            "typeString": "bytes32[] storage ref"
                          }
                        },
                        "id": 634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5756:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 632,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "5746:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_SLO_$2368_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (contract SLO[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 630,
                          "name": "SLO",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 2368,
                          "src": "5750:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$2368",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 631,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "5750:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_SLO_$2368_$dyn_storage_ptr",
                          "typeString": "contract SLO[]"
                        }
                      }
                    },
                    "id": 635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5746:26:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_SLO_$2368_$dyn_memory_ptr",
                      "typeString": "contract SLO[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5717:55:2"
                },
                {
                  "body": {
                    "id": 658,
                    "nodeType": "Block",
                    "src": "5829:61:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 648,
                              "name": "_SLOAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 629,
                              "src": "5843:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_SLO_$2368_$dyn_memory_ptr",
                                "typeString": "contract SLO[] memory"
                              }
                            },
                            "id": 650,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 649,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 638,
                              "src": "5857:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5843:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLO_$2368",
                              "typeString": "contract SLO"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 651,
                              "name": "SLOs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 389,
                              "src": "5862:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$2368_$",
                                "typeString": "mapping(bytes32 => contract SLO)"
                              }
                            },
                            "id": 655,
                            "indexExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 652,
                                "name": "SLONames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 399,
                                "src": "5867:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                  "typeString": "bytes32[] storage ref"
                                }
                              },
                              "id": 654,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 653,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 638,
                                "src": "5876:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5867:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5862:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLO_$2368",
                              "typeString": "contract SLO"
                            }
                          },
                          "src": "5843:36:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$2368",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 657,
                        "nodeType": "ExpressionStatement",
                        "src": "5843:36:2"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 641,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 638,
                      "src": "5803:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 642,
                        "name": "SLONames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 399,
                        "src": "5807:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      "id": 643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5807:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5803:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 659,
                  "initializationExpression": {
                    "assignments": [
                      638
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 638,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 659,
                        "src": "5788:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 637,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5788:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 640,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5800:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5788:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 646,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5824:3:2",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 645,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 638,
                        "src": "5824:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 647,
                    "nodeType": "ExpressionStatement",
                    "src": "5824:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "5783:107:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 660,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5429,
                          "src": "5908:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5908:7:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 662,
                        "name": "ipfsHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 374,
                        "src": "5917:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 663,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 368,
                        "src": "5927:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 664,
                        "name": "SLONames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 399,
                        "src": "5934:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 665,
                        "name": "_SLOAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 629,
                        "src": "5944:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_SLO_$2368_$dyn_memory_ptr",
                          "typeString": "contract SLO[] memory"
                        }
                      }
                    ],
                    "id": 666,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5907:51:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_string_storage_$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$_t_array$_t_contract$_SLO_$2368_$dyn_memory_ptr_$",
                      "typeString": "tuple(address,string storage ref,uint256,bytes32[] storage ref,contract SLO[] memory)"
                    }
                  },
                  "functionReturnParameters": 625,
                  "id": 667,
                  "nodeType": "Return",
                  "src": "5900:58:2"
                }
              ]
            },
            "documentation": {
              "id": 611,
              "nodeType": "StructuredDocumentation",
              "src": "5218:275:2",
              "text": " @dev external view function that returns all agreement information\n @return address owner\n @return string ipfsHash\n @return uint256 amount necessary to stake\n @return bytes32[] SLONames array\n @return SLO[] SLO addresses array"
            },
            "functionSelector": "fbbf93a0",
            "id": 669,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDetails",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 612,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5518:2:2"
            },
            "returnParameters": {
              "id": 625,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 614,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 669,
                  "src": "5581:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 613,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5581:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 616,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 669,
                  "src": "5602:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 615,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5602:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 618,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 669,
                  "src": "5629:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 617,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5629:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 621,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 669,
                  "src": "5650:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 619,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "5650:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 620,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5650:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 624,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 669,
                  "src": "5680:12:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_SLO_$2368_$dyn_memory_ptr",
                    "typeString": "contract SLO[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 622,
                      "name": "SLO",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 2368,
                      "src": "5680:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLO_$2368",
                        "typeString": "contract SLO"
                      }
                    },
                    "id": 623,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5680:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_SLO_$2368_$dyn_storage_ptr",
                      "typeString": "contract SLO[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5567:135:2"
            },
            "scope": 670,
            "src": "5499:466:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 671,
        "src": "446:5521:2"
      }
    ],
    "src": "32:5936:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLA/SLA.sol",
    "exportedSymbols": {
      "SLA": [
        670
      ]
    },
    "id": 671,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 350,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:2"
      },
      {
        "id": 351,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 352,
        "nodeType": "ImportDirective",
        "scope": 671,
        "sourceUnit": 5494,
        "src": "91:52:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 353,
        "nodeType": "ImportDirective",
        "scope": 671,
        "sourceUnit": 6504,
        "src": "144:56:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 354,
        "nodeType": "ImportDirective",
        "scope": 671,
        "sourceUnit": 5690,
        "src": "201:51:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLO/SLO.sol",
        "file": "../SLO/SLO.sol",
        "id": 355,
        "nodeType": "ImportDirective",
        "scope": 671,
        "sourceUnit": 2369,
        "src": "253:24:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLARegistry.sol",
        "file": "../SLARegistry.sol",
        "id": 356,
        "nodeType": "ImportDirective",
        "scope": 671,
        "sourceUnit": 2238,
        "src": "278:28:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLA/Staking.sol",
        "file": "./Staking.sol",
        "id": 357,
        "nodeType": "ImportDirective",
        "scope": 671,
        "sourceUnit": 1857,
        "src": "307:23:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 359,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5493,
              "src": "462:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$5493",
                "typeString": "contract Ownable"
              }
            },
            "id": 360,
            "nodeType": "InheritanceSpecifier",
            "src": "462:7:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 361,
              "name": "Staking",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1856,
              "src": "471:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Staking_$1856",
                "typeString": "contract Staking"
              }
            },
            "id": 362,
            "nodeType": "InheritanceSpecifier",
            "src": "471:7:2"
          }
        ],
        "contractDependencies": [
          1856,
          5101,
          5493
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 358,
          "nodeType": "StructuredDocumentation",
          "src": "332:113:2",
          "text": " @title SLA\n @dev SLA is a service level agreement contract used for service downtime\n compensation"
        },
        "fullyImplemented": true,
        "id": 670,
        "linearizedBaseContracts": [
          670,
          1856,
          5493,
          5101
        ],
        "name": "SLA",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 365,
            "libraryName": {
              "contractScope": null,
              "id": 363,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5689,
              "src": "491:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$5689",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "485:27:2",
            "typeName": {
              "id": 364,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "504:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "documentation": {
              "id": 366,
              "nodeType": "StructuredDocumentation",
              "src": "518:71:2",
              "text": "@dev The required amount to stake when subscribing to the agreement"
            },
            "functionSelector": "3a4b66f1",
            "id": 368,
            "mutability": "mutable",
            "name": "stake",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 670,
            "src": "594:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 367,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "594:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 369,
              "nodeType": "StructuredDocumentation",
              "src": "621:42:2",
              "text": "@dev The time between SLI registration"
            },
            "id": 371,
            "mutability": "mutable",
            "name": "sliInterval",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 670,
            "src": "668:27:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 370,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "668:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 372,
              "nodeType": "StructuredDocumentation",
              "src": "702:72:2",
              "text": "@dev The ipfs hash that stores extra information about the agreement"
            },
            "functionSelector": "c623674f",
            "id": 374,
            "mutability": "mutable",
            "name": "ipfsHash",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 670,
            "src": "779:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 373,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "779:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 375,
              "nodeType": "StructuredDocumentation",
              "src": "808:45:2",
              "text": "@dev The address of the registry contract"
            },
            "functionSelector": "7b103999",
            "id": 377,
            "mutability": "mutable",
            "name": "registry",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 670,
            "src": "858:27:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SLARegistry_$2237",
              "typeString": "contract SLARegistry"
            },
            "typeName": {
              "contractScope": null,
              "id": 376,
              "name": "SLARegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2237,
              "src": "858:11:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SLARegistry_$2237",
                "typeString": "contract SLARegistry"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "SLA.SLI",
            "id": 384,
            "members": [
              {
                "constant": false,
                "id": 379,
                "mutability": "mutable",
                "name": "timestamp",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 384,
                "src": "967:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 378,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "967:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 381,
                "mutability": "mutable",
                "name": "value",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 384,
                "src": "994:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 380,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "994:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 383,
                "mutability": "mutable",
                "name": "periodId",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 384,
                "src": "1017:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 382,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1017:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "SLI",
            "nodeType": "StructDefinition",
            "scope": 670,
            "src": "946:94:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 385,
              "nodeType": "StructuredDocumentation",
              "src": "1046:63:2",
              "text": "@dev mapping to get SLO addresses from SLO names in bytes32"
            },
            "functionSelector": "b0227b47",
            "id": 389,
            "mutability": "mutable",
            "name": "SLOs",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 670,
            "src": "1114:35:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$2368_$",
              "typeString": "mapping(bytes32 => contract SLO)"
            },
            "typeName": {
              "id": 388,
              "keyType": {
                "id": 386,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1122:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1114:23:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$2368_$",
                "typeString": "mapping(bytes32 => contract SLO)"
              },
              "valueType": {
                "contractScope": null,
                "id": 387,
                "name": "SLO",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 2368,
                "src": "1133:3:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_SLO_$2368",
                  "typeString": "contract SLO"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 390,
              "nodeType": "StructuredDocumentation",
              "src": "1156:61:2",
              "text": "@dev mapping to get SLI structs from SLO names in bytes32"
            },
            "functionSelector": "94199c61",
            "id": 395,
            "mutability": "mutable",
            "name": "SLIs",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 670,
            "src": "1222:37:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$384_storage_$dyn_storage_$",
              "typeString": "mapping(bytes32 => struct SLA.SLI[])"
            },
            "typeName": {
              "id": 394,
              "keyType": {
                "id": 391,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1230:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1222:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$384_storage_$dyn_storage_$",
                "typeString": "mapping(bytes32 => struct SLA.SLI[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 392,
                  "name": "SLI",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 384,
                  "src": "1241:3:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SLI_$384_storage_ptr",
                    "typeString": "struct SLA.SLI"
                  }
                },
                "id": 393,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "1241:5:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_SLI_$384_storage_$dyn_storage_ptr",
                  "typeString": "struct SLA.SLI[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 396,
              "nodeType": "StructuredDocumentation",
              "src": "1266:63:2",
              "text": "@dev array storing the names of the SLO's of this agreement"
            },
            "functionSelector": "f34ed40d",
            "id": 399,
            "mutability": "mutable",
            "name": "SLONames",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 670,
            "src": "1334:25:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
              "typeString": "bytes32[]"
            },
            "typeName": {
              "baseType": {
                "id": 397,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1334:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "id": 398,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "1334:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                "typeString": "bytes32[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 400,
              "nodeType": "StructuredDocumentation",
              "src": "1366:218:2",
              "text": " @dev event for SLI creation logging\n @param _timestamp 1. the time the SLI has been registered\n @param _value 2. the value of the SLI\n @param _periodId 3. the id of the given period"
            },
            "id": 408,
            "name": "SLICreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 402,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_timestamp",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 408,
                  "src": "1606:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 401,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1606:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 404,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 408,
                  "src": "1626:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 403,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1626:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 406,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_periodId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 408,
                  "src": "1642:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 405,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1642:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1605:55:2"
            },
            "src": "1589:72:2"
          },
          {
            "body": {
              "id": 425,
              "nodeType": "Block",
              "src": "1787:155:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 412,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1818:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1818:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 416,
                                  "name": "registry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 377,
                                  "src": "1840:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SLARegistry_$2237",
                                    "typeString": "contract SLARegistry"
                                  }
                                },
                                "id": 417,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "messenger",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1892,
                                "src": "1840:18:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_Messenger_$291_$",
                                  "typeString": "function () view external returns (contract Messenger)"
                                }
                              },
                              "id": 418,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1840:20:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Messenger_$291",
                                "typeString": "contract Messenger"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Messenger_$291",
                                "typeString": "contract Messenger"
                              }
                            ],
                            "id": 415,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1832:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 414,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1832:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1832:29:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1818:43:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c79204d657373656e6765722063616e2063616c6c20746869732066756e7463696f6e",
                        "id": 421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1875:39:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_467737b4c3c908f2cdc14d03ad6e6083b866bad6901b6ebb82e8ea7edaea96db",
                          "typeString": "literal_string \"Only Messenger can call this funtcion\""
                        },
                        "value": "Only Messenger can call this funtcion"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_467737b4c3c908f2cdc14d03ad6e6083b866bad6901b6ebb82e8ea7edaea96db",
                          "typeString": "literal_string \"Only Messenger can call this funtcion\""
                        }
                      ],
                      "id": 411,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1797:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1797:127:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 423,
                  "nodeType": "ExpressionStatement",
                  "src": "1797:127:2"
                },
                {
                  "id": 424,
                  "nodeType": "PlaceholderStatement",
                  "src": "1934:1:2"
                }
              ]
            },
            "documentation": {
              "id": 409,
              "nodeType": "StructuredDocumentation",
              "src": "1667:90:2",
              "text": " @dev throws if called by any address other than the messenger contract."
            },
            "id": 426,
            "name": "onlyMessenger",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1784:2:2"
            },
            "src": "1762:180:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 528,
              "nodeType": "Block",
              "src": "3425:512:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 462,
                            "name": "_SLOs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 435,
                            "src": "3443:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_SLO_$2368_$dyn_memory_ptr",
                              "typeString": "contract SLO[] memory"
                            }
                          },
                          "id": 463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3443:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "35",
                          "id": 464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3458:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "src": "3443:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6d617820616d6f756e74206f6620534c4f732069732035",
                        "id": 466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3461:25:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be84bcce5cdf21effcf26df15f43c34c7a80dbc4bd54884dca3d795818fbfe95",
                          "typeString": "literal_string \"max amount of SLOs is 5\""
                        },
                        "value": "max amount of SLOs is 5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be84bcce5cdf21effcf26df15f43c34c7a80dbc4bd54884dca3d795818fbfe95",
                          "typeString": "literal_string \"max amount of SLOs is 5\""
                        }
                      ],
                      "id": 461,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3435:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3435:52:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 468,
                  "nodeType": "ExpressionStatement",
                  "src": "3435:52:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 470,
                            "name": "_SLONames",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 432,
                            "src": "3518:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          "id": 471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3518:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 472,
                            "name": "_SLOs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 435,
                            "src": "3538:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_SLO_$2368_$dyn_memory_ptr",
                              "typeString": "contract SLO[] memory"
                            }
                          },
                          "id": 473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3538:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3518:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5f534c4f4e616d657320616e64205f534c4f732073686f756c642068617665207468652073616d65206c656e677468",
                        "id": 475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3564:49:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b3b41b8359a1b0d52aeb9a136881798f1d5820dbfe964604a8e4ebb7ce8ebc0b",
                          "typeString": "literal_string \"_SLONames and _SLOs should have the same length\""
                        },
                        "value": "_SLONames and _SLOs should have the same length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b3b41b8359a1b0d52aeb9a136881798f1d5820dbfe964604a8e4ebb7ce8ebc0b",
                          "typeString": "literal_string \"_SLONames and _SLOs should have the same length\""
                        }
                      ],
                      "id": 469,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3497:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3497:126:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 477,
                  "nodeType": "ExpressionStatement",
                  "src": "3497:126:2"
                },
                {
                  "body": {
                    "id": 499,
                    "nodeType": "Block",
                    "src": "3677:54:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 489,
                              "name": "SLOs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 389,
                              "src": "3691:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$2368_$",
                                "typeString": "mapping(bytes32 => contract SLO)"
                              }
                            },
                            "id": 493,
                            "indexExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 490,
                                "name": "_SLONames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 432,
                                "src": "3696:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                }
                              },
                              "id": 492,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 491,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 479,
                                "src": "3706:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3696:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3691:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLO_$2368",
                              "typeString": "contract SLO"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 494,
                              "name": "_SLOs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 435,
                              "src": "3712:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_SLO_$2368_$dyn_memory_ptr",
                                "typeString": "contract SLO[] memory"
                              }
                            },
                            "id": 496,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 495,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 479,
                              "src": "3718:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3712:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLO_$2368",
                              "typeString": "contract SLO"
                            }
                          },
                          "src": "3691:29:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$2368",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 498,
                        "nodeType": "ExpressionStatement",
                        "src": "3691:29:2"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 482,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 479,
                      "src": "3654:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 483,
                        "name": "_SLOs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 435,
                        "src": "3658:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_SLO_$2368_$dyn_memory_ptr",
                          "typeString": "contract SLO[] memory"
                        }
                      },
                      "id": 484,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3658:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3654:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 500,
                  "initializationExpression": {
                    "assignments": [
                      479
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 479,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 500,
                        "src": "3639:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 478,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3639:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 481,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 480,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3651:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3639:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3672:3:2",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 486,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 479,
                        "src": "3672:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 488,
                    "nodeType": "ExpressionStatement",
                    "src": "3672:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "3634:97:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 502,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 429,
                        "src": "3759:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 501,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5492,
                      "src": "3741:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3741:25:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 504,
                  "nodeType": "ExpressionStatement",
                  "src": "3741:25:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 505,
                      "name": "SLONames",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 399,
                      "src": "3776:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                        "typeString": "bytes32[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 506,
                      "name": "_SLONames",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 432,
                      "src": "3787:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[] memory"
                      }
                    },
                    "src": "3776:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                      "typeString": "bytes32[] storage ref"
                    }
                  },
                  "id": 508,
                  "nodeType": "ExpressionStatement",
                  "src": "3776:20:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 509,
                      "name": "stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 368,
                      "src": "3806:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 510,
                      "name": "_stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 437,
                      "src": "3814:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3806:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 512,
                  "nodeType": "ExpressionStatement",
                  "src": "3806:14:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 513,
                      "name": "ipfsHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 374,
                      "src": "3830:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 514,
                      "name": "_ipfsHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 439,
                      "src": "3841:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3830:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 516,
                  "nodeType": "ExpressionStatement",
                  "src": "3830:20:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 517,
                      "name": "registry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 377,
                      "src": "3860:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLARegistry_$2237",
                        "typeString": "contract SLARegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 519,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3883:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3883:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 518,
                        "name": "SLARegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2237,
                        "src": "3871:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SLARegistry_$2237_$",
                          "typeString": "type(contract SLARegistry)"
                        }
                      },
                      "id": 521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3871:23:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLARegistry_$2237",
                        "typeString": "contract SLARegistry"
                      }
                    },
                    "src": "3860:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SLARegistry_$2237",
                      "typeString": "contract SLARegistry"
                    }
                  },
                  "id": 523,
                  "nodeType": "ExpressionStatement",
                  "src": "3860:34:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 524,
                      "name": "sliInterval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 371,
                      "src": "3904:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 525,
                      "name": "_sliInterval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 441,
                      "src": "3918:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3904:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 527,
                  "nodeType": "ExpressionStatement",
                  "src": "3904:26:2"
                }
              ]
            },
            "documentation": {
              "id": 427,
              "nodeType": "StructuredDocumentation",
              "src": "1948:949:2",
              "text": " @param _owner 1. address of the owner of the service level agreement\n @param _SLONames 2. array of the names of the service level objectives\n in bytes32\n @param _SLOs 3. array of service level objective contract addressess\n service level objective breach\n @param _stake 4. uint of the amount required to stake when signing the\n service level agreement\n @param _ipfsHash 5. string with the ipfs hash that contains extra\n information about the service level agreement\n @param _sliInterval 6. uint the interval in seconds between requesting a new SLI\n @param _tokenAddress 7. address of the DSLA token to be unlocked for staking\n @param _sla_period_starts 8. array with the values for the \"start\" of every period\n @param _sla_period_ends 9. array with the values for the \"end\" of every period\n @param _daiAddress 10. DAI Token Address to accept by default"
            },
            "id": 529,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 454,
                    "name": "_tokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 443,
                    "src": "3290:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_bDSLAToken_$2864",
                      "typeString": "contract bDSLAToken"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 455,
                    "name": "_sla_period_starts",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 446,
                    "src": "3317:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 456,
                    "name": "_sla_period_ends",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 449,
                    "src": "3349:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 457,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 429,
                    "src": "3379:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 458,
                    "name": "_daiAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 451,
                    "src": "3399:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 459,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 453,
                  "name": "Staking",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1856,
                  "src": "3269:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Staking_$1856_$",
                    "typeString": "type(contract Staking)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3269:151:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 452,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 429,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 529,
                  "src": "2923:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 428,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2923:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 432,
                  "mutability": "mutable",
                  "name": "_SLONames",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 529,
                  "src": "2947:26:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 430,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2947:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 431,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2947:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 435,
                  "mutability": "mutable",
                  "name": "_SLOs",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 529,
                  "src": "2983:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_SLO_$2368_$dyn_memory_ptr",
                    "typeString": "contract SLO[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 433,
                      "name": "SLO",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 2368,
                      "src": "2983:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLO_$2368",
                        "typeString": "contract SLO"
                      }
                    },
                    "id": 434,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2983:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_SLO_$2368_$dyn_storage_ptr",
                      "typeString": "contract SLO[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 437,
                  "mutability": "mutable",
                  "name": "_stake",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 529,
                  "src": "3011:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 436,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3011:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 439,
                  "mutability": "mutable",
                  "name": "_ipfsHash",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 529,
                  "src": "3035:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 438,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3035:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 441,
                  "mutability": "mutable",
                  "name": "_sliInterval",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 529,
                  "src": "3068:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 440,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3068:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 443,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 529,
                  "src": "3098:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_bDSLAToken_$2864",
                    "typeString": "contract bDSLAToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 442,
                    "name": "bDSLAToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2864,
                    "src": "3098:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_bDSLAToken_$2864",
                      "typeString": "contract bDSLAToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 446,
                  "mutability": "mutable",
                  "name": "_sla_period_starts",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 529,
                  "src": "3132:35:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 444,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3132:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 445,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3132:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 449,
                  "mutability": "mutable",
                  "name": "_sla_period_ends",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 529,
                  "src": "3177:33:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 447,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3177:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 448,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3177:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 451,
                  "mutability": "mutable",
                  "name": "_daiAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 529,
                  "src": "3220:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 450,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3220:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2913:332:2"
            },
            "returnParameters": {
              "id": 460,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3425:0:2"
            },
            "scope": 670,
            "src": "2902:1035:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 586,
              "nodeType": "Block",
              "src": "4332:338:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 546,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "4366:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 547,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4366:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 548,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 534,
                            "src": "4383:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 549,
                            "name": "_periodId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 536,
                            "src": "4391:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 545,
                          "name": "SLI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 384,
                          "src": "4362:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_SLI_$384_storage_ptr_$",
                            "typeString": "type(struct SLA.SLI storage pointer)"
                          }
                        },
                        "id": 550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4362:39:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SLI_$384_memory_ptr",
                          "typeString": "struct SLA.SLI memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SLI_$384_memory_ptr",
                          "typeString": "struct SLA.SLI memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 541,
                          "name": "SLIs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 395,
                          "src": "4342:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$384_storage_$dyn_storage_$",
                            "typeString": "mapping(bytes32 => struct SLA.SLI storage ref[] storage ref)"
                          }
                        },
                        "id": 543,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 542,
                          "name": "_SLOName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 532,
                          "src": "4347:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4342:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_SLI_$384_storage_$dyn_storage",
                          "typeString": "struct SLA.SLI storage ref[] storage ref"
                        }
                      },
                      "id": 544,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4342:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_SLI_$384_storage_$returns$__$",
                        "typeString": "function (struct SLA.SLI storage ref)"
                      }
                    },
                    "id": 551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4342:60:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 552,
                  "nodeType": "ExpressionStatement",
                  "src": "4342:60:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 554,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "4429:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4429:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 556,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 534,
                        "src": "4446:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 557,
                        "name": "_periodId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 536,
                        "src": "4454:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 553,
                      "name": "SLICreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 408,
                      "src": "4418:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256)"
                      }
                    },
                    "id": 558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4418:46:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 559,
                  "nodeType": "EmitStatement",
                  "src": "4413:51:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4479:36:2",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 564,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 534,
                          "src": "4508:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 560,
                            "name": "SLOs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 389,
                            "src": "4480:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$2368_$",
                              "typeString": "mapping(bytes32 => contract SLO)"
                            }
                          },
                          "id": 562,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 561,
                            "name": "_SLOName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 532,
                            "src": "4485:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4480:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$2368",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isSLOHonored",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2367,
                        "src": "4480:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view external returns (bool)"
                        }
                      },
                      "id": 565,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4480:35:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 584,
                    "nodeType": "Block",
                    "src": "4595:69:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 576,
                                "name": "periods",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 721,
                                "src": "4609:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Period_$706_storage_$dyn_storage",
                                  "typeString": "struct Staking.Period storage ref[] storage ref"
                                }
                              },
                              "id": 578,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 577,
                                "name": "_periodId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 536,
                                "src": "4617:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4609:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Period_$706_storage",
                                "typeString": "struct Staking.Period storage ref"
                              }
                            },
                            "id": 579,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 695,
                            "src": "4609:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$685",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 580,
                              "name": "Status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 685,
                              "src": "4637:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Status_$685_$",
                                "typeString": "type(enum Staking.Status)"
                              }
                            },
                            "id": 581,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Respected",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4637:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$685",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "src": "4609:44:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$685",
                            "typeString": "enum Staking.Status"
                          }
                        },
                        "id": 583,
                        "nodeType": "ExpressionStatement",
                        "src": "4609:44:2"
                      }
                    ]
                  },
                  "id": 585,
                  "nodeType": "IfStatement",
                  "src": "4475:189:2",
                  "trueBody": {
                    "id": 575,
                    "nodeType": "Block",
                    "src": "4517:72:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 567,
                                "name": "periods",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 721,
                                "src": "4531:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Period_$706_storage_$dyn_storage",
                                  "typeString": "struct Staking.Period storage ref[] storage ref"
                                }
                              },
                              "id": 569,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 568,
                                "name": "_periodId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 536,
                                "src": "4539:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4531:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Period_$706_storage",
                                "typeString": "struct Staking.Period storage ref"
                              }
                            },
                            "id": 570,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 695,
                            "src": "4531:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$685",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 571,
                              "name": "Status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 685,
                              "src": "4559:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Status_$685_$",
                                "typeString": "type(enum Staking.Status)"
                              }
                            },
                            "id": 572,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "NotRespected",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4559:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$685",
                              "typeString": "enum Staking.Status"
                            }
                          },
                          "src": "4531:47:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$685",
                            "typeString": "enum Staking.Status"
                          }
                        },
                        "id": 574,
                        "nodeType": "ExpressionStatement",
                        "src": "4531:47:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 530,
              "nodeType": "StructuredDocumentation",
              "src": "3943:257:2",
              "text": " @dev external function to register SLI's and check them against the SLO's\n @param _SLOName 1. the name of the SLO in bytes32\n @param _value 2. the value of the SLI to check\n @param _periodId 3. the id of the given period"
            },
            "functionSelector": "869c3925",
            "id": 587,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 539,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 538,
                  "name": "onlyMessenger",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 426,
                  "src": "4318:13:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4318:13:2"
              }
            ],
            "name": "registerSLI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 532,
                  "mutability": "mutable",
                  "name": "_SLOName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 587,
                  "src": "4235:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 531,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4235:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 534,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 587,
                  "src": "4261:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 533,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4261:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 536,
                  "mutability": "mutable",
                  "name": "_periodId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 587,
                  "src": "4285:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 535,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4285:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4225:83:2"
            },
            "returnParameters": {
              "id": 540,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4332:0:2"
            },
            "scope": 670,
            "src": "4205:465:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 600,
              "nodeType": "Block",
              "src": "4940:38:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 596,
                      "name": "SLIs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 395,
                      "src": "4957:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_SLI_$384_storage_$dyn_storage_$",
                        "typeString": "mapping(bytes32 => struct SLA.SLI storage ref[] storage ref)"
                      }
                    },
                    "id": 598,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 597,
                      "name": "_SLOName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 590,
                      "src": "4962:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4957:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_SLI_$384_storage_$dyn_storage",
                      "typeString": "struct SLA.SLI storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 595,
                  "id": 599,
                  "nodeType": "Return",
                  "src": "4950:21:2"
                }
              ]
            },
            "documentation": {
              "id": 588,
              "nodeType": "StructuredDocumentation",
              "src": "4676:190:2",
              "text": " @dev external function to get SLIs of certain _SLO\n @param _SLOName 1. the name of the SLO in bytes32\n @return SLI[] array of SLIs associated to the input SLOs"
            },
            "functionSelector": "02e8b893",
            "id": 601,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSLI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 591,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 590,
                  "mutability": "mutable",
                  "name": "_SLOName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 601,
                  "src": "4887:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 589,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4887:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4886:18:2"
            },
            "returnParameters": {
              "id": 595,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 594,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 601,
                  "src": "4926:12:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_SLI_$384_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct SLA.SLI[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 592,
                      "name": "SLI",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 384,
                      "src": "4926:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SLI_$384_storage_ptr",
                        "typeString": "struct SLA.SLI"
                      }
                    },
                    "id": 593,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4926:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_SLI_$384_storage_$dyn_storage_ptr",
                      "typeString": "struct SLA.SLI[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4925:14:2"
            },
            "scope": 670,
            "src": "4871:107:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 609,
              "nodeType": "Block",
              "src": "5177:35:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 607,
                    "name": "sliInterval",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 371,
                    "src": "5194:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 606,
                  "id": 608,
                  "nodeType": "Return",
                  "src": "5187:18:2"
                }
              ]
            },
            "documentation": {
              "id": 602,
              "nodeType": "StructuredDocumentation",
              "src": "4984:130:2",
              "text": " @dev external view function that returns the sliInterval value\n· @return uint256 value of the sliInterval"
            },
            "functionSelector": "e7ab816a",
            "id": 610,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSliInterval",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 603,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5142:2:2"
            },
            "returnParameters": {
              "id": 606,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 605,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 610,
                  "src": "5168:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 604,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5168:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5167:9:2"
            },
            "scope": 670,
            "src": "5119:93:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 668,
              "nodeType": "Block",
              "src": "5707:258:2",
              "statements": [
                {
                  "assignments": [
                    629
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 629,
                      "mutability": "mutable",
                      "name": "_SLOAddresses",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 668,
                      "src": "5717:26:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_SLO_$2368_$dyn_memory_ptr",
                        "typeString": "contract SLO[]"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 627,
                          "name": "SLO",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 2368,
                          "src": "5717:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$2368",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 628,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "5717:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_SLO_$2368_$dyn_storage_ptr",
                          "typeString": "contract SLO[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 636,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 633,
                          "name": "SLONames",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 399,
                          "src": "5756:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                            "typeString": "bytes32[] storage ref"
                          }
                        },
                        "id": 634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5756:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 632,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "5746:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_SLO_$2368_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (contract SLO[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 630,
                          "name": "SLO",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 2368,
                          "src": "5750:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$2368",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 631,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "5750:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_SLO_$2368_$dyn_storage_ptr",
                          "typeString": "contract SLO[]"
                        }
                      }
                    },
                    "id": 635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5746:26:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_SLO_$2368_$dyn_memory_ptr",
                      "typeString": "contract SLO[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5717:55:2"
                },
                {
                  "body": {
                    "id": 658,
                    "nodeType": "Block",
                    "src": "5829:61:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 648,
                              "name": "_SLOAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 629,
                              "src": "5843:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_SLO_$2368_$dyn_memory_ptr",
                                "typeString": "contract SLO[] memory"
                              }
                            },
                            "id": 650,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 649,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 638,
                              "src": "5857:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5843:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLO_$2368",
                              "typeString": "contract SLO"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 651,
                              "name": "SLOs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 389,
                              "src": "5862:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_SLO_$2368_$",
                                "typeString": "mapping(bytes32 => contract SLO)"
                              }
                            },
                            "id": 655,
                            "indexExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 652,
                                "name": "SLONames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 399,
                                "src": "5867:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                  "typeString": "bytes32[] storage ref"
                                }
                              },
                              "id": 654,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 653,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 638,
                                "src": "5876:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5867:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5862:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLO_$2368",
                              "typeString": "contract SLO"
                            }
                          },
                          "src": "5843:36:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLO_$2368",
                            "typeString": "contract SLO"
                          }
                        },
                        "id": 657,
                        "nodeType": "ExpressionStatement",
                        "src": "5843:36:2"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 641,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 638,
                      "src": "5803:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 642,
                        "name": "SLONames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 399,
                        "src": "5807:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      "id": 643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5807:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5803:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 659,
                  "initializationExpression": {
                    "assignments": [
                      638
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 638,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 659,
                        "src": "5788:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 637,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5788:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 640,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5800:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5788:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 646,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5824:3:2",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 645,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 638,
                        "src": "5824:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 647,
                    "nodeType": "ExpressionStatement",
                    "src": "5824:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "5783:107:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 660,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5429,
                          "src": "5908:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5908:7:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 662,
                        "name": "ipfsHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 374,
                        "src": "5917:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 663,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 368,
                        "src": "5927:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 664,
                        "name": "SLONames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 399,
                        "src": "5934:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 665,
                        "name": "_SLOAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 629,
                        "src": "5944:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_SLO_$2368_$dyn_memory_ptr",
                          "typeString": "contract SLO[] memory"
                        }
                      }
                    ],
                    "id": 666,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5907:51:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_string_storage_$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$_t_array$_t_contract$_SLO_$2368_$dyn_memory_ptr_$",
                      "typeString": "tuple(address,string storage ref,uint256,bytes32[] storage ref,contract SLO[] memory)"
                    }
                  },
                  "functionReturnParameters": 625,
                  "id": 667,
                  "nodeType": "Return",
                  "src": "5900:58:2"
                }
              ]
            },
            "documentation": {
              "id": 611,
              "nodeType": "StructuredDocumentation",
              "src": "5218:275:2",
              "text": " @dev external view function that returns all agreement information\n @return address owner\n @return string ipfsHash\n @return uint256 amount necessary to stake\n @return bytes32[] SLONames array\n @return SLO[] SLO addresses array"
            },
            "functionSelector": "fbbf93a0",
            "id": 669,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDetails",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 612,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5518:2:2"
            },
            "returnParameters": {
              "id": 625,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 614,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 669,
                  "src": "5581:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 613,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5581:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 616,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 669,
                  "src": "5602:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 615,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5602:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 618,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 669,
                  "src": "5629:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 617,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5629:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 621,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 669,
                  "src": "5650:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 619,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "5650:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 620,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5650:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 624,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 669,
                  "src": "5680:12:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_SLO_$2368_$dyn_memory_ptr",
                    "typeString": "contract SLO[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 622,
                      "name": "SLO",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 2368,
                      "src": "5680:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLO_$2368",
                        "typeString": "contract SLO"
                      }
                    },
                    "id": 623,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5680:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_SLO_$2368_$dyn_storage_ptr",
                      "typeString": "contract SLO[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5567:135:2"
            },
            "scope": 670,
            "src": "5499:466:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 671,
        "src": "446:5521:2"
      }
    ],
    "src": "32:5936:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.5",
  "updatedAt": "2020-12-29T13:31:01.678Z",
  "devdoc": {
    "details": "SLA is a service level agreement contract used for service downtime compensation",
    "events": {
      "SLICreated(uint256,uint256,uint256)": {
        "details": "event for SLI creation logging",
        "params": {
          "_periodId": "3. the id of the given period",
          "_timestamp": "1. the time the SLI has been registered",
          "_value": "2. the value of the SLI"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "addAllowedTokens(address)": {
        "details": "add a token to ve allowed for staking",
        "params": {
          "_token": "1. address of the new allowed token"
        }
      },
      "addNewPeriod(uint256,uint256)": {
        "details": "add a new period to the array",
        "params": {
          "_sla_period_end": "2. uint256 of the end of the period",
          "_sla_period_start": "1. uint256 of the start of the period"
        }
      },
      "claimCompensation(uint256)": {
        "details": "claim from delegators",
        "params": {
          "_period": "1. period id to claim"
        }
      },
      "claimReward(uint256)": {
        "details": "claim from validators",
        "params": {
          "_period": "1. period id to claim"
        }
      },
      "constructor": {
        "params": {
          "_SLONames": "2. array of the names of the service level objectives in bytes32",
          "_SLOs": "3. array of service level objective contract addressess service level objective breach",
          "_daiAddress": "10. DAI Token Address to accept by default",
          "_ipfsHash": "5. string with the ipfs hash that contains extra information about the service level agreement",
          "_owner": "1. address of the owner of the service level agreement",
          "_sla_period_ends": "9. array with the values for the \"end\" of every period",
          "_sla_period_starts": "8. array with the values for the \"start\" of every period",
          "_sliInterval": "6. uint the interval in seconds between requesting a new SLI",
          "_stake": "4. uint of the amount required to stake when signing the service level agreement",
          "_tokenAddress": "7. address of the DSLA token to be unlocked for staking"
        }
      },
      "getDetails()": {
        "details": "external view function that returns all agreement information",
        "returns": {
          "_0": "address owner",
          "_1": "string ipfsHash",
          "_2": "uint256 amount necessary to stake",
          "_3": "bytes32[] SLONames array",
          "_4": "SLO[] SLO addresses array"
        }
      },
      "getSLI(bytes32)": {
        "details": "external function to get SLIs of certain _SLO",
        "params": {
          "_SLOName": "1. the name of the SLO in bytes32"
        },
        "returns": {
          "_0": "SLI[] array of SLIs associated to the input SLOs"
        }
      },
      "getSliInterval()": {
        "details": "external view function that returns the sliInterval value",
        "returns": {
          "_0": "uint256 value of the sliInterval"
        }
      },
      "getTokenStake(address,uint256)": {
        "details": "returns the token stake according to index",
        "params": {
          "_index": "2. index of the TokenStake",
          "_owner": "1. owner of the stake"
        }
      },
      "getTokenStakeLength(address)": {
        "details": "returns the length of TokenStakes per user",
        "params": {
          "_owner": "1. owner of the stake"
        }
      },
      "getUserTotalValue(address,uint256)": {
        "details": "get the user total value staked",
        "params": {
          "_period": "2. period id to claim",
          "_user": "1. address of the user"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "registerSLI(bytes32,uint256,uint256)": {
        "details": "external function to register SLI's and check them against the SLO's",
        "params": {
          "_SLOName": "1. the name of the SLO in bytes32",
          "_periodId": "3. the id of the given period",
          "_value": "2. the value of the SLI to check"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "stakeTokens(uint256,address,uint256)": {
        "details": "increase the amount staked per token",
        "params": {
          "_amount": "1. amount to be staked",
          "_period": "3. period id to stake",
          "_token": "2. address of the token"
        }
      },
      "stakersCount()": {
        "details": "public view function that returns the total amount of stakers"
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdraw(address,uint256)": {
        "details": "withdraw staked tokens",
        "params": {
          "_period": "2. period id to withdraw",
          "_token": "1. address of the token"
        }
      },
      "withdrawAndStake(address,uint256,uint256)": {
        "details": "withdraw bDSLA and stake d Tokens",
        "params": {
          "_amount": "2. amount to withdraw",
          "_period": "3. period id to withdraw",
          "_token": "1. address of the token"
        }
      }
    },
    "stateVariables": {
      "SLIs": {
        "details": "mapping to get SLI structs from SLO names in bytes32"
      },
      "SLONames": {
        "details": "array storing the names of the SLO's of this agreement"
      },
      "SLOs": {
        "details": "mapping to get SLO addresses from SLO names in bytes32"
      },
      "ipfsHash": {
        "details": "The ipfs hash that stores extra information about the agreement"
      },
      "registry": {
        "details": "The address of the registry contract"
      },
      "sliInterval": {
        "details": "The time between SLI registration"
      },
      "stake": {
        "details": "The required amount to stake when subscribing to the agreement"
      }
    },
    "title": "SLA",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}