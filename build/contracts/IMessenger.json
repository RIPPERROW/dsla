{
  "contractName": "IMessenger",
  "abi": [
    {
      "inputs": [],
      "name": "setSLARegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_periodId",
          "type": "uint256"
        },
        {
          "internalType": "contract SLA",
          "name": "_sla",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_sloName",
          "type": "bytes32"
        }
      ],
      "name": "requestSLI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_periodId\",\"type\":\"uint256\"},{\"internalType\":\"contract SLA\",\"name\":\"_sla\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_sloName\",\"type\":\"bytes32\"}],\"name\":\"requestSLI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setSLARegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"requestSLI(uint256,address,bytes32)\":{\"details\":\"Creates a request to get a new SLI value for the given slo\",\"params\":{\"_periodId\":\"the id for the given period\",\"_sla\":\"the service level agreement we are verifying the SLI for\",\"_sloName\":\"the name of the SLO for which SLI must be computed\"}},\"setSLARegistry()\":{\"details\":\"This sets the SLARegistry contract address and can only be called once\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/interfaces/IMessenger.sol\":\"IMessenger\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLA/SLA.sol\":{\"keccak256\":\"0x2b6bc9ac9ee58fef8bbfac3a1fcba255604797249b2c71db5e33c07d84cf3b80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c86cbd0ca511dc75f088542f8bd5c3c373a20c8c351221d11890c8cbab5776c\",\"dweb:/ipfs/QmfWPZ9tDdegd7MBJMXWt4NcsL6mPzQBBHZBhHC4CMUEzX\"]},\"/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLA/Staking.sol\":{\"keccak256\":\"0xdfdaa39e77663d2e5d506559b182dc80c7e919f2b8f2d0cfa32f96e146c0a2e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b80e42c851d86642e6a0afadf0488288e79edf7e2d69aec7969d63c6868db011\",\"dweb:/ipfs/QmVhYkzYGG6G2GDs4tjiogUBRduQyZ5uRQCMdpDP81c9s6\"]},\"/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLARegistry.sol\":{\"keccak256\":\"0x6715ec1f31e815384bbb7894212d3e48cda47e640ebec8d76e0737a3fa1535f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81b5b5480dce67a26cb5c0f2281764135a0bca7dab9ed66b6b14538c12ae686d\",\"dweb:/ipfs/QmVMk2GT2cwczcsKjGnCTBrfeSr9VBVAwphy1HZfCDUh8d\"]},\"/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLO/SLO.sol\":{\"keccak256\":\"0x86206fabb1341a004cd81dd39603b9e1626fa764fefe7c699caa26170ba19812\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d7f913351599734b1cc6cb49e79a9dbf0edf9a0e7295d3de473bd969f6ce311\",\"dweb:/ipfs/QmTH3u5n9Kw5ju489o7DS652tGk8hz2ZLTWiFyTuawKjAc\"]},\"/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/bDSLA/bDSLAToken.sol\":{\"keccak256\":\"0x7d6b5e6a9939936a4567ad0c77fd43641f2b65ebdb225df3bc4f1e65a2f06e62\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc080478c29132c5ac6c039ece839e5000c58645df579a07619c065b13e9ea8a\",\"dweb:/ipfs/QmaMo9xo46U7TgwkXFDeQT2GCH88zMZU6Lb4oDS3SgKdhU\"]},\"/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/interfaces/IMessenger.sol\":{\"keccak256\":\"0x0d3e37a96f73f69ff83b5f390344819b9d99f2b2eba9f6ae84600133ee0501dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c390fb6fb02a2d5f286f5319de111570d90d64daca2d21fa8e3a699191480a84\",\"dweb:/ipfs/QmeF9WfqVaftbFcSaLPeySHoPesVvbZ5w5JGxgnNrjzHap\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x92f7900d382761c7faefeaced81c6b4f1aae909ed0551803bfe8f27101956360\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://407c0864143968542e5cf5aa7556916d2cf292b201e3dadb65662e9a3aa24187\",\"dweb:/ipfs/QmSnXzYAUaGLGr7uofRbgQraTJvatbjQLBPhyYiMd18oUJ\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3\",\"dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"@openzeppelin/contracts/presets/ERC20PresetMinterPauser.sol\":{\"keccak256\":\"0xe30213b0851987b0455057cdfb65660c05805cbb05b12c0d61b0ff7a99cc36cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c61711ecc3ad53890dded63c27909a315ba3053c553be29acaa239bc6a7a0cf\",\"dweb:/ipfs/QmQjriBzSyAYQTm4NfWpnnoH8RhZrayyXm2zvpeHkxQnAk\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x91e0bd6a6762d2a1700dab0849de8422611355100576c4beef1e80d82a4104a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73bbd77af0a8b07255d2ffa20728bcf13b116007c9ddac5d37046cfabb0e1e02\",\"dweb:/ipfs/QmRgZgWCWCSMTTaok6o4QvWA6MgB4goS8qpb3sN7bAvaZ9\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0x657b0d90be17331364211d74359df2a734fac864f6e88c80de7626fa33090ffb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09cca25fefa2354a424d55a97930c76b11dc50697ba62c85d7affc27a37e830c\",\"dweb:/ipfs/QmPTQBYXxQDSNmMKqwe4WnM8E7NwnpLnkFLSRH8hZRvrVK\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol\":{\"keccak256\":\"0xbab4a97af2a6810a8ffc187205dfb331284949ea5b30caa5b9052828853bb149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f53c98e31ed415c2a6f03d99809cd4f2f5fff92a13ee85022922a09df82ee459\",\"dweb:/ipfs/QmXiv4ysuQSRfoXqPpwA1QCreEnqfkrHDGyJTmifoni7dK\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017\",\"dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://774e78a9ff32792cc95db4d2ceaf3a7965bb7f0bea5e6cb7cff182b450d44b37\",\"dweb:/ipfs/QmRRMC4uj7eAcLW7chynA3sNEYULMFazdLwQHKHQPyzAbA\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xb2a11b236f073662f5a196995863f51c11d006bf7c3de158b316dfa1506c4b79\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8651649cf0b9efa18c3b01c030276fa320d41adbdc286833417e7f36e357b2f3\",\"dweb:/ipfs/QmafhM2Nd1aP43QVB1eRRZaqRXQKswNfQcWi8U8xjrxCfN\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0x5d1b1dcbc0396f44c1c8d554857f71e3187503bf1e54062bf9ec6782e21f3a08\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9aa7fa580393aab7ca3d9f606f5ab7434d51e1c0f3632a593fca82c80ef8cc4c\",\"dweb:/ipfs/QmRy84N7QfkwBM2AeR7UB5G1PPHdRLi6s1iyzAwCzevcHe\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\nimport \"../SLA/SLA.sol\";\n\ninterface IMessenger {\n    /**\n     * @dev This sets the SLARegistry contract address and can only be called\n     * once\n     */\n    function setSLARegistry() external;\n\n    /**\n     * @dev Creates a request to get a new SLI value for the\n     * given slo\n     * @param _periodId the id for the given period\n     * @param _sla the service level agreement we are verifying the SLI for\n     * @param _sloName the name of the SLO for which SLI must be computed\n     */\n    function requestSLI(\n        uint256 _periodId,\n        SLA _sla,\n        bytes32 _sloName\n    ) external;\n}\n",
  "sourcePath": "/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/interfaces/IMessenger.sol",
  "ast": {
    "absolutePath": "/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/interfaces/IMessenger.sol",
    "exportedSymbols": {
      "IMessenger": [
        2773
      ]
    },
    "id": 2774,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2757,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:9"
      },
      {
        "absolutePath": "/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLA/SLA.sol",
        "file": "../SLA/SLA.sol",
        "id": 2758,
        "nodeType": "ImportDirective",
        "scope": 2774,
        "sourceUnit": 659,
        "src": "57:24:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 2773,
        "linearizedBaseContracts": [
          2773
        ],
        "name": "IMessenger",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": {
              "id": 2759,
              "nodeType": "StructuredDocumentation",
              "src": "110:101:9",
              "text": " @dev This sets the SLARegistry contract address and can only be called\n once"
            },
            "functionSelector": "f3881589",
            "id": 2762,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setSLARegistry",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2760,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "239:2:9"
            },
            "returnParameters": {
              "id": 2761,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "250:0:9"
            },
            "scope": 2773,
            "src": "216:35:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 2763,
              "nodeType": "StructuredDocumentation",
              "src": "257:291:9",
              "text": " @dev Creates a request to get a new SLI value for the\n given slo\n @param _periodId the id for the given period\n @param _sla the service level agreement we are verifying the SLI for\n @param _sloName the name of the SLO for which SLI must be computed"
            },
            "functionSelector": "558450be",
            "id": 2772,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "requestSLI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2770,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2765,
                  "mutability": "mutable",
                  "name": "_periodId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2772,
                  "src": "582:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2764,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "582:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2767,
                  "mutability": "mutable",
                  "name": "_sla",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2772,
                  "src": "609:8:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SLA_$658",
                    "typeString": "contract SLA"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2766,
                    "name": "SLA",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 658,
                    "src": "609:3:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SLA_$658",
                      "typeString": "contract SLA"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2769,
                  "mutability": "mutable",
                  "name": "_sloName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2772,
                  "src": "627:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2768,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "627:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "572:77:9"
            },
            "returnParameters": {
              "id": 2771,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "658:0:9"
            },
            "scope": 2773,
            "src": "553:106:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2774,
        "src": "83:578:9"
      }
    ],
    "src": "32:630:9"
  },
  "legacyAST": {
    "absolutePath": "/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/interfaces/IMessenger.sol",
    "exportedSymbols": {
      "IMessenger": [
        2773
      ]
    },
    "id": 2774,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2757,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:9"
      },
      {
        "absolutePath": "/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/SLA/SLA.sol",
        "file": "../SLA/SLA.sol",
        "id": 2758,
        "nodeType": "ImportDirective",
        "scope": 2774,
        "sourceUnit": 659,
        "src": "57:24:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 2773,
        "linearizedBaseContracts": [
          2773
        ],
        "name": "IMessenger",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": {
              "id": 2759,
              "nodeType": "StructuredDocumentation",
              "src": "110:101:9",
              "text": " @dev This sets the SLARegistry contract address and can only be called\n once"
            },
            "functionSelector": "f3881589",
            "id": 2762,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setSLARegistry",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2760,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "239:2:9"
            },
            "returnParameters": {
              "id": 2761,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "250:0:9"
            },
            "scope": 2773,
            "src": "216:35:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 2763,
              "nodeType": "StructuredDocumentation",
              "src": "257:291:9",
              "text": " @dev Creates a request to get a new SLI value for the\n given slo\n @param _periodId the id for the given period\n @param _sla the service level agreement we are verifying the SLI for\n @param _sloName the name of the SLO for which SLI must be computed"
            },
            "functionSelector": "558450be",
            "id": 2772,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "requestSLI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2770,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2765,
                  "mutability": "mutable",
                  "name": "_periodId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2772,
                  "src": "582:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2764,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "582:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2767,
                  "mutability": "mutable",
                  "name": "_sla",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2772,
                  "src": "609:8:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SLA_$658",
                    "typeString": "contract SLA"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2766,
                    "name": "SLA",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 658,
                    "src": "609:3:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SLA_$658",
                      "typeString": "contract SLA"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2769,
                  "mutability": "mutable",
                  "name": "_sloName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2772,
                  "src": "627:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2768,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "627:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "572:77:9"
            },
            "returnParameters": {
              "id": 2771,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "658:0:9"
            },
            "scope": 2773,
            "src": "553:106:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2774,
        "src": "83:578:9"
      }
    ],
    "src": "32:630:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.5",
  "updatedAt": "2020-12-22T19:44:56.773Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "requestSLI(uint256,address,bytes32)": {
        "details": "Creates a request to get a new SLI value for the given slo",
        "params": {
          "_periodId": "the id for the given period",
          "_sla": "the service level agreement we are verifying the SLI for",
          "_sloName": "the name of the SLO for which SLI must be computed"
        }
      },
      "setSLARegistry()": {
        "details": "This sets the SLARegistry contract address and can only be called once"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}