{
  "contractName": "IMessenger",
  "abi": [
    {
      "inputs": [],
      "name": "setSLARegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
<<<<<<< HEAD
          "internalType": "uint256",
          "name": "_periodId",
          "type": "uint256"
=======
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
>>>>>>> dsla-incentivized-beta-phase-i
        },
        {
          "internalType": "contract SLA",
          "name": "_sla",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_sloName",
          "type": "bytes32"
        }
      ],
      "name": "requestSLI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
<<<<<<< HEAD
  "metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_periodId\",\"type\":\"uint256\"},{\"internalType\":\"contract SLA\",\"name\":\"_sla\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_sloName\",\"type\":\"bytes32\"}],\"name\":\"requestSLI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setSLARegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"requestSLI(uint256,address,bytes32)\":{\"details\":\"Creates a request to get a new SLI value for the given slo\",\"params\":{\"_periodId\":\"the id for the given period\",\"_sla\":\"the service level agreement we are verifying the SLI for\",\"_sloName\":\"the name of the SLO for which SLI must be computed\"}},\"setSLARegistry()\":{\"details\":\"This sets the SLARegistry contract address and can only be called once\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/matiasbn/Desktop/stacktical-dsla-contracts/contracts/interfaces/IMessenger.sol\":\"IMessenger\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/matiasbn/Desktop/stacktical-dsla-contracts/contracts/SLA/SLA.sol\":{\"keccak256\":\"0xdca7021e1ad7a0836934dda5566944dbfa9d76212c4510c1700dba68c77cd160\",\"urls\":[\"bzz-raw://9e10974de31e3a66e4a2482c4043eb3c594272e8d1dc2bef9ab70a959f840841\",\"dweb:/ipfs/Qmf482Ph2KSsZmeSNTmL6nXd8gUUjkkYbARMsEvKbD2zJs\"]},\"/Users/matiasbn/Desktop/stacktical-dsla-contracts/contracts/SLA/Staking.sol\":{\"keccak256\":\"0x2e89bb25b969e379791c3c358f7eaea91d6ef43dbe53d870c410b22470fc88a6\",\"urls\":[\"bzz-raw://d953a60b62bcbd6eadac4074ad3f88d22b26f3a72f6bd9c46b592ef6f560aea9\",\"dweb:/ipfs/QmUyXy85zhjFL9xzjiHJYbTP7SVtzRsW4zsXuosobMqxVZ\"]},\"/Users/matiasbn/Desktop/stacktical-dsla-contracts/contracts/SLARegistry.sol\":{\"keccak256\":\"0x7cbe7d327dc83ad6c54fcc5b46709ccbc3a6a66856c6d5d0e41a311c31fb1175\",\"urls\":[\"bzz-raw://051a7baa007e891b0afc52237a1356b3ff3f1088e1eadfe233c33b613333ed30\",\"dweb:/ipfs/QmU8tC2EkgtQcMxnscrf7QjQ8JNMwBEd3zWJYdJEz4ZYP5\"]},\"/Users/matiasbn/Desktop/stacktical-dsla-contracts/contracts/SLO/SLO.sol\":{\"keccak256\":\"0xb3780c0f1623e546723ca72e2352be5fc14550d44076819efa41312bb6ff73ab\",\"urls\":[\"bzz-raw://6592bf18875f1ab7c54b47ee1e8fa9ea193d42310e4d8e97fc304f142096265d\",\"dweb:/ipfs/QmSPZF5s2yq7CTKPPRN5nsUqNMnSreU9MxojrcVsSud6Xe\"]},\"/Users/matiasbn/Desktop/stacktical-dsla-contracts/contracts/Whitelist/Whitelist.sol\":{\"keccak256\":\"0xd9ed433912c1f444391652546b7045830c41af96162891be238e3090b101da0d\",\"urls\":[\"bzz-raw://5da97f11b2b30b667b5f42d9a1b140fd328f66c5ef3d22c192ef04b8071a8cf3\",\"dweb:/ipfs/Qme2uXvEqCspyNGTZ1iBQvkjDRH325ibWpgr9v1yZqsp5w\"]},\"/Users/matiasbn/Desktop/stacktical-dsla-contracts/contracts/bDSLA/bDSLAToken.sol\":{\"keccak256\":\"0xf44b2d42600badd69cfc0cc8d22dcdc20de34dcef1a6299c04070517a0d91a2e\",\"urls\":[\"bzz-raw://065a5c777fc018fcaf8a4d178cde9d6e4462e97d70a96d6c68bc4fb4c31a2da1\",\"dweb:/ipfs/QmQ21x8iwbS8HKjzpxYL1VsSUXcrrw8sXhdsRFBeQmM3H7\"]},\"/Users/matiasbn/Desktop/stacktical-dsla-contracts/contracts/interfaces/IMessenger.sol\":{\"keccak256\":\"0x1666c7ff4895f193105211409df2a309e979131ba11633ef20c0ebce4c8a48d6\",\"urls\":[\"bzz-raw://69c0b8de6b7e862510cbd0b7db100172b069e6ccdc0e96ce71e8874587a4a1bf\",\"dweb:/ipfs/QmdUrUXWMJHjB5BnUWdSp1GN9sC7MPgNJBULxssJFcGDo1\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x92f7900d382761c7faefeaced81c6b4f1aae909ed0551803bfe8f27101956360\",\"urls\":[\"bzz-raw://407c0864143968542e5cf5aa7556916d2cf292b201e3dadb65662e9a3aa24187\",\"dweb:/ipfs/QmSnXzYAUaGLGr7uofRbgQraTJvatbjQLBPhyYiMd18oUJ\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc\",\"urls\":[\"bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3\",\"dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"@openzeppelin/contracts/presets/ERC20PresetMinterPauser.sol\":{\"keccak256\":\"0xe30213b0851987b0455057cdfb65660c05805cbb05b12c0d61b0ff7a99cc36cc\",\"urls\":[\"bzz-raw://1c61711ecc3ad53890dded63c27909a315ba3053c553be29acaa239bc6a7a0cf\",\"dweb:/ipfs/QmQjriBzSyAYQTm4NfWpnnoH8RhZrayyXm2zvpeHkxQnAk\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x91e0bd6a6762d2a1700dab0849de8422611355100576c4beef1e80d82a4104a0\",\"urls\":[\"bzz-raw://73bbd77af0a8b07255d2ffa20728bcf13b116007c9ddac5d37046cfabb0e1e02\",\"dweb:/ipfs/QmRgZgWCWCSMTTaok6o4QvWA6MgB4goS8qpb3sN7bAvaZ9\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0x657b0d90be17331364211d74359df2a734fac864f6e88c80de7626fa33090ffb\",\"urls\":[\"bzz-raw://09cca25fefa2354a424d55a97930c76b11dc50697ba62c85d7affc27a37e830c\",\"dweb:/ipfs/QmPTQBYXxQDSNmMKqwe4WnM8E7NwnpLnkFLSRH8hZRvrVK\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol\":{\"keccak256\":\"0xbab4a97af2a6810a8ffc187205dfb331284949ea5b30caa5b9052828853bb149\",\"urls\":[\"bzz-raw://f53c98e31ed415c2a6f03d99809cd4f2f5fff92a13ee85022922a09df82ee459\",\"dweb:/ipfs/QmXiv4ysuQSRfoXqPpwA1QCreEnqfkrHDGyJTmifoni7dK\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\",\"urls\":[\"bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017\",\"dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390\",\"urls\":[\"bzz-raw://774e78a9ff32792cc95db4d2ceaf3a7965bb7f0bea5e6cb7cff182b450d44b37\",\"dweb:/ipfs/QmRRMC4uj7eAcLW7chynA3sNEYULMFazdLwQHKHQPyzAbA\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xb2a11b236f073662f5a196995863f51c11d006bf7c3de158b316dfa1506c4b79\",\"urls\":[\"bzz-raw://8651649cf0b9efa18c3b01c030276fa320d41adbdc286833417e7f36e357b2f3\",\"dweb:/ipfs/QmafhM2Nd1aP43QVB1eRRZaqRXQKswNfQcWi8U8xjrxCfN\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0x5d1b1dcbc0396f44c1c8d554857f71e3187503bf1e54062bf9ec6782e21f3a08\",\"urls\":[\"bzz-raw://9aa7fa580393aab7ca3d9f606f5ab7434d51e1c0f3632a593fca82c80ef8cc4c\",\"dweb:/ipfs/QmRy84N7QfkwBM2AeR7UB5G1PPHdRLi6s1iyzAwCzevcHe\"]}},\"version\":1}",
=======
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"contract SLA\",\"name\":\"_sla\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_sloName\",\"type\":\"bytes32\"}],\"name\":\"requestSLI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setSLARegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"requestSLI(bytes,address,bytes32)\":{\"details\":\"Creates a request to get a new SLI value for the given slo\",\"params\":{\"_data\":\"the decentralized oracle payload\",\"_sla\":\"the service level agreement we are verifying the SLI for\",\"_sloName\":\"the name of the SLO for which SLI must be computed\"}},\"setSLARegistry()\":{\"details\":\"This sets the SLARegistry contract address and can only be called once\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/wilhempujar/Development/stacktical-dsla-contracts/contracts/interfaces/IMessenger.sol\":\"IMessenger\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"/Users/wilhempujar/Development/stacktical-dsla-contracts/contracts/SLA/SLA.sol\":{\"keccak256\":\"0x229a60bd3758cf7bf602c64ef07eb1d48f1466926eb512d2e4123430dda1ec4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a9f7a9baa6760c453f678fae9c90822f831c0c6ccaa400a4c0376fdd4e2177a\",\"dweb:/ipfs/Qme8rTDvcmNKRGokfNgSa1pQyZrwTso65AGUf93pWChrZU\"]},\"/Users/wilhempujar/Development/stacktical-dsla-contracts/contracts/SLA/Staking.sol\":{\"keccak256\":\"0x6ceb264957fcd8958836f779b13e8935fa411e7e7a33bfb4f13dcac3f225c903\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53394926ac5d514a7bd3938f677e42bb2a90abcb03163a325d97a0c7af979ed1\",\"dweb:/ipfs/QmS6AutbePhN7YJMKgNHWYRLgx5yFgzFs5tfJAURTpqjDc\"]},\"/Users/wilhempujar/Development/stacktical-dsla-contracts/contracts/SLARegistry.sol\":{\"keccak256\":\"0x1d02d97d9a8a1479aaed8a432b5ca395bcb187fa5f3022887a7a6e5ac8001659\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77663d84fd64f7b6b4104deb20eba05cb02328e0a45fb0f648cfc5ba41abf384\",\"dweb:/ipfs/Qmd1jhAUN9zyjRPMcztnznAZiz8J2GzEsMF1wVm32Cbpbo\"]},\"/Users/wilhempujar/Development/stacktical-dsla-contracts/contracts/SLO/SLO.sol\":{\"keccak256\":\"0x774c489bdeabb39817df2bfa7ee80f26e45960373daa50ee5e9308453c6b3144\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88e8337296f4cc676ed4699ac02c8ef2ec8fc91d1a613197ee582ea338cb700c\",\"dweb:/ipfs/QmeoeyH6349GTGrZm9repEEEvZVR34cTdWQvbTYHTHCxaE\"]},\"/Users/wilhempujar/Development/stacktical-dsla-contracts/contracts/bDSLA/bDSLAToken.sol\":{\"keccak256\":\"0xfde7f4cc126dda54526b5de0f3731b106d624028c892dbd9a4695ec186112aa6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a55d2581456dc3989e930fa26d5d41dd62932c7c8cbe1064da98efc8c0befc6\",\"dweb:/ipfs/QmQxZH3kT73aiozHvw72ZNtCA1x75NPKdpGZbx42HbCKH6\"]},\"/Users/wilhempujar/Development/stacktical-dsla-contracts/contracts/interfaces/IMessenger.sol\":{\"keccak256\":\"0xfe84b204631e594ff96ce6987dbf90008743c7355ba3a59253490a536ab5d8e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9937eb9d0838fd969c8cf08ef0518668e6677939b0478fb34f7dc70eea2d5eb\",\"dweb:/ipfs/QmTXx99J6ncek5jkNzDtd9YkrDKZnFhA5GKeQqg7DgyojV\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x92f7900d382761c7faefeaced81c6b4f1aae909ed0551803bfe8f27101956360\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://407c0864143968542e5cf5aa7556916d2cf292b201e3dadb65662e9a3aa24187\",\"dweb:/ipfs/QmSnXzYAUaGLGr7uofRbgQraTJvatbjQLBPhyYiMd18oUJ\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3\",\"dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"@openzeppelin/contracts/presets/ERC20PresetMinterPauser.sol\":{\"keccak256\":\"0xe30213b0851987b0455057cdfb65660c05805cbb05b12c0d61b0ff7a99cc36cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c61711ecc3ad53890dded63c27909a315ba3053c553be29acaa239bc6a7a0cf\",\"dweb:/ipfs/QmQjriBzSyAYQTm4NfWpnnoH8RhZrayyXm2zvpeHkxQnAk\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x91e0bd6a6762d2a1700dab0849de8422611355100576c4beef1e80d82a4104a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73bbd77af0a8b07255d2ffa20728bcf13b116007c9ddac5d37046cfabb0e1e02\",\"dweb:/ipfs/QmRgZgWCWCSMTTaok6o4QvWA6MgB4goS8qpb3sN7bAvaZ9\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0x657b0d90be17331364211d74359df2a734fac864f6e88c80de7626fa33090ffb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09cca25fefa2354a424d55a97930c76b11dc50697ba62c85d7affc27a37e830c\",\"dweb:/ipfs/QmPTQBYXxQDSNmMKqwe4WnM8E7NwnpLnkFLSRH8hZRvrVK\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol\":{\"keccak256\":\"0xbab4a97af2a6810a8ffc187205dfb331284949ea5b30caa5b9052828853bb149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f53c98e31ed415c2a6f03d99809cd4f2f5fff92a13ee85022922a09df82ee459\",\"dweb:/ipfs/QmXiv4ysuQSRfoXqPpwA1QCreEnqfkrHDGyJTmifoni7dK\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017\",\"dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://774e78a9ff32792cc95db4d2ceaf3a7965bb7f0bea5e6cb7cff182b450d44b37\",\"dweb:/ipfs/QmRRMC4uj7eAcLW7chynA3sNEYULMFazdLwQHKHQPyzAbA\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xb2a11b236f073662f5a196995863f51c11d006bf7c3de158b316dfa1506c4b79\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8651649cf0b9efa18c3b01c030276fa320d41adbdc286833417e7f36e357b2f3\",\"dweb:/ipfs/QmafhM2Nd1aP43QVB1eRRZaqRXQKswNfQcWi8U8xjrxCfN\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0x5d1b1dcbc0396f44c1c8d554857f71e3187503bf1e54062bf9ec6782e21f3a08\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9aa7fa580393aab7ca3d9f606f5ab7434d51e1c0f3632a593fca82c80ef8cc4c\",\"dweb:/ipfs/QmRy84N7QfkwBM2AeR7UB5G1PPHdRLi6s1iyzAwCzevcHe\"]}},\"version\":1}",
>>>>>>> dsla-incentivized-beta-phase-i
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "sourceMap": "",
  "deployedSourceMap": "",
<<<<<<< HEAD
  "source": "pragma solidity 0.6.6;\n\nimport \"../SLA/SLA.sol\";\n\ninterface IMessenger {\n    /**\n     * @dev This sets the SLARegistry contract address and can only be called\n     * once\n     */\n    function setSLARegistry() external;\n\n    /**\n     * @dev Creates a request to get a new SLI value for the\n     * given slo\n     * @param _periodId the id for the given period\n     * @param _sla the service level agreement we are verifying the SLI for\n     * @param _sloName the name of the SLO for which SLI must be computed\n     */\n    function requestSLI(\n        uint256 _periodId,\n        SLA _sla,\n        bytes32 _sloName\n    ) external;\n}\n",
  "sourcePath": "/Users/matiasbn/Desktop/stacktical-dsla-contracts/contracts/interfaces/IMessenger.sol",
  "ast": {
    "absolutePath": "/Users/matiasbn/Desktop/stacktical-dsla-contracts/contracts/interfaces/IMessenger.sol",
    "exportedSymbols": {
      "IMessenger": [
        2045
      ]
    },
    "id": 2046,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2029,
        "literals": [
          "solidity",
          "0.6",
          ".6"
=======
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\nimport \"../SLA/SLA.sol\";\n\ninterface IMessenger {\n    /**\n     * @dev This sets the SLARegistry contract address and can only be called\n     * once\n     */\n    function setSLARegistry() external;\n\n    /**\n     * @dev Creates a request to get a new SLI value for the\n     * given slo\n     * @param _data the decentralized oracle payload\n     * @param _sla the service level agreement we are verifying the SLI for\n     * @param _sloName the name of the SLO for which SLI must be computed\n     */\n    function requestSLI(\n        bytes calldata _data,\n        SLA _sla,\n        bytes32 _sloName\n    ) external;\n}\n",
  "sourcePath": "/Users/wilhempujar/Development/stacktical-dsla-contracts/contracts/interfaces/IMessenger.sol",
  "ast": {
    "absolutePath": "/Users/wilhempujar/Development/stacktical-dsla-contracts/contracts/interfaces/IMessenger.sol",
    "exportedSymbols": {
      "IMessenger": [
        1897
      ]
    },
    "id": 1898,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1881,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
>>>>>>> dsla-incentivized-beta-phase-i
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:7"
      },
      {
<<<<<<< HEAD
        "absolutePath": "/Users/matiasbn/Desktop/stacktical-dsla-contracts/contracts/SLA/SLA.sol",
        "file": "../SLA/SLA.sol",
        "id": 2030,
        "nodeType": "ImportDirective",
        "scope": 2046,
        "sourceUnit": 300,
        "src": "24:24:9",
=======
        "absolutePath": "/Users/wilhempujar/Development/stacktical-dsla-contracts/contracts/SLA/SLA.sol",
        "file": "../SLA/SLA.sol",
        "id": 1882,
        "nodeType": "ImportDirective",
        "scope": 1898,
        "sourceUnit": 367,
        "src": "57:24:7",
>>>>>>> dsla-incentivized-beta-phase-i
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
<<<<<<< HEAD
        "id": 2045,
        "linearizedBaseContracts": [
          2045
=======
        "id": 1897,
        "linearizedBaseContracts": [
          1897
>>>>>>> dsla-incentivized-beta-phase-i
        ],
        "name": "IMessenger",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": {
<<<<<<< HEAD
              "id": 2031,
              "nodeType": "StructuredDocumentation",
              "src": "77:101:9",
              "text": "@dev This sets the SLARegistry contract address and can only be called\nonce"
            },
            "functionSelector": "f3881589",
            "id": 2034,
=======
              "id": 1883,
              "nodeType": "StructuredDocumentation",
              "src": "110:101:7",
              "text": " @dev This sets the SLARegistry contract address and can only be called\n once"
            },
            "functionSelector": "f3881589",
            "id": 1886,
>>>>>>> dsla-incentivized-beta-phase-i
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setSLARegistry",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
<<<<<<< HEAD
              "id": 2032,
=======
              "id": 1884,
>>>>>>> dsla-incentivized-beta-phase-i
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "239:2:7"
            },
            "returnParameters": {
<<<<<<< HEAD
              "id": 2033,
=======
              "id": 1885,
>>>>>>> dsla-incentivized-beta-phase-i
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "250:0:7"
            },
<<<<<<< HEAD
            "scope": 2045,
            "src": "183:35:9",
=======
            "scope": 1897,
            "src": "216:35:7",
>>>>>>> dsla-incentivized-beta-phase-i
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
<<<<<<< HEAD
              "id": 2035,
              "nodeType": "StructuredDocumentation",
              "src": "224:291:9",
              "text": "@dev Creates a request to get a new SLI value for the\ngiven slo\n@param _periodId the id for the given period\n@param _sla the service level agreement we are verifying the SLI for\n@param _sloName the name of the SLO for which SLI must be computed"
            },
            "functionSelector": "558450be",
            "id": 2044,
=======
              "id": 1887,
              "nodeType": "StructuredDocumentation",
              "src": "257:292:7",
              "text": " @dev Creates a request to get a new SLI value for the\n given slo\n @param _data the decentralized oracle payload\n @param _sla the service level agreement we are verifying the SLI for\n @param _sloName the name of the SLO for which SLI must be computed"
            },
            "functionSelector": "25df1745",
            "id": 1896,
>>>>>>> dsla-incentivized-beta-phase-i
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "requestSLI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
<<<<<<< HEAD
              "id": 2042,
=======
              "id": 1894,
>>>>>>> dsla-incentivized-beta-phase-i
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 2037,
                  "mutability": "mutable",
                  "name": "_periodId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2044,
                  "src": "549:17:9",
=======
                  "id": 1889,
                  "mutability": "mutable",
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1896,
                  "src": "583:20:7",
>>>>>>> dsla-incentivized-beta-phase-i
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 2036,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "549:7:9",
=======
                    "id": 1888,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "583:5:7",
>>>>>>> dsla-incentivized-beta-phase-i
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 2039,
=======
                  "id": 1891,
>>>>>>> dsla-incentivized-beta-phase-i
                  "mutability": "mutable",
                  "name": "_sla",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 2044,
                  "src": "576:8:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SLA_$299",
=======
                  "scope": 1896,
                  "src": "613:8:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SLA_$366",
>>>>>>> dsla-incentivized-beta-phase-i
                    "typeString": "contract SLA"
                  },
                  "typeName": {
                    "contractScope": null,
<<<<<<< HEAD
                    "id": 2038,
                    "name": "SLA",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 299,
                    "src": "576:3:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SLA_$299",
=======
                    "id": 1890,
                    "name": "SLA",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 366,
                    "src": "613:3:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SLA_$366",
>>>>>>> dsla-incentivized-beta-phase-i
                      "typeString": "contract SLA"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 2041,
=======
                  "id": 1893,
>>>>>>> dsla-incentivized-beta-phase-i
                  "mutability": "mutable",
                  "name": "_sloName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 2044,
                  "src": "594:16:9",
=======
                  "scope": 1896,
                  "src": "631:16:7",
>>>>>>> dsla-incentivized-beta-phase-i
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 2040,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "594:7:9",
=======
                    "id": 1892,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "631:7:7",
>>>>>>> dsla-incentivized-beta-phase-i
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "539:77:9"
            },
            "returnParameters": {
              "id": 2043,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "625:0:9"
            },
            "scope": 2045,
            "src": "520:106:9",
=======
              "src": "573:80:7"
            },
            "returnParameters": {
              "id": 1895,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "662:0:7"
            },
            "scope": 1897,
            "src": "554:109:7",
>>>>>>> dsla-incentivized-beta-phase-i
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
<<<<<<< HEAD
        "scope": 2046,
        "src": "50:578:9"
      }
    ],
    "src": "0:629:9"
  },
  "legacyAST": {
    "absolutePath": "/Users/matiasbn/Desktop/stacktical-dsla-contracts/contracts/interfaces/IMessenger.sol",
    "exportedSymbols": {
      "IMessenger": [
        2045
      ]
    },
    "id": 2046,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2029,
        "literals": [
          "solidity",
          "0.6",
          ".6"
=======
        "scope": 1898,
        "src": "83:582:7"
      }
    ],
    "src": "32:634:7"
  },
  "legacyAST": {
    "absolutePath": "/Users/wilhempujar/Development/stacktical-dsla-contracts/contracts/interfaces/IMessenger.sol",
    "exportedSymbols": {
      "IMessenger": [
        1897
      ]
    },
    "id": 1898,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1881,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
>>>>>>> dsla-incentivized-beta-phase-i
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:7"
      },
      {
<<<<<<< HEAD
        "absolutePath": "/Users/matiasbn/Desktop/stacktical-dsla-contracts/contracts/SLA/SLA.sol",
        "file": "../SLA/SLA.sol",
        "id": 2030,
        "nodeType": "ImportDirective",
        "scope": 2046,
        "sourceUnit": 300,
        "src": "24:24:9",
=======
        "absolutePath": "/Users/wilhempujar/Development/stacktical-dsla-contracts/contracts/SLA/SLA.sol",
        "file": "../SLA/SLA.sol",
        "id": 1882,
        "nodeType": "ImportDirective",
        "scope": 1898,
        "sourceUnit": 367,
        "src": "57:24:7",
>>>>>>> dsla-incentivized-beta-phase-i
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
<<<<<<< HEAD
        "id": 2045,
        "linearizedBaseContracts": [
          2045
=======
        "id": 1897,
        "linearizedBaseContracts": [
          1897
>>>>>>> dsla-incentivized-beta-phase-i
        ],
        "name": "IMessenger",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": {
<<<<<<< HEAD
              "id": 2031,
              "nodeType": "StructuredDocumentation",
              "src": "77:101:9",
              "text": "@dev This sets the SLARegistry contract address and can only be called\nonce"
            },
            "functionSelector": "f3881589",
            "id": 2034,
=======
              "id": 1883,
              "nodeType": "StructuredDocumentation",
              "src": "110:101:7",
              "text": " @dev This sets the SLARegistry contract address and can only be called\n once"
            },
            "functionSelector": "f3881589",
            "id": 1886,
>>>>>>> dsla-incentivized-beta-phase-i
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setSLARegistry",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
<<<<<<< HEAD
              "id": 2032,
=======
              "id": 1884,
>>>>>>> dsla-incentivized-beta-phase-i
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "239:2:7"
            },
            "returnParameters": {
<<<<<<< HEAD
              "id": 2033,
=======
              "id": 1885,
>>>>>>> dsla-incentivized-beta-phase-i
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "250:0:7"
            },
<<<<<<< HEAD
            "scope": 2045,
            "src": "183:35:9",
=======
            "scope": 1897,
            "src": "216:35:7",
>>>>>>> dsla-incentivized-beta-phase-i
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
<<<<<<< HEAD
              "id": 2035,
              "nodeType": "StructuredDocumentation",
              "src": "224:291:9",
              "text": "@dev Creates a request to get a new SLI value for the\ngiven slo\n@param _periodId the id for the given period\n@param _sla the service level agreement we are verifying the SLI for\n@param _sloName the name of the SLO for which SLI must be computed"
            },
            "functionSelector": "558450be",
            "id": 2044,
=======
              "id": 1887,
              "nodeType": "StructuredDocumentation",
              "src": "257:292:7",
              "text": " @dev Creates a request to get a new SLI value for the\n given slo\n @param _data the decentralized oracle payload\n @param _sla the service level agreement we are verifying the SLI for\n @param _sloName the name of the SLO for which SLI must be computed"
            },
            "functionSelector": "25df1745",
            "id": 1896,
>>>>>>> dsla-incentivized-beta-phase-i
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "requestSLI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
<<<<<<< HEAD
              "id": 2042,
=======
              "id": 1894,
>>>>>>> dsla-incentivized-beta-phase-i
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 2037,
                  "mutability": "mutable",
                  "name": "_periodId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2044,
                  "src": "549:17:9",
=======
                  "id": 1889,
                  "mutability": "mutable",
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1896,
                  "src": "583:20:7",
>>>>>>> dsla-incentivized-beta-phase-i
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 2036,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "549:7:9",
=======
                    "id": 1888,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "583:5:7",
>>>>>>> dsla-incentivized-beta-phase-i
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 2039,
=======
                  "id": 1891,
>>>>>>> dsla-incentivized-beta-phase-i
                  "mutability": "mutable",
                  "name": "_sla",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 2044,
                  "src": "576:8:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SLA_$299",
=======
                  "scope": 1896,
                  "src": "613:8:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SLA_$366",
>>>>>>> dsla-incentivized-beta-phase-i
                    "typeString": "contract SLA"
                  },
                  "typeName": {
                    "contractScope": null,
<<<<<<< HEAD
                    "id": 2038,
                    "name": "SLA",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 299,
                    "src": "576:3:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SLA_$299",
=======
                    "id": 1890,
                    "name": "SLA",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 366,
                    "src": "613:3:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SLA_$366",
>>>>>>> dsla-incentivized-beta-phase-i
                      "typeString": "contract SLA"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 2041,
=======
                  "id": 1893,
>>>>>>> dsla-incentivized-beta-phase-i
                  "mutability": "mutable",
                  "name": "_sloName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 2044,
                  "src": "594:16:9",
=======
                  "scope": 1896,
                  "src": "631:16:7",
>>>>>>> dsla-incentivized-beta-phase-i
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 2040,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "594:7:9",
=======
                    "id": 1892,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "631:7:7",
>>>>>>> dsla-incentivized-beta-phase-i
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "539:77:9"
            },
            "returnParameters": {
              "id": 2043,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "625:0:9"
            },
            "scope": 2045,
            "src": "520:106:9",
=======
              "src": "573:80:7"
            },
            "returnParameters": {
              "id": 1895,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "662:0:7"
            },
            "scope": 1897,
            "src": "554:109:7",
>>>>>>> dsla-incentivized-beta-phase-i
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
<<<<<<< HEAD
        "scope": 2046,
        "src": "50:578:9"
      }
    ],
    "src": "0:629:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.6+commit.6c089d02.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.5",
  "updatedAt": "2020-11-29T13:40:21.632Z",
=======
        "scope": 1898,
        "src": "83:582:7"
      }
    ],
    "src": "32:634:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.5",
  "updatedAt": "2020-10-17T00:08:07.914Z",
>>>>>>> dsla-incentivized-beta-phase-i
  "devdoc": {
    "kind": "dev",
    "methods": {
      "requestSLI(uint256,address,bytes32)": {
        "details": "Creates a request to get a new SLI value for the given slo",
        "params": {
          "_periodId": "the id for the given period",
          "_sla": "the service level agreement we are verifying the SLI for",
          "_sloName": "the name of the SLO for which SLI must be computed"
        }
      },
      "setSLARegistry()": {
        "details": "This sets the SLARegistry contract address and can only be called once"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}