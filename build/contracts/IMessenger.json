{
  "contractName": "IMessenger",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "setSLARegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_data",
          "type": "bytes"
        },
        {
          "name": "_sla",
          "type": "address"
        },
        {
          "name": "_sloName",
          "type": "bytes32"
        }
      ],
      "name": "requestSLI",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_data\",\"type\":\"bytes\"},{\"name\":\"_sla\",\"type\":\"address\"},{\"name\":\"_sloName\",\"type\":\"bytes32\"}],\"name\":\"requestSLI\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setSLARegistry\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"requestSLI(bytes,address,bytes32)\":{\"details\":\"Creates a request to get a new SLI value for the given slo\",\"params\":{\"_data\":\"the decentralized oracle payload\",\"_sla\":\"the service level agreement we are verifying the SLI for\",\"_sloName\":\"the name of the SLO for which SLI must be computed\"}},\"setSLARegistry()\":{\"details\":\"This sets the SLARegistry contract address and can only be called once\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/wilhempujar/Development/stacktical/stacktical-dsla-contracts/contracts/interfaces/IMessenger.sol\":\"IMessenger\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/wilhempujar/Development/stacktical/stacktical-dsla-contracts/contracts/SLA/Compensatable.sol\":{\"keccak256\":\"0x9c60191fef3373dbf1bd08020988a2d147fe24d7909f131ef9ba2f3a0db07b8e\",\"urls\":[\"bzzr://307fe7e8afb6990c5a00505b90e4bd84f72cd818817d04d82acb93de698a8be6\"]},\"/Users/wilhempujar/Development/stacktical/stacktical-dsla-contracts/contracts/SLA/SLA.sol\":{\"keccak256\":\"0x3145ce2b7ca311ba22a96375e44fd88d207e362d270a90cf575ed62113aa8881\",\"urls\":[\"bzzr://809ee779bc61fd1cb93012d10ad9eff15cbbe779c8abc978fef2cd2f26f0ca27\"]},\"/Users/wilhempujar/Development/stacktical/stacktical-dsla-contracts/contracts/SLA/Subscribable.sol\":{\"keccak256\":\"0xbc10d0b0c79030d9193f87dd1ff12d85d88c1154aed6bd70eb7c094c9ede4565\",\"urls\":[\"bzzr://2c6e56dce84322d043e4b70155b88af37874367aa3b834b985e6d7a987ff4e66\"]},\"/Users/wilhempujar/Development/stacktical/stacktical-dsla-contracts/contracts/SLARegistry.sol\":{\"keccak256\":\"0x4288fd10c0750b38159604c177849e3ddcb976a6b8d61c2c90842c73e795b623\",\"urls\":[\"bzzr://9c180108228d4a8618ff4167275771d40cd334e3d39ca09ee9c6ce6db758a537\"]},\"/Users/wilhempujar/Development/stacktical/stacktical-dsla-contracts/contracts/SLO/SLO.sol\":{\"keccak256\":\"0x1e5ab37d22d095d3d0195553e43a9039c9407f1c0035f702bd92fd78d80c661f\",\"urls\":[\"bzzr://406eabfab60ceec1f4bf022e4a6588bcc5b2ec084a724c2dedf53d8d502a9776\"]},\"/Users/wilhempujar/Development/stacktical/stacktical-dsla-contracts/contracts/Whitelist/Whitelist.sol\":{\"keccak256\":\"0xd4e9524f8ea8973b3a24631082b44a44655a3faebad3cd902b67f705a8726568\",\"urls\":[\"bzzr://0a7b8b569c9769838657c0891325137229143b6ddb57b60c1a727219744e7540\"]},\"/Users/wilhempujar/Development/stacktical/stacktical-dsla-contracts/contracts/interfaces/IMessenger.sol\":{\"keccak256\":\"0x4745f590a1b74c27319b7d3852b233fba0a4def913f3a8e8bb496ff7aba0bf2d\",\"urls\":[\"bzzr://8964ba92ece202b7188284e47fddd7d87b95c36849a8553e8d09bbdcbba247d9\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\",\"urls\":[\"bzzr://41ca38f6b0fa4b77b0feec43e422cfbec48b7eb38a41edf0b85c77e8d9a296b1\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x980de387a1a020a498f53d00f89fecebb12c949a17e8f160093c0303ede2b786\",\"urls\":[\"bzzr://08894efa2a557982070beda6a81a032407e70532d24bdafe80d39660c74904d9\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x079c4e23ee448f529e43bfa3c4e8fb4be52cd0318ee923a276835bedf45b93d8\",\"urls\":[\"bzzr://48248e86f64407a95f241d6c5c8cfea6b4d4ebf4ebb467e5c98c8af3868fafe4\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity 0.5.7;\n\nimport \"../SLA/SLA.sol\";\n\ninterface IMessenger {\n    /**\n     * @dev This sets the SLARegistry contract address and can only be called\n     * once\n     */\n    function setSLARegistry() external;\n\n    /**\n     * @dev Creates a request to get a new SLI value for the\n     * given slo\n     * @param _data the decentralized oracle payload\n     * @param _sla the service level agreement we are verifying the SLI for\n     * @param _sloName the name of the SLO for which SLI must be computed\n     */\n    function requestSLI(\n        bytes calldata _data,\n        SLA _sla,\n        bytes32 _sloName\n    ) external;\n}\n",
  "sourcePath": "/Users/wilhempujar/Development/stacktical/stacktical-dsla-contracts/contracts/interfaces/IMessenger.sol",
  "ast": {
    "absolutePath": "/Users/wilhempujar/Development/stacktical/stacktical-dsla-contracts/contracts/interfaces/IMessenger.sol",
    "exportedSymbols": {
      "IMessenger": [
        1672
      ]
    },
    "id": 1673,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1658,
        "literals": [
          "solidity",
          "0.5",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:9"
      },
      {
        "absolutePath": "/Users/wilhempujar/Development/stacktical/stacktical-dsla-contracts/contracts/SLA/SLA.sol",
        "file": "../SLA/SLA.sol",
        "id": 1659,
        "nodeType": "ImportDirective",
        "scope": 1673,
        "sourceUnit": 733,
        "src": "24:24:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 1672,
        "linearizedBaseContracts": [
          1672
        ],
        "name": "IMessenger",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@dev This sets the SLARegistry contract address and can only be called\nonce",
            "id": 1662,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setSLARegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1660,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "206:2:9"
            },
            "returnParameters": {
              "id": 1661,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "217:0:9"
            },
            "scope": 1672,
            "src": "183:35:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev Creates a request to get a new SLI value for the\ngiven slo\n@param _data the decentralized oracle payload\n@param _sla the service level agreement we are verifying the SLI for\n@param _sloName the name of the SLO for which SLI must be computed",
            "id": 1671,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "requestSLI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1669,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1664,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 1671,
                  "src": "550:20:9",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1663,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "550:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1666,
                  "name": "_sla",
                  "nodeType": "VariableDeclaration",
                  "scope": 1671,
                  "src": "580:8:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SLA_$732",
                    "typeString": "contract SLA"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1665,
                    "name": "SLA",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 732,
                    "src": "580:3:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SLA_$732",
                      "typeString": "contract SLA"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1668,
                  "name": "_sloName",
                  "nodeType": "VariableDeclaration",
                  "scope": 1671,
                  "src": "598:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1667,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "598:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "540:80:9"
            },
            "returnParameters": {
              "id": 1670,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "629:0:9"
            },
            "scope": 1672,
            "src": "521:109:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 1673,
        "src": "50:582:9"
      }
    ],
    "src": "0:633:9"
  },
  "legacyAST": {
    "absolutePath": "/Users/wilhempujar/Development/stacktical/stacktical-dsla-contracts/contracts/interfaces/IMessenger.sol",
    "exportedSymbols": {
      "IMessenger": [
        1672
      ]
    },
    "id": 1673,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1658,
        "literals": [
          "solidity",
          "0.5",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:9"
      },
      {
        "absolutePath": "/Users/wilhempujar/Development/stacktical/stacktical-dsla-contracts/contracts/SLA/SLA.sol",
        "file": "../SLA/SLA.sol",
        "id": 1659,
        "nodeType": "ImportDirective",
        "scope": 1673,
        "sourceUnit": 733,
        "src": "24:24:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 1672,
        "linearizedBaseContracts": [
          1672
        ],
        "name": "IMessenger",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@dev This sets the SLARegistry contract address and can only be called\nonce",
            "id": 1662,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setSLARegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1660,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "206:2:9"
            },
            "returnParameters": {
              "id": 1661,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "217:0:9"
            },
            "scope": 1672,
            "src": "183:35:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev Creates a request to get a new SLI value for the\ngiven slo\n@param _data the decentralized oracle payload\n@param _sla the service level agreement we are verifying the SLI for\n@param _sloName the name of the SLO for which SLI must be computed",
            "id": 1671,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "requestSLI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1669,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1664,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 1671,
                  "src": "550:20:9",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1663,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "550:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1666,
                  "name": "_sla",
                  "nodeType": "VariableDeclaration",
                  "scope": 1671,
                  "src": "580:8:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SLA_$732",
                    "typeString": "contract SLA"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1665,
                    "name": "SLA",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 732,
                    "src": "580:3:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SLA_$732",
                      "typeString": "contract SLA"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1668,
                  "name": "_sloName",
                  "nodeType": "VariableDeclaration",
                  "scope": 1671,
                  "src": "598:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1667,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "598:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "540:80:9"
            },
            "returnParameters": {
              "id": 1670,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "629:0:9"
            },
            "scope": 1672,
            "src": "521:109:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 1673,
        "src": "50:582:9"
      }
    ],
    "src": "0:633:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.7+commit.6da8b019.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.1",
  "updatedAt": "2020-07-08T15:13:33.648Z",
  "devdoc": {
    "methods": {
      "requestSLI(bytes,address,bytes32)": {
        "details": "Creates a request to get a new SLI value for the given slo",
        "params": {
          "_data": "the decentralized oracle payload",
          "_sla": "the service level agreement we are verifying the SLI for",
          "_sloName": "the name of the SLO for which SLI must be computed"
        }
      },
      "setSLARegistry()": {
        "details": "This sets the SLARegistry contract address and can only be called once"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}