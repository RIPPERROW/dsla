{
  "contractName": "WhitelistRegistry",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract Whitelist",
          "name": "whitelist",
          "type": "address"
        }
      ],
      "name": "WhitelistCreated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "createWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "userWhitelists",
      "outputs": [
        {
          "internalType": "contract Whitelist[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract Whitelist\",\"name\":\"whitelist\",\"type\":\"address\"}],\"name\":\"WhitelistCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"createWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"userWhitelists\",\"outputs\":[{\"internalType\":\"contract Whitelist[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"WhitelistRegistry is a contract for handling creation of whitelists and querying those whitelists\",\"methods\":{\"createWhitelist()\":{\"details\":\"public function for creating whitelists\"},\"userWhitelists(address)\":{\"details\":\"public view function that returns the whitelists that are owned by the given user\",\"params\":{\"_user\":\"Address of the user for which to return the whitelists\"}}},\"title\":\"WhitelistRegistry\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/matiasbn/Desktop/stacktical-dsla-contracts/contracts/WhitelistRegistry.sol\":\"WhitelistRegistry\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/matiasbn/Desktop/stacktical-dsla-contracts/contracts/Whitelist/Whitelist.sol\":{\"keccak256\":\"0xd9ed433912c1f444391652546b7045830c41af96162891be238e3090b101da0d\",\"urls\":[\"bzz-raw://5da97f11b2b30b667b5f42d9a1b140fd328f66c5ef3d22c192ef04b8071a8cf3\",\"dweb:/ipfs/Qme2uXvEqCspyNGTZ1iBQvkjDRH325ibWpgr9v1yZqsp5w\"]},\"/Users/matiasbn/Desktop/stacktical-dsla-contracts/contracts/WhitelistRegistry.sol\":{\"keccak256\":\"0x1eb828f0239e68dbf285c7de2e2a81ea11149eef412f259711a0619734e754f1\",\"urls\":[\"bzz-raw://2cbe1c128395cd17e8bdb21f58dba89ebeca5071494c96b43f6f6c66f7d937ca\",\"dweb:/ipfs/QmWH2tdsStQWtgaW1U9bg7aJYioQ8obXfWx4chwUS5oWiw\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc\",\"urls\":[\"bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3\",\"dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c806327e11b521461003b5780639baf53dc14610045575b600080fd5b6100436100de565b005b6100876004803603602081101561005b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610227565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156100ca5780820151818401526020810190506100af565b505050509050019250505060405180910390f35b6000336040516100ed906102f3565b808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604051809103906000f08015801561013f573d6000803e3d6000fd5b5090506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f3aaa159995532a09d71082a9df6247e5c5846856e24e293fd65e164ed48233f460405160405180910390a250565b60606000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156102e757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161029d575b50505050509050919050565b61101f806103018339019056fe608060405234801561001057600080fd5b5060405161101f38038061101f8339818101604052602081101561003357600080fd5b8101908080519060200190929190505050600061005461010760201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506101018161010f60201b60201c565b50610322565b600033905090565b61011d61010760201b60201c565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146101de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610264576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180610ff96026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610cc8806103316000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638d21c7701161005b5780638d21c770146101ef5780638da5cb5b146102a7578063f2fde38b146102f1578063f9902bb11461033557610088565b80633af32abf1461008d5780635ae698ff146100e9578063715018a6146101a1578063747b8050146101ab575b600080fd5b6100cf600480360360208110156100a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610379565b604051808215151515815260200191505060405180910390f35b61019f600480360360208110156100ff57600080fd5b810190808035906020019064010000000081111561011c57600080fd5b82018360208201111561012e57600080fd5b8035906020019184602083028401116401000000008311171561015057600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192905050506103cf565b005b6101a96104d4565b005b6101ed600480360360208110156101c157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061065c565b005b6102a56004803603602081101561020557600080fd5b810190808035906020019064010000000081111561022257600080fd5b82018360208201111561023457600080fd5b8035906020019184602083028401116401000000008311171561025657600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192905050506107c2565b005b6102af6108c7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103336004803603602081101561030757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108f0565b005b6103776004803603602081101561034b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610afd565b005b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6103d7610c64565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610498576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60008090505b81518110156104d0576104c38282815181106104b657fe5b602002602001015161065c565b808060010191505061049e565b5050565b6104dc610c64565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461059d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610664610c64565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610725576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f3ebdc59c5154f681813582b63e04d503c44f515f80fa2d558d663f4e3fdf508a60405160405180910390a250565b6107ca610c64565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461088b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60008090505b81518110156108c3576108b68282815181106108a957fe5b6020026020010151610afd565b8080600101915050610891565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6108f8610c64565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146109b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a3f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180610c6d6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610b05610c64565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610bc6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fe285bb51ee9ef78b36fb9eca52aede9c9f4234d2bb72917200f87005edb25a5560405160405180910390a250565b60003390509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a264697066735822122021543eb564317d3e67db00e0c6b8c58ca7342a418db7696c4623f5083a7922ad64736f6c634300060600334f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220497b80a5f1af8d9bb95a83b862eecf878f26c692594691ae50091473a68e9ab164736f6c63430006060033",
  "immutableReferences": {},
  "sourceMap": "206:939:7:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;206:939:7;;;;;;;",
  "deployedSourceMap": "206:939:7:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;206:939:7;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;622:195:7;;;:::i;:::-;;1015:127;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1015:127:7;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1015:127:7;;;;;;;;;;;;;;;;;622:195;666:19;702:10;688:25;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;688:25:7;666:47;;723:16;:28;740:10;723:28;;;;;;;;;;;;;;;757:9;723:44;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;723:44:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;800:9;783:27;;;;;;;;;;;;622:195;:::o;1015:127::-;1074:18;1111:16;:23;1128:5;1111:23;;;;;;;;;;;;;;;1104:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1015:127;;;:::o;206:939::-;;;;;;;;:::o",
  "source": "pragma solidity 0.6.6;\n\nimport \"./Whitelist/Whitelist.sol\";\n\n/**\n * @title WhitelistRegistry\n * @dev WhitelistRegistry is a contract for handling creation of whitelists\n * and querying those whitelists\n */\ncontract WhitelistRegistry {\n\n    // Mapping that stores the whitelists owned by a user\n    mapping(address => Whitelist[]) private userToWhitelists;\n\n    /**\n     * @dev event for whitelist creation logging\n     * @param whitelist the address of the created whitelist contract\n     */\n    event WhitelistCreated(Whitelist indexed whitelist);\n\n    /**\n     * @dev public function for creating whitelists\n     */\n    function createWhitelist() public {\n        Whitelist whitelist = new Whitelist(msg.sender);\n        userToWhitelists[msg.sender].push(whitelist);\n\n        emit WhitelistCreated(whitelist);\n    }\n\n    /**\n     * @dev public view function that returns the whitelists that are owned by\n     * the given user\n     * @param _user Address of the user for which to return the whitelists\n     */\n    function userWhitelists(address _user) public view returns(Whitelist[] memory) {\n        return(userToWhitelists[_user]);\n    }\n\n}\n",
  "sourcePath": "/Users/matiasbn/Desktop/stacktical-dsla-contracts/contracts/WhitelistRegistry.sol",
  "ast": {
    "absolutePath": "/Users/matiasbn/Desktop/stacktical-dsla-contracts/contracts/WhitelistRegistry.sol",
    "exportedSymbols": {
      "WhitelistRegistry": [
        1845
      ]
    },
    "id": 1846,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1792,
        "literals": [
          "solidity",
          "0.6",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:7"
      },
      {
        "absolutePath": "/Users/matiasbn/Desktop/stacktical-dsla-contracts/contracts/Whitelist/Whitelist.sol",
        "file": "./Whitelist/Whitelist.sol",
        "id": 1793,
        "nodeType": "ImportDirective",
        "scope": 1846,
        "sourceUnit": 1791,
        "src": "24:35:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          1790
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1794,
          "nodeType": "StructuredDocumentation",
          "src": "61:144:7",
          "text": "@title WhitelistRegistry\n@dev WhitelistRegistry is a contract for handling creation of whitelists\nand querying those whitelists"
        },
        "fullyImplemented": true,
        "id": 1845,
        "linearizedBaseContracts": [
          1845
        ],
        "name": "WhitelistRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1799,
            "mutability": "mutable",
            "name": "userToWhitelists",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1845,
            "src": "298:56:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Whitelist_$1790_$dyn_storage_$",
              "typeString": "mapping(address => contract Whitelist[])"
            },
            "typeName": {
              "id": 1798,
              "keyType": {
                "id": 1795,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "306:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "298:31:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Whitelist_$1790_$dyn_storage_$",
                "typeString": "mapping(address => contract Whitelist[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 1796,
                  "name": "Whitelist",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1790,
                  "src": "317:9:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Whitelist_$1790",
                    "typeString": "contract Whitelist"
                  }
                },
                "id": 1797,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "317:11:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_contract$_Whitelist_$1790_$dyn_storage_ptr",
                  "typeString": "contract Whitelist[]"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1800,
              "nodeType": "StructuredDocumentation",
              "src": "361:130:7",
              "text": "@dev event for whitelist creation logging\n@param whitelist the address of the created whitelist contract"
            },
            "id": 1804,
            "name": "WhitelistCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1803,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1802,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "whitelist",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1804,
                  "src": "519:27:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Whitelist_$1790",
                    "typeString": "contract Whitelist"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1801,
                    "name": "Whitelist",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1790,
                    "src": "519:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Whitelist_$1790",
                      "typeString": "contract Whitelist"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "518:29:7"
            },
            "src": "496:52:7"
          },
          {
            "body": {
              "id": 1828,
              "nodeType": "Block",
              "src": "656:161:7",
              "statements": [
                {
                  "assignments": [
                    1809
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1809,
                      "mutability": "mutable",
                      "name": "whitelist",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1828,
                      "src": "666:19:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Whitelist_$1790",
                        "typeString": "contract Whitelist"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1808,
                        "name": "Whitelist",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1790,
                        "src": "666:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Whitelist_$1790",
                          "typeString": "contract Whitelist"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1815,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1812,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "702:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "702:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1811,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "688:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_Whitelist_$1790_$",
                        "typeString": "function (address) returns (contract Whitelist)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1810,
                        "name": "Whitelist",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1790,
                        "src": "692:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Whitelist_$1790",
                          "typeString": "contract Whitelist"
                        }
                      }
                    },
                    "id": 1814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "688:25:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Whitelist_$1790",
                      "typeString": "contract Whitelist"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "666:47:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1821,
                        "name": "whitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1809,
                        "src": "757:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Whitelist_$1790",
                          "typeString": "contract Whitelist"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Whitelist_$1790",
                          "typeString": "contract Whitelist"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1816,
                          "name": "userToWhitelists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1799,
                          "src": "723:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Whitelist_$1790_$dyn_storage_$",
                            "typeString": "mapping(address => contract Whitelist[] storage ref)"
                          }
                        },
                        "id": 1819,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1817,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "740:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "740:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "723:28:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Whitelist_$1790_$dyn_storage",
                          "typeString": "contract Whitelist[] storage ref"
                        }
                      },
                      "id": 1820,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "723:33:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_contract$_Whitelist_$1790_$returns$__$",
                        "typeString": "function (contract Whitelist)"
                      }
                    },
                    "id": 1822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "723:44:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1823,
                  "nodeType": "ExpressionStatement",
                  "src": "723:44:7"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1825,
                        "name": "whitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1809,
                        "src": "800:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Whitelist_$1790",
                          "typeString": "contract Whitelist"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Whitelist_$1790",
                          "typeString": "contract Whitelist"
                        }
                      ],
                      "id": 1824,
                      "name": "WhitelistCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1804,
                      "src": "783:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_Whitelist_$1790_$returns$__$",
                        "typeString": "function (contract Whitelist)"
                      }
                    },
                    "id": 1826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "783:27:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1827,
                  "nodeType": "EmitStatement",
                  "src": "778:32:7"
                }
              ]
            },
            "documentation": {
              "id": 1805,
              "nodeType": "StructuredDocumentation",
              "src": "554:63:7",
              "text": "@dev public function for creating whitelists"
            },
            "functionSelector": "27e11b52",
            "id": 1829,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createWhitelist",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1806,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "646:2:7"
            },
            "returnParameters": {
              "id": 1807,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "656:0:7"
            },
            "scope": 1845,
            "src": "622:195:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1843,
              "nodeType": "Block",
              "src": "1094:48:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1838,
                          "name": "userToWhitelists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1799,
                          "src": "1111:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Whitelist_$1790_$dyn_storage_$",
                            "typeString": "mapping(address => contract Whitelist[] storage ref)"
                          }
                        },
                        "id": 1840,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1839,
                          "name": "_user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1832,
                          "src": "1128:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1111:23:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Whitelist_$1790_$dyn_storage",
                          "typeString": "contract Whitelist[] storage ref"
                        }
                      }
                    ],
                    "id": 1841,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1110:25:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_Whitelist_$1790_$dyn_storage",
                      "typeString": "contract Whitelist[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1837,
                  "id": 1842,
                  "nodeType": "Return",
                  "src": "1104:31:7"
                }
              ]
            },
            "documentation": {
              "id": 1830,
              "nodeType": "StructuredDocumentation",
              "src": "823:187:7",
              "text": "@dev public view function that returns the whitelists that are owned by\nthe given user\n@param _user Address of the user for which to return the whitelists"
            },
            "functionSelector": "9baf53dc",
            "id": 1844,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "userWhitelists",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1833,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1832,
                  "mutability": "mutable",
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1844,
                  "src": "1039:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1831,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1039:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1038:15:7"
            },
            "returnParameters": {
              "id": 1837,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1836,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1844,
                  "src": "1074:18:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_Whitelist_$1790_$dyn_memory_ptr",
                    "typeString": "contract Whitelist[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 1834,
                      "name": "Whitelist",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 1790,
                      "src": "1074:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Whitelist_$1790",
                        "typeString": "contract Whitelist"
                      }
                    },
                    "id": 1835,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1074:11:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_Whitelist_$1790_$dyn_storage_ptr",
                      "typeString": "contract Whitelist[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1073:20:7"
            },
            "scope": 1845,
            "src": "1015:127:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1846,
        "src": "206:939:7"
      }
    ],
    "src": "0:1146:7"
  },
  "legacyAST": {
    "absolutePath": "/Users/matiasbn/Desktop/stacktical-dsla-contracts/contracts/WhitelistRegistry.sol",
    "exportedSymbols": {
      "WhitelistRegistry": [
        1845
      ]
    },
    "id": 1846,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1792,
        "literals": [
          "solidity",
          "0.6",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:7"
      },
      {
        "absolutePath": "/Users/matiasbn/Desktop/stacktical-dsla-contracts/contracts/Whitelist/Whitelist.sol",
        "file": "./Whitelist/Whitelist.sol",
        "id": 1793,
        "nodeType": "ImportDirective",
        "scope": 1846,
        "sourceUnit": 1791,
        "src": "24:35:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          1790
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1794,
          "nodeType": "StructuredDocumentation",
          "src": "61:144:7",
          "text": "@title WhitelistRegistry\n@dev WhitelistRegistry is a contract for handling creation of whitelists\nand querying those whitelists"
        },
        "fullyImplemented": true,
        "id": 1845,
        "linearizedBaseContracts": [
          1845
        ],
        "name": "WhitelistRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1799,
            "mutability": "mutable",
            "name": "userToWhitelists",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1845,
            "src": "298:56:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Whitelist_$1790_$dyn_storage_$",
              "typeString": "mapping(address => contract Whitelist[])"
            },
            "typeName": {
              "id": 1798,
              "keyType": {
                "id": 1795,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "306:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "298:31:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Whitelist_$1790_$dyn_storage_$",
                "typeString": "mapping(address => contract Whitelist[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 1796,
                  "name": "Whitelist",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1790,
                  "src": "317:9:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Whitelist_$1790",
                    "typeString": "contract Whitelist"
                  }
                },
                "id": 1797,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "317:11:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_contract$_Whitelist_$1790_$dyn_storage_ptr",
                  "typeString": "contract Whitelist[]"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1800,
              "nodeType": "StructuredDocumentation",
              "src": "361:130:7",
              "text": "@dev event for whitelist creation logging\n@param whitelist the address of the created whitelist contract"
            },
            "id": 1804,
            "name": "WhitelistCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1803,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1802,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "whitelist",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1804,
                  "src": "519:27:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Whitelist_$1790",
                    "typeString": "contract Whitelist"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1801,
                    "name": "Whitelist",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1790,
                    "src": "519:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Whitelist_$1790",
                      "typeString": "contract Whitelist"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "518:29:7"
            },
            "src": "496:52:7"
          },
          {
            "body": {
              "id": 1828,
              "nodeType": "Block",
              "src": "656:161:7",
              "statements": [
                {
                  "assignments": [
                    1809
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1809,
                      "mutability": "mutable",
                      "name": "whitelist",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1828,
                      "src": "666:19:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Whitelist_$1790",
                        "typeString": "contract Whitelist"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1808,
                        "name": "Whitelist",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1790,
                        "src": "666:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Whitelist_$1790",
                          "typeString": "contract Whitelist"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1815,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1812,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "702:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "702:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1811,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "688:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_Whitelist_$1790_$",
                        "typeString": "function (address) returns (contract Whitelist)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1810,
                        "name": "Whitelist",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1790,
                        "src": "692:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Whitelist_$1790",
                          "typeString": "contract Whitelist"
                        }
                      }
                    },
                    "id": 1814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "688:25:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Whitelist_$1790",
                      "typeString": "contract Whitelist"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "666:47:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1821,
                        "name": "whitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1809,
                        "src": "757:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Whitelist_$1790",
                          "typeString": "contract Whitelist"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Whitelist_$1790",
                          "typeString": "contract Whitelist"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1816,
                          "name": "userToWhitelists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1799,
                          "src": "723:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Whitelist_$1790_$dyn_storage_$",
                            "typeString": "mapping(address => contract Whitelist[] storage ref)"
                          }
                        },
                        "id": 1819,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1817,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "740:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "740:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "723:28:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Whitelist_$1790_$dyn_storage",
                          "typeString": "contract Whitelist[] storage ref"
                        }
                      },
                      "id": 1820,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "723:33:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_contract$_Whitelist_$1790_$returns$__$",
                        "typeString": "function (contract Whitelist)"
                      }
                    },
                    "id": 1822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "723:44:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1823,
                  "nodeType": "ExpressionStatement",
                  "src": "723:44:7"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1825,
                        "name": "whitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1809,
                        "src": "800:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Whitelist_$1790",
                          "typeString": "contract Whitelist"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Whitelist_$1790",
                          "typeString": "contract Whitelist"
                        }
                      ],
                      "id": 1824,
                      "name": "WhitelistCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1804,
                      "src": "783:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_Whitelist_$1790_$returns$__$",
                        "typeString": "function (contract Whitelist)"
                      }
                    },
                    "id": 1826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "783:27:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1827,
                  "nodeType": "EmitStatement",
                  "src": "778:32:7"
                }
              ]
            },
            "documentation": {
              "id": 1805,
              "nodeType": "StructuredDocumentation",
              "src": "554:63:7",
              "text": "@dev public function for creating whitelists"
            },
            "functionSelector": "27e11b52",
            "id": 1829,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createWhitelist",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1806,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "646:2:7"
            },
            "returnParameters": {
              "id": 1807,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "656:0:7"
            },
            "scope": 1845,
            "src": "622:195:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1843,
              "nodeType": "Block",
              "src": "1094:48:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1838,
                          "name": "userToWhitelists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1799,
                          "src": "1111:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Whitelist_$1790_$dyn_storage_$",
                            "typeString": "mapping(address => contract Whitelist[] storage ref)"
                          }
                        },
                        "id": 1840,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1839,
                          "name": "_user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1832,
                          "src": "1128:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1111:23:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Whitelist_$1790_$dyn_storage",
                          "typeString": "contract Whitelist[] storage ref"
                        }
                      }
                    ],
                    "id": 1841,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1110:25:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_Whitelist_$1790_$dyn_storage",
                      "typeString": "contract Whitelist[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1837,
                  "id": 1842,
                  "nodeType": "Return",
                  "src": "1104:31:7"
                }
              ]
            },
            "documentation": {
              "id": 1830,
              "nodeType": "StructuredDocumentation",
              "src": "823:187:7",
              "text": "@dev public view function that returns the whitelists that are owned by\nthe given user\n@param _user Address of the user for which to return the whitelists"
            },
            "functionSelector": "9baf53dc",
            "id": 1844,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "userWhitelists",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1833,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1832,
                  "mutability": "mutable",
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1844,
                  "src": "1039:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1831,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1039:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1038:15:7"
            },
            "returnParameters": {
              "id": 1837,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1836,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1844,
                  "src": "1074:18:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_Whitelist_$1790_$dyn_memory_ptr",
                    "typeString": "contract Whitelist[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 1834,
                      "name": "Whitelist",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 1790,
                      "src": "1074:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Whitelist_$1790",
                        "typeString": "contract Whitelist"
                      }
                    },
                    "id": 1835,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1074:11:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_Whitelist_$1790_$dyn_storage_ptr",
                      "typeString": "contract Whitelist[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1073:20:7"
            },
            "scope": 1845,
            "src": "1015:127:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1846,
        "src": "206:939:7"
      }
    ],
    "src": "0:1146:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.6+commit.6c089d02.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {
        "0x3aaa159995532a09d71082a9df6247e5c5846856e24e293fd65e164ed48233f4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "whitelist",
              "type": "address"
            }
          ],
          "name": "WhitelistCreated",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xBc9dCabd80DF8c04a48f0eB97D6bBF909A160f62",
      "transactionHash": "0xd2d6d85e9df1d857cea4438b3f6eec454844b8e0097ea343153708beb8159a3f"
    },
    "42": {
      "events": {
        "0x3aaa159995532a09d71082a9df6247e5c5846856e24e293fd65e164ed48233f4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "contract Whitelist",
              "name": "whitelist",
              "type": "address"
            }
          ],
          "name": "WhitelistCreated",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x6F8f1787BaA45FA0B5833608583B492EF570e32C",
      "transactionHash": "0x2812a9ead6dcd966bac58ee399ceb0106bae29f2658ed28dd3331d18f3d74b58"
    }
  },
  "schemaVersion": "3.2.5",
  "updatedAt": "2020-11-29T13:40:21.625Z",
  "devdoc": {
    "details": "WhitelistRegistry is a contract for handling creation of whitelists and querying those whitelists",
    "methods": {
      "createWhitelist()": {
        "details": "public function for creating whitelists"
      },
      "userWhitelists(address)": {
        "details": "public view function that returns the whitelists that are owned by the given user",
        "params": {
          "_user": "Address of the user for which to return the whitelists"
        }
      }
    },
    "title": "WhitelistRegistry"
  },
  "userdoc": {
    "methods": {}
  }
}