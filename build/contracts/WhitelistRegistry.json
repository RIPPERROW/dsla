{
  "contractName": "WhitelistRegistry",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract Whitelist",
          "name": "whitelist",
          "type": "address"
        }
      ],
      "name": "WhitelistCreated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "createWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "userWhitelists",
      "outputs": [
        {
          "internalType": "contract Whitelist[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract Whitelist\",\"name\":\"whitelist\",\"type\":\"address\"}],\"name\":\"WhitelistCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"createWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"userWhitelists\",\"outputs\":[{\"internalType\":\"contract Whitelist[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"WhitelistRegistry is a contract for handling creation of whitelists and querying those whitelists\",\"events\":{\"WhitelistCreated(address)\":{\"details\":\"event for whitelist creation logging\",\"params\":{\"whitelist\":\"the address of the created whitelist contract\"}}},\"kind\":\"dev\",\"methods\":{\"createWhitelist()\":{\"details\":\"public function for creating whitelists\"},\"userWhitelists(address)\":{\"details\":\"public view function that returns the whitelists that are owned by the given user\",\"params\":{\"_user\":\"Address of the user for which to return the whitelists\"}}},\"title\":\"WhitelistRegistry\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/wilhempujar/Development/stacktical-dsla-contracts/contracts/WhitelistRegistry.sol\":\"WhitelistRegistry\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/wilhempujar/Development/stacktical-dsla-contracts/contracts/Whitelist/Whitelist.sol\":{\"keccak256\":\"0xe6b2aa77e4c9f0338aefaa0ab4577c75a2fb7f4f51e1da64201b8205fde14838\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67c90b78ba61519b617f18ef468662b18aa676b00f4285d118bc2dca9f521368\",\"dweb:/ipfs/QmUpEvf1SPo65YEDAoJMFTY9jbWfB4XhSvVixa5LservPj\"]},\"/Users/wilhempujar/Development/stacktical-dsla-contracts/contracts/WhitelistRegistry.sol\":{\"keccak256\":\"0xe04c99ecf4ded16f55fe36cc03464daa9f141b484c501098d457bbf9c9138e1d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddea53272dffd2cfa5b498c1b9ddef4488643050890be4c1524443112ae38185\",\"dweb:/ipfs/QmRQpAAxK3zLRZfzx8qJjQoZN7XptxZ9UYJ4C5XkrhR5UF\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3\",\"dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611317806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806327e11b521461003b5780639baf53dc14610045575b600080fd5b6100436100de565b005b6100876004803603602081101561005b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610211565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156100ca5780820151818401526020810190506100af565b505050509050019250505060405180910390f35b6000336040516100ed906102dd565b808273ffffffffffffffffffffffffffffffffffffffff168152602001915050604051809103906000f080158015610129573d6000803e3d6000fd5b5090506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f3aaa159995532a09d71082a9df6247e5c5846856e24e293fd65e164ed48233f460405160405180910390a250565b60606000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156102d157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610287575b50505050509050919050565b610ff7806102eb8339019056fe608060405234801561001057600080fd5b50604051610ff7380380610ff78339818101604052602081101561003357600080fd5b8101908080519060200190929190505050600061005461010760201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506101018161010f60201b60201c565b50610320565b600033905090565b61011d61010760201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146101dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610263576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180610fd16026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610ca28061032f6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638d21c7701161005b5780638d21c770146101ed5780638da5cb5b146102a5578063f2fde38b146102d9578063f9902bb11461031d57610088565b80633af32abf1461008d5780635ae698ff146100e7578063715018a61461019f578063747b8050146101a9575b600080fd5b6100cf600480360360208110156100a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610361565b60405180821515815260200191505060405180910390f35b61019d600480360360208110156100fd57600080fd5b810190808035906020019064010000000081111561011a57600080fd5b82018360208201111561012c57600080fd5b8035906020019184602083028401116401000000008311171561014e57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192905050506103b7565b005b6101a76104b8565b005b6101eb600480360360208110156101bf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061063e565b005b6102a36004803603602081101561020357600080fd5b810190808035906020019064010000000081111561022057600080fd5b82018360208201111561023257600080fd5b8035906020019184602083028401116401000000008311171561025457600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192905050506107a3565b005b6102ad6108a4565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61031b600480360360208110156102ef57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108cd565b005b61035f6004803603602081101561033357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ad8565b005b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6103bf610c3e565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461047f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60005b81518110156104b4576104a782828151811061049a57fe5b602002602001015161063e565b8080600101915050610482565b5050565b6104c0610c3e565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610580576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610646610c3e565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610706576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f3ebdc59c5154f681813582b63e04d503c44f515f80fa2d558d663f4e3fdf508a60405160405180910390a250565b6107ab610c3e565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461086b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60005b81518110156108a05761089382828151811061088657fe5b6020026020010151610ad8565b808060010191505061086e565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6108d5610c3e565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610995576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180610c476026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610ae0610c3e565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610ba0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fe285bb51ee9ef78b36fb9eca52aede9c9f4234d2bb72917200f87005edb25a5560405160405180910390a250565b60003390509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220e8bcac6084a1bc1627ec5babca50885a6730cfa967f4823d195cfbc6236f527964736f6c634300060c00334f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a26469706673582212203b748eb4a7283437cdaaea500092b96d2556e01ba9d2d2a04fb6bd253864446864736f6c634300060c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c806327e11b521461003b5780639baf53dc14610045575b600080fd5b6100436100de565b005b6100876004803603602081101561005b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610211565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156100ca5780820151818401526020810190506100af565b505050509050019250505060405180910390f35b6000336040516100ed906102dd565b808273ffffffffffffffffffffffffffffffffffffffff168152602001915050604051809103906000f080158015610129573d6000803e3d6000fd5b5090506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f3aaa159995532a09d71082a9df6247e5c5846856e24e293fd65e164ed48233f460405160405180910390a250565b60606000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156102d157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610287575b50505050509050919050565b610ff7806102eb8339019056fe608060405234801561001057600080fd5b50604051610ff7380380610ff78339818101604052602081101561003357600080fd5b8101908080519060200190929190505050600061005461010760201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506101018161010f60201b60201c565b50610320565b600033905090565b61011d61010760201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146101dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610263576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180610fd16026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610ca28061032f6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638d21c7701161005b5780638d21c770146101ed5780638da5cb5b146102a5578063f2fde38b146102d9578063f9902bb11461031d57610088565b80633af32abf1461008d5780635ae698ff146100e7578063715018a61461019f578063747b8050146101a9575b600080fd5b6100cf600480360360208110156100a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610361565b60405180821515815260200191505060405180910390f35b61019d600480360360208110156100fd57600080fd5b810190808035906020019064010000000081111561011a57600080fd5b82018360208201111561012c57600080fd5b8035906020019184602083028401116401000000008311171561014e57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192905050506103b7565b005b6101a76104b8565b005b6101eb600480360360208110156101bf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061063e565b005b6102a36004803603602081101561020357600080fd5b810190808035906020019064010000000081111561022057600080fd5b82018360208201111561023257600080fd5b8035906020019184602083028401116401000000008311171561025457600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192905050506107a3565b005b6102ad6108a4565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61031b600480360360208110156102ef57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108cd565b005b61035f6004803603602081101561033357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ad8565b005b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6103bf610c3e565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461047f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60005b81518110156104b4576104a782828151811061049a57fe5b602002602001015161063e565b8080600101915050610482565b5050565b6104c0610c3e565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610580576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610646610c3e565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610706576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f3ebdc59c5154f681813582b63e04d503c44f515f80fa2d558d663f4e3fdf508a60405160405180910390a250565b6107ab610c3e565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461086b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60005b81518110156108a05761089382828151811061088657fe5b6020026020010151610ad8565b808060010191505061086e565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6108d5610c3e565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610995576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180610c476026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610ae0610c3e565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610ba0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fe285bb51ee9ef78b36fb9eca52aede9c9f4234d2bb72917200f87005edb25a5560405160405180910390a250565b60003390509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220e8bcac6084a1bc1627ec5babca50885a6730cfa967f4823d195cfbc6236f527964736f6c634300060c00334f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a26469706673582212203b748eb4a7283437cdaaea500092b96d2556e01ba9d2d2a04fb6bd253864446864736f6c634300060c0033",
  "immutableReferences": {},
  "sourceMap": "239:939:7:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "239:939:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;655:195;;;:::i;:::-;;1048:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;655:195;699:19;735:10;721:25;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;699:47;;756:16;:28;773:10;756:28;;;;;;;;;;;;;;;790:9;756:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;833:9;816:27;;;;;;;;;;;;655:195;:::o;1048:127::-;1107:18;1144:16;:23;1161:5;1144:23;;;;;;;;;;;;;;;1137:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1048:127;;;:::o;-1:-1:-1:-;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\nimport \"./Whitelist/Whitelist.sol\";\n\n/**\n * @title WhitelistRegistry\n * @dev WhitelistRegistry is a contract for handling creation of whitelists\n * and querying those whitelists\n */\ncontract WhitelistRegistry {\n\n    // Mapping that stores the whitelists owned by a user\n    mapping(address => Whitelist[]) private userToWhitelists;\n\n    /**\n     * @dev event for whitelist creation logging\n     * @param whitelist the address of the created whitelist contract\n     */\n    event WhitelistCreated(Whitelist indexed whitelist);\n\n    /**\n     * @dev public function for creating whitelists\n     */\n    function createWhitelist() public {\n        Whitelist whitelist = new Whitelist(msg.sender);\n        userToWhitelists[msg.sender].push(whitelist);\n\n        emit WhitelistCreated(whitelist);\n    }\n\n    /**\n     * @dev public view function that returns the whitelists that are owned by\n     * the given user\n     * @param _user Address of the user for which to return the whitelists\n     */\n    function userWhitelists(address _user) public view returns(Whitelist[] memory) {\n        return(userToWhitelists[_user]);\n    }\n\n}\n",
  "sourcePath": "/Users/wilhempujar/Development/stacktical-dsla-contracts/contracts/WhitelistRegistry.sol",
  "ast": {
    "absolutePath": "/Users/wilhempujar/Development/stacktical-dsla-contracts/contracts/WhitelistRegistry.sol",
    "exportedSymbols": {
      "WhitelistRegistry": [
        1883
      ]
    },
    "id": 1884,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1830,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:7"
      },
      {
        "absolutePath": "/Users/wilhempujar/Development/stacktical-dsla-contracts/contracts/Whitelist/Whitelist.sol",
        "file": "./Whitelist/Whitelist.sol",
        "id": 1831,
        "nodeType": "ImportDirective",
        "scope": 1884,
        "sourceUnit": 1829,
        "src": "57:35:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          1828
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1832,
          "nodeType": "StructuredDocumentation",
          "src": "94:144:7",
          "text": " @title WhitelistRegistry\n @dev WhitelistRegistry is a contract for handling creation of whitelists\n and querying those whitelists"
        },
        "fullyImplemented": true,
        "id": 1883,
        "linearizedBaseContracts": [
          1883
        ],
        "name": "WhitelistRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1837,
            "mutability": "mutable",
            "name": "userToWhitelists",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1883,
            "src": "331:56:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Whitelist_$1828_$dyn_storage_$",
              "typeString": "mapping(address => contract Whitelist[])"
            },
            "typeName": {
              "id": 1836,
              "keyType": {
                "id": 1833,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "339:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "331:31:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Whitelist_$1828_$dyn_storage_$",
                "typeString": "mapping(address => contract Whitelist[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 1834,
                  "name": "Whitelist",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1828,
                  "src": "350:9:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Whitelist_$1828",
                    "typeString": "contract Whitelist"
                  }
                },
                "id": 1835,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "350:11:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_contract$_Whitelist_$1828_$dyn_storage_ptr",
                  "typeString": "contract Whitelist[]"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1838,
              "nodeType": "StructuredDocumentation",
              "src": "394:130:7",
              "text": " @dev event for whitelist creation logging\n @param whitelist the address of the created whitelist contract"
            },
            "id": 1842,
            "name": "WhitelistCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1841,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1840,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "whitelist",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1842,
                  "src": "552:27:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Whitelist_$1828",
                    "typeString": "contract Whitelist"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1839,
                    "name": "Whitelist",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1828,
                    "src": "552:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Whitelist_$1828",
                      "typeString": "contract Whitelist"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "551:29:7"
            },
            "src": "529:52:7"
          },
          {
            "body": {
              "id": 1866,
              "nodeType": "Block",
              "src": "689:161:7",
              "statements": [
                {
                  "assignments": [
                    1847
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1847,
                      "mutability": "mutable",
                      "name": "whitelist",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1866,
                      "src": "699:19:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Whitelist_$1828",
                        "typeString": "contract Whitelist"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1846,
                        "name": "Whitelist",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1828,
                        "src": "699:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Whitelist_$1828",
                          "typeString": "contract Whitelist"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1853,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1850,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "735:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "735:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1849,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "721:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_Whitelist_$1828_$",
                        "typeString": "function (address) returns (contract Whitelist)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1848,
                        "name": "Whitelist",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1828,
                        "src": "725:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Whitelist_$1828",
                          "typeString": "contract Whitelist"
                        }
                      }
                    },
                    "id": 1852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "721:25:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Whitelist_$1828",
                      "typeString": "contract Whitelist"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "699:47:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1859,
                        "name": "whitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1847,
                        "src": "790:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Whitelist_$1828",
                          "typeString": "contract Whitelist"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Whitelist_$1828",
                          "typeString": "contract Whitelist"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1854,
                          "name": "userToWhitelists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1837,
                          "src": "756:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Whitelist_$1828_$dyn_storage_$",
                            "typeString": "mapping(address => contract Whitelist[] storage ref)"
                          }
                        },
                        "id": 1857,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1855,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "773:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "773:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "756:28:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Whitelist_$1828_$dyn_storage",
                          "typeString": "contract Whitelist[] storage ref"
                        }
                      },
                      "id": 1858,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "756:33:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_contract$_Whitelist_$1828_$returns$__$",
                        "typeString": "function (contract Whitelist)"
                      }
                    },
                    "id": 1860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "756:44:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1861,
                  "nodeType": "ExpressionStatement",
                  "src": "756:44:7"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1863,
                        "name": "whitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1847,
                        "src": "833:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Whitelist_$1828",
                          "typeString": "contract Whitelist"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Whitelist_$1828",
                          "typeString": "contract Whitelist"
                        }
                      ],
                      "id": 1862,
                      "name": "WhitelistCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1842,
                      "src": "816:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_Whitelist_$1828_$returns$__$",
                        "typeString": "function (contract Whitelist)"
                      }
                    },
                    "id": 1864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "816:27:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1865,
                  "nodeType": "EmitStatement",
                  "src": "811:32:7"
                }
              ]
            },
            "documentation": {
              "id": 1843,
              "nodeType": "StructuredDocumentation",
              "src": "587:63:7",
              "text": " @dev public function for creating whitelists"
            },
            "functionSelector": "27e11b52",
            "id": 1867,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createWhitelist",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1844,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "679:2:7"
            },
            "returnParameters": {
              "id": 1845,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "689:0:7"
            },
            "scope": 1883,
            "src": "655:195:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1881,
              "nodeType": "Block",
              "src": "1127:48:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1876,
                          "name": "userToWhitelists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1837,
                          "src": "1144:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Whitelist_$1828_$dyn_storage_$",
                            "typeString": "mapping(address => contract Whitelist[] storage ref)"
                          }
                        },
                        "id": 1878,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1877,
                          "name": "_user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1870,
                          "src": "1161:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1144:23:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Whitelist_$1828_$dyn_storage",
                          "typeString": "contract Whitelist[] storage ref"
                        }
                      }
                    ],
                    "id": 1879,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1143:25:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_Whitelist_$1828_$dyn_storage",
                      "typeString": "contract Whitelist[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1875,
                  "id": 1880,
                  "nodeType": "Return",
                  "src": "1137:31:7"
                }
              ]
            },
            "documentation": {
              "id": 1868,
              "nodeType": "StructuredDocumentation",
              "src": "856:187:7",
              "text": " @dev public view function that returns the whitelists that are owned by\n the given user\n @param _user Address of the user for which to return the whitelists"
            },
            "functionSelector": "9baf53dc",
            "id": 1882,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "userWhitelists",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1871,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1870,
                  "mutability": "mutable",
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1882,
                  "src": "1072:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1869,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1072:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1071:15:7"
            },
            "returnParameters": {
              "id": 1875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1874,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1882,
                  "src": "1107:18:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_Whitelist_$1828_$dyn_memory_ptr",
                    "typeString": "contract Whitelist[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 1872,
                      "name": "Whitelist",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 1828,
                      "src": "1107:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Whitelist_$1828",
                        "typeString": "contract Whitelist"
                      }
                    },
                    "id": 1873,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1107:11:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_Whitelist_$1828_$dyn_storage_ptr",
                      "typeString": "contract Whitelist[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1106:20:7"
            },
            "scope": 1883,
            "src": "1048:127:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1884,
        "src": "239:939:7"
      }
    ],
    "src": "32:1147:7"
  },
  "legacyAST": {
    "absolutePath": "/Users/wilhempujar/Development/stacktical-dsla-contracts/contracts/WhitelistRegistry.sol",
    "exportedSymbols": {
      "WhitelistRegistry": [
        1883
      ]
    },
    "id": 1884,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1830,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:7"
      },
      {
        "absolutePath": "/Users/wilhempujar/Development/stacktical-dsla-contracts/contracts/Whitelist/Whitelist.sol",
        "file": "./Whitelist/Whitelist.sol",
        "id": 1831,
        "nodeType": "ImportDirective",
        "scope": 1884,
        "sourceUnit": 1829,
        "src": "57:35:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          1828
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1832,
          "nodeType": "StructuredDocumentation",
          "src": "94:144:7",
          "text": " @title WhitelistRegistry\n @dev WhitelistRegistry is a contract for handling creation of whitelists\n and querying those whitelists"
        },
        "fullyImplemented": true,
        "id": 1883,
        "linearizedBaseContracts": [
          1883
        ],
        "name": "WhitelistRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1837,
            "mutability": "mutable",
            "name": "userToWhitelists",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1883,
            "src": "331:56:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Whitelist_$1828_$dyn_storage_$",
              "typeString": "mapping(address => contract Whitelist[])"
            },
            "typeName": {
              "id": 1836,
              "keyType": {
                "id": 1833,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "339:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "331:31:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Whitelist_$1828_$dyn_storage_$",
                "typeString": "mapping(address => contract Whitelist[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 1834,
                  "name": "Whitelist",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1828,
                  "src": "350:9:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Whitelist_$1828",
                    "typeString": "contract Whitelist"
                  }
                },
                "id": 1835,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "350:11:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_contract$_Whitelist_$1828_$dyn_storage_ptr",
                  "typeString": "contract Whitelist[]"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1838,
              "nodeType": "StructuredDocumentation",
              "src": "394:130:7",
              "text": " @dev event for whitelist creation logging\n @param whitelist the address of the created whitelist contract"
            },
            "id": 1842,
            "name": "WhitelistCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1841,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1840,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "whitelist",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1842,
                  "src": "552:27:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Whitelist_$1828",
                    "typeString": "contract Whitelist"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1839,
                    "name": "Whitelist",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1828,
                    "src": "552:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Whitelist_$1828",
                      "typeString": "contract Whitelist"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "551:29:7"
            },
            "src": "529:52:7"
          },
          {
            "body": {
              "id": 1866,
              "nodeType": "Block",
              "src": "689:161:7",
              "statements": [
                {
                  "assignments": [
                    1847
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1847,
                      "mutability": "mutable",
                      "name": "whitelist",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1866,
                      "src": "699:19:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Whitelist_$1828",
                        "typeString": "contract Whitelist"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1846,
                        "name": "Whitelist",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1828,
                        "src": "699:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Whitelist_$1828",
                          "typeString": "contract Whitelist"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1853,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1850,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "735:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "735:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1849,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "721:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_Whitelist_$1828_$",
                        "typeString": "function (address) returns (contract Whitelist)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1848,
                        "name": "Whitelist",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1828,
                        "src": "725:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Whitelist_$1828",
                          "typeString": "contract Whitelist"
                        }
                      }
                    },
                    "id": 1852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "721:25:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Whitelist_$1828",
                      "typeString": "contract Whitelist"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "699:47:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1859,
                        "name": "whitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1847,
                        "src": "790:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Whitelist_$1828",
                          "typeString": "contract Whitelist"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Whitelist_$1828",
                          "typeString": "contract Whitelist"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1854,
                          "name": "userToWhitelists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1837,
                          "src": "756:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Whitelist_$1828_$dyn_storage_$",
                            "typeString": "mapping(address => contract Whitelist[] storage ref)"
                          }
                        },
                        "id": 1857,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1855,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "773:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "773:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "756:28:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Whitelist_$1828_$dyn_storage",
                          "typeString": "contract Whitelist[] storage ref"
                        }
                      },
                      "id": 1858,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "756:33:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_contract$_Whitelist_$1828_$returns$__$",
                        "typeString": "function (contract Whitelist)"
                      }
                    },
                    "id": 1860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "756:44:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1861,
                  "nodeType": "ExpressionStatement",
                  "src": "756:44:7"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1863,
                        "name": "whitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1847,
                        "src": "833:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Whitelist_$1828",
                          "typeString": "contract Whitelist"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Whitelist_$1828",
                          "typeString": "contract Whitelist"
                        }
                      ],
                      "id": 1862,
                      "name": "WhitelistCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1842,
                      "src": "816:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_Whitelist_$1828_$returns$__$",
                        "typeString": "function (contract Whitelist)"
                      }
                    },
                    "id": 1864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "816:27:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1865,
                  "nodeType": "EmitStatement",
                  "src": "811:32:7"
                }
              ]
            },
            "documentation": {
              "id": 1843,
              "nodeType": "StructuredDocumentation",
              "src": "587:63:7",
              "text": " @dev public function for creating whitelists"
            },
            "functionSelector": "27e11b52",
            "id": 1867,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createWhitelist",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1844,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "679:2:7"
            },
            "returnParameters": {
              "id": 1845,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "689:0:7"
            },
            "scope": 1883,
            "src": "655:195:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1881,
              "nodeType": "Block",
              "src": "1127:48:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1876,
                          "name": "userToWhitelists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1837,
                          "src": "1144:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Whitelist_$1828_$dyn_storage_$",
                            "typeString": "mapping(address => contract Whitelist[] storage ref)"
                          }
                        },
                        "id": 1878,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1877,
                          "name": "_user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1870,
                          "src": "1161:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1144:23:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Whitelist_$1828_$dyn_storage",
                          "typeString": "contract Whitelist[] storage ref"
                        }
                      }
                    ],
                    "id": 1879,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1143:25:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_Whitelist_$1828_$dyn_storage",
                      "typeString": "contract Whitelist[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1875,
                  "id": 1880,
                  "nodeType": "Return",
                  "src": "1137:31:7"
                }
              ]
            },
            "documentation": {
              "id": 1868,
              "nodeType": "StructuredDocumentation",
              "src": "856:187:7",
              "text": " @dev public view function that returns the whitelists that are owned by\n the given user\n @param _user Address of the user for which to return the whitelists"
            },
            "functionSelector": "9baf53dc",
            "id": 1882,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "userWhitelists",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1871,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1870,
                  "mutability": "mutable",
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1882,
                  "src": "1072:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1869,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1072:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1071:15:7"
            },
            "returnParameters": {
              "id": 1875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1874,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1882,
                  "src": "1107:18:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_Whitelist_$1828_$dyn_memory_ptr",
                    "typeString": "contract Whitelist[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 1872,
                      "name": "Whitelist",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 1828,
                      "src": "1107:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Whitelist_$1828",
                        "typeString": "contract Whitelist"
                      }
                    },
                    "id": 1873,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1107:11:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_Whitelist_$1828_$dyn_storage_ptr",
                      "typeString": "contract Whitelist[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1106:20:7"
            },
            "scope": 1883,
            "src": "1048:127:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1884,
        "src": "239:939:7"
      }
    ],
    "src": "32:1147:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.5",
  "updatedAt": "2020-10-16T11:30:57.842Z",
  "devdoc": {
    "details": "WhitelistRegistry is a contract for handling creation of whitelists and querying those whitelists",
    "events": {
      "WhitelistCreated(address)": {
        "details": "event for whitelist creation logging",
        "params": {
          "whitelist": "the address of the created whitelist contract"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "createWhitelist()": {
        "details": "public function for creating whitelists"
      },
      "userWhitelists(address)": {
        "details": "public view function that returns the whitelists that are owned by the given user",
        "params": {
          "_user": "Address of the user for which to return the whitelists"
        }
      }
    },
    "title": "WhitelistRegistry",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}