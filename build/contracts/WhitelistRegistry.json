{
  "contractName": "WhitelistRegistry",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "createWhitelist",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x27e11b52"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "userWhitelists",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x9baf53dc"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50610e62806100206000396000f3fe60806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806327e11b52146100515780639baf53dc14610068575b600080fd5b34801561005d57600080fd5b5061006661010e565b005b34801561007457600080fd5b506100b76004803603602081101561008b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610213565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156100fa5780820151818401526020810190506100df565b505050509050019250505060405180910390f35b6000336101196102df565b808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604051809103906000f08015801561016b573d6000803e3d6000fd5b5090506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60606000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156102d357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610289575b50505050509050919050565b604051610b47806102f08339019056fe608060405234801561001057600080fd5b50604051602080610b478339810180604052602081101561003057600080fd5b8101908080519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36101158161011b640100000000026401000000009004565b506102a9565b610132610158640100000000026401000000009004565b151561013d57600080fd5b610155816101af640100000000026401000000009004565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156101eb57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61088f806102b86000396000f3fe608060405260043610610099576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633af32abf1461009e5780635ae698ff14610107578063715018a6146101cc578063747b8050146101e35780638d21c770146102345780638da5cb5b146102f95780638f32d59b14610350578063f2fde38b1461037f578063f9902bb1146103d0575b600080fd5b3480156100aa57600080fd5b506100ed600480360360208110156100c157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610421565b604051808215151515815260200191505060405180910390f35b34801561011357600080fd5b506101ca6004803603602081101561012a57600080fd5b810190808035906020019064010000000081111561014757600080fd5b82018360208201111561015957600080fd5b8035906020019184602083028401116401000000008311171561017b57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290505050610477565b005b3480156101d857600080fd5b506101e16104ca565b005b3480156101ef57600080fd5b506102326004803603602081101561020657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061059c565b005b34801561024057600080fd5b506102f76004803603602081101561025757600080fd5b810190808035906020019064010000000081111561027457600080fd5b82018360208201111561028657600080fd5b803590602001918460208302840111640100000000831117156102a857600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290505050610609565b005b34801561030557600080fd5b5061030e61065c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561035c57600080fd5b50610365610685565b604051808215151515815260200191505060405180910390f35b34801561038b57600080fd5b506103ce600480360360208110156103a257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106dc565b005b3480156103dc57600080fd5b5061041f600480360360208110156103f357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106fb565b005b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b61047f610685565b151561048a57600080fd5b60008090505b81518110156104c6576104b982828151811015156104aa57fe5b9060200190602002015161059c565b8080600101915050610490565b5050565b6104d2610685565b15156104dd57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6105a4610685565b15156105af57600080fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b610611610685565b151561061c57600080fd5b60008090505b81518110156106585761064b828281518110151561063c57fe5b906020019060200201516106fb565b8080600101915050610622565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6106e4610685565b15156106ef57600080fd5b6106f881610769565b50565b610703610685565b151561070e57600080fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156107a557600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fea165627a7a723058204c0509fef852cbb16c862488e55258c7b607ea7646a4b1409fc531eb555d51420029a165627a7a72305820364705f224f240624dfb2b51ea914f55997fcc87a558953f2b534af8699b575d0029",
  "deployedBytecode": "0x60806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806327e11b52146100515780639baf53dc14610068575b600080fd5b34801561005d57600080fd5b5061006661010e565b005b34801561007457600080fd5b506100b76004803603602081101561008b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610213565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156100fa5780820151818401526020810190506100df565b505050509050019250505060405180910390f35b6000336101196102df565b808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604051809103906000f08015801561016b573d6000803e3d6000fd5b5090506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60606000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156102d357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610289575b50505050509050919050565b604051610b47806102f08339019056fe608060405234801561001057600080fd5b50604051602080610b478339810180604052602081101561003057600080fd5b8101908080519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36101158161011b640100000000026401000000009004565b506102a9565b610132610158640100000000026401000000009004565b151561013d57600080fd5b610155816101af640100000000026401000000009004565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156101eb57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61088f806102b86000396000f3fe608060405260043610610099576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633af32abf1461009e5780635ae698ff14610107578063715018a6146101cc578063747b8050146101e35780638d21c770146102345780638da5cb5b146102f95780638f32d59b14610350578063f2fde38b1461037f578063f9902bb1146103d0575b600080fd5b3480156100aa57600080fd5b506100ed600480360360208110156100c157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610421565b604051808215151515815260200191505060405180910390f35b34801561011357600080fd5b506101ca6004803603602081101561012a57600080fd5b810190808035906020019064010000000081111561014757600080fd5b82018360208201111561015957600080fd5b8035906020019184602083028401116401000000008311171561017b57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290505050610477565b005b3480156101d857600080fd5b506101e16104ca565b005b3480156101ef57600080fd5b506102326004803603602081101561020657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061059c565b005b34801561024057600080fd5b506102f76004803603602081101561025757600080fd5b810190808035906020019064010000000081111561027457600080fd5b82018360208201111561028657600080fd5b803590602001918460208302840111640100000000831117156102a857600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290505050610609565b005b34801561030557600080fd5b5061030e61065c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561035c57600080fd5b50610365610685565b604051808215151515815260200191505060405180910390f35b34801561038b57600080fd5b506103ce600480360360208110156103a257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106dc565b005b3480156103dc57600080fd5b5061041f600480360360208110156103f357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106fb565b005b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b61047f610685565b151561048a57600080fd5b60008090505b81518110156104c6576104b982828151811015156104aa57fe5b9060200190602002015161059c565b8080600101915050610490565b5050565b6104d2610685565b15156104dd57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6105a4610685565b15156105af57600080fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b610611610685565b151561061c57600080fd5b60008090505b81518110156106585761064b828281518110151561063c57fe5b906020019060200201516106fb565b8080600101915050610622565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6106e4610685565b15156106ef57600080fd5b6106f881610769565b50565b610703610685565b151561070e57600080fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156107a557600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fea165627a7a723058204c0509fef852cbb16c862488e55258c7b607ea7646a4b1409fc531eb555d51420029a165627a7a72305820364705f224f240624dfb2b51ea914f55997fcc87a558953f2b534af8699b575d0029",
  "sourceMap": "62:385:8:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;62:385:8;;;;;;;",
  "deployedSourceMap": "62:385:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;159:152;;8:9:-1;5:2;;;30:1;27;20:12;5:2;159:152:8;;;;;;317:127;;8:9:-1;5:2;;;30:1;27;20:12;5:2;317:127:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;317:127:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;317:127:8;;;;;;;;;;;;;;;;;159:152;203:19;239:10;225:25;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;225:25:8;203:47;;260:16;:28;277:10;260:28;;;;;;;;;;;;;;;294:9;260:44;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;260:44:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;159:152;:::o;317:127::-;376:18;413:16;:23;430:5;413:23;;;;;;;;;;;;;;;406:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;317:127;;;:::o;62:385::-;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./Whitelist/Whitelist.sol\";\n\ncontract WhitelistRegistry {\n\n    mapping(address => Whitelist[]) private userToWhitelists;\n\n    function createWhitelist() public {\n        Whitelist whitelist = new Whitelist(msg.sender);\n        userToWhitelists[msg.sender].push(whitelist);\n    }\n\n    function userWhitelists(address _user) public view returns(Whitelist[] memory) {\n        return(userToWhitelists[_user]);\n    }\n\n}\n",
  "sourcePath": "/Users/Martin_Balk/projects/stacktical/stacktical-mvp-contracts/contracts/WhitelistRegistry.sol",
  "ast": {
    "absolutePath": "/Users/Martin_Balk/projects/stacktical/stacktical-mvp-contracts/contracts/WhitelistRegistry.sol",
    "exportedSymbols": {
      "WhitelistRegistry": [
        797
      ]
    },
    "id": 798,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 756,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "absolutePath": "/Users/Martin_Balk/projects/stacktical/stacktical-mvp-contracts/contracts/Whitelist/Whitelist.sol",
        "file": "./Whitelist/Whitelist.sol",
        "id": 757,
        "nodeType": "ImportDirective",
        "scope": 798,
        "sourceUnit": 755,
        "src": "25:35:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [
          754
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 797,
        "linearizedBaseContracts": [
          797
        ],
        "name": "WhitelistRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 762,
            "name": "userToWhitelists",
            "nodeType": "VariableDeclaration",
            "scope": 797,
            "src": "96:56:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Whitelist_$754_$dyn_storage_$",
              "typeString": "mapping(address => contract Whitelist[])"
            },
            "typeName": {
              "id": 761,
              "keyType": {
                "id": 758,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "104:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "96:31:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Whitelist_$754_$dyn_storage_$",
                "typeString": "mapping(address => contract Whitelist[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 759,
                  "name": "Whitelist",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 754,
                  "src": "115:9:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Whitelist_$754",
                    "typeString": "contract Whitelist"
                  }
                },
                "id": 760,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "115:11:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_contract$_Whitelist_$754_$dyn_storage_ptr",
                  "typeString": "contract Whitelist[]"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 781,
              "nodeType": "Block",
              "src": "193:118:8",
              "statements": [
                {
                  "assignments": [
                    766
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 766,
                      "name": "whitelist",
                      "nodeType": "VariableDeclaration",
                      "scope": 781,
                      "src": "203:19:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Whitelist_$754",
                        "typeString": "contract Whitelist"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 765,
                        "name": "Whitelist",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 754,
                        "src": "203:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Whitelist_$754",
                          "typeString": "contract Whitelist"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 772,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 769,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1118,
                          "src": "239:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "239:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 768,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "225:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_Whitelist_$754_$",
                        "typeString": "function (address) returns (contract Whitelist)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 767,
                        "name": "Whitelist",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 754,
                        "src": "229:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Whitelist_$754",
                          "typeString": "contract Whitelist"
                        }
                      }
                    },
                    "id": 771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "225:25:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Whitelist_$754",
                      "typeString": "contract Whitelist"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "203:47:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 778,
                        "name": "whitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 766,
                        "src": "294:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Whitelist_$754",
                          "typeString": "contract Whitelist"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Whitelist_$754",
                          "typeString": "contract Whitelist"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 773,
                          "name": "userToWhitelists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 762,
                          "src": "260:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Whitelist_$754_$dyn_storage_$",
                            "typeString": "mapping(address => contract Whitelist[] storage ref)"
                          }
                        },
                        "id": 776,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 774,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1118,
                            "src": "277:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "277:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "260:28:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Whitelist_$754_$dyn_storage",
                          "typeString": "contract Whitelist[] storage ref"
                        }
                      },
                      "id": 777,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "260:33:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_contract$_Whitelist_$754_$returns$_t_uint256_$",
                        "typeString": "function (contract Whitelist) returns (uint256)"
                      }
                    },
                    "id": 779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "260:44:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 780,
                  "nodeType": "ExpressionStatement",
                  "src": "260:44:8"
                }
              ]
            },
            "documentation": null,
            "id": 782,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createWhitelist",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 763,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "183:2:8"
            },
            "returnParameters": {
              "id": 764,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "193:0:8"
            },
            "scope": 797,
            "src": "159:152:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 795,
              "nodeType": "Block",
              "src": "396:48:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 790,
                          "name": "userToWhitelists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 762,
                          "src": "413:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Whitelist_$754_$dyn_storage_$",
                            "typeString": "mapping(address => contract Whitelist[] storage ref)"
                          }
                        },
                        "id": 792,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 791,
                          "name": "_user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 784,
                          "src": "430:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "413:23:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Whitelist_$754_$dyn_storage",
                          "typeString": "contract Whitelist[] storage ref"
                        }
                      }
                    ],
                    "id": 793,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "412:25:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_Whitelist_$754_$dyn_storage",
                      "typeString": "contract Whitelist[] storage ref"
                    }
                  },
                  "functionReturnParameters": 789,
                  "id": 794,
                  "nodeType": "Return",
                  "src": "406:31:8"
                }
              ]
            },
            "documentation": null,
            "id": 796,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "userWhitelists",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 785,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 784,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 796,
                  "src": "341:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 783,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "341:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "340:15:8"
            },
            "returnParameters": {
              "id": 789,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 788,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 796,
                  "src": "376:18:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_Whitelist_$754_$dyn_memory_ptr",
                    "typeString": "contract Whitelist[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 786,
                      "name": "Whitelist",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 754,
                      "src": "376:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Whitelist_$754",
                        "typeString": "contract Whitelist"
                      }
                    },
                    "id": 787,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "376:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_Whitelist_$754_$dyn_storage_ptr",
                      "typeString": "contract Whitelist[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "375:20:8"
            },
            "scope": 797,
            "src": "317:127:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 798,
        "src": "62:385:8"
      }
    ],
    "src": "0:448:8"
  },
  "legacyAST": {
    "absolutePath": "/Users/Martin_Balk/projects/stacktical/stacktical-mvp-contracts/contracts/WhitelistRegistry.sol",
    "exportedSymbols": {
      "WhitelistRegistry": [
        797
      ]
    },
    "id": 798,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 756,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "absolutePath": "/Users/Martin_Balk/projects/stacktical/stacktical-mvp-contracts/contracts/Whitelist/Whitelist.sol",
        "file": "./Whitelist/Whitelist.sol",
        "id": 757,
        "nodeType": "ImportDirective",
        "scope": 798,
        "sourceUnit": 755,
        "src": "25:35:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [
          754
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 797,
        "linearizedBaseContracts": [
          797
        ],
        "name": "WhitelistRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 762,
            "name": "userToWhitelists",
            "nodeType": "VariableDeclaration",
            "scope": 797,
            "src": "96:56:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Whitelist_$754_$dyn_storage_$",
              "typeString": "mapping(address => contract Whitelist[])"
            },
            "typeName": {
              "id": 761,
              "keyType": {
                "id": 758,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "104:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "96:31:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Whitelist_$754_$dyn_storage_$",
                "typeString": "mapping(address => contract Whitelist[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 759,
                  "name": "Whitelist",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 754,
                  "src": "115:9:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Whitelist_$754",
                    "typeString": "contract Whitelist"
                  }
                },
                "id": 760,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "115:11:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_contract$_Whitelist_$754_$dyn_storage_ptr",
                  "typeString": "contract Whitelist[]"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 781,
              "nodeType": "Block",
              "src": "193:118:8",
              "statements": [
                {
                  "assignments": [
                    766
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 766,
                      "name": "whitelist",
                      "nodeType": "VariableDeclaration",
                      "scope": 781,
                      "src": "203:19:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Whitelist_$754",
                        "typeString": "contract Whitelist"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 765,
                        "name": "Whitelist",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 754,
                        "src": "203:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Whitelist_$754",
                          "typeString": "contract Whitelist"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 772,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 769,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1118,
                          "src": "239:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "239:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 768,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "225:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_Whitelist_$754_$",
                        "typeString": "function (address) returns (contract Whitelist)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 767,
                        "name": "Whitelist",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 754,
                        "src": "229:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Whitelist_$754",
                          "typeString": "contract Whitelist"
                        }
                      }
                    },
                    "id": 771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "225:25:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Whitelist_$754",
                      "typeString": "contract Whitelist"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "203:47:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 778,
                        "name": "whitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 766,
                        "src": "294:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Whitelist_$754",
                          "typeString": "contract Whitelist"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Whitelist_$754",
                          "typeString": "contract Whitelist"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 773,
                          "name": "userToWhitelists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 762,
                          "src": "260:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Whitelist_$754_$dyn_storage_$",
                            "typeString": "mapping(address => contract Whitelist[] storage ref)"
                          }
                        },
                        "id": 776,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 774,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1118,
                            "src": "277:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "277:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "260:28:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Whitelist_$754_$dyn_storage",
                          "typeString": "contract Whitelist[] storage ref"
                        }
                      },
                      "id": 777,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "260:33:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_contract$_Whitelist_$754_$returns$_t_uint256_$",
                        "typeString": "function (contract Whitelist) returns (uint256)"
                      }
                    },
                    "id": 779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "260:44:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 780,
                  "nodeType": "ExpressionStatement",
                  "src": "260:44:8"
                }
              ]
            },
            "documentation": null,
            "id": 782,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createWhitelist",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 763,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "183:2:8"
            },
            "returnParameters": {
              "id": 764,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "193:0:8"
            },
            "scope": 797,
            "src": "159:152:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 795,
              "nodeType": "Block",
              "src": "396:48:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 790,
                          "name": "userToWhitelists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 762,
                          "src": "413:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Whitelist_$754_$dyn_storage_$",
                            "typeString": "mapping(address => contract Whitelist[] storage ref)"
                          }
                        },
                        "id": 792,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 791,
                          "name": "_user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 784,
                          "src": "430:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "413:23:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Whitelist_$754_$dyn_storage",
                          "typeString": "contract Whitelist[] storage ref"
                        }
                      }
                    ],
                    "id": 793,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "412:25:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_Whitelist_$754_$dyn_storage",
                      "typeString": "contract Whitelist[] storage ref"
                    }
                  },
                  "functionReturnParameters": 789,
                  "id": 794,
                  "nodeType": "Return",
                  "src": "406:31:8"
                }
              ]
            },
            "documentation": null,
            "id": 796,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "userWhitelists",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 785,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 784,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 796,
                  "src": "341:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 783,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "341:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "340:15:8"
            },
            "returnParameters": {
              "id": 789,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 788,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 796,
                  "src": "376:18:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_Whitelist_$754_$dyn_memory_ptr",
                    "typeString": "contract Whitelist[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 786,
                      "name": "Whitelist",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 754,
                      "src": "376:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Whitelist_$754",
                        "typeString": "contract Whitelist"
                      }
                    },
                    "id": 787,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "376:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_Whitelist_$754_$dyn_storage_ptr",
                      "typeString": "contract Whitelist[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "375:20:8"
            },
            "scope": 797,
            "src": "317:127:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 798,
        "src": "62:385:8"
      }
    ],
    "src": "0:448:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {},
      "links": {},
      "address": "0xcAEd8e578F14222482C7e9d73583C77fcB825901",
      "transactionHash": "0xd97c58afd37c0a387d30369353785fefe93879110ef25b90c8374b6540389f2f"
    }
  },
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-01-16T14:00:07.175Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}