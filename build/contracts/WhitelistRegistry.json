{
  "contractName": "WhitelistRegistry",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "whitelist",
          "type": "address"
        }
      ],
      "name": "WhitelistCreated",
      "type": "event",
      "signature": "0x3aaa159995532a09d71082a9df6247e5c5846856e24e293fd65e164ed48233f4"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "createWhitelist",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x27e11b52"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "userWhitelists",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x9baf53dc"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"createWhitelist\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"userWhitelists\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"whitelist\",\"type\":\"address\"}],\"name\":\"WhitelistCreated\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"WhitelistRegistry is a contract for handling creation of whitelists and querying those whitelists\",\"methods\":{\"createWhitelist()\":{\"details\":\"public function for creating whitelists\"},\"userWhitelists(address)\":{\"details\":\"public view function that returns the whitelists that are owned by the given user\",\"params\":{\"_user\":\"Address of the user for which to return the whitelists\"}}},\"title\":\"WhitelistRegistry\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/Martin_Balk/projects/stacktical/stacktical-mvp-contracts/contracts/WhitelistRegistry.sol\":\"WhitelistRegistry\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/Martin_Balk/projects/stacktical/stacktical-mvp-contracts/contracts/Whitelist/Whitelist.sol\":{\"keccak256\":\"0xbcf74b9949dac1677f8eea2cd91ad233cd18f49ceec3f4f99df26e037d660e28\",\"urls\":[\"bzzr://53c48cdcdb905fac8687b4fafbc43f1aeaace7bd9e0cd907251377647dd24291\"]},\"/Users/Martin_Balk/projects/stacktical/stacktical-mvp-contracts/contracts/WhitelistRegistry.sol\":{\"keccak256\":\"0x0e50151e7d9425dfbcf279583966dc9538d079787b4cf280da754d7ebfe235aa\",\"urls\":[\"bzzr://b59ed00efa0f6ed4d26d988529fab2378c7dbefeb336b87d8df9e4886c551461\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x980de387a1a020a498f53d00f89fecebb12c949a17e8f160093c0303ede2b786\",\"urls\":[\"bzzr://08894efa2a557982070beda6a81a032407e70532d24bdafe80d39660c74904d9\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610ea1806100206000396000f3fe608060405234801561001057600080fd5b5060043610610053576000357c01000000000000000000000000000000000000000000000000000000009004806327e11b52146100585780639baf53dc14610062575b600080fd5b6100606100fb565b005b6100a46004803603602081101561007857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610247565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156100e75780820151818401526020810190506100cc565b505050509050019250505060405180910390f35b60003360405161010a90610313565b808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604051809103906000f08015801561015c573d6000803e3d6000fd5b5090506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550508073ffffffffffffffffffffffffffffffffffffffff167f3aaa159995532a09d71082a9df6247e5c5846856e24e293fd65e164ed48233f460405160405180910390a250565b60606000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561030757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116102bd575b50505050509050919050565b610b55806103218339019056fe608060405234801561001057600080fd5b50604051602080610b558339810180604052602081101561003057600080fd5b8101908080519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36101158161011b640100000000026401000000009004565b506102a5565b610132610156640100000000026401000000009004565b61013b57600080fd5b610153816101ad640100000000026401000000009004565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156101e757600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6108a1806102b46000396000f3fe608060405234801561001057600080fd5b50600436106100b0576000357c0100000000000000000000000000000000000000000000000000000000900480638d21c770116100835780638d21c770146102175780638da5cb5b146102cf5780638f32d59b14610319578063f2fde38b1461033b578063f9902bb11461037f576100b0565b80633af32abf146100b55780635ae698ff14610111578063715018a6146101c9578063747b8050146101d3575b600080fd5b6100f7600480360360208110156100cb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103c3565b604051808215151515815260200191505060405180910390f35b6101c76004803603602081101561012757600080fd5b810190808035906020019064010000000081111561014457600080fd5b82018360208201111561015657600080fd5b8035906020019184602083028401116401000000008311171561017857600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290505050610419565b005b6101d1610466565b005b610215600480360360208110156101e957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610536565b005b6102cd6004803603602081101561022d57600080fd5b810190808035906020019064010000000081111561024a57600080fd5b82018360208201111561025c57600080fd5b8035906020019184602083028401116401000000008311171561027e57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192905050506105e4565b005b6102d7610631565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61032161065a565b604051808215151515815260200191505060405180910390f35b61037d6004803603602081101561035157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106b1565b005b6103c16004803603602081101561039557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106ce565b005b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b61042161065a565b61042a57600080fd5b60008090505b81518110156104625761045582828151811061044857fe5b6020026020010151610536565b8080600101915050610430565b5050565b61046e61065a565b61047757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b61053e61065a565b61054757600080fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f3ebdc59c5154f681813582b63e04d503c44f515f80fa2d558d663f4e3fdf508a60405160405180910390a250565b6105ec61065a565b6105f557600080fd5b60008090505b815181101561062d5761062082828151811061061357fe5b60200260200101516106ce565b80806001019150506105fb565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6106b961065a565b6106c257600080fd5b6106cb8161077d565b50565b6106d661065a565b6106df57600080fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fe285bb51ee9ef78b36fb9eca52aede9c9f4234d2bb72917200f87005edb25a5560405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156107b757600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fea165627a7a72305820f863ca5b5f3563f00833ead729ddd3b99a0f7bf7fcf32e45985cb34c137ff7120029a165627a7a7230582068992e28184cde3e90960d72acf4da8c345cc47a0c72dc79bf577a0d071053980029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b5060043610610053576000357c01000000000000000000000000000000000000000000000000000000009004806327e11b52146100585780639baf53dc14610062575b600080fd5b6100606100fb565b005b6100a46004803603602081101561007857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610247565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156100e75780820151818401526020810190506100cc565b505050509050019250505060405180910390f35b60003360405161010a90610313565b808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604051809103906000f08015801561015c573d6000803e3d6000fd5b5090506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550508073ffffffffffffffffffffffffffffffffffffffff167f3aaa159995532a09d71082a9df6247e5c5846856e24e293fd65e164ed48233f460405160405180910390a250565b60606000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561030757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116102bd575b50505050509050919050565b610b55806103218339019056fe608060405234801561001057600080fd5b50604051602080610b558339810180604052602081101561003057600080fd5b8101908080519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36101158161011b640100000000026401000000009004565b506102a5565b610132610156640100000000026401000000009004565b61013b57600080fd5b610153816101ad640100000000026401000000009004565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156101e757600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6108a1806102b46000396000f3fe608060405234801561001057600080fd5b50600436106100b0576000357c0100000000000000000000000000000000000000000000000000000000900480638d21c770116100835780638d21c770146102175780638da5cb5b146102cf5780638f32d59b14610319578063f2fde38b1461033b578063f9902bb11461037f576100b0565b80633af32abf146100b55780635ae698ff14610111578063715018a6146101c9578063747b8050146101d3575b600080fd5b6100f7600480360360208110156100cb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103c3565b604051808215151515815260200191505060405180910390f35b6101c76004803603602081101561012757600080fd5b810190808035906020019064010000000081111561014457600080fd5b82018360208201111561015657600080fd5b8035906020019184602083028401116401000000008311171561017857600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290505050610419565b005b6101d1610466565b005b610215600480360360208110156101e957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610536565b005b6102cd6004803603602081101561022d57600080fd5b810190808035906020019064010000000081111561024a57600080fd5b82018360208201111561025c57600080fd5b8035906020019184602083028401116401000000008311171561027e57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192905050506105e4565b005b6102d7610631565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61032161065a565b604051808215151515815260200191505060405180910390f35b61037d6004803603602081101561035157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106b1565b005b6103c16004803603602081101561039557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106ce565b005b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b61042161065a565b61042a57600080fd5b60008090505b81518110156104625761045582828151811061044857fe5b6020026020010151610536565b8080600101915050610430565b5050565b61046e61065a565b61047757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b61053e61065a565b61054757600080fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f3ebdc59c5154f681813582b63e04d503c44f515f80fa2d558d663f4e3fdf508a60405160405180910390a250565b6105ec61065a565b6105f557600080fd5b60008090505b815181101561062d5761062082828151811061061357fe5b60200260200101516106ce565b80806001019150506105fb565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6106b961065a565b6106c257600080fd5b6106cb8161077d565b50565b6106d661065a565b6106df57600080fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fe285bb51ee9ef78b36fb9eca52aede9c9f4234d2bb72917200f87005edb25a5560405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156107b757600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fea165627a7a72305820f863ca5b5f3563f00833ead729ddd3b99a0f7bf7fcf32e45985cb34c137ff7120029a165627a7a7230582068992e28184cde3e90960d72acf4da8c345cc47a0c72dc79bf577a0d071053980029",
  "sourceMap": "206:939:8:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;206:939:8;;;;;;;",
  "deployedSourceMap": "206:939:8:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;206:939:8;;;;;;;;;;;;;;;;;;;;;;;;;622:195;;;:::i;:::-;;1015:127;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1015:127:8;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1015:127:8;;;;;;;;;;;;;;;;;622:195;666:19;702:10;688:25;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;688:25:8;666:47;;723:16;:28;740:10;723:28;;;;;;;;;;;;;;;757:9;723:44;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;723:44:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;800:9;783:27;;;;;;;;;;;;622:195;:::o;1015:127::-;1074:18;1111:16;:23;1128:5;1111:23;;;;;;;;;;;;;;;1104:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1015:127;;;:::o;206:939::-;;;;;;;;:::o",
  "source": "pragma solidity 0.5.7;\n\nimport \"./Whitelist/Whitelist.sol\";\n\n/**\n * @title WhitelistRegistry\n * @dev WhitelistRegistry is a contract for handling creation of whitelists\n * and querying those whitelists\n */\ncontract WhitelistRegistry {\n\n    // Mapping that stores the whitelists owned by a user\n    mapping(address => Whitelist[]) private userToWhitelists;\n\n    /**\n     * @dev event for whitelist creation logging\n     * @param whitelist the address of the created whitelist contract\n     */\n    event WhitelistCreated(Whitelist indexed whitelist);\n\n    /**\n     * @dev public function for creating whitelists\n     */\n    function createWhitelist() public {\n        Whitelist whitelist = new Whitelist(msg.sender);\n        userToWhitelists[msg.sender].push(whitelist);\n\n        emit WhitelistCreated(whitelist);\n    }\n\n    /**\n     * @dev public view function that returns the whitelists that are owned by\n     * the given user\n     * @param _user Address of the user for which to return the whitelists\n     */\n    function userWhitelists(address _user) public view returns(Whitelist[] memory) {\n        return(userToWhitelists[_user]);\n    }\n\n}\n",
  "sourcePath": "/Users/Martin_Balk/projects/stacktical/stacktical-mvp-contracts/contracts/WhitelistRegistry.sol",
  "ast": {
    "absolutePath": "/Users/Martin_Balk/projects/stacktical/stacktical-mvp-contracts/contracts/WhitelistRegistry.sol",
    "exportedSymbols": {
      "WhitelistRegistry": [
        1450
      ]
    },
    "id": 1451,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1401,
        "literals": [
          "solidity",
          "0.5",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:8"
      },
      {
        "absolutePath": "/Users/Martin_Balk/projects/stacktical/stacktical-mvp-contracts/contracts/Whitelist/Whitelist.sol",
        "file": "./Whitelist/Whitelist.sol",
        "id": 1402,
        "nodeType": "ImportDirective",
        "scope": 1451,
        "sourceUnit": 1400,
        "src": "24:35:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [
          1399
        ],
        "contractKind": "contract",
        "documentation": "@title WhitelistRegistry\n@dev WhitelistRegistry is a contract for handling creation of whitelists\nand querying those whitelists",
        "fullyImplemented": true,
        "id": 1450,
        "linearizedBaseContracts": [
          1450
        ],
        "name": "WhitelistRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1407,
            "name": "userToWhitelists",
            "nodeType": "VariableDeclaration",
            "scope": 1450,
            "src": "298:56:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Whitelist_$1399_$dyn_storage_$",
              "typeString": "mapping(address => contract Whitelist[])"
            },
            "typeName": {
              "id": 1406,
              "keyType": {
                "id": 1403,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "306:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "298:31:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Whitelist_$1399_$dyn_storage_$",
                "typeString": "mapping(address => contract Whitelist[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 1404,
                  "name": "Whitelist",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1399,
                  "src": "317:9:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Whitelist_$1399",
                    "typeString": "contract Whitelist"
                  }
                },
                "id": 1405,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "317:11:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_contract$_Whitelist_$1399_$dyn_storage_ptr",
                  "typeString": "contract Whitelist[]"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": "@dev event for whitelist creation logging\n@param whitelist the address of the created whitelist contract",
            "id": 1411,
            "name": "WhitelistCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1410,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1409,
                  "indexed": true,
                  "name": "whitelist",
                  "nodeType": "VariableDeclaration",
                  "scope": 1411,
                  "src": "519:27:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Whitelist_$1399",
                    "typeString": "contract Whitelist"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1408,
                    "name": "Whitelist",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1399,
                    "src": "519:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Whitelist_$1399",
                      "typeString": "contract Whitelist"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "518:29:8"
            },
            "src": "496:52:8"
          },
          {
            "body": {
              "id": 1434,
              "nodeType": "Block",
              "src": "656:161:8",
              "statements": [
                {
                  "assignments": [
                    1415
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1415,
                      "name": "whitelist",
                      "nodeType": "VariableDeclaration",
                      "scope": 1434,
                      "src": "666:19:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Whitelist_$1399",
                        "typeString": "contract Whitelist"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1414,
                        "name": "Whitelist",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1399,
                        "src": "666:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Whitelist_$1399",
                          "typeString": "contract Whitelist"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1421,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1418,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1771,
                          "src": "702:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "702:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "688:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_Whitelist_$1399_$",
                        "typeString": "function (address) returns (contract Whitelist)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1416,
                        "name": "Whitelist",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1399,
                        "src": "692:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Whitelist_$1399",
                          "typeString": "contract Whitelist"
                        }
                      }
                    },
                    "id": 1420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "688:25:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Whitelist_$1399",
                      "typeString": "contract Whitelist"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "666:47:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1427,
                        "name": "whitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1415,
                        "src": "757:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Whitelist_$1399",
                          "typeString": "contract Whitelist"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Whitelist_$1399",
                          "typeString": "contract Whitelist"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1422,
                          "name": "userToWhitelists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1407,
                          "src": "723:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Whitelist_$1399_$dyn_storage_$",
                            "typeString": "mapping(address => contract Whitelist[] storage ref)"
                          }
                        },
                        "id": 1425,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1423,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1771,
                            "src": "740:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "740:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "723:28:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Whitelist_$1399_$dyn_storage",
                          "typeString": "contract Whitelist[] storage ref"
                        }
                      },
                      "id": 1426,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "723:33:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_contract$_Whitelist_$1399_$returns$_t_uint256_$",
                        "typeString": "function (contract Whitelist) returns (uint256)"
                      }
                    },
                    "id": 1428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "723:44:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1429,
                  "nodeType": "ExpressionStatement",
                  "src": "723:44:8"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1431,
                        "name": "whitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1415,
                        "src": "800:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Whitelist_$1399",
                          "typeString": "contract Whitelist"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Whitelist_$1399",
                          "typeString": "contract Whitelist"
                        }
                      ],
                      "id": 1430,
                      "name": "WhitelistCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1411,
                      "src": "783:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_Whitelist_$1399_$returns$__$",
                        "typeString": "function (contract Whitelist)"
                      }
                    },
                    "id": 1432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "783:27:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1433,
                  "nodeType": "EmitStatement",
                  "src": "778:32:8"
                }
              ]
            },
            "documentation": "@dev public function for creating whitelists",
            "id": 1435,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createWhitelist",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1412,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "646:2:8"
            },
            "returnParameters": {
              "id": 1413,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "656:0:8"
            },
            "scope": 1450,
            "src": "622:195:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1448,
              "nodeType": "Block",
              "src": "1094:48:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1443,
                          "name": "userToWhitelists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1407,
                          "src": "1111:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Whitelist_$1399_$dyn_storage_$",
                            "typeString": "mapping(address => contract Whitelist[] storage ref)"
                          }
                        },
                        "id": 1445,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1444,
                          "name": "_user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1437,
                          "src": "1128:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1111:23:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Whitelist_$1399_$dyn_storage",
                          "typeString": "contract Whitelist[] storage ref"
                        }
                      }
                    ],
                    "id": 1446,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1110:25:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_Whitelist_$1399_$dyn_storage",
                      "typeString": "contract Whitelist[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1442,
                  "id": 1447,
                  "nodeType": "Return",
                  "src": "1104:31:8"
                }
              ]
            },
            "documentation": "@dev public view function that returns the whitelists that are owned by\nthe given user\n@param _user Address of the user for which to return the whitelists",
            "id": 1449,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "userWhitelists",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1437,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 1449,
                  "src": "1039:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1436,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1039:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1038:15:8"
            },
            "returnParameters": {
              "id": 1442,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1441,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1449,
                  "src": "1074:18:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_Whitelist_$1399_$dyn_memory_ptr",
                    "typeString": "contract Whitelist[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 1439,
                      "name": "Whitelist",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 1399,
                      "src": "1074:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Whitelist_$1399",
                        "typeString": "contract Whitelist"
                      }
                    },
                    "id": 1440,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1074:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_Whitelist_$1399_$dyn_storage_ptr",
                      "typeString": "contract Whitelist[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1073:20:8"
            },
            "scope": 1450,
            "src": "1015:127:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1451,
        "src": "206:939:8"
      }
    ],
    "src": "0:1146:8"
  },
  "legacyAST": {
    "absolutePath": "/Users/Martin_Balk/projects/stacktical/stacktical-mvp-contracts/contracts/WhitelistRegistry.sol",
    "exportedSymbols": {
      "WhitelistRegistry": [
        1450
      ]
    },
    "id": 1451,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1401,
        "literals": [
          "solidity",
          "0.5",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:8"
      },
      {
        "absolutePath": "/Users/Martin_Balk/projects/stacktical/stacktical-mvp-contracts/contracts/Whitelist/Whitelist.sol",
        "file": "./Whitelist/Whitelist.sol",
        "id": 1402,
        "nodeType": "ImportDirective",
        "scope": 1451,
        "sourceUnit": 1400,
        "src": "24:35:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [
          1399
        ],
        "contractKind": "contract",
        "documentation": "@title WhitelistRegistry\n@dev WhitelistRegistry is a contract for handling creation of whitelists\nand querying those whitelists",
        "fullyImplemented": true,
        "id": 1450,
        "linearizedBaseContracts": [
          1450
        ],
        "name": "WhitelistRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1407,
            "name": "userToWhitelists",
            "nodeType": "VariableDeclaration",
            "scope": 1450,
            "src": "298:56:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Whitelist_$1399_$dyn_storage_$",
              "typeString": "mapping(address => contract Whitelist[])"
            },
            "typeName": {
              "id": 1406,
              "keyType": {
                "id": 1403,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "306:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "298:31:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Whitelist_$1399_$dyn_storage_$",
                "typeString": "mapping(address => contract Whitelist[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 1404,
                  "name": "Whitelist",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1399,
                  "src": "317:9:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Whitelist_$1399",
                    "typeString": "contract Whitelist"
                  }
                },
                "id": 1405,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "317:11:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_contract$_Whitelist_$1399_$dyn_storage_ptr",
                  "typeString": "contract Whitelist[]"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": "@dev event for whitelist creation logging\n@param whitelist the address of the created whitelist contract",
            "id": 1411,
            "name": "WhitelistCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1410,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1409,
                  "indexed": true,
                  "name": "whitelist",
                  "nodeType": "VariableDeclaration",
                  "scope": 1411,
                  "src": "519:27:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Whitelist_$1399",
                    "typeString": "contract Whitelist"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1408,
                    "name": "Whitelist",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1399,
                    "src": "519:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Whitelist_$1399",
                      "typeString": "contract Whitelist"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "518:29:8"
            },
            "src": "496:52:8"
          },
          {
            "body": {
              "id": 1434,
              "nodeType": "Block",
              "src": "656:161:8",
              "statements": [
                {
                  "assignments": [
                    1415
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1415,
                      "name": "whitelist",
                      "nodeType": "VariableDeclaration",
                      "scope": 1434,
                      "src": "666:19:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Whitelist_$1399",
                        "typeString": "contract Whitelist"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1414,
                        "name": "Whitelist",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1399,
                        "src": "666:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Whitelist_$1399",
                          "typeString": "contract Whitelist"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1421,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1418,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1771,
                          "src": "702:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "702:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "688:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_Whitelist_$1399_$",
                        "typeString": "function (address) returns (contract Whitelist)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1416,
                        "name": "Whitelist",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1399,
                        "src": "692:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Whitelist_$1399",
                          "typeString": "contract Whitelist"
                        }
                      }
                    },
                    "id": 1420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "688:25:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Whitelist_$1399",
                      "typeString": "contract Whitelist"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "666:47:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1427,
                        "name": "whitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1415,
                        "src": "757:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Whitelist_$1399",
                          "typeString": "contract Whitelist"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Whitelist_$1399",
                          "typeString": "contract Whitelist"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1422,
                          "name": "userToWhitelists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1407,
                          "src": "723:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Whitelist_$1399_$dyn_storage_$",
                            "typeString": "mapping(address => contract Whitelist[] storage ref)"
                          }
                        },
                        "id": 1425,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1423,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1771,
                            "src": "740:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "740:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "723:28:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Whitelist_$1399_$dyn_storage",
                          "typeString": "contract Whitelist[] storage ref"
                        }
                      },
                      "id": 1426,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "723:33:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_contract$_Whitelist_$1399_$returns$_t_uint256_$",
                        "typeString": "function (contract Whitelist) returns (uint256)"
                      }
                    },
                    "id": 1428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "723:44:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1429,
                  "nodeType": "ExpressionStatement",
                  "src": "723:44:8"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1431,
                        "name": "whitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1415,
                        "src": "800:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Whitelist_$1399",
                          "typeString": "contract Whitelist"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Whitelist_$1399",
                          "typeString": "contract Whitelist"
                        }
                      ],
                      "id": 1430,
                      "name": "WhitelistCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1411,
                      "src": "783:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_Whitelist_$1399_$returns$__$",
                        "typeString": "function (contract Whitelist)"
                      }
                    },
                    "id": 1432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "783:27:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1433,
                  "nodeType": "EmitStatement",
                  "src": "778:32:8"
                }
              ]
            },
            "documentation": "@dev public function for creating whitelists",
            "id": 1435,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createWhitelist",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1412,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "646:2:8"
            },
            "returnParameters": {
              "id": 1413,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "656:0:8"
            },
            "scope": 1450,
            "src": "622:195:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1448,
              "nodeType": "Block",
              "src": "1094:48:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1443,
                          "name": "userToWhitelists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1407,
                          "src": "1111:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Whitelist_$1399_$dyn_storage_$",
                            "typeString": "mapping(address => contract Whitelist[] storage ref)"
                          }
                        },
                        "id": 1445,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1444,
                          "name": "_user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1437,
                          "src": "1128:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1111:23:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Whitelist_$1399_$dyn_storage",
                          "typeString": "contract Whitelist[] storage ref"
                        }
                      }
                    ],
                    "id": 1446,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1110:25:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_Whitelist_$1399_$dyn_storage",
                      "typeString": "contract Whitelist[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1442,
                  "id": 1447,
                  "nodeType": "Return",
                  "src": "1104:31:8"
                }
              ]
            },
            "documentation": "@dev public view function that returns the whitelists that are owned by\nthe given user\n@param _user Address of the user for which to return the whitelists",
            "id": 1449,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "userWhitelists",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1437,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 1449,
                  "src": "1039:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1436,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1039:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1038:15:8"
            },
            "returnParameters": {
              "id": 1442,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1441,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1449,
                  "src": "1074:18:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_Whitelist_$1399_$dyn_memory_ptr",
                    "typeString": "contract Whitelist[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 1439,
                      "name": "Whitelist",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 1399,
                      "src": "1074:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Whitelist_$1399",
                        "typeString": "contract Whitelist"
                      }
                    },
                    "id": 1440,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1074:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_Whitelist_$1399_$dyn_storage_ptr",
                      "typeString": "contract Whitelist[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1073:20:8"
            },
            "scope": 1450,
            "src": "1015:127:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1451,
        "src": "206:939:8"
      }
    ],
    "src": "0:1146:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.7+commit.6da8b019.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {},
      "links": {},
      "address": "0x5E3b8E6f1242e3583589c4CBBD0feA9E50A4Ac4c",
      "transactionHash": "0xd5a57f4e897094af41b612d620a0607fc7818df92f02f16916d84454a279be2a"
    }
  },
  "schemaVersion": "3.0.6",
  "updatedAt": "2019-05-01T14:25:59.346Z",
  "devdoc": {
    "details": "WhitelistRegistry is a contract for handling creation of whitelists and querying those whitelists",
    "methods": {
      "createWhitelist()": {
        "details": "public function for creating whitelists"
      },
      "userWhitelists(address)": {
        "details": "public view function that returns the whitelists that are owned by the given user",
        "params": {
          "_user": "Address of the user for which to return the whitelists"
        }
      }
    },
    "title": "WhitelistRegistry"
  },
  "userdoc": {
    "methods": {}
  }
}