{
  "contractName": "bDSLAToken",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        }
      ],
      "name": "Allowed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PAUSER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        }
      ],
      "name": "setAllowedAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "address[]",
          "name": "_claimers",
          "type": "address[]"
        }
      ],
      "name": "setAllowedAmounts",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
<<<<<<< HEAD
  "metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"}],\"name\":\"Allowed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"}],\"name\":\"setAllowedAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"_claimers\",\"type\":\"address[]\"}],\"name\":\"setAllowedAmounts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"{bDSLA} token, including: *  - ability for holders to burn (destroy) their tokens - a minter role that allows for token minting (creation) - a pauser role that allows to stop all token transfers - a claim procces for DSLA owners  * This contract uses {AccessControl} to lock permissioned functions using the different roles.  * The account that deploys the contract will be granted the minter and pauser roles, as well as the default admin role, which will let it grant both minter and pauser roles to other accounts.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller.     * See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance.     * See {ERC20-_burn} and {ERC20-allowance}.     * Requirements:     * - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"claim(address)\":{\"details\":\"creates new 'bDSLA' tokens for the `_claimer`. \",\"params\":{\"_claimer\":\"address of the claimer      * Requirements:     * - the caller must have the `(MINTER_ROLE)`. - the claimer should have an allowed balance  - the claim can be done just once \"}},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}, {decimals} have  a default value of 18.     * All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}.     * To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive.     * Role bearers are not sorted in any particular way, and their ordering may change at any point.     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`.     * If `account` had not been already granted `role`, emits a {RoleGranted} event.     * Requirements:     * - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"details\":\"Creates `amount` new tokens for `to`.     * See {ERC20-_mint}.     * Requirements:     * - the caller must have the `MINTER_ROLE`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"pause()\":{\"details\":\"Pauses all token transfers.     * See {ERC20Pausable} and {Pausable-_pause}.     * Requirements:     * - the caller must have the `PAUSER_ROLE`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account.     * Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced).     * If the calling account had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`.     * If `account` had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must have ``role``'s admin role.\"},\"setAllowedAmount(uint256,address)\":{\"details\":\"allows the claim of `_amount` for `_claimer`. \",\"params\":{\"_amount\":\"uint the equivalent amount of DSLA tokens on the mainnet \",\"_claimer\":\"address of the claimer        * Requirements:     * - the caller must have the `(DEFAULT_ADMIN_ROLE)`.\"}},\"setAllowedAmounts(uint256[],address[])\":{\"details\":\"allows the claim of `_amounts` for `_claimers`. \",\"params\":{\"_amounts\":\"an array of amounts to be claimed \",\"_claimers\":\"an array of addresses of the claimers         * Requirements:     * - the caller must have the `(DEFAULT_ADMIN_ROLE)`.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"unpause()\":{\"details\":\"Unpauses all token transfers.     * See {ERC20Pausable} and {Pausable-_unpause}.     * Requirements:     * - the caller must have the `PAUSER_ROLE`.\"}}},\"userdoc\":{\"methods\":{\"claim(address)\":{\"notice\":\"the setAllowedAmounts function allows the admin to set  a claimable amounts of bDSLA for claimers.  \"},\"setAllowedAmount(uint256,address)\":{\"notice\":\"the setAllowedAmount function allows the admin to set an amount  of claimable bDSLA based on the balanceOf DSLA token of the claimer on the mainnet. \"},\"setAllowedAmounts(uint256[],address[])\":{\"notice\":\"the setAllowedAmounts function allows the admin to set  a claimable amounts of bDSLA for claimers.  \"}}}},\"settings\":{\"compilationTarget\":{\"/Users/matiasbn/Desktop/stacktical-dsla-contracts/contracts/bDSLA/bDSLAToken.sol\":\"bDSLAToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/matiasbn/Desktop/stacktical-dsla-contracts/contracts/bDSLA/bDSLAToken.sol\":{\"keccak256\":\"0xf44b2d42600badd69cfc0cc8d22dcdc20de34dcef1a6299c04070517a0d91a2e\",\"urls\":[\"bzz-raw://065a5c777fc018fcaf8a4d178cde9d6e4462e97d70a96d6c68bc4fb4c31a2da1\",\"dweb:/ipfs/QmQ21x8iwbS8HKjzpxYL1VsSUXcrrw8sXhdsRFBeQmM3H7\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x92f7900d382761c7faefeaced81c6b4f1aae909ed0551803bfe8f27101956360\",\"urls\":[\"bzz-raw://407c0864143968542e5cf5aa7556916d2cf292b201e3dadb65662e9a3aa24187\",\"dweb:/ipfs/QmSnXzYAUaGLGr7uofRbgQraTJvatbjQLBPhyYiMd18oUJ\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"@openzeppelin/contracts/presets/ERC20PresetMinterPauser.sol\":{\"keccak256\":\"0xe30213b0851987b0455057cdfb65660c05805cbb05b12c0d61b0ff7a99cc36cc\",\"urls\":[\"bzz-raw://1c61711ecc3ad53890dded63c27909a315ba3053c553be29acaa239bc6a7a0cf\",\"dweb:/ipfs/QmQjriBzSyAYQTm4NfWpnnoH8RhZrayyXm2zvpeHkxQnAk\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x91e0bd6a6762d2a1700dab0849de8422611355100576c4beef1e80d82a4104a0\",\"urls\":[\"bzz-raw://73bbd77af0a8b07255d2ffa20728bcf13b116007c9ddac5d37046cfabb0e1e02\",\"dweb:/ipfs/QmRgZgWCWCSMTTaok6o4QvWA6MgB4goS8qpb3sN7bAvaZ9\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0x657b0d90be17331364211d74359df2a734fac864f6e88c80de7626fa33090ffb\",\"urls\":[\"bzz-raw://09cca25fefa2354a424d55a97930c76b11dc50697ba62c85d7affc27a37e830c\",\"dweb:/ipfs/QmPTQBYXxQDSNmMKqwe4WnM8E7NwnpLnkFLSRH8hZRvrVK\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol\":{\"keccak256\":\"0xbab4a97af2a6810a8ffc187205dfb331284949ea5b30caa5b9052828853bb149\",\"urls\":[\"bzz-raw://f53c98e31ed415c2a6f03d99809cd4f2f5fff92a13ee85022922a09df82ee459\",\"dweb:/ipfs/QmXiv4ysuQSRfoXqPpwA1QCreEnqfkrHDGyJTmifoni7dK\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\",\"urls\":[\"bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017\",\"dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390\",\"urls\":[\"bzz-raw://774e78a9ff32792cc95db4d2ceaf3a7965bb7f0bea5e6cb7cff182b450d44b37\",\"dweb:/ipfs/QmRRMC4uj7eAcLW7chynA3sNEYULMFazdLwQHKHQPyzAbA\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xb2a11b236f073662f5a196995863f51c11d006bf7c3de158b316dfa1506c4b79\",\"urls\":[\"bzz-raw://8651649cf0b9efa18c3b01c030276fa320d41adbdc286833417e7f36e357b2f3\",\"dweb:/ipfs/QmafhM2Nd1aP43QVB1eRRZaqRXQKswNfQcWi8U8xjrxCfN\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0x5d1b1dcbc0396f44c1c8d554857f71e3187503bf1e54062bf9ec6782e21f3a08\",\"urls\":[\"bzz-raw://9aa7fa580393aab7ca3d9f606f5ab7434d51e1c0f3632a593fca82c80ef8cc4c\",\"dweb:/ipfs/QmRy84N7QfkwBM2AeR7UB5G1PPHdRLi6s1iyzAwCzevcHe\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040518060400160405280600b81526020017f6244534c4120546f6b656e0000000000000000000000000000000000000000008152506040518060400160405280600581526020017f6244534c41000000000000000000000000000000000000000000000000000000815250818181600490805190602001906200009892919062000359565b508060059080519060200190620000b192919062000359565b506012600660006101000a81548160ff021916908360ff16021790555050506000600660016101000a81548160ff0219169083151502179055506200010f6000801b62000103620001c360201b60201c565b620001cb60201b60201c565b6200016560405180807f4d494e5445525f524f4c45000000000000000000000000000000000000000000815250600b019050604051809103902062000159620001c360201b60201c565b620001cb60201b60201c565b620001bb60405180807f5041555345525f524f4c45000000000000000000000000000000000000000000815250600b0190506040518091039020620001af620001c360201b60201c565b620001cb60201b60201c565b505062000408565b600033905090565b620001dd8282620001e160201b60201c565b5050565b6200020f816000808581526020019081526020016000206000016200028460201b620029201790919060201c565b15620002805762000225620001c360201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6000620002b4836000018373ffffffffffffffffffffffffffffffffffffffff1660001b620002bc60201b60201c565b905092915050565b6000620002d083836200033660201b60201c565b6200032b57826000018290806001815401808255809150506001900390600052602060002001600090919091909150558260000180549050836001016000848152602001908152602001600020819055506001905062000330565b600090505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200039c57805160ff1916838001178555620003cd565b82800160010185558215620003cd579182015b82811115620003cc578251825591602001919060010190620003af565b5b509050620003dc9190620003e0565b5090565b6200040591905b8082111562000401576000816000905550600101620003e7565b5090565b90565b61304480620004186000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c806370a0823111610104578063a457c2d7116100a2578063d539139311610071578063d539139314610a97578063d547741f14610ab5578063dd62ed3e14610b03578063e63ab1e914610b7b576101da565b8063a457c2d71461083d578063a9059cbb146108a3578063b4986fc514610909578063ca15c87314610a55576101da565b80639010d07c116100de5780639010d07c146106be57806391d148541461073657806395d89b411461079c578063a217fddf1461081f576101da565b806370a082311461060e57806379cc6790146106665780638456cb59146106b4576101da565b8063313ce5671161017c57806340c10f191161014b57806340c10f191461052257806342966c6814610570578063522fe1331461059e5780635c975abb146105ec576101da565b8063313ce5671461044057806336568abe1461046457806339509351146104b25780633f4ba83a14610518576101da565b80631e83409a116101b85780631e83409a146102e657806323b872dd1461032a578063248a9ca3146103b05780632f2ff15d146103f2576101da565b806306fdde03146101df578063095ea7b31461026257806318160ddd146102c8575b600080fd5b6101e7610b99565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561022757808201518184015260208101905061020c565b50505050905090810190601f1680156102545780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102ae6004803603604081101561027857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c3b565b604051808215151515815260200191505060405180910390f35b6102d0610c59565b6040518082815260200191505060405180910390f35b610328600480360360208110156102fc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c63565b005b6103966004803603606081101561034057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610edd565b604051808215151515815260200191505060405180910390f35b6103dc600480360360208110156103c657600080fd5b8101908080359060200190929190505050610fb6565b6040518082815260200191505060405180910390f35b61043e6004803603604081101561040857600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fd5565b005b61044861105e565b604051808260ff1660ff16815260200191505060405180910390f35b6104b06004803603604081101561047a57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611075565b005b6104fe600480360360408110156104c857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061110e565b604051808215151515815260200191505060405180910390f35b6105206111c1565b005b61056e6004803603604081101561053857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611266565b005b61059c6004803603602081101561058657600080fd5b810190808035906020019092919050505061130f565b005b6105ea600480360360408110156105b457600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611323565b005b6105f46114bb565b604051808215151515815260200191505060405180910390f35b6106506004803603602081101561062457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114d2565b6040518082815260200191505060405180910390f35b6106b26004803603604081101561067c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061151b565b005b6106bc61157d565b005b6106f4600480360360408110156106d457600080fd5b810190808035906020019092919080359060200190929190505050611622565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6107826004803603604081101561074c57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611653565b604051808215151515815260200191505060405180910390f35b6107a4611684565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107e45780820151818401526020810190506107c9565b50505050905090810190601f1680156108115780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610827611726565b6040518082815260200191505060405180910390f35b6108896004803603604081101561085357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061172d565b604051808215151515815260200191505060405180910390f35b6108ef600480360360408110156108b957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506117fa565b604051808215151515815260200191505060405180910390f35b610a536004803603604081101561091f57600080fd5b810190808035906020019064010000000081111561093c57600080fd5b82018360208201111561094e57600080fd5b8035906020019184602083028401116401000000008311171561097057600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156109d057600080fd5b8201836020820111156109e257600080fd5b80359060200191846020830284011164010000000083111715610a0457600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290505050611818565b005b610a8160048036036020811015610a6b57600080fd5b8101908080359060200190929190505050611a35565b6040518082815260200191505060405180910390f35b610a9f611a5b565b6040518082815260200191505060405180910390f35b610b0160048036036040811015610acb57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a94565b005b610b6560048036036040811015610b1957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b1d565b6040518082815260200191505060405180910390f35b610b83611ba4565b6040518082815260200191505060405180910390f35b606060048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c315780601f10610c0657610100808354040283529160200191610c31565b820191906000526020600020905b815481529060010190602001808311610c1457829003601f168201915b5050505050905090565b6000610c4f610c48611bdd565b8484611be5565b6001905092915050565b6000600354905090565b610ca960405180807f4d494e5445525f524f4c45000000000000000000000000000000000000000000815250600b0190506040518091039020610ca4611bdd565b611653565b610cfe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180612f36602e913960400191505060405180910390fd5b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610d96576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180612d6c602f913960400191505060405180910390fd5b600860008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610e39576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612eb96022913960400191505060405180910390fd5b6001600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610eda81600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611266565b50565b6000610eea848484611ddc565b610fab84610ef6611bdd565b610fa685604051806060016040528060288152602001612df160289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610f5c611bdd565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546120a19092919063ffffffff16565b611be5565b600190509392505050565b6000806000838152602001908152602001600020600201549050919050565b610ffb60008084815260200190815260200160002060020154610ff6611bdd565b611653565b611050576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180612c92602f913960400191505060405180910390fd5b61105a8282612161565b5050565b6000600660009054906101000a900460ff16905090565b61107d611bdd565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611100576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180612fb6602f913960400191505060405180910390fd5b61110a82826121f4565b5050565b60006111b761111b611bdd565b846111b2856002600061112c611bdd565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461228790919063ffffffff16565b611be5565b6001905092915050565b61120760405180807f5041555345525f524f4c45000000000000000000000000000000000000000000815250600b0190506040518091039020611202611bdd565b611653565b61125c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526039815260200180612ce36039913960400191505060405180910390fd5b61126461230f565b565b6112ac60405180807f4d494e5445525f524f4c45000000000000000000000000000000000000000000815250600b01905060405180910390206112a7611bdd565b611653565b611301576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526036815260200180612e196036913960400191505060405180910390fd5b61130b8282612418565b5050565b61132061131a611bdd565b826125e1565b50565b6113376000801b611332611bdd565b611653565b61138c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180612f89602d913960400191505060405180910390fd5b600860008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561142f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612eb96022913960400191505060405180910390fd5b81600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508073ffffffffffffffffffffffffffffffffffffffff16827fd982c9a0e4f3e18aad52d8d036ad2c1320d034b37f7bb681c7ba61a283226d7960405160405180910390a35050565b6000600660019054906101000a900460ff16905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600061155a82604051806060016040528060248152602001612e4f6024913961154b86611546611bdd565b611b1d565b6120a19092919063ffffffff16565b905061156e83611568611bdd565b83611be5565b61157883836125e1565b505050565b6115c360405180807f5041555345525f524f4c45000000000000000000000000000000000000000000815250600b01905060405180910390206115be611bdd565b611653565b611618576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526037815260200180612eff6037913960400191505060405180910390fd5b6116206127a7565b565b600061164b826000808681526020019081526020016000206000016128b190919063ffffffff16565b905092915050565b600061167c826000808681526020019081526020016000206000016128cb90919063ffffffff16565b905092915050565b606060058054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561171c5780601f106116f15761010080835404028352916020019161171c565b820191906000526020600020905b8154815290600101906020018083116116ff57829003601f168201915b5050505050905090565b6000801b81565b60006117f061173a611bdd565b846117eb85604051806060016040528060258152602001612f646025913960026000611764611bdd565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546120a19092919063ffffffff16565b611be5565b6001905092915050565b600061180e611807611bdd565b8484611ddc565b6001905092915050565b61182c6000801b611827611bdd565b611653565b611881576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180612f89602d913960400191505060405180910390fd5b80518251146118db576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180612d3e602e913960400191505060405180910390fd5b60008090505b8251811015611a3057600860008383815181106118fa57fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16611a235782818151811061195a57fe5b60200260200101516007600084848151811061197257fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508181815181106119c457fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff168382815181106119ee57fe5b60200260200101517fd982c9a0e4f3e18aad52d8d036ad2c1320d034b37f7bb681c7ba61a283226d7960405160405180910390a35b80806001019150506118e1565b505050565b6000611a546000808481526020019081526020016000206000016128fb565b9050919050565b60405180807f4d494e5445525f524f4c45000000000000000000000000000000000000000000815250600b019050604051809103902081565b611aba60008084815260200190815260200160002060020154611ab5611bdd565b611653565b611b0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180612dc16030913960400191505060405180910390fd5b611b1982826121f4565b5050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60405180807f5041555345525f524f4c45000000000000000000000000000000000000000000815250600b019050604051809103902081565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611c6b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180612edb6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611cf1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612d1c6022913960400191505060405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611e62576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180612e946025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611ee8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180612c6f6023913960400191505060405180910390fd5b611ef3838383612910565b611f5f81604051806060016040528060268152602001612d9b60269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546120a19092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611ff481600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461228790919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600083831115829061214e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156121135780820151818401526020810190506120f8565b50505050905090810190601f1680156121405780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6121888160008085815260200190815260200160002060000161292090919063ffffffff16565b156121f057612195611bdd565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b61221b8160008085815260200190815260200160002060000161295090919063ffffffff16565b1561228357612228611bdd565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b600080828401905083811015612305576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600660019054906101000a900460ff16612391576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f5061757361626c653a206e6f742070617573656400000000000000000000000081525060200191505060405180910390fd5b6000600660016101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6123d5611bdd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156124bb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b6124c760008383612910565b6124dc8160035461228790919063ffffffff16565b60038190555061253481600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461228790919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612667576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612e736021913960400191505060405180910390fd5b61267382600083612910565b6126df81604051806060016040528060228152602001612cc160229139600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546120a19092919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506127378160035461298090919063ffffffff16565b600381905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600660019054906101000a900460ff161561282a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b6001600660016101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861286e611bdd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b60006128c083600001836129ca565b60001c905092915050565b60006128f3836000018373ffffffffffffffffffffffffffffffffffffffff1660001b612a4d565b905092915050565b600061290982600001612a70565b9050919050565b61291b838383612a81565b505050565b6000612948836000018373ffffffffffffffffffffffffffffffffffffffff1660001b612aef565b905092915050565b6000612978836000018373ffffffffffffffffffffffffffffffffffffffff1660001b612b5f565b905092915050565b60006129c283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506120a1565b905092915050565b600081836000018054905011612a2b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612c4d6022913960400191505060405180910390fd5b826000018281548110612a3a57fe5b9060005260206000200154905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600081600001805490509050919050565b612a8c838383612c47565b612a946114bb565b15612aea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180612fe5602a913960400191505060405180910390fd5b505050565b6000612afb8383612a4d565b612b54578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050612b59565b600090505b92915050565b60008083600101600084815260200190815260200160002054905060008114612c3b5760006001820390506000600186600001805490500390506000866000018281548110612baa57fe5b9060005260206000200154905080876000018481548110612bc757fe5b9060005260206000200181905550600183018760010160008381526020019081526020016000208190555086600001805480612bff57fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050612c41565b60009150505b92915050565b50505056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e647345524332303a207472616e7366657220746f20746865207a65726f2061646472657373416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e7445524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332305072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f20756e706175736545524332303a20617070726f766520746f20746865207a65726f20616464726573736244534c41546f6b656e3a206d7573742068617665207468652073616d65206e756d626572206f66206974656d736244534c41546f6b656e3a206d757374206861766520616e20616c6c6f77656420616d6f756e20746f20636c61696d45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332305072657365744d696e7465725061757365723a206d7573742068617665206d696e74657220726f6c6520746f206d696e7445524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f20616464726573736244534c41546f6b656e3a20746f6b656e7320616c726561647920636c61696d656445524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332305072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f20706175736545524332305072657365744d696e7465725061757365723a206d7573742068617665206d696e74657220726f6c6545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f45524332305072657365744d696e7465725061757365723a206d75737420686176652061646d696e20726f6c65416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c6645524332305061757361626c653a20746f6b656e207472616e73666572207768696c6520706175736564a264697066735822122006eee0150ad0489bb6df00512478953ebdbe0fabffdf626d4fa6f2865d116e6764736f6c63430006060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101da5760003560e01c806370a0823111610104578063a457c2d7116100a2578063d539139311610071578063d539139314610a97578063d547741f14610ab5578063dd62ed3e14610b03578063e63ab1e914610b7b576101da565b8063a457c2d71461083d578063a9059cbb146108a3578063b4986fc514610909578063ca15c87314610a55576101da565b80639010d07c116100de5780639010d07c146106be57806391d148541461073657806395d89b411461079c578063a217fddf1461081f576101da565b806370a082311461060e57806379cc6790146106665780638456cb59146106b4576101da565b8063313ce5671161017c57806340c10f191161014b57806340c10f191461052257806342966c6814610570578063522fe1331461059e5780635c975abb146105ec576101da565b8063313ce5671461044057806336568abe1461046457806339509351146104b25780633f4ba83a14610518576101da565b80631e83409a116101b85780631e83409a146102e657806323b872dd1461032a578063248a9ca3146103b05780632f2ff15d146103f2576101da565b806306fdde03146101df578063095ea7b31461026257806318160ddd146102c8575b600080fd5b6101e7610b99565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561022757808201518184015260208101905061020c565b50505050905090810190601f1680156102545780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102ae6004803603604081101561027857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c3b565b604051808215151515815260200191505060405180910390f35b6102d0610c59565b6040518082815260200191505060405180910390f35b610328600480360360208110156102fc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c63565b005b6103966004803603606081101561034057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610edd565b604051808215151515815260200191505060405180910390f35b6103dc600480360360208110156103c657600080fd5b8101908080359060200190929190505050610fb6565b6040518082815260200191505060405180910390f35b61043e6004803603604081101561040857600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fd5565b005b61044861105e565b604051808260ff1660ff16815260200191505060405180910390f35b6104b06004803603604081101561047a57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611075565b005b6104fe600480360360408110156104c857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061110e565b604051808215151515815260200191505060405180910390f35b6105206111c1565b005b61056e6004803603604081101561053857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611266565b005b61059c6004803603602081101561058657600080fd5b810190808035906020019092919050505061130f565b005b6105ea600480360360408110156105b457600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611323565b005b6105f46114bb565b604051808215151515815260200191505060405180910390f35b6106506004803603602081101561062457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114d2565b6040518082815260200191505060405180910390f35b6106b26004803603604081101561067c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061151b565b005b6106bc61157d565b005b6106f4600480360360408110156106d457600080fd5b810190808035906020019092919080359060200190929190505050611622565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6107826004803603604081101561074c57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611653565b604051808215151515815260200191505060405180910390f35b6107a4611684565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107e45780820151818401526020810190506107c9565b50505050905090810190601f1680156108115780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610827611726565b6040518082815260200191505060405180910390f35b6108896004803603604081101561085357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061172d565b604051808215151515815260200191505060405180910390f35b6108ef600480360360408110156108b957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506117fa565b604051808215151515815260200191505060405180910390f35b610a536004803603604081101561091f57600080fd5b810190808035906020019064010000000081111561093c57600080fd5b82018360208201111561094e57600080fd5b8035906020019184602083028401116401000000008311171561097057600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156109d057600080fd5b8201836020820111156109e257600080fd5b80359060200191846020830284011164010000000083111715610a0457600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290505050611818565b005b610a8160048036036020811015610a6b57600080fd5b8101908080359060200190929190505050611a35565b6040518082815260200191505060405180910390f35b610a9f611a5b565b6040518082815260200191505060405180910390f35b610b0160048036036040811015610acb57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a94565b005b610b6560048036036040811015610b1957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b1d565b6040518082815260200191505060405180910390f35b610b83611ba4565b6040518082815260200191505060405180910390f35b606060048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c315780601f10610c0657610100808354040283529160200191610c31565b820191906000526020600020905b815481529060010190602001808311610c1457829003601f168201915b5050505050905090565b6000610c4f610c48611bdd565b8484611be5565b6001905092915050565b6000600354905090565b610ca960405180807f4d494e5445525f524f4c45000000000000000000000000000000000000000000815250600b0190506040518091039020610ca4611bdd565b611653565b610cfe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180612f36602e913960400191505060405180910390fd5b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610d96576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180612d6c602f913960400191505060405180910390fd5b600860008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610e39576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612eb96022913960400191505060405180910390fd5b6001600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610eda81600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611266565b50565b6000610eea848484611ddc565b610fab84610ef6611bdd565b610fa685604051806060016040528060288152602001612df160289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610f5c611bdd565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546120a19092919063ffffffff16565b611be5565b600190509392505050565b6000806000838152602001908152602001600020600201549050919050565b610ffb60008084815260200190815260200160002060020154610ff6611bdd565b611653565b611050576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180612c92602f913960400191505060405180910390fd5b61105a8282612161565b5050565b6000600660009054906101000a900460ff16905090565b61107d611bdd565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611100576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180612fb6602f913960400191505060405180910390fd5b61110a82826121f4565b5050565b60006111b761111b611bdd565b846111b2856002600061112c611bdd565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461228790919063ffffffff16565b611be5565b6001905092915050565b61120760405180807f5041555345525f524f4c45000000000000000000000000000000000000000000815250600b0190506040518091039020611202611bdd565b611653565b61125c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526039815260200180612ce36039913960400191505060405180910390fd5b61126461230f565b565b6112ac60405180807f4d494e5445525f524f4c45000000000000000000000000000000000000000000815250600b01905060405180910390206112a7611bdd565b611653565b611301576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526036815260200180612e196036913960400191505060405180910390fd5b61130b8282612418565b5050565b61132061131a611bdd565b826125e1565b50565b6113376000801b611332611bdd565b611653565b61138c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180612f89602d913960400191505060405180910390fd5b600860008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561142f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612eb96022913960400191505060405180910390fd5b81600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508073ffffffffffffffffffffffffffffffffffffffff16827fd982c9a0e4f3e18aad52d8d036ad2c1320d034b37f7bb681c7ba61a283226d7960405160405180910390a35050565b6000600660019054906101000a900460ff16905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600061155a82604051806060016040528060248152602001612e4f6024913961154b86611546611bdd565b611b1d565b6120a19092919063ffffffff16565b905061156e83611568611bdd565b83611be5565b61157883836125e1565b505050565b6115c360405180807f5041555345525f524f4c45000000000000000000000000000000000000000000815250600b01905060405180910390206115be611bdd565b611653565b611618576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526037815260200180612eff6037913960400191505060405180910390fd5b6116206127a7565b565b600061164b826000808681526020019081526020016000206000016128b190919063ffffffff16565b905092915050565b600061167c826000808681526020019081526020016000206000016128cb90919063ffffffff16565b905092915050565b606060058054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561171c5780601f106116f15761010080835404028352916020019161171c565b820191906000526020600020905b8154815290600101906020018083116116ff57829003601f168201915b5050505050905090565b6000801b81565b60006117f061173a611bdd565b846117eb85604051806060016040528060258152602001612f646025913960026000611764611bdd565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546120a19092919063ffffffff16565b611be5565b6001905092915050565b600061180e611807611bdd565b8484611ddc565b6001905092915050565b61182c6000801b611827611bdd565b611653565b611881576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180612f89602d913960400191505060405180910390fd5b80518251146118db576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180612d3e602e913960400191505060405180910390fd5b60008090505b8251811015611a3057600860008383815181106118fa57fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16611a235782818151811061195a57fe5b60200260200101516007600084848151811061197257fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508181815181106119c457fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff168382815181106119ee57fe5b60200260200101517fd982c9a0e4f3e18aad52d8d036ad2c1320d034b37f7bb681c7ba61a283226d7960405160405180910390a35b80806001019150506118e1565b505050565b6000611a546000808481526020019081526020016000206000016128fb565b9050919050565b60405180807f4d494e5445525f524f4c45000000000000000000000000000000000000000000815250600b019050604051809103902081565b611aba60008084815260200190815260200160002060020154611ab5611bdd565b611653565b611b0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180612dc16030913960400191505060405180910390fd5b611b1982826121f4565b5050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60405180807f5041555345525f524f4c45000000000000000000000000000000000000000000815250600b019050604051809103902081565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611c6b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180612edb6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611cf1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612d1c6022913960400191505060405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611e62576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180612e946025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611ee8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180612c6f6023913960400191505060405180910390fd5b611ef3838383612910565b611f5f81604051806060016040528060268152602001612d9b60269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546120a19092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611ff481600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461228790919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600083831115829061214e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156121135780820151818401526020810190506120f8565b50505050905090810190601f1680156121405780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6121888160008085815260200190815260200160002060000161292090919063ffffffff16565b156121f057612195611bdd565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b61221b8160008085815260200190815260200160002060000161295090919063ffffffff16565b1561228357612228611bdd565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b600080828401905083811015612305576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600660019054906101000a900460ff16612391576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f5061757361626c653a206e6f742070617573656400000000000000000000000081525060200191505060405180910390fd5b6000600660016101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6123d5611bdd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156124bb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b6124c760008383612910565b6124dc8160035461228790919063ffffffff16565b60038190555061253481600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461228790919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612667576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612e736021913960400191505060405180910390fd5b61267382600083612910565b6126df81604051806060016040528060228152602001612cc160229139600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546120a19092919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506127378160035461298090919063ffffffff16565b600381905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600660019054906101000a900460ff161561282a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b6001600660016101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861286e611bdd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b60006128c083600001836129ca565b60001c905092915050565b60006128f3836000018373ffffffffffffffffffffffffffffffffffffffff1660001b612a4d565b905092915050565b600061290982600001612a70565b9050919050565b61291b838383612a81565b505050565b6000612948836000018373ffffffffffffffffffffffffffffffffffffffff1660001b612aef565b905092915050565b6000612978836000018373ffffffffffffffffffffffffffffffffffffffff1660001b612b5f565b905092915050565b60006129c283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506120a1565b905092915050565b600081836000018054905011612a2b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612c4d6022913960400191505060405180910390fd5b826000018281548110612a3a57fe5b9060005260206000200154905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600081600001805490509050919050565b612a8c838383612c47565b612a946114bb565b15612aea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180612fe5602a913960400191505060405180910390fd5b505050565b6000612afb8383612a4d565b612b54578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050612b59565b600090505b92915050565b60008083600101600084815260200190815260200160002054905060008114612c3b5760006001820390506000600186600001805490500390506000866000018281548110612baa57fe5b9060005260206000200154905080876000018481548110612bc757fe5b9060005260206000200181905550600183018760010160008381526020019081526020016000208190555086600001805480612bff57fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050612c41565b60009150505b92915050565b50505056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e647345524332303a207472616e7366657220746f20746865207a65726f2061646472657373416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e7445524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332305072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f20756e706175736545524332303a20617070726f766520746f20746865207a65726f20616464726573736244534c41546f6b656e3a206d7573742068617665207468652073616d65206e756d626572206f66206974656d736244534c41546f6b656e3a206d757374206861766520616e20616c6c6f77656420616d6f756e20746f20636c61696d45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332305072657365744d696e7465725061757365723a206d7573742068617665206d696e74657220726f6c6520746f206d696e7445524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f20616464726573736244534c41546f6b656e3a20746f6b656e7320616c726561647920636c61696d656445524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332305072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f20706175736545524332305072657365744d696e7465725061757365723a206d7573742068617665206d696e74657220726f6c6545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f45524332305072657365744d696e7465725061757365723a206d75737420686176652061646d696e20726f6c65416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c6645524332305061757361626c653a20746f6b656e207472616e73666572207768696c6520706175736564a264697066735822122006eee0150ad0489bb6df00512478953ebdbe0fabffdf626d4fa6f2865d116e6764736f6c63430006060033",
  "immutableReferences": {},
  "sourceMap": "714:3244:8:-:0;;;1179:76;5:9:-1;2:2;;;27:1;24;17:12;2:2;1179:76:8;1223:237:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1290:4;1296:6;2093:4:15;2085:5;:12;;;;;;;;;;;;:::i;:::-;;2117:6;2107:7;:16;;;;;;;;;;;;:::i;:::-;;2145:2;2133:9;;:14;;;;;;;;;;;;;;;;;;2013:141;;933:5:21;923:7;;:15;;;;;;;;;;;;;;;;;;1314:44:14::1;1762:4:11;1325:18:14::0;::::1;1345:12;:10;;;:12;;:::i;:::-;1314:10;;;:44;;:::i;:::-;1369:37;947:24;;;;;;;::::0;::::1;;;;;;;;;;;1393:12;:10;;;:12;;:::i;:::-;1369:10;;;:37;;:::i;:::-;1416;1015:24;;;;;;;::::0;::::1;;;;;;;;;;;1440:12;:10;;;:12;;:::i;:::-;1416:10;;;:37;;:::i;:::-;1223:237:::0;;714:3244:8;;590:104:10;643:15;677:10;670:17;;590:104;:::o;6578:110:11:-;6656:25;6667:4;6673:7;6656:10;;;:25;;:::i;:::-;6578:110;;:::o;7015:184::-;7088:33;7113:7;7088:6;:12;7095:4;7088:12;;;;;;;;;;;:20;;:24;;;;;;:33;;;;:::i;:::-;7084:109;;;7169:12;:10;;;:12;;:::i;:::-;7142:40;;7160:7;7142:40;;7154:4;7142:40;;;;;;;;;;7084:109;7015:184;;:::o;4864:141:20:-;4934:4;4957:41;4962:3;:10;;4990:5;4982:14;;4974:23;;4957:4;;;:41;;:::i;:::-;4950:48;;4864:141;;;;:::o;1611:404::-;1674:4;1695:21;1705:3;1710:5;1695:9;;;:21;;:::i;:::-;1690:319;;1732:3;:11;;1749:5;1732:23;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1732:23:20;;;;;;;;;;;;;;;;;;;1912:3;:11;;:18;;;;1890:3;:12;;:19;1903:5;1890:19;;;;;;;;;;;:40;;;;1951:4;1944:11;;;;1690:319;1993:5;1986:12;;1611:404;;;;;:::o;3776:127::-;3849:4;3895:1;3872:3;:12;;:19;3885:5;3872:19;;;;;;;;;;;;:24;;3865:31;;3776:127;;;;:::o;714:3244:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "714:3244:8:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;714:3244:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;2219:81:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2219:81:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4255:166;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;4255:166:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3262:98;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3542:414:8;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;3542:414:8;;;;;;;;;;;;;;;;;;;:::i;:::-;;4881:317:15;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;4881:317:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4272:112:11;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;4272:112:11;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4634:223;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;4634:223:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3121:81:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5808:205:11;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;5808:205:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5593:215:15;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;5593:215:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2430:175:14;;;:::i;:::-;;1649:202;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1649:202:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;481:89:16;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;481:89:16;;;;;;;;;;;;;;;;;:::i;:::-;;1755:345:8;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1755:345:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1040:76:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3418:117:15;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;3418:117:15;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;876:290:16;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;876:290:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2054:169:14;;;:::i;:::-;;3955:136:11;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;3955:136:11;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2940:137;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;2940:137:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2413:85:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2413:85:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1717:49:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6295:266:15;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;6295:266:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3738:172;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;3738:172:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2544:540:8;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;2544:540:8;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;2544:540:8;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;2544:540:8;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;2544:540:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2544:540:8;;;;;;;;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;2544:540:8;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;2544:540:8;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;2544:540:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2544:540:8;;;;;;;;;;;;;;;:::i;:::-;;3245:125:11;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;3245:125:11;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;909:62:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5091:226:11;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;5091:226:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3968:149:15;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;3968:149:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;977:62:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2219:81:15;2256:13;2288:5;2281:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2219:81;:::o;4255:166::-;4338:4;4354:39;4363:12;:10;:12::i;:::-;4377:7;4386:6;4354:8;:39::i;:::-;4410:4;4403:11;;4255:166;;;;:::o;3262:98::-;3315:7;3341:12;;3334:19;;3262:98;:::o;3542:414:8:-;3600:34;947:24:14;;;;;;;;;;;;;;;;;;;3621:12:8;:10;:12::i;:::-;3600:7;:34::i;:::-;3592:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3732:1;3703:16;:26;3720:8;3703:26;;;;;;;;;;;;;;;;:30;3695:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3804:8;:18;3813:8;3804:18;;;;;;;;;;;;;;;;;;;;;;;;;3803:19;3795:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3892:4;3871:8;:18;3880:8;3871:18;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;3907:42;3912:8;3922:16;:26;3939:8;3922:26;;;;;;;;;;;;;;;;3907:4;:42::i;:::-;3542:414;:::o;4881:317:15:-;4987:4;5003:36;5013:6;5021:9;5032:6;5003:9;:36::i;:::-;5049:121;5058:6;5066:12;:10;:12::i;:::-;5080:89;5118:6;5080:89;;;;;;;;;;;;;;;;;:11;:19;5092:6;5080:19;;;;;;;;;;;;;;;:33;5100:12;:10;:12::i;:::-;5080:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;5049:8;:121::i;:::-;5187:4;5180:11;;4881:317;;;;;:::o;4272:112:11:-;4329:7;4355:6;:12;4362:4;4355:12;;;;;;;;;;;:22;;;4348:29;;4272:112;;;:::o;4634:223::-;4717:45;4725:6;:12;4732:4;4725:12;;;;;;;;;;;:22;;;4749:12;:10;:12::i;:::-;4717:7;:45::i;:::-;4709:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4825:25;4836:4;4842:7;4825:10;:25::i;:::-;4634:223;;:::o;3121:81:15:-;3162:5;3186:9;;;;;;;;;;;3179:16;;3121:81;:::o;5808:205:11:-;5905:12;:10;:12::i;:::-;5894:23;;:7;:23;;;5886:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5980:26;5992:4;5998:7;5980:11;:26::i;:::-;5808:205;;:::o;5593:215:15:-;5681:4;5697:83;5706:12;:10;:12::i;:::-;5720:7;5729:50;5768:10;5729:11;:25;5741:12;:10;:12::i;:::-;5729:25;;;;;;;;;;;;;;;:34;5755:7;5729:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;5697:8;:83::i;:::-;5797:4;5790:11;;5593:215;;;;:::o;2430:175:14:-;2482:34;1015:24;;;;;;;;;;;;;;;;;;;2503:12;:10;:12::i;:::-;2482:7;:34::i;:::-;2474:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2588:10;:8;:10::i;:::-;2430:175::o;1649:202::-;1724:34;947:24;;;;;;;;;;;;;;;;;;;1745:12;:10;:12::i;:::-;1724:7;:34::i;:::-;1716:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1827:17;1833:2;1837:6;1827:5;:17::i;:::-;1649:202;;:::o;481:89:16:-;536:27;542:12;:10;:12::i;:::-;556:6;536:5;:27::i;:::-;481:89;:::o;1755:345:8:-;1838:41;1762:4:11;1846:18:8;;1866:12;:10;:12::i;:::-;1838:7;:41::i;:::-;1830:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1948:8;:18;1957:8;1948:18;;;;;;;;;;;;;;;;;;;;;;;;;1947:19;1939:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2044:7;2015:16;:26;2032:8;2015:26;;;;;;;;;;;;;;;:36;;;;2084:8;2067:26;;2075:7;2067:26;;;;;;;;;;1755:345;;:::o;1040:76:21:-;1079:4;1102:7;;;;;;;;;;;1095:14;;1040:76;:::o;3418:117:15:-;3484:7;3510:9;:18;3520:7;3510:18;;;;;;;;;;;;;;;;3503:25;;3418:117;;;:::o;876:290:16:-;952:26;981:84;1018:6;981:84;;;;;;;;;;;;;;;;;:32;991:7;1000:12;:10;:12::i;:::-;981:9;:32::i;:::-;:36;;:84;;;;;:::i;:::-;952:113;;1076:51;1085:7;1094:12;:10;:12::i;:::-;1108:18;1076:8;:51::i;:::-;1137:22;1143:7;1152:6;1137:5;:22::i;:::-;876:290;;;:::o;2054:169:14:-;2104:34;1015:24;;;;;;;;;;;;;;;;;;;2125:12;:10;:12::i;:::-;2104:7;:34::i;:::-;2096:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2208:8;:6;:8::i;:::-;2054:169::o;3955:136:11:-;4028:7;4054:30;4078:5;4054:6;:12;4061:4;4054:12;;;;;;;;;;;:20;;:23;;:30;;;;:::i;:::-;4047:37;;3955:136;;;;:::o;2940:137::-;3009:4;3032:38;3062:7;3032:6;:12;3039:4;3032:12;;;;;;;;;;;:20;;:29;;:38;;;;:::i;:::-;3025:45;;2940:137;;;;:::o;2413:85:15:-;2452:13;2484:7;2477:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2413:85;:::o;1717:49:11:-;1762:4;1717:49;;;:::o;6295:266:15:-;6388:4;6404:129;6413:12;:10;:12::i;:::-;6427:7;6436:96;6475:15;6436:96;;;;;;;;;;;;;;;;;:11;:25;6448:12;:10;:12::i;:::-;6436:25;;;;;;;;;;;;;;;:34;6462:7;6436:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;6404:8;:129::i;:::-;6550:4;6543:11;;6295:266;;;;:::o;3738:172::-;3824:4;3840:42;3850:12;:10;:12::i;:::-;3864:9;3875:6;3840:9;:42::i;:::-;3899:4;3892:11;;3738:172;;;;:::o;2544:540:8:-;2648:41;1762:4:11;2656:18:8;;2676:12;:10;:12::i;:::-;2648:7;:41::i;:::-;2640:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2776:9;:16;2757:8;:15;:35;2749:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:6;2864:1;2857:8;;2853:225;2871:8;:15;2867:1;:19;2853:225;;;2910:8;:22;2919:9;2929:1;2919:12;;;;;;;;;;;;;;2910:22;;;;;;;;;;;;;;;;;;;;;;;;;2906:162;;2984:8;2993:1;2984:11;;;;;;;;;;;;;;2951:16;:30;2968:9;2978:1;2968:12;;;;;;;;;;;;;;2951:30;;;;;;;;;;;;;;;:44;;;;3040:9;3050:1;3040:12;;;;;;;;;;;;;;3019:34;;3027:8;3036:1;3027:11;;;;;;;;;;;;;;3019:34;;;;;;;;;;2906:162;2888:3;;;;;;;2853:225;;;;2544:540;;:::o;3245:125:11:-;3308:7;3334:29;:6;:12;3341:4;3334:12;;;;;;;;;;;:20;;:27;:29::i;:::-;3327:36;;3245:125;;;:::o;909:62:14:-;947:24;;;;;;;;;;;;;;;;;;;909:62;:::o;5091:226:11:-;5175:45;5183:6;:12;5190:4;5183:12;;;;;;;;;;;:22;;;5207:12;:10;:12::i;:::-;5175:7;:45::i;:::-;5167:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5284:26;5296:4;5302:7;5284:11;:26::i;:::-;5091:226;;:::o;3968:149:15:-;4057:7;4083:11;:18;4095:5;4083:18;;;;;;;;;;;;;;;:27;4102:7;4083:27;;;;;;;;;;;;;;;;4076:34;;3968:149;;;;:::o;977:62:14:-;1015:24;;;;;;;;;;;;;;;;;;;977:62;:::o;590:104:10:-;643:15;677:10;670:17;;590:104;:::o;9357:340:15:-;9475:1;9458:19;;:5;:19;;;;9450:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9555:1;9536:21;;:7;:21;;;;9528:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9637:6;9607:11;:18;9619:5;9607:18;;;;;;;;;;;;;;;:27;9626:7;9607:27;;;;;;;;;;;;;;;:36;;;;9674:7;9658:32;;9667:5;9658:32;;;9683:6;9658:32;;;;;;;;;;;;;;;;;;9357:340;;;:::o;7035:530::-;7158:1;7140:20;;:6;:20;;;;7132:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7241:1;7220:23;;:9;:23;;;;7212:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7294:47;7315:6;7323:9;7334:6;7294:20;:47::i;:::-;7372:71;7394:6;7372:71;;;;;;;;;;;;;;;;;:9;:17;7382:6;7372:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;7352:9;:17;7362:6;7352:17;;;;;;;;;;;;;;;:91;;;;7476:32;7501:6;7476:9;:20;7486:9;7476:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;7453:9;:20;7463:9;7453:20;;;;;;;;;;;;;;;:55;;;;7540:9;7523:35;;7532:6;7523:35;;;7551:6;7523:35;;;;;;;;;;;;;;;;;;7035:530;;;:::o;1746:187:13:-;1832:7;1864:1;1859;:6;;1867:12;1851:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1851:29:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1890:9;1906:1;1902;:5;1890:17;;1925:1;1918:8;;;1746:187;;;;;:::o;7015:184:11:-;7088:33;7113:7;7088:6;:12;7095:4;7088:12;;;;;;;;;;;:20;;:24;;:33;;;;:::i;:::-;7084:109;;;7169:12;:10;:12::i;:::-;7142:40;;7160:7;7142:40;;7154:4;7142:40;;;;;;;;;;7084:109;7015:184;;:::o;7205:188::-;7279:36;7307:7;7279:6;:12;7286:4;7279:12;;;;;;;;;;;:20;;:27;;:36;;;;:::i;:::-;7275:112;;;7363:12;:10;:12::i;:::-;7336:40;;7354:7;7336:40;;7348:4;7336:40;;;;;;;;;;7275:112;7205:188;;:::o;874:176:13:-;932:7;951:9;967:1;963;:5;951:17;;991:1;986;:6;;978:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1042:1;1035:8;;;874:176;;;;:::o;2042:117:21:-;1610:7;;;;;;;;;;;1602:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2110:5:::1;2100:7;;:15;;;;;;;;;;;;;;;;;;2130:22;2139:12;:10;:12::i;:::-;2130:22;;;;;;;;;;;;;;;;;;;;;;2042:117::o:0;7835:370:15:-;7937:1;7918:21;;:7;:21;;;;7910:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7986:49;8015:1;8019:7;8028:6;7986:20;:49::i;:::-;8061:24;8078:6;8061:12;;:16;;:24;;;;:::i;:::-;8046:12;:39;;;;8116:30;8139:6;8116:9;:18;8126:7;8116:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;8095:9;:18;8105:7;8095:18;;;;;;;;;;;;;;;:51;;;;8182:7;8161:37;;8178:1;8161:37;;;8191:6;8161:37;;;;;;;;;;;;;;;;;;7835:370;;:::o;8524:410::-;8626:1;8607:21;;:7;:21;;;;8599:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8677:49;8698:7;8715:1;8719:6;8677:20;:49::i;:::-;8758:68;8781:6;8758:68;;;;;;;;;;;;;;;;;:9;:18;8768:7;8758:18;;;;;;;;;;;;;;;;:22;;:68;;;;;:::i;:::-;8737:9;:18;8747:7;8737:18;;;;;;;;;;;;;;;:89;;;;8851:24;8868:6;8851:12;;:16;;:24;;;;:::i;:::-;8836:12;:39;;;;8916:1;8890:37;;8899:7;8890:37;;;8920:6;8890:37;;;;;;;;;;;;;;;;;;8524:410;;:::o;1795:115:21:-;1346:7;;;;;;;;;;;1345:8;1337:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1864:4:::1;1854:7;;:14;;;;;;;;;;;;;;;;;;1883:20;1890:12;:10;:12::i;:::-;1883:20;;;;;;;;;;;;;;;;;;;;;;1795:115::o:0;6085:147:20:-;6159:7;6201:22;6205:3;:10;;6217:5;6201:3;:22::i;:::-;6193:31;;6178:47;;6085:147;;;;:::o;5401:156::-;5481:4;5504:46;5514:3;:10;;5542:5;5534:14;;5526:23;;5504:9;:46::i;:::-;5497:53;;5401:156;;;;:::o;5638:115::-;5701:7;5727:19;5735:3;:10;;5727:7;:19::i;:::-;5720:26;;5638:115;;;:::o;2611:181:14:-;2741:44;2768:4;2774:2;2778:6;2741:26;:44::i;:::-;2611:181;;;:::o;4864:141:20:-;4934:4;4957:41;4962:3;:10;;4990:5;4982:14;;4974:23;;4957:4;:41::i;:::-;4950:48;;4864:141;;;;:::o;5173:147::-;5246:4;5269:44;5277:3;:10;;5305:5;5297:14;;5289:23;;5269:7;:44::i;:::-;5262:51;;5173:147;;;;:::o;1321:134:13:-;1379:7;1405:43;1409:1;1412;1405:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1398:50;;1321:134;;;;:::o;4423:201:20:-;4490:7;4538:5;4517:3;:11;;:18;;;;:26;4509:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4599:3;:11;;4611:5;4599:18;;;;;;;;;;;;;;;;4592:25;;4423:201;;;;:::o;3776:127::-;3849:4;3895:1;3872:3;:12;;:19;3885:5;3872:19;;;;;;;;;;;;:24;;3865:31;;3776:127;;;;:::o;3984:107::-;4040:7;4066:3;:11;;:18;;;;4059:25;;3984:107;;;:::o;582:234:17:-;690:44;717:4;723:2;727:6;690:26;:44::i;:::-;754:8;:6;:8::i;:::-;753:9;745:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;582:234;;;:::o;1611:404:20:-;1674:4;1695:21;1705:3;1710:5;1695:9;:21::i;:::-;1690:319;;1732:3;:11;;1749:5;1732:23;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1732:23:20;;;;;;;;;;;;;;;;;;;1912:3;:11;;:18;;;;1890:3;:12;;:19;1903:5;1890:19;;;;;;;;;;;:40;;;;1951:4;1944:11;;;;1690:319;1993:5;1986:12;;1611:404;;;;;:::o;2183:1512::-;2249:4;2365:18;2386:3;:12;;:19;2399:5;2386:19;;;;;;;;;;;;2365:40;;2434:1;2420:10;:15;2416:1273;;2777:21;2814:1;2801:10;:14;2777:38;;2829:17;2870:1;2849:3;:11;;:18;;;;:22;2829:42;;3111:17;3131:3;:11;;3143:9;3131:22;;;;;;;;;;;;;;;;3111:42;;3274:9;3245:3;:11;;3257:13;3245:26;;;;;;;;;;;;;;;:38;;;;3391:1;3375:13;:17;3349:3;:12;;:23;3362:9;3349:23;;;;;;;;;;;:43;;;;3498:3;:11;;:17;;;;;;;;;;;;;;;;;;;;;;;;3590:3;:12;;:19;3603:5;3590:19;;;;;;;;;;;3583:26;;;3631:4;3624:11;;;;;;;;2416:1273;3673:5;3666:12;;;2183:1512;;;;;:::o;10695:92:15:-;;;;:::o",
  "source": "// bDSLAToken.sol\n// SPDX-License-Identifier: MIT\npragma solidity 0.6.6;\n\nimport \"@openzeppelin/contracts/presets/ERC20PresetMinterPauser.sol\";\n\n/**\n * @dev {bDSLA} token, including:\n *\n *  - ability for holders to burn (destroy) their tokens\n *  - a minter role that allows for token minting (creation)\n *  - a pauser role that allows to stop all token transfers\n *  - a claim procces for DSLA owners \n *\n * This contract uses {AccessControl} to lock permissioned functions using the\n * different roles. \n *\n * The account that deploys the contract will be granted the minter and pauser\n * roles, as well as the default admin role, which will let it grant both minter\n * and pauser roles to other accounts.\n */\n \ncontract bDSLAToken is ERC20PresetMinterPauser {\n    mapping (address => uint256) private _allowedBalances;\n    mapping (address => bool) private _claimed;\n    event Allowed(uint indexed _amount, address indexed _claimer);\n\n    \n    /**\n     * @dev Sets the values for {name} and {symbol}, {decimals} have \n     * a default value of 18.\n     *\n     *\n     * All three of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor() public ERC20PresetMinterPauser(\"bDSLA Token\", \"bDSLA\") {\n    }\n    \n    /**\n     * @notice the setAllowedAmount function allows the admin to set an amount \n     * of claimable bDSLA based on the balanceOf DSLA token of the claimer on the\n     * mainnet. \n     * @dev allows the claim of `_amount` for `_claimer`.\n     * \n     * @param _amount uint the equivalent amount of DSLA tokens on the mainnet \n     * @param _claimer address of the claimer   \n     *\n     *\n     * Requirements:\n     *\n     * - the caller must have the `(DEFAULT_ADMIN_ROLE)`.\n     */\n    function setAllowedAmount(uint _amount, address _claimer) public {\n        require(hasRole(DEFAULT_ADMIN_ROLE, _msgSender()), \"ERC20PresetMinterPauser: must have admin role\");\n        require(!_claimed[_claimer], \"bDSLAToken: tokens already claimed\");\n        _allowedBalances[_claimer] = _amount; \n        emit Allowed(_amount, _claimer);\n    }\n\n    /**\n     * @notice the setAllowedAmounts function allows the admin to set \n     * a claimable amounts of bDSLA for claimers. \n     * \n     * @dev allows the claim of `_amounts` for `_claimers`.\n     * \n     * @param _amounts an array of amounts to be claimed \n     * @param _claimers an array of addresses of the claimers    \n     *\n     *\n     * Requirements:\n     *\n     * - the caller must have the `(DEFAULT_ADMIN_ROLE)`.\n     */\n    function setAllowedAmounts(uint[] memory _amounts, address[] memory _claimers) public {\n        require(hasRole(DEFAULT_ADMIN_ROLE, _msgSender()), \"ERC20PresetMinterPauser: must have admin role\");\n        require(_amounts.length == _claimers.length, \"bDSLAToken: must have the same number of items\");\n        for(uint i=0; i < _amounts.length; i++){\n            if(!_claimed[_claimers[i]]){\n                _allowedBalances[_claimers[i]] = _amounts[i]; \n                emit Allowed(_amounts[i], _claimers[i]);\n            }\n        }\n    }\n    \n    /**\n     * @notice the setAllowedAmounts function allows the admin to set \n     * a claimable amounts of bDSLA for claimers. \n     * \n     * @dev creates new 'bDSLA' tokens for the `_claimer`.\n     * \n     * @param _claimer address of the claimer \n     *\n     *\n     * Requirements:\n     *\n     * - the caller must have the `(MINTER_ROLE)`.\n     * - the claimer should have an allowed balance \n     * - the claim can be done just once \n     */\n    function claim(address _claimer) public {\n        require(hasRole(MINTER_ROLE, _msgSender()), \"ERC20PresetMinterPauser: must have minter role\");\n        require(_allowedBalances[_claimer] > 0, \"bDSLAToken: must have an allowed amoun to claim\");\n        require(!_claimed[_claimer], \"bDSLAToken: tokens already claimed\");\n        _claimed[_claimer] = true; \n        mint(_claimer, _allowedBalances[_claimer]);\n    }\n}",
  "sourcePath": "/Users/matiasbn/Desktop/stacktical-dsla-contracts/contracts/bDSLA/bDSLAToken.sol",
  "ast": {
    "absolutePath": "/Users/matiasbn/Desktop/stacktical-dsla-contracts/contracts/bDSLA/bDSLAToken.sol",
    "exportedSymbols": {
      "bDSLAToken": [
        2027
      ]
    },
    "id": 2028,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1847,
        "literals": [
          "solidity",
          "0.6",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "50:22:8"
=======
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"}],\"name\":\"Allowed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"}],\"name\":\"setAllowedAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"_claimers\",\"type\":\"address[]\"}],\"name\":\"setAllowedAmounts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"{bDSLA} token, including:  - ability for holders to burn (destroy) their tokens  - a minter role that allows for token minting (creation)  - a pauser role that allows to stop all token transfers  - a claim procces for DSLA owners  This contract uses {AccessControl} to lock permissioned functions using the different roles.  The account that deploys the contract will be granted the minter and pauser roles, as well as the default admin role, which will let it grant both minter and pauser roles to other accounts.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"claim(address)\":{\"details\":\"creates new 'bDSLA' tokens for the `_claimer`. \",\"params\":{\"_claimer\":\"address of the claimer  Requirements: - the caller must have the `(MINTER_ROLE)`. - the claimer should have an allowed balance  - the claim can be done just once \"}},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}, {decimals} have  a default value of 18. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"details\":\"Creates `amount` new tokens for `to`. See {ERC20-_mint}. Requirements: - the caller must have the `MINTER_ROLE`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"pause()\":{\"details\":\"Pauses all token transfers. See {ERC20Pausable} and {Pausable-_pause}. Requirements: - the caller must have the `PAUSER_ROLE`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"setAllowedAmount(uint256,address)\":{\"details\":\"allows the claim of `_amount` for `_claimer`. \",\"params\":{\"_amount\":\"uint the equivalent amount of DSLA tokens on the mainnet \",\"_claimer\":\"address of the claimer    Requirements: - the caller must have the `(DEFAULT_ADMIN_ROLE)`.\"}},\"setAllowedAmounts(uint256[],address[])\":{\"details\":\"allows the claim of `_amounts` for `_claimers`. \",\"params\":{\"_amounts\":\"an array of amounts to be claimed \",\"_claimers\":\"an array of addresses of the claimers     Requirements: - the caller must have the `(DEFAULT_ADMIN_ROLE)`.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"unpause()\":{\"details\":\"Unpauses all token transfers. See {ERC20Pausable} and {Pausable-_unpause}. Requirements: - the caller must have the `PAUSER_ROLE`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claim(address)\":{\"notice\":\"the setAllowedAmounts function allows the admin to set  a claimable amounts of bDSLA for claimers.  \"},\"setAllowedAmount(uint256,address)\":{\"notice\":\"the setAllowedAmount function allows the admin to set an amount  of claimable bDSLA based on the balanceOf DSLA token of the claimer on the mainnet. \"},\"setAllowedAmounts(uint256[],address[])\":{\"notice\":\"the setAllowedAmounts function allows the admin to set  a claimable amounts of bDSLA for claimers.  \"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/wilhempujar/Development/stacktical-dsla-contracts/contracts/bDSLA/bDSLAToken.sol\":\"bDSLAToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"/Users/wilhempujar/Development/stacktical-dsla-contracts/contracts/bDSLA/bDSLAToken.sol\":{\"keccak256\":\"0xfde7f4cc126dda54526b5de0f3731b106d624028c892dbd9a4695ec186112aa6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a55d2581456dc3989e930fa26d5d41dd62932c7c8cbe1064da98efc8c0befc6\",\"dweb:/ipfs/QmQxZH3kT73aiozHvw72ZNtCA1x75NPKdpGZbx42HbCKH6\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x92f7900d382761c7faefeaced81c6b4f1aae909ed0551803bfe8f27101956360\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://407c0864143968542e5cf5aa7556916d2cf292b201e3dadb65662e9a3aa24187\",\"dweb:/ipfs/QmSnXzYAUaGLGr7uofRbgQraTJvatbjQLBPhyYiMd18oUJ\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"@openzeppelin/contracts/presets/ERC20PresetMinterPauser.sol\":{\"keccak256\":\"0xe30213b0851987b0455057cdfb65660c05805cbb05b12c0d61b0ff7a99cc36cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c61711ecc3ad53890dded63c27909a315ba3053c553be29acaa239bc6a7a0cf\",\"dweb:/ipfs/QmQjriBzSyAYQTm4NfWpnnoH8RhZrayyXm2zvpeHkxQnAk\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x91e0bd6a6762d2a1700dab0849de8422611355100576c4beef1e80d82a4104a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73bbd77af0a8b07255d2ffa20728bcf13b116007c9ddac5d37046cfabb0e1e02\",\"dweb:/ipfs/QmRgZgWCWCSMTTaok6o4QvWA6MgB4goS8qpb3sN7bAvaZ9\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0x657b0d90be17331364211d74359df2a734fac864f6e88c80de7626fa33090ffb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09cca25fefa2354a424d55a97930c76b11dc50697ba62c85d7affc27a37e830c\",\"dweb:/ipfs/QmPTQBYXxQDSNmMKqwe4WnM8E7NwnpLnkFLSRH8hZRvrVK\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol\":{\"keccak256\":\"0xbab4a97af2a6810a8ffc187205dfb331284949ea5b30caa5b9052828853bb149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f53c98e31ed415c2a6f03d99809cd4f2f5fff92a13ee85022922a09df82ee459\",\"dweb:/ipfs/QmXiv4ysuQSRfoXqPpwA1QCreEnqfkrHDGyJTmifoni7dK\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017\",\"dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://774e78a9ff32792cc95db4d2ceaf3a7965bb7f0bea5e6cb7cff182b450d44b37\",\"dweb:/ipfs/QmRRMC4uj7eAcLW7chynA3sNEYULMFazdLwQHKHQPyzAbA\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xb2a11b236f073662f5a196995863f51c11d006bf7c3de158b316dfa1506c4b79\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8651649cf0b9efa18c3b01c030276fa320d41adbdc286833417e7f36e357b2f3\",\"dweb:/ipfs/QmafhM2Nd1aP43QVB1eRRZaqRXQKswNfQcWi8U8xjrxCfN\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0x5d1b1dcbc0396f44c1c8d554857f71e3187503bf1e54062bf9ec6782e21f3a08\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9aa7fa580393aab7ca3d9f606f5ab7434d51e1c0f3632a593fca82c80ef8cc4c\",\"dweb:/ipfs/QmRy84N7QfkwBM2AeR7UB5G1PPHdRLi6s1iyzAwCzevcHe\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604080518082018252600b81526a312229a620902a37b5b2b760a91b6020808301918252835180850190945260058452646244534c4160d81b90840152815191929183918391620000669160049162000223565b5080516200007c90600590602084019062000223565b50506006805461ff001960ff1990911660121716905550620000a96000620000a36200010f565b62000113565b620000d87f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6620000a36200010f565b620001077f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a620000a36200010f565b5050620002bf565b3390565b6200011f828262000123565b5050565b60008281526020818152604090912062000148918390620010986200019c821b17901c565b156200011f57620001586200010f565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000620001b3836001600160a01b038416620001bc565b90505b92915050565b6000620001ca83836200020b565b6200020257508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155620001b6565b506000620001b6565b60009081526001919091016020526040902054151590565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200026657805160ff191683800117855562000296565b8280016001018555821562000296579182015b828111156200029657825182559160200191906001019062000279565b50620002a4929150620002a8565b5090565b5b80821115620002a45760008155600101620002a9565b611e6680620002cf6000396000f3fe608060405234801561001057600080fd5b506004361061019a5760003560e01c806370a08231116100e4578063a457c2d711610092578063a457c2d7146104ed578063a9059cbb14610519578063b4986fc514610545578063ca15c87314610668578063d539139314610685578063d547741f1461068d578063dd62ed3e146106b9578063e63ab1e9146106e75761019a565b806370a082311461041857806379cc67901461043e5780638456cb591461046a5780639010d07c1461047257806391d14854146104b157806395d89b41146104dd578063a217fddf146104e55761019a565b8063313ce5671161014c578063313ce5671461031d57806336568abe1461033b57806339509351146103675780633f4ba83a1461039357806340c10f191461039b57806342966c68146103c7578063522fe133146103e45780635c975abb146104105761019a565b806306fdde031461019f578063095ea7b31461021c57806318160ddd1461025c5780631e83409a1461027657806323b872dd1461029e578063248a9ca3146102d45780632f2ff15d146102f1575b600080fd5b6101a76106ef565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101e15781810151838201526020016101c9565b50505050905090810190601f16801561020e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102486004803603604081101561023257600080fd5b506001600160a01b038135169060200135610785565b604080519115158252519081900360200190f35b6102646107a3565b60408051918252519081900360200190f35b61029c6004803603602081101561028c57600080fd5b50356001600160a01b03166107a9565b005b610248600480360360608110156102b457600080fd5b506001600160a01b038135811691602081013590911690604001356108eb565b610264600480360360208110156102ea57600080fd5b5035610972565b61029c6004803603604081101561030757600080fd5b50803590602001356001600160a01b0316610987565b6103256109ee565b6040805160ff9092168252519081900360200190f35b61029c6004803603604081101561035157600080fd5b50803590602001356001600160a01b03166109f7565b6102486004803603604081101561037d57600080fd5b506001600160a01b038135169060200135610a58565b61029c610aa6565b61029c600480360360408110156103b157600080fd5b506001600160a01b038135169060200135610b05565b61029c600480360360208110156103dd57600080fd5b5035610b64565b61029c600480360360408110156103fa57600080fd5b50803590602001356001600160a01b0316610b75565b610248610c5b565b6102646004803603602081101561042e57600080fd5b50356001600160a01b0316610c69565b61029c6004803603604081101561045457600080fd5b506001600160a01b038135169060200135610c84565b61029c610cde565b6104956004803603604081101561048857600080fd5b5080359060200135610d3b565b604080516001600160a01b039092168252519081900360200190f35b610248600480360360408110156104c757600080fd5b50803590602001356001600160a01b0316610d5a565b6101a7610d72565b610264610dd3565b6102486004803603604081101561050357600080fd5b506001600160a01b038135169060200135610dd8565b6102486004803603604081101561052f57600080fd5b506001600160a01b038135169060200135610e40565b61029c6004803603604081101561055b57600080fd5b810190602081018135600160201b81111561057557600080fd5b82018360208201111561058757600080fd5b803590602001918460208302840111600160201b831117156105a857600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156105f757600080fd5b82018360208201111561060957600080fd5b803590602001918460208302840111600160201b8311171561062a57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610e54945050505050565b6102646004803603602081101561067e57600080fd5b5035610fd9565b610264610ff0565b61029c600480360360408110156106a357600080fd5b50803590602001356001600160a01b0316611002565b610264600480360360408110156106cf57600080fd5b506001600160a01b038135811691602001351661105b565b610264611086565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561077b5780601f106107505761010080835404028352916020019161077b565b820191906000526020600020905b81548152906001019060200180831161075e57829003601f168201915b5050505050905090565b60006107996107926110ad565b84846110b1565b5060015b92915050565b60035490565b6107c8600080516020611c558339815191526107c36110ad565b610d5a565b6108035760405162461bcd60e51b815260040180806020018281038252602e815260200180611d58602e913960400191505060405180910390fd5b6001600160a01b0381166000908152600760205260409020546108575760405162461bcd60e51b815260040180806020018281038252602f815260200180611b2e602f913960400191505060405180910390fd5b6001600160a01b03811660009081526008602052604090205460ff16156108af5760405162461bcd60e51b8152600401808060200182810382526022815260200180611cdb6022913960400191505060405180910390fd5b6001600160a01b0381166000908152600860209081526040808320805460ff1916600117905560079091529020546108e8908290610b05565b50565b60006108f884848461119d565b610968846109046110ad565b61096385604051806060016040528060288152602001611bb3602891396001600160a01b038a166000908152600260205260408120906109426110ad565b6001600160a01b0316815260208101919091526040016000205491906112e8565b6110b1565b5060019392505050565b60009081526020819052604090206002015490565b6000828152602081905260409020600201546109a5906107c36110ad565b6109e05760405162461bcd60e51b815260040180806020018281038252602f815260200180611a54602f913960400191505060405180910390fd5b6109ea828261137f565b5050565b60065460ff1690565b6109ff6110ad565b6001600160a01b0316816001600160a01b031614610a4e5760405162461bcd60e51b815260040180806020018281038252602f815260200180611dd8602f913960400191505060405180910390fd5b6109ea82826113e8565b6000610799610a656110ad565b846109638560026000610a766110ad565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490611451565b610ac0600080516020611bdb8339815191526107c36110ad565b610afb5760405162461bcd60e51b8152600401808060200182810382526039815260200180611aa56039913960400191505060405180910390fd5b610b036114ab565b565b610b1f600080516020611c558339815191526107c36110ad565b610b5a5760405162461bcd60e51b8152600401808060200182810382526036815260200180611bfb6036913960400191505060405180910390fd5b6109ea828261154f565b6108e8610b6f6110ad565b8261162f565b610b8260006107c36110ad565b610bbd5760405162461bcd60e51b815260040180806020018281038252602d815260200180611dab602d913960400191505060405180910390fd5b6001600160a01b03811660009081526008602052604090205460ff1615610c155760405162461bcd60e51b8152600401808060200182810382526022815260200180611cdb6022913960400191505060405180910390fd5b6001600160a01b0381166000818152600760205260408082208590555184917fd982c9a0e4f3e18aad52d8d036ad2c1320d034b37f7bb681c7ba61a283226d7991a35050565b600654610100900460ff1690565b6001600160a01b031660009081526001602052604090205490565b6000610cbb82604051806060016040528060248152602001611c3160249139610cb486610caf6110ad565b61105b565b91906112e8565b9050610ccf83610cc96110ad565b836110b1565b610cd9838361162f565b505050565b610cf8600080516020611bdb8339815191526107c36110ad565b610d335760405162461bcd60e51b8152600401808060200182810382526037815260200180611d216037913960400191505060405180910390fd5b610b03611719565b6000828152602081905260408120610d5390836117a1565b9392505050565b6000828152602081905260408120610d5390836117ad565b60058054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561077b5780601f106107505761010080835404028352916020019161077b565b600081565b6000610799610de56110ad565b8461096385604051806060016040528060258152602001611d866025913960026000610e0f6110ad565b6001600160a01b03908116825260208083019390935260409182016000908120918d168152925290205491906112e8565b6000610799610e4d6110ad565b848461119d565b610e6160006107c36110ad565b610e9c5760405162461bcd60e51b815260040180806020018281038252602d815260200180611dab602d913960400191505060405180910390fd5b8051825114610edc5760405162461bcd60e51b815260040180806020018281038252602e815260200180611b00602e913960400191505060405180910390fd5b60005b8251811015610cd95760086000838381518110610ef857fe5b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff16610fd157828181518110610f2f57fe5b602002602001015160076000848481518110610f4757fe5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002081905550818181518110610f7f57fe5b60200260200101516001600160a01b0316838281518110610f9c57fe5b60200260200101517fd982c9a0e4f3e18aad52d8d036ad2c1320d034b37f7bb681c7ba61a283226d7960405160405180910390a35b600101610edf565b600081815260208190526040812061079d906117c2565b600080516020611c5583398151915281565b600082815260208190526040902060020154611020906107c36110ad565b610a4e5760405162461bcd60e51b8152600401808060200182810382526030815260200180611b836030913960400191505060405180910390fd5b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b600080516020611bdb83398151915281565b6000610d53836001600160a01b0384166117cd565b3390565b6001600160a01b0383166110f65760405162461bcd60e51b8152600401808060200182810382526024815260200180611cfd6024913960400191505060405180910390fd5b6001600160a01b03821661113b5760405162461bcd60e51b8152600401808060200182810382526022815260200180611ade6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166111e25760405162461bcd60e51b8152600401808060200182810382526025815260200180611cb66025913960400191505060405180910390fd5b6001600160a01b0382166112275760405162461bcd60e51b8152600401808060200182810382526023815260200180611a316023913960400191505060405180910390fd5b611232838383611817565b61126f81604051806060016040528060268152602001611b5d602691396001600160a01b03861660009081526001602052604090205491906112e8565b6001600160a01b03808516600090815260016020526040808220939093559084168152205461129e9082611451565b6001600160a01b038084166000818152600160209081526040918290209490945580518581529051919392871692600080516020611c7583398151915292918290030190a3505050565b600081848411156113775760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561133c578181015183820152602001611324565b50505050905090810190601f1680156113695780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60008281526020819052604090206113979082611098565b156109ea576113a46110ad565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60008281526020819052604090206114009082611822565b156109ea5761140d6110ad565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b600082820183811015610d53576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600654610100900460ff166114fe576040805162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015290519081900360640190fd5b6006805461ff00191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6115326110ad565b604080516001600160a01b039092168252519081900360200190a1565b6001600160a01b0382166115aa576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6115b660008383611817565b6003546115c39082611451565b6003556001600160a01b0382166000908152600160205260409020546115e99082611451565b6001600160a01b0383166000818152600160209081526040808320949094558351858152935192939192600080516020611c758339815191529281900390910190a35050565b6001600160a01b0382166116745760405162461bcd60e51b8152600401808060200182810382526021815260200180611c956021913960400191505060405180910390fd5b61168082600083611817565b6116bd81604051806060016040528060228152602001611a83602291396001600160a01b03851660009081526001602052604090205491906112e8565b6001600160a01b0383166000908152600160205260409020556003546116e39082611837565b6003556040805182815290516000916001600160a01b03851691600080516020611c758339815191529181900360200190a35050565b600654610100900460ff1615611769576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6006805461ff0019166101001790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586115326110ad565b6000610d538383611879565b6000610d53836001600160a01b0384166118dd565b600061079d826118f5565b60006117d983836118dd565b61180f5750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561079d565b50600061079d565b610cd98383836118f9565b6000610d53836001600160a01b038416611948565b6000610d5383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506112e8565b815460009082106118bb5760405162461bcd60e51b8152600401808060200182810382526022815260200180611a0f6022913960400191505060405180910390fd5b8260000182815481106118ca57fe5b9060005260206000200154905092915050565b60009081526001919091016020526040902054151590565b5490565b611904838383610cd9565b61190c610c5b565b15610cd95760405162461bcd60e51b815260040180806020018281038252602a815260200180611e07602a913960400191505060405180910390fd5b60008181526001830160205260408120548015611a04578354600019808301919081019060009087908390811061197b57fe5b906000526020600020015490508087600001848154811061199857fe5b6000918252602080832090910192909255828152600189810190925260409020908401905586548790806119c857fe5b6001900381819060005260206000200160009055905586600101600087815260200190815260200160002060009055600194505050505061079d565b600091505061079d56fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e647345524332303a207472616e7366657220746f20746865207a65726f2061646472657373416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e7445524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332305072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f20756e706175736545524332303a20617070726f766520746f20746865207a65726f20616464726573736244534c41546f6b656e3a206d7573742068617665207468652073616d65206e756d626572206f66206974656d736244534c41546f6b656e3a206d757374206861766520616e20616c6c6f77656420616d6f756e20746f20636c61696d45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636565d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a45524332305072657365744d696e7465725061757365723a206d7573742068617665206d696e74657220726f6c6520746f206d696e7445524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63659f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef45524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f20616464726573736244534c41546f6b656e3a20746f6b656e7320616c726561647920636c61696d656445524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332305072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f20706175736545524332305072657365744d696e7465725061757365723a206d7573742068617665206d696e74657220726f6c6545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f45524332305072657365744d696e7465725061757365723a206d75737420686176652061646d696e20726f6c65416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c6645524332305061757361626c653a20746f6b656e207472616e73666572207768696c6520706175736564a26469706673582212207aa82f0438fddc0c6800afa159912f67b4d2b7c394bbabb0fdbb07572f019c2464736f6c634300060c0033",
  "deployedBytecode": "",
  "immutableReferences": {},
  "sourceMap": "715:3244:6:-:0;;;1180:76;;;;;;;;;-1:-1:-1;1223:237:12;;;;;;;;;;;-1:-1:-1;;;1223:237:12;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1223:237:12;;;;2085:12:13;;1223:237:12;;;;;;;2085:12:13;;:5;;:12;:::i;:::-;-1:-1:-1;2107:16:13;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;;2133:9:13;:14;;-1:-1:-1;;;;2133:14:13;;;2145:2;2133:14;923:15:19;;;-1:-1:-1;1314:44:12::1;2133:9:13::0;1345:12:12::1;:10;:12::i;:::-;1314:10;:44::i;:::-;1369:37;947:24;1393:12;:10;:12::i;1369:37::-;1416;1015:24;1440:12;:10;:12::i;1416:37::-;1223:237:::0;;715:3244:6;;590:104:8;677:10;590:104;:::o;6578:110:9:-;6656:25;6667:4;6673:7;6656:10;:25::i;:::-;6578:110;;:::o;7015:184::-;7088:6;:12;;;;;;;;;;;:33;;7113:7;;7088:24;;;;;:33;;:::i;:::-;7084:109;;;7169:12;:10;:12::i;:::-;-1:-1:-1;;;;;7142:40:9;7160:7;-1:-1:-1;;;;;7142:40:9;7154:4;7142:40;;;;;;;;;;7015:184;;:::o;4864:141:18:-;4934:4;4957:41;4962:3;-1:-1:-1;;;;;4982:14:18;;4957:4;:41::i;:::-;4950:48;;4864:141;;;;;:::o;1611:404::-;1674:4;1695:21;1705:3;1710:5;1695:9;:21::i;:::-;1690:319;;-1:-1:-1;1732:23:18;;;;;;;;:11;:23;;;;;;;;;;;;;1912:18;;1890:19;;;:12;;;:19;;;;;;:40;;;;1944:11;;1690:319;-1:-1:-1;1993:5:18;1986:12;;3776:127;3849:4;3872:19;;;:12;;;;;:19;;;;;;:24;;;3776:127::o;715:3244:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;715:3244:6;;;-1:-1:-1;715:3244:6;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "715:3244:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2219:81:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4255:166;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4255:166:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3262:98;;;:::i;:::-;;;;;;;;;;;;;;;;3543:414:6;;;;;;;;;;;;;;;;-1:-1:-1;3543:414:6;-1:-1:-1;;;;;3543:414:6;;:::i;:::-;;4881:317:13;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4881:317:13;;;;;;;;;;;;;;;;;:::i;4272:112:9:-;;;;;;;;;;;;;;;;-1:-1:-1;4272:112:9;;:::i;4634:223::-;;;;;;;;;;;;;;;;-1:-1:-1;4634:223:9;;;;;;-1:-1:-1;;;;;4634:223:9;;:::i;3121:81:13:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5808:205:9;;;;;;;;;;;;;;;;-1:-1:-1;5808:205:9;;;;;;-1:-1:-1;;;;;5808:205:9;;:::i;5593:215:13:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5593:215:13;;;;;;;;:::i;2430:175:12:-;;;:::i;1649:202::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1649:202:12;;;;;;;;:::i;481:89:14:-;;;;;;;;;;;;;;;;-1:-1:-1;481:89:14;;:::i;1756:345:6:-;;;;;;;;;;;;;;;;-1:-1:-1;1756:345:6;;;;;;-1:-1:-1;;;;;1756:345:6;;:::i;1040:76:19:-;;;:::i;3418:117:13:-;;;;;;;;;;;;;;;;-1:-1:-1;3418:117:13;-1:-1:-1;;;;;3418:117:13;;:::i;876:290:14:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;876:290:14;;;;;;;;:::i;2054:169:12:-;;;:::i;3955:136:9:-;;;;;;;;;;;;;;;;-1:-1:-1;3955:136:9;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;3955:136:9;;;;;;;;;;;;;;2940:137;;;;;;;;;;;;;;;;-1:-1:-1;2940:137:9;;;;;;-1:-1:-1;;;;;2940:137:9;;:::i;2413:85:13:-;;;:::i;1717:49:9:-;;;:::i;6295:266:13:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6295:266:13;;;;;;;;:::i;3738:172::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3738:172:13;;;;;;;;:::i;2545:540:6:-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2545:540:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2545:540:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2545:540:6;;;;;;;;-1:-1:-1;2545:540:6;;-1:-1:-1;;;;;2545:540:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2545:540:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2545:540:6;;-1:-1:-1;2545:540:6;;-1:-1:-1;;;;;2545:540:6:i;3245:125:9:-;;;;;;;;;;;;;;;;-1:-1:-1;3245:125:9;;:::i;909:62:12:-;;;:::i;5091:226:9:-;;;;;;;;;;;;;;;;-1:-1:-1;5091:226:9;;;;;;-1:-1:-1;;;;;5091:226:9;;:::i;3968:149:13:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3968:149:13;;;;;;;;;;:::i;977:62:12:-;;;:::i;2219:81:13:-;2288:5;2281:12;;;;;;;;-1:-1:-1;;2281:12:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2256:13;;2281:12;;2288:5;;2281:12;;2288:5;2281:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2219:81;:::o;4255:166::-;4338:4;4354:39;4363:12;:10;:12::i;:::-;4377:7;4386:6;4354:8;:39::i;:::-;-1:-1:-1;4410:4:13;4255:166;;;;;:::o;3262:98::-;3341:12;;3262:98;:::o;3543:414:6:-;3601:34;-1:-1:-1;;;;;;;;;;;3622:12:6;:10;:12::i;:::-;3601:7;:34::i;:::-;3593:93;;;;-1:-1:-1;;;3593:93:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3704:26:6;;3733:1;3704:26;;;:16;:26;;;;;;3696:90;;;;-1:-1:-1;;;3696:90:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3805:18:6;;;;;;:8;:18;;;;;;;;3804:19;3796:66;;;;-1:-1:-1;;;3796:66:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3872:18:6;;;;;;:8;:18;;;;;;;;:25;;-1:-1:-1;;3872:25:6;3893:4;3872:25;;;3923:16;:26;;;;;;3908:42;;3881:8;;3908:4;:42::i;:::-;3543:414;:::o;4881:317:13:-;4987:4;5003:36;5013:6;5021:9;5032:6;5003:9;:36::i;:::-;5049:121;5058:6;5066:12;:10;:12::i;:::-;5080:89;5118:6;5080:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5080:19:13;;;;;;:11;:19;;;;;;5100:12;:10;:12::i;:::-;-1:-1:-1;;;;;5080:33:13;;;;;;;;;;;;-1:-1:-1;5080:33:13;;;:89;:37;:89::i;:::-;5049:8;:121::i;:::-;-1:-1:-1;5187:4:13;4881:317;;;;;:::o;4272:112:9:-;4329:7;4355:12;;;;;;;;;;:22;;;;4272:112::o;4634:223::-;4725:6;:12;;;;;;;;;;:22;;;4717:45;;4749:12;:10;:12::i;4717:45::-;4709:105;;;;-1:-1:-1;;;4709:105:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4825:25;4836:4;4842:7;4825:10;:25::i;:::-;4634:223;;:::o;3121:81:13:-;3186:9;;;;3121:81;:::o;5808:205:9:-;5905:12;:10;:12::i;:::-;-1:-1:-1;;;;;5894:23:9;:7;-1:-1:-1;;;;;5894:23:9;;5886:83;;;;-1:-1:-1;;;5886:83:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5980:26;5992:4;5998:7;5980:11;:26::i;5593:215:13:-;5681:4;5697:83;5706:12;:10;:12::i;:::-;5720:7;5729:50;5768:10;5729:11;:25;5741:12;:10;:12::i;:::-;-1:-1:-1;;;;;5729:25:13;;;;;;;;;;;;;;;;;-1:-1:-1;5729:25:13;;;:34;;;;;;;;;;;:38;:50::i;2430:175:12:-;2482:34;-1:-1:-1;;;;;;;;;;;2503:12:12;:10;:12::i;2482:34::-;2474:104;;;;-1:-1:-1;;;2474:104:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2588:10;:8;:10::i;:::-;2430:175::o;1649:202::-;1724:34;-1:-1:-1;;;;;;;;;;;1745:12:12;:10;:12::i;1724:34::-;1716:101;;;;-1:-1:-1;;;1716:101:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1827:17;1833:2;1837:6;1827:5;:17::i;481:89:14:-;536:27;542:12;:10;:12::i;:::-;556:6;536:5;:27::i;1756:345:6:-;1839:41;1762:4:9;1867:12:6;:10;:12::i;1839:41::-;1831:99;;;;-1:-1:-1;;;1831:99:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1949:18:6;;;;;;:8;:18;;;;;;;;1948:19;1940:66;;;;-1:-1:-1;;;1940:66:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2016:26:6;;;;;;:16;:26;;;;;;:36;;;2068:26;2045:7;;2068:26;;;1756:345;;:::o;1040:76:19:-;1102:7;;;;;;;;1040:76::o;3418:117:13:-;-1:-1:-1;;;;;3510:18:13;3484:7;3510:18;;;:9;:18;;;;;;;3418:117::o;876:290:14:-;952:26;981:84;1018:6;981:84;;;;;;;;;;;;;;;;;:32;991:7;1000:12;:10;:12::i;:::-;981:9;:32::i;:::-;:36;:84;:36;:84::i;:::-;952:113;;1076:51;1085:7;1094:12;:10;:12::i;:::-;1108:18;1076:8;:51::i;:::-;1137:22;1143:7;1152:6;1137:5;:22::i;:::-;876:290;;;:::o;2054:169:12:-;2104:34;-1:-1:-1;;;;;;;;;;;2125:12:12;:10;:12::i;2104:34::-;2096:102;;;;-1:-1:-1;;;2096:102:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2208:8;:6;:8::i;3955:136:9:-;4028:7;4054:12;;;;;;;;;;:30;;4078:5;4054:23;:30::i;:::-;4047:37;3955:136;-1:-1:-1;;;3955:136:9:o;2940:137::-;3009:4;3032:12;;;;;;;;;;:38;;3062:7;3032:29;:38::i;2413:85:13:-;2484:7;2477:14;;;;;;;;-1:-1:-1;;2477:14:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2452:13;;2477:14;;2484:7;;2477:14;;2484:7;2477:14;;;;;;;;;;;;;;;;;;;;;;;;1717:49:9;1762:4;1717:49;:::o;6295:266:13:-;6388:4;6404:129;6413:12;:10;:12::i;:::-;6427:7;6436:96;6475:15;6436:96;;;;;;;;;;;;;;;;;:11;:25;6448:12;:10;:12::i;:::-;-1:-1:-1;;;;;6436:25:13;;;;;;;;;;;;;;;;;-1:-1:-1;6436:25:13;;;:34;;;;;;;;;;;:96;:38;:96::i;3738:172::-;3824:4;3840:42;3850:12;:10;:12::i;:::-;3864:9;3875:6;3840:9;:42::i;2545:540:6:-;2649:41;1762:4:9;2677:12:6;:10;:12::i;2649:41::-;2641:99;;;;-1:-1:-1;;;2641:99:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2777:9;:16;2758:8;:15;:35;2750:94;;;;-1:-1:-1;;;2750:94:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2858:6;2854:225;2872:8;:15;2868:1;:19;2854:225;;;2911:8;:22;2920:9;2930:1;2920:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2911:22:6;;;;;;;;;;;-1:-1:-1;2911:22:6;;;;2907:162;;2985:8;2994:1;2985:11;;;;;;;;;;;;;;2952:16;:30;2969:9;2979:1;2969:12;;;;;;;;;;;;;;-1:-1:-1;;;;;2952:30:6;-1:-1:-1;;;;;2952:30:6;;;;;;;;;;;;:44;;;;3041:9;3051:1;3041:12;;;;;;;;;;;;;;-1:-1:-1;;;;;3020:34:6;3028:8;3037:1;3028:11;;;;;;;;;;;;;;3020:34;;;;;;;;;;2907:162;2889:3;;2854:225;;3245:125:9;3308:7;3334:12;;;;;;;;;;:29;;:27;:29::i;909:62:12:-;-1:-1:-1;;;;;;;;;;;909:62:12;:::o;5091:226:9:-;5183:6;:12;;;;;;;;;;:22;;;5175:45;;5207:12;:10;:12::i;5175:45::-;5167:106;;;;-1:-1:-1;;;5167:106:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3968:149:13;-1:-1:-1;;;;;4083:18:13;;;4057:7;4083:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3968:149::o;977:62:12:-;-1:-1:-1;;;;;;;;;;;977:62:12;:::o;4864:141:18:-;4934:4;4957:41;4962:3;-1:-1:-1;;;;;4982:14:18;;4957:4;:41::i;590:104:8:-;677:10;590:104;:::o;9357:340:13:-;-1:-1:-1;;;;;9458:19:13;;9450:68;;;;-1:-1:-1;;;9450:68:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9536:21:13;;9528:68;;;;-1:-1:-1;;;9528:68:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9607:18:13;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9658:32;;;;;;;;;;;;;;;;;9357:340;;;:::o;7035:530::-;-1:-1:-1;;;;;7140:20:13;;7132:70;;;;-1:-1:-1;;;7132:70:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7220:23:13;;7212:71;;;;-1:-1:-1;;;7212:71:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7294:47;7315:6;7323:9;7334:6;7294:20;:47::i;:::-;7372:71;7394:6;7372:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7372:17:13;;;;;;:9;:17;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;7352:17:13;;;;;;;:9;:17;;;;;;:91;;;;7476:20;;;;;;;:32;;7501:6;7476:24;:32::i;:::-;-1:-1:-1;;;;;7453:20:13;;;;;;;:9;:20;;;;;;;;;:55;;;;7523:35;;;;;;;7453:20;;7523:35;;;;-1:-1:-1;;;;;;;;;;;7523:35:13;;;;;;;;7035:530;;;:::o;1746:187:11:-;1832:7;1867:12;1859:6;;;;1851:29;;;;-1:-1:-1;;;1851:29:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1902:5:11;;;1746:187::o;7015:184:9:-;7088:6;:12;;;;;;;;;;:33;;7113:7;7088:24;:33::i;:::-;7084:109;;;7169:12;:10;:12::i;:::-;-1:-1:-1;;;;;7142:40:9;7160:7;-1:-1:-1;;;;;7142:40:9;7154:4;7142:40;;;;;;;;;;7015:184;;:::o;7205:188::-;7279:6;:12;;;;;;;;;;:36;;7307:7;7279:27;:36::i;:::-;7275:112;;;7363:12;:10;:12::i;:::-;-1:-1:-1;;;;;7336:40:9;7354:7;-1:-1:-1;;;;;7336:40:9;7348:4;7336:40;;;;;;;;;;7205:188;;:::o;874:176:11:-;932:7;963:5;;;986:6;;;;978:46;;;;;-1:-1:-1;;;978:46:11;;;;;;;;;;;;;;;;;;;;;;;;;;;2042:117:19;1610:7;;;;;;;1602:40;;;;;-1:-1:-1;;;1602:40:19;;;;;;;;;;;;-1:-1:-1;;;1602:40:19;;;;;;;;;;;;;;;2100:7:::1;:15:::0;;-1:-1:-1;;2100:15:19::1;::::0;;2130:22:::1;2139:12;:10;:12::i;:::-;2130:22;::::0;;-1:-1:-1;;;;;2130:22:19;;::::1;::::0;;;;;;;::::1;::::0;;::::1;2042:117::o:0;7835:370:13:-;-1:-1:-1;;;;;7918:21:13;;7910:65;;;;;-1:-1:-1;;;7910:65:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;7986:49;8015:1;8019:7;8028:6;7986:20;:49::i;:::-;8061:12;;:24;;8078:6;8061:16;:24::i;:::-;8046:12;:39;-1:-1:-1;;;;;8116:18:13;;;;;;:9;:18;;;;;;:30;;8139:6;8116:22;:30::i;:::-;-1:-1:-1;;;;;8095:18:13;;;;;;:9;:18;;;;;;;;:51;;;;8161:37;;;;;;;8095:18;;;;-1:-1:-1;;;;;;;;;;;8161:37:13;;;;;;;;;7835:370;;:::o;8524:410::-;-1:-1:-1;;;;;8607:21:13;;8599:67;;;;-1:-1:-1;;;8599:67:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8677:49;8698:7;8715:1;8719:6;8677:20;:49::i;:::-;8758:68;8781:6;8758:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8758:18:13;;;;;;:9;:18;;;;;;;:68;:22;:68::i;:::-;-1:-1:-1;;;;;8737:18:13;;;;;;:9;:18;;;;;:89;8851:12;;:24;;8868:6;8851:16;:24::i;:::-;8836:12;:39;8890:37;;;;;;;;8916:1;;-1:-1:-1;;;;;8890:37:13;;;-1:-1:-1;;;;;;;;;;;8890:37:13;;;;;;;;8524:410;;:::o;1795:115:19:-;1346:7;;;;;;;1345:8;1337:37;;;;;-1:-1:-1;;;1337:37:19;;;;;;;;;;;;-1:-1:-1;;;1337:37:19;;;;;;;;;;;;;;;1854:7:::1;:14:::0;;-1:-1:-1;;1854:14:19::1;;;::::0;;1883:20:::1;1890:12;:10;:12::i;6085:147:18:-:0;6159:7;6201:22;6205:3;6217:5;6201:3;:22::i;5401:156::-;5481:4;5504:46;5514:3;-1:-1:-1;;;;;5534:14:18;;5504:9;:46::i;5638:115::-;5701:7;5727:19;5735:3;5727:7;:19::i;1611:404::-;1674:4;1695:21;1705:3;1710:5;1695:9;:21::i;:::-;1690:319;;-1:-1:-1;1732:23:18;;;;;;;;:11;:23;;;;;;;;;;;;;1912:18;;1890:19;;;:12;;;:19;;;;;;:40;;;;1944:11;;1690:319;-1:-1:-1;1993:5:18;1986:12;;2611:181:12;2741:44;2768:4;2774:2;2778:6;2741:26;:44::i;5173:147:18:-;5246:4;5269:44;5277:3;-1:-1:-1;;;;;5297:14:18;;5269:7;:44::i;1321:134:11:-;1379:7;1405:43;1409:1;1412;1405:43;;;;;;;;;;;;;;;;;:3;:43::i;4423:201:18:-;4517:18;;4490:7;;4517:26;-1:-1:-1;4509:73:18;;;;-1:-1:-1;;;4509:73:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4599:3;:11;;4611:5;4599:18;;;;;;;;;;;;;;;;4592:25;;4423:201;;;;:::o;3776:127::-;3849:4;3872:19;;;:12;;;;;:19;;;;;;:24;;;3776:127::o;3984:107::-;4066:18;;3984:107::o;582:234:15:-;690:44;717:4;723:2;727:6;690:26;:44::i;:::-;754:8;:6;:8::i;:::-;753:9;745:64;;;;-1:-1:-1;;;745:64:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2183:1512:18;2249:4;2386:19;;;:12;;;:19;;;;;;2420:15;;2416:1273;;2849:18;;-1:-1:-1;;2801:14:18;;;;2849:22;;;;2777:21;;2849:3;;:22;;3131;;;;;;;;;;;;;;3111:42;;3274:9;3245:3;:11;;3257:13;3245:26;;;;;;;;;;;;;;;;;;;:38;;;;3349:23;;;3391:1;3349:12;;;:23;;;;;;3375:17;;;3349:43;;3498:17;;3349:3;;3498:17;;;;;;;;;;;;;;;;;;;;;;3590:3;:12;;:19;3603:5;3590:19;;;;;;;;;;;3583:26;;;3631:4;3624:11;;;;;;;;2416:1273;3673:5;3666:12;;;;",
  "source": "// bDSLAToken.sol\n// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\nimport \"@openzeppelin/contracts/presets/ERC20PresetMinterPauser.sol\";\n\n/**\n * @dev {bDSLA} token, including:\n *\n *  - ability for holders to burn (destroy) their tokens\n *  - a minter role that allows for token minting (creation)\n *  - a pauser role that allows to stop all token transfers\n *  - a claim procces for DSLA owners \n *\n * This contract uses {AccessControl} to lock permissioned functions using the\n * different roles. \n *\n * The account that deploys the contract will be granted the minter and pauser\n * roles, as well as the default admin role, which will let it grant both minter\n * and pauser roles to other accounts.\n */\n \ncontract bDSLAToken is ERC20PresetMinterPauser {\n    mapping (address => uint256) private _allowedBalances;\n    mapping (address => bool) private _claimed;\n    event Allowed(uint indexed _amount, address indexed _claimer);\n\n    \n    /**\n     * @dev Sets the values for {name} and {symbol}, {decimals} have \n     * a default value of 18.\n     *\n     *\n     * All three of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor() public ERC20PresetMinterPauser(\"bDSLA Token\", \"bDSLA\") {\n    }\n    \n    /**\n     * @notice the setAllowedAmount function allows the admin to set an amount \n     * of claimable bDSLA based on the balanceOf DSLA token of the claimer on the\n     * mainnet. \n     * @dev allows the claim of `_amount` for `_claimer`.\n     * \n     * @param _amount uint the equivalent amount of DSLA tokens on the mainnet \n     * @param _claimer address of the claimer   \n     *\n     *\n     * Requirements:\n     *\n     * - the caller must have the `(DEFAULT_ADMIN_ROLE)`.\n     */\n    function setAllowedAmount(uint _amount, address _claimer) public {\n        require(hasRole(DEFAULT_ADMIN_ROLE, _msgSender()), \"ERC20PresetMinterPauser: must have admin role\");\n        require(!_claimed[_claimer], \"bDSLAToken: tokens already claimed\");\n        _allowedBalances[_claimer] = _amount; \n        emit Allowed(_amount, _claimer);\n    }\n\n    /**\n     * @notice the setAllowedAmounts function allows the admin to set \n     * a claimable amounts of bDSLA for claimers. \n     * \n     * @dev allows the claim of `_amounts` for `_claimers`.\n     * \n     * @param _amounts an array of amounts to be claimed \n     * @param _claimers an array of addresses of the claimers    \n     *\n     *\n     * Requirements:\n     *\n     * - the caller must have the `(DEFAULT_ADMIN_ROLE)`.\n     */\n    function setAllowedAmounts(uint[] memory _amounts, address[] memory _claimers) public {\n        require(hasRole(DEFAULT_ADMIN_ROLE, _msgSender()), \"ERC20PresetMinterPauser: must have admin role\");\n        require(_amounts.length == _claimers.length, \"bDSLAToken: must have the same number of items\");\n        for(uint i=0; i < _amounts.length; i++){\n            if(!_claimed[_claimers[i]]){\n                _allowedBalances[_claimers[i]] = _amounts[i]; \n                emit Allowed(_amounts[i], _claimers[i]);\n            }\n        }\n    }\n    \n    /**\n     * @notice the setAllowedAmounts function allows the admin to set \n     * a claimable amounts of bDSLA for claimers. \n     * \n     * @dev creates new 'bDSLA' tokens for the `_claimer`.\n     * \n     * @param _claimer address of the claimer \n     *\n     *\n     * Requirements:\n     *\n     * - the caller must have the `(MINTER_ROLE)`.\n     * - the claimer should have an allowed balance \n     * - the claim can be done just once \n     */\n    function claim(address _claimer) public {\n        require(hasRole(MINTER_ROLE, _msgSender()), \"ERC20PresetMinterPauser: must have minter role\");\n        require(_allowedBalances[_claimer] > 0, \"bDSLAToken: must have an allowed amoun to claim\");\n        require(!_claimed[_claimer], \"bDSLAToken: tokens already claimed\");\n        _claimed[_claimer] = true; \n        mint(_claimer, _allowedBalances[_claimer]);\n    }\n}",
  "sourcePath": "/Users/wilhempujar/Development/stacktical-dsla-contracts/contracts/bDSLA/bDSLAToken.sol",
  "ast": {
    "absolutePath": "/Users/wilhempujar/Development/stacktical-dsla-contracts/contracts/bDSLA/bDSLAToken.sol",
    "exportedSymbols": {
      "bDSLAToken": [
        1879
      ]
    },
    "id": 1880,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1699,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "50:23:6"
>>>>>>> dsla-incentivized-beta-phase-i
      },
      {
        "absolutePath": "@openzeppelin/contracts/presets/ERC20PresetMinterPauser.sol",
        "file": "@openzeppelin/contracts/presets/ERC20PresetMinterPauser.sol",
<<<<<<< HEAD
        "id": 1848,
        "nodeType": "ImportDirective",
        "scope": 2028,
        "sourceUnit": 2793,
        "src": "74:69:8",
=======
        "id": 1700,
        "nodeType": "ImportDirective",
        "scope": 1880,
        "sourceUnit": 2645,
        "src": "75:69:6",
>>>>>>> dsla-incentivized-beta-phase-i
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
<<<<<<< HEAD
              "id": 1850,
              "name": "ERC20PresetMinterPauser",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2792,
              "src": "737:23:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20PresetMinterPauser_$2792",
                "typeString": "contract ERC20PresetMinterPauser"
              }
            },
            "id": 1851,
            "nodeType": "InheritanceSpecifier",
            "src": "737:23:8"
          }
        ],
        "contractDependencies": [
          2068,
          2351,
          2792,
          3299,
          3355,
          3392,
          3470,
          4150
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1849,
          "nodeType": "StructuredDocumentation",
          "src": "145:566:8",
          "text": "@dev {bDSLA} token, including:\n *  - ability for holders to burn (destroy) their tokens\n - a minter role that allows for token minting (creation)\n - a pauser role that allows to stop all token transfers\n - a claim procces for DSLA owners \n * This contract uses {AccessControl} to lock permissioned functions using the\ndifferent roles. \n * The account that deploys the contract will be granted the minter and pauser\nroles, as well as the default admin role, which will let it grant both minter\nand pauser roles to other accounts."
        },
        "fullyImplemented": true,
        "id": 2027,
        "linearizedBaseContracts": [
          2027,
          2792,
          3392,
          4150,
          3355,
          3299,
          3470,
          2351,
          2068
=======
              "id": 1702,
              "name": "ERC20PresetMinterPauser",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2644,
              "src": "738:23:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20PresetMinterPauser_$2644",
                "typeString": "contract ERC20PresetMinterPauser"
              }
            },
            "id": 1703,
            "nodeType": "InheritanceSpecifier",
            "src": "738:23:6"
          }
        ],
        "contractDependencies": [
          1920,
          2203,
          2644,
          3151,
          3207,
          3244,
          3322,
          4002
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1701,
          "nodeType": "StructuredDocumentation",
          "src": "146:566:6",
          "text": " @dev {bDSLA} token, including:\n  - ability for holders to burn (destroy) their tokens\n  - a minter role that allows for token minting (creation)\n  - a pauser role that allows to stop all token transfers\n  - a claim procces for DSLA owners \n This contract uses {AccessControl} to lock permissioned functions using the\n different roles. \n The account that deploys the contract will be granted the minter and pauser\n roles, as well as the default admin role, which will let it grant both minter\n and pauser roles to other accounts."
        },
        "fullyImplemented": true,
        "id": 1879,
        "linearizedBaseContracts": [
          1879,
          2644,
          3244,
          4002,
          3207,
          3151,
          3322,
          2203,
          1920
>>>>>>> dsla-incentivized-beta-phase-i
        ],
        "name": "bDSLAToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
<<<<<<< HEAD
            "id": 1855,
=======
            "id": 1707,
>>>>>>> dsla-incentivized-beta-phase-i
            "mutability": "mutable",
            "name": "_allowedBalances",
            "nodeType": "VariableDeclaration",
            "overrides": null,
<<<<<<< HEAD
            "scope": 2027,
            "src": "767:53:8",
=======
            "scope": 1879,
            "src": "768:53:6",
>>>>>>> dsla-incentivized-beta-phase-i
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 1854,
              "keyType": {
                "id": 1852,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "776:7:8",
=======
              "id": 1706,
              "keyType": {
                "id": 1704,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "777:7:6",
>>>>>>> dsla-incentivized-beta-phase-i
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
<<<<<<< HEAD
              "src": "767:28:8",
=======
              "src": "768:28:6",
>>>>>>> dsla-incentivized-beta-phase-i
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
<<<<<<< HEAD
                "id": 1853,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "787:7:8",
=======
                "id": 1705,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "788:7:6",
>>>>>>> dsla-incentivized-beta-phase-i
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "id": 1859,
=======
            "id": 1711,
>>>>>>> dsla-incentivized-beta-phase-i
            "mutability": "mutable",
            "name": "_claimed",
            "nodeType": "VariableDeclaration",
            "overrides": null,
<<<<<<< HEAD
            "scope": 2027,
            "src": "826:42:8",
=======
            "scope": 1879,
            "src": "827:42:6",
>>>>>>> dsla-incentivized-beta-phase-i
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 1858,
              "keyType": {
                "id": 1856,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "835:7:8",
=======
              "id": 1710,
              "keyType": {
                "id": 1708,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "836:7:6",
>>>>>>> dsla-incentivized-beta-phase-i
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
<<<<<<< HEAD
              "src": "826:25:8",
=======
              "src": "827:25:6",
>>>>>>> dsla-incentivized-beta-phase-i
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
<<<<<<< HEAD
                "id": 1857,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "846:4:8",
=======
                "id": 1709,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "847:4:6",
>>>>>>> dsla-incentivized-beta-phase-i
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
<<<<<<< HEAD
            "id": 1865,
            "name": "Allowed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1864,
=======
            "id": 1717,
            "name": "Allowed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1716,
>>>>>>> dsla-incentivized-beta-phase-i
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1861,
=======
                  "id": 1713,
>>>>>>> dsla-incentivized-beta-phase-i
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 1865,
                  "src": "888:20:8",
=======
                  "scope": 1717,
                  "src": "889:20:6",
>>>>>>> dsla-incentivized-beta-phase-i
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1860,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "888:4:8",
=======
                    "id": 1712,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "889:4:6",
>>>>>>> dsla-incentivized-beta-phase-i
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1863,
=======
                  "id": 1715,
>>>>>>> dsla-incentivized-beta-phase-i
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_claimer",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 1865,
                  "src": "910:24:8",
=======
                  "scope": 1717,
                  "src": "911:24:6",
>>>>>>> dsla-incentivized-beta-phase-i
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1862,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "910:7:8",
=======
                    "id": 1714,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "911:7:6",
>>>>>>> dsla-incentivized-beta-phase-i
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "887:48:8"
            },
            "src": "874:62:8"
          },
          {
            "body": {
              "id": 1873,
              "nodeType": "Block",
              "src": "1248:7:8",
              "statements": []
            },
            "documentation": {
              "id": 1866,
              "nodeType": "StructuredDocumentation",
              "src": "947:227:8",
              "text": "@dev Sets the values for {name} and {symbol}, {decimals} have \na default value of 18.\n     *\nAll three of these values are immutable: they can only be set once during\nconstruction."
            },
            "id": 1874,
=======
              "src": "888:48:6"
            },
            "src": "875:62:6"
          },
          {
            "body": {
              "id": 1725,
              "nodeType": "Block",
              "src": "1249:7:6",
              "statements": []
            },
            "documentation": {
              "id": 1718,
              "nodeType": "StructuredDocumentation",
              "src": "948:227:6",
              "text": " @dev Sets the values for {name} and {symbol}, {decimals} have \n a default value of 18.\n All three of these values are immutable: they can only be set once during\n construction."
            },
            "id": 1726,
>>>>>>> dsla-incentivized-beta-phase-i
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "6244534c4120546f6b656e",
<<<<<<< HEAD
                    "id": 1869,
=======
                    "id": 1721,
>>>>>>> dsla-incentivized-beta-phase-i
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
<<<<<<< HEAD
                    "src": "1224:13:8",
=======
                    "src": "1225:13:6",
>>>>>>> dsla-incentivized-beta-phase-i
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_a0f8e7207a91eb87790243c7a099ba9f490f44961c2181a1a4c60fa5a6b01ece",
                      "typeString": "literal_string \"bDSLA Token\""
                    },
                    "value": "bDSLA Token"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "6244534c41",
<<<<<<< HEAD
                    "id": 1870,
=======
                    "id": 1722,
>>>>>>> dsla-incentivized-beta-phase-i
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
<<<<<<< HEAD
                    "src": "1239:7:8",
=======
                    "src": "1240:7:6",
>>>>>>> dsla-incentivized-beta-phase-i
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9437f0a135e20863c5708cf6dd64ee7503c7daf952c570e536e9f98f7db581bc",
                      "typeString": "literal_string \"bDSLA\""
                    },
                    "value": "bDSLA"
                  }
                ],
<<<<<<< HEAD
                "id": 1871,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1868,
                  "name": "ERC20PresetMinterPauser",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2792,
                  "src": "1200:23:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20PresetMinterPauser_$2792_$",
=======
                "id": 1723,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1720,
                  "name": "ERC20PresetMinterPauser",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2644,
                  "src": "1201:23:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20PresetMinterPauser_$2644_$",
>>>>>>> dsla-incentivized-beta-phase-i
                    "typeString": "type(contract ERC20PresetMinterPauser)"
                  }
                },
                "nodeType": "ModifierInvocation",
<<<<<<< HEAD
                "src": "1200:47:8"
=======
                "src": "1201:47:6"
>>>>>>> dsla-incentivized-beta-phase-i
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
<<<<<<< HEAD
              "id": 1867,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1190:2:8"
            },
            "returnParameters": {
              "id": 1872,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1248:0:8"
            },
            "scope": 2027,
            "src": "1179:76:8",
=======
              "id": 1719,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1191:2:6"
            },
            "returnParameters": {
              "id": 1724,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1249:0:6"
            },
            "scope": 1879,
            "src": "1180:76:6",
>>>>>>> dsla-incentivized-beta-phase-i
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 1910,
              "nodeType": "Block",
              "src": "1820:280:8",
=======
              "id": 1762,
              "nodeType": "Block",
              "src": "1821:280:6",
>>>>>>> dsla-incentivized-beta-phase-i
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
<<<<<<< HEAD
                            "id": 1884,
                            "name": "DEFAULT_ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2094,
                            "src": "1846:18:8",
=======
                            "id": 1736,
                            "name": "DEFAULT_ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1946,
                            "src": "1847:18:6",
>>>>>>> dsla-incentivized-beta-phase-i
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
<<<<<<< HEAD
                              "id": 1885,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2056,
                              "src": "1866:10:8",
=======
                              "id": 1737,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1908,
                              "src": "1867:10:6",
>>>>>>> dsla-incentivized-beta-phase-i
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
<<<<<<< HEAD
                            "id": 1886,
=======
                            "id": 1738,
>>>>>>> dsla-incentivized-beta-phase-i
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "1866:12:8",
=======
                            "src": "1867:12:6",
>>>>>>> dsla-incentivized-beta-phase-i
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
<<<<<<< HEAD
                          "id": 1883,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2140,
                          "src": "1838:7:8",
=======
                          "id": 1735,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1992,
                          "src": "1839:7:6",
>>>>>>> dsla-incentivized-beta-phase-i
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
<<<<<<< HEAD
                        "id": 1887,
=======
                        "id": 1739,
>>>>>>> dsla-incentivized-beta-phase-i
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "1838:41:8",
=======
                        "src": "1839:41:6",
>>>>>>> dsla-incentivized-beta-phase-i
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332305072657365744d696e7465725061757365723a206d75737420686176652061646d696e20726f6c65",
<<<<<<< HEAD
                        "id": 1888,
=======
                        "id": 1740,
>>>>>>> dsla-incentivized-beta-phase-i
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "1881:47:8",
=======
                        "src": "1882:47:6",
>>>>>>> dsla-incentivized-beta-phase-i
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f954e54666f4174b0688c0dd5f29469840042422fddd6a1edbf310926fe30273",
                          "typeString": "literal_string \"ERC20PresetMinterPauser: must have admin role\""
                        },
                        "value": "ERC20PresetMinterPauser: must have admin role"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f954e54666f4174b0688c0dd5f29469840042422fddd6a1edbf310926fe30273",
                          "typeString": "literal_string \"ERC20PresetMinterPauser: must have admin role\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 1882,
=======
                      "id": 1734,
>>>>>>> dsla-incentivized-beta-phase-i
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
<<<<<<< HEAD
                      "src": "1830:7:8",
=======
                      "src": "1831:7:6",
>>>>>>> dsla-incentivized-beta-phase-i
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 1889,
=======
                    "id": 1741,
>>>>>>> dsla-incentivized-beta-phase-i
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "1830:99:8",
=======
                    "src": "1831:99:6",
>>>>>>> dsla-incentivized-beta-phase-i
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1890,
                  "nodeType": "ExpressionStatement",
                  "src": "1830:99:8"
=======
                  "id": 1742,
                  "nodeType": "ExpressionStatement",
                  "src": "1831:99:6"
>>>>>>> dsla-incentivized-beta-phase-i
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 1895,
=======
                        "id": 1747,
>>>>>>> dsla-incentivized-beta-phase-i
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
<<<<<<< HEAD
                        "src": "1947:19:8",
=======
                        "src": "1948:19:6",
>>>>>>> dsla-incentivized-beta-phase-i
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
<<<<<<< HEAD
                            "id": 1892,
                            "name": "_claimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1859,
                            "src": "1948:8:8",
=======
                            "id": 1744,
                            "name": "_claimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1711,
                            "src": "1949:8:6",
>>>>>>> dsla-incentivized-beta-phase-i
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
<<<<<<< HEAD
                          "id": 1894,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1893,
                            "name": "_claimer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1879,
                            "src": "1957:8:8",
=======
                          "id": 1746,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1745,
                            "name": "_claimer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1731,
                            "src": "1958:8:6",
>>>>>>> dsla-incentivized-beta-phase-i
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
<<<<<<< HEAD
                          "src": "1948:18:8",
=======
                          "src": "1949:18:6",
>>>>>>> dsla-incentivized-beta-phase-i
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6244534c41546f6b656e3a20746f6b656e7320616c726561647920636c61696d6564",
<<<<<<< HEAD
                        "id": 1896,
=======
                        "id": 1748,
>>>>>>> dsla-incentivized-beta-phase-i
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "1968:36:8",
=======
                        "src": "1969:36:6",
>>>>>>> dsla-incentivized-beta-phase-i
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c85c62ca35affe0b9092bce01165096b06701b26b9c09c0398b1799e70f1e706",
                          "typeString": "literal_string \"bDSLAToken: tokens already claimed\""
                        },
                        "value": "bDSLAToken: tokens already claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c85c62ca35affe0b9092bce01165096b06701b26b9c09c0398b1799e70f1e706",
                          "typeString": "literal_string \"bDSLAToken: tokens already claimed\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 1891,
=======
                      "id": 1743,
>>>>>>> dsla-incentivized-beta-phase-i
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
<<<<<<< HEAD
                      "src": "1939:7:8",
=======
                      "src": "1940:7:6",
>>>>>>> dsla-incentivized-beta-phase-i
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 1897,
=======
                    "id": 1749,
>>>>>>> dsla-incentivized-beta-phase-i
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "1939:66:8",
=======
                    "src": "1940:66:6",
>>>>>>> dsla-incentivized-beta-phase-i
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1898,
                  "nodeType": "ExpressionStatement",
                  "src": "1939:66:8"
=======
                  "id": 1750,
                  "nodeType": "ExpressionStatement",
                  "src": "1940:66:6"
>>>>>>> dsla-incentivized-beta-phase-i
                },
                {
                  "expression": {
                    "argumentTypes": null,
<<<<<<< HEAD
                    "id": 1903,
=======
                    "id": 1755,
>>>>>>> dsla-incentivized-beta-phase-i
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 1899,
                        "name": "_allowedBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1855,
                        "src": "2015:16:8",
=======
                        "id": 1751,
                        "name": "_allowedBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1707,
                        "src": "2016:16:6",
>>>>>>> dsla-incentivized-beta-phase-i
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
<<<<<<< HEAD
                      "id": 1901,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1900,
                        "name": "_claimer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1879,
                        "src": "2032:8:8",
=======
                      "id": 1753,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1752,
                        "name": "_claimer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1731,
                        "src": "2033:8:6",
>>>>>>> dsla-incentivized-beta-phase-i
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "2015:26:8",
=======
                      "src": "2016:26:6",
>>>>>>> dsla-incentivized-beta-phase-i
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
<<<<<<< HEAD
                      "id": 1902,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1877,
                      "src": "2044:7:8",
=======
                      "id": 1754,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1729,
                      "src": "2045:7:6",
>>>>>>> dsla-incentivized-beta-phase-i
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "2015:36:8",
=======
                    "src": "2016:36:6",
>>>>>>> dsla-incentivized-beta-phase-i
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "id": 1904,
                  "nodeType": "ExpressionStatement",
                  "src": "2015:36:8"
=======
                  "id": 1756,
                  "nodeType": "ExpressionStatement",
                  "src": "2016:36:6"
>>>>>>> dsla-incentivized-beta-phase-i
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 1906,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1877,
                        "src": "2075:7:8",
=======
                        "id": 1758,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1729,
                        "src": "2076:7:6",
>>>>>>> dsla-incentivized-beta-phase-i
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 1907,
                        "name": "_claimer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1879,
                        "src": "2084:8:8",
=======
                        "id": 1759,
                        "name": "_claimer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1731,
                        "src": "2085:8:6",
>>>>>>> dsla-incentivized-beta-phase-i
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
<<<<<<< HEAD
                      "id": 1905,
                      "name": "Allowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1865,
                      "src": "2067:7:8",
=======
                      "id": 1757,
                      "name": "Allowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1717,
                      "src": "2068:7:6",
>>>>>>> dsla-incentivized-beta-phase-i
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
<<<<<<< HEAD
                    "id": 1908,
=======
                    "id": 1760,
>>>>>>> dsla-incentivized-beta-phase-i
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2067:26:8",
=======
                    "src": "2068:26:6",
>>>>>>> dsla-incentivized-beta-phase-i
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1909,
                  "nodeType": "EmitStatement",
                  "src": "2062:31:8"
=======
                  "id": 1761,
                  "nodeType": "EmitStatement",
                  "src": "2063:31:6"
>>>>>>> dsla-incentivized-beta-phase-i
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 1875,
              "nodeType": "StructuredDocumentation",
              "src": "1265:485:8",
              "text": "@notice the setAllowedAmount function allows the admin to set an amount \nof claimable bDSLA based on the balanceOf DSLA token of the claimer on the\nmainnet. \n@dev allows the claim of `_amount` for `_claimer`.\n\n     * @param _amount uint the equivalent amount of DSLA tokens on the mainnet \n@param _claimer address of the claimer   \n     *\nRequirements:\n     * - the caller must have the `(DEFAULT_ADMIN_ROLE)`."
            },
            "functionSelector": "522fe133",
            "id": 1911,
=======
              "id": 1727,
              "nodeType": "StructuredDocumentation",
              "src": "1266:485:6",
              "text": " @notice the setAllowedAmount function allows the admin to set an amount \n of claimable bDSLA based on the balanceOf DSLA token of the claimer on the\n mainnet. \n @dev allows the claim of `_amount` for `_claimer`.\n \n @param _amount uint the equivalent amount of DSLA tokens on the mainnet \n @param _claimer address of the claimer   \n Requirements:\n - the caller must have the `(DEFAULT_ADMIN_ROLE)`."
            },
            "functionSelector": "522fe133",
            "id": 1763,
>>>>>>> dsla-incentivized-beta-phase-i
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAllowedAmount",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
<<<<<<< HEAD
              "id": 1880,
=======
              "id": 1732,
>>>>>>> dsla-incentivized-beta-phase-i
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1877,
=======
                  "id": 1729,
>>>>>>> dsla-incentivized-beta-phase-i
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 1911,
                  "src": "1781:12:8",
=======
                  "scope": 1763,
                  "src": "1782:12:6",
>>>>>>> dsla-incentivized-beta-phase-i
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1876,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1781:4:8",
=======
                    "id": 1728,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1782:4:6",
>>>>>>> dsla-incentivized-beta-phase-i
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1879,
=======
                  "id": 1731,
>>>>>>> dsla-incentivized-beta-phase-i
                  "mutability": "mutable",
                  "name": "_claimer",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 1911,
                  "src": "1795:16:8",
=======
                  "scope": 1763,
                  "src": "1796:16:6",
>>>>>>> dsla-incentivized-beta-phase-i
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1878,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1795:7:8",
=======
                    "id": 1730,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1796:7:6",
>>>>>>> dsla-incentivized-beta-phase-i
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1780:32:8"
            },
            "returnParameters": {
              "id": 1881,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1820:0:8"
            },
            "scope": 2027,
            "src": "1755:345:8",
=======
              "src": "1781:32:6"
            },
            "returnParameters": {
              "id": 1733,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1821:0:6"
            },
            "scope": 1879,
            "src": "1756:345:6",
>>>>>>> dsla-incentivized-beta-phase-i
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 1979,
              "nodeType": "Block",
              "src": "2630:454:8",
=======
              "id": 1831,
              "nodeType": "Block",
              "src": "2631:454:6",
>>>>>>> dsla-incentivized-beta-phase-i
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
<<<<<<< HEAD
                            "id": 1923,
                            "name": "DEFAULT_ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2094,
                            "src": "2656:18:8",
=======
                            "id": 1775,
                            "name": "DEFAULT_ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1946,
                            "src": "2657:18:6",
>>>>>>> dsla-incentivized-beta-phase-i
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
<<<<<<< HEAD
                              "id": 1924,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2056,
                              "src": "2676:10:8",
=======
                              "id": 1776,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1908,
                              "src": "2677:10:6",
>>>>>>> dsla-incentivized-beta-phase-i
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
<<<<<<< HEAD
                            "id": 1925,
=======
                            "id": 1777,
>>>>>>> dsla-incentivized-beta-phase-i
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "2676:12:8",
=======
                            "src": "2677:12:6",
>>>>>>> dsla-incentivized-beta-phase-i
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
<<<<<<< HEAD
                          "id": 1922,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2140,
                          "src": "2648:7:8",
=======
                          "id": 1774,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1992,
                          "src": "2649:7:6",
>>>>>>> dsla-incentivized-beta-phase-i
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
<<<<<<< HEAD
                        "id": 1926,
=======
                        "id": 1778,
>>>>>>> dsla-incentivized-beta-phase-i
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "2648:41:8",
=======
                        "src": "2649:41:6",
>>>>>>> dsla-incentivized-beta-phase-i
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332305072657365744d696e7465725061757365723a206d75737420686176652061646d696e20726f6c65",
<<<<<<< HEAD
                        "id": 1927,
=======
                        "id": 1779,
>>>>>>> dsla-incentivized-beta-phase-i
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "2691:47:8",
=======
                        "src": "2692:47:6",
>>>>>>> dsla-incentivized-beta-phase-i
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f954e54666f4174b0688c0dd5f29469840042422fddd6a1edbf310926fe30273",
                          "typeString": "literal_string \"ERC20PresetMinterPauser: must have admin role\""
                        },
                        "value": "ERC20PresetMinterPauser: must have admin role"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f954e54666f4174b0688c0dd5f29469840042422fddd6a1edbf310926fe30273",
                          "typeString": "literal_string \"ERC20PresetMinterPauser: must have admin role\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 1921,
=======
                      "id": 1773,
>>>>>>> dsla-incentivized-beta-phase-i
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
<<<<<<< HEAD
                      "src": "2640:7:8",
=======
                      "src": "2641:7:6",
>>>>>>> dsla-incentivized-beta-phase-i
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 1928,
=======
                    "id": 1780,
>>>>>>> dsla-incentivized-beta-phase-i
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2640:99:8",
=======
                    "src": "2641:99:6",
>>>>>>> dsla-incentivized-beta-phase-i
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1929,
                  "nodeType": "ExpressionStatement",
                  "src": "2640:99:8"
=======
                  "id": 1781,
                  "nodeType": "ExpressionStatement",
                  "src": "2641:99:6"
>>>>>>> dsla-incentivized-beta-phase-i
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
<<<<<<< HEAD
                        "id": 1935,
=======
                        "id": 1787,
>>>>>>> dsla-incentivized-beta-phase-i
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
<<<<<<< HEAD
                            "id": 1931,
                            "name": "_amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1915,
                            "src": "2757:8:8",
=======
                            "id": 1783,
                            "name": "_amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1767,
                            "src": "2758:8:6",
>>>>>>> dsla-incentivized-beta-phase-i
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
<<<<<<< HEAD
                          "id": 1932,
=======
                          "id": 1784,
>>>>>>> dsla-incentivized-beta-phase-i
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
<<<<<<< HEAD
                          "src": "2757:15:8",
=======
                          "src": "2758:15:6",
>>>>>>> dsla-incentivized-beta-phase-i
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
<<<<<<< HEAD
                            "id": 1933,
                            "name": "_claimers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1918,
                            "src": "2776:9:8",
=======
                            "id": 1785,
                            "name": "_claimers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1770,
                            "src": "2777:9:6",
>>>>>>> dsla-incentivized-beta-phase-i
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
<<<<<<< HEAD
                          "id": 1934,
=======
                          "id": 1786,
>>>>>>> dsla-incentivized-beta-phase-i
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
<<<<<<< HEAD
                          "src": "2776:16:8",
=======
                          "src": "2777:16:6",
>>>>>>> dsla-incentivized-beta-phase-i
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD
                        "src": "2757:35:8",
=======
                        "src": "2758:35:6",
>>>>>>> dsla-incentivized-beta-phase-i
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6244534c41546f6b656e3a206d7573742068617665207468652073616d65206e756d626572206f66206974656d73",
<<<<<<< HEAD
                        "id": 1936,
=======
                        "id": 1788,
>>>>>>> dsla-incentivized-beta-phase-i
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "2794:48:8",
=======
                        "src": "2795:48:6",
>>>>>>> dsla-incentivized-beta-phase-i
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_31aa12f01a00bc9daa87ac305ce5cfcbc7d92d0300105d10e46dc53f1aee30ee",
                          "typeString": "literal_string \"bDSLAToken: must have the same number of items\""
                        },
                        "value": "bDSLAToken: must have the same number of items"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_31aa12f01a00bc9daa87ac305ce5cfcbc7d92d0300105d10e46dc53f1aee30ee",
                          "typeString": "literal_string \"bDSLAToken: must have the same number of items\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 1930,
=======
                      "id": 1782,
>>>>>>> dsla-incentivized-beta-phase-i
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
<<<<<<< HEAD
                      "src": "2749:7:8",
=======
                      "src": "2750:7:6",
>>>>>>> dsla-incentivized-beta-phase-i
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 1937,
=======
                    "id": 1789,
>>>>>>> dsla-incentivized-beta-phase-i
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2749:94:8",
=======
                    "src": "2750:94:6",
>>>>>>> dsla-incentivized-beta-phase-i
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1938,
                  "nodeType": "ExpressionStatement",
                  "src": "2749:94:8"
                },
                {
                  "body": {
                    "id": 1977,
                    "nodeType": "Block",
                    "src": "2892:186:8",
=======
                  "id": 1790,
                  "nodeType": "ExpressionStatement",
                  "src": "2750:94:6"
                },
                {
                  "body": {
                    "id": 1829,
                    "nodeType": "Block",
                    "src": "2893:186:6",
>>>>>>> dsla-incentivized-beta-phase-i
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
<<<<<<< HEAD
                          "id": 1955,
=======
                          "id": 1807,
>>>>>>> dsla-incentivized-beta-phase-i
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
<<<<<<< HEAD
                          "src": "2909:23:8",
=======
                          "src": "2910:23:6",
>>>>>>> dsla-incentivized-beta-phase-i
                          "subExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
<<<<<<< HEAD
                              "id": 1950,
                              "name": "_claimed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1859,
                              "src": "2910:8:8",
=======
                              "id": 1802,
                              "name": "_claimed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1711,
                              "src": "2911:8:6",
>>>>>>> dsla-incentivized-beta-phase-i
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
<<<<<<< HEAD
                            "id": 1954,
=======
                            "id": 1806,
>>>>>>> dsla-incentivized-beta-phase-i
                            "indexExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
<<<<<<< HEAD
                                "id": 1951,
                                "name": "_claimers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1918,
                                "src": "2919:9:8",
=======
                                "id": 1803,
                                "name": "_claimers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1770,
                                "src": "2920:9:6",
>>>>>>> dsla-incentivized-beta-phase-i
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
<<<<<<< HEAD
                              "id": 1953,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1952,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1940,
                                "src": "2929:1:8",
=======
                              "id": 1805,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1804,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1792,
                                "src": "2930:1:6",
>>>>>>> dsla-incentivized-beta-phase-i
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
<<<<<<< HEAD
                              "src": "2919:12:8",
=======
                              "src": "2920:12:6",
>>>>>>> dsla-incentivized-beta-phase-i
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "2910:22:8",
=======
                            "src": "2911:22:6",
>>>>>>> dsla-incentivized-beta-phase-i
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
<<<<<<< HEAD
                        "id": 1976,
                        "nodeType": "IfStatement",
                        "src": "2906:162:8",
                        "trueBody": {
                          "id": 1975,
                          "nodeType": "Block",
                          "src": "2933:135:8",
=======
                        "id": 1828,
                        "nodeType": "IfStatement",
                        "src": "2907:162:6",
                        "trueBody": {
                          "id": 1827,
                          "nodeType": "Block",
                          "src": "2934:135:6",
>>>>>>> dsla-incentivized-beta-phase-i
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
<<<<<<< HEAD
                                "id": 1964,
=======
                                "id": 1816,
>>>>>>> dsla-incentivized-beta-phase-i
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
<<<<<<< HEAD
                                    "id": 1956,
                                    "name": "_allowedBalances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1855,
                                    "src": "2951:16:8",
=======
                                    "id": 1808,
                                    "name": "_allowedBalances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1707,
                                    "src": "2952:16:6",
>>>>>>> dsla-incentivized-beta-phase-i
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
<<<<<<< HEAD
                                  "id": 1960,
=======
                                  "id": 1812,
>>>>>>> dsla-incentivized-beta-phase-i
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
<<<<<<< HEAD
                                      "id": 1957,
                                      "name": "_claimers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1918,
                                      "src": "2968:9:8",
=======
                                      "id": 1809,
                                      "name": "_claimers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1770,
                                      "src": "2969:9:6",
>>>>>>> dsla-incentivized-beta-phase-i
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
<<<<<<< HEAD
                                    "id": 1959,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 1958,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1940,
                                      "src": "2978:1:8",
=======
                                    "id": 1811,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 1810,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1792,
                                      "src": "2979:1:6",
>>>>>>> dsla-incentivized-beta-phase-i
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                                    "src": "2968:12:8",
=======
                                    "src": "2969:12:6",
>>>>>>> dsla-incentivized-beta-phase-i
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
<<<<<<< HEAD
                                  "src": "2951:30:8",
=======
                                  "src": "2952:30:6",
>>>>>>> dsla-incentivized-beta-phase-i
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
<<<<<<< HEAD
                                    "id": 1961,
                                    "name": "_amounts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1915,
                                    "src": "2984:8:8",
=======
                                    "id": 1813,
                                    "name": "_amounts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1767,
                                    "src": "2985:8:6",
>>>>>>> dsla-incentivized-beta-phase-i
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
<<<<<<< HEAD
                                  "id": 1963,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 1962,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1940,
                                    "src": "2993:1:8",
=======
                                  "id": 1815,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 1814,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1792,
                                    "src": "2994:1:6",
>>>>>>> dsla-incentivized-beta-phase-i
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
<<<<<<< HEAD
                                  "src": "2984:11:8",
=======
                                  "src": "2985:11:6",
>>>>>>> dsla-incentivized-beta-phase-i
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
<<<<<<< HEAD
                                "src": "2951:44:8",
=======
                                "src": "2952:44:6",
>>>>>>> dsla-incentivized-beta-phase-i
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
<<<<<<< HEAD
                              "id": 1965,
                              "nodeType": "ExpressionStatement",
                              "src": "2951:44:8"
=======
                              "id": 1817,
                              "nodeType": "ExpressionStatement",
                              "src": "2952:44:6"
>>>>>>> dsla-incentivized-beta-phase-i
                            },
                            {
                              "eventCall": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
<<<<<<< HEAD
                                      "id": 1967,
                                      "name": "_amounts",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1915,
                                      "src": "3027:8:8",
=======
                                      "id": 1819,
                                      "name": "_amounts",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1767,
                                      "src": "3028:8:6",
>>>>>>> dsla-incentivized-beta-phase-i
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
<<<<<<< HEAD
                                    "id": 1969,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 1968,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1940,
                                      "src": "3036:1:8",
=======
                                    "id": 1821,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 1820,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1792,
                                      "src": "3037:1:6",
>>>>>>> dsla-incentivized-beta-phase-i
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                                    "src": "3027:11:8",
=======
                                    "src": "3028:11:6",
>>>>>>> dsla-incentivized-beta-phase-i
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
<<<<<<< HEAD
                                      "id": 1970,
                                      "name": "_claimers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1918,
                                      "src": "3040:9:8",
=======
                                      "id": 1822,
                                      "name": "_claimers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1770,
                                      "src": "3041:9:6",
>>>>>>> dsla-incentivized-beta-phase-i
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
<<<<<<< HEAD
                                    "id": 1972,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 1971,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1940,
                                      "src": "3050:1:8",
=======
                                    "id": 1824,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 1823,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1792,
                                      "src": "3051:1:6",
>>>>>>> dsla-incentivized-beta-phase-i
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                                    "src": "3040:12:8",
=======
                                    "src": "3041:12:6",
>>>>>>> dsla-incentivized-beta-phase-i
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
<<<<<<< HEAD
                                  "id": 1966,
                                  "name": "Allowed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1865,
                                  "src": "3019:7:8",
=======
                                  "id": 1818,
                                  "name": "Allowed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1717,
                                  "src": "3020:7:6",
>>>>>>> dsla-incentivized-beta-phase-i
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                                    "typeString": "function (uint256,address)"
                                  }
                                },
<<<<<<< HEAD
                                "id": 1973,
=======
                                "id": 1825,
>>>>>>> dsla-incentivized-beta-phase-i
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
<<<<<<< HEAD
                                "src": "3019:34:8",
=======
                                "src": "3020:34:6",
>>>>>>> dsla-incentivized-beta-phase-i
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
<<<<<<< HEAD
                              "id": 1974,
                              "nodeType": "EmitStatement",
                              "src": "3014:39:8"
=======
                              "id": 1826,
                              "nodeType": "EmitStatement",
                              "src": "3015:39:6"
>>>>>>> dsla-incentivized-beta-phase-i
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
<<<<<<< HEAD
                    "id": 1946,
=======
                    "id": 1798,
>>>>>>> dsla-incentivized-beta-phase-i
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
<<<<<<< HEAD
                      "id": 1943,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1940,
                      "src": "2867:1:8",
=======
                      "id": 1795,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1792,
                      "src": "2868:1:6",
>>>>>>> dsla-incentivized-beta-phase-i
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 1944,
                        "name": "_amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1915,
                        "src": "2871:8:8",
=======
                        "id": 1796,
                        "name": "_amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1767,
                        "src": "2872:8:6",
>>>>>>> dsla-incentivized-beta-phase-i
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
<<<<<<< HEAD
                      "id": 1945,
=======
                      "id": 1797,
>>>>>>> dsla-incentivized-beta-phase-i
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
<<<<<<< HEAD
                      "src": "2871:15:8",
=======
                      "src": "2872:15:6",
>>>>>>> dsla-incentivized-beta-phase-i
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "2867:19:8",
=======
                    "src": "2868:19:6",
>>>>>>> dsla-incentivized-beta-phase-i
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "id": 1978,
                  "initializationExpression": {
                    "assignments": [
                      1940
=======
                  "id": 1830,
                  "initializationExpression": {
                    "assignments": [
                      1792
>>>>>>> dsla-incentivized-beta-phase-i
                    ],
                    "declarations": [
                      {
                        "constant": false,
<<<<<<< HEAD
                        "id": 1940,
=======
                        "id": 1792,
>>>>>>> dsla-incentivized-beta-phase-i
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
<<<<<<< HEAD
                        "scope": 1978,
                        "src": "2857:6:8",
=======
                        "scope": 1830,
                        "src": "2858:6:6",
>>>>>>> dsla-incentivized-beta-phase-i
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
<<<<<<< HEAD
                          "id": 1939,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2857:4:8",
=======
                          "id": 1791,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2858:4:6",
>>>>>>> dsla-incentivized-beta-phase-i
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
<<<<<<< HEAD
                    "id": 1942,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1941,
=======
                    "id": 1794,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1793,
>>>>>>> dsla-incentivized-beta-phase-i
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "2864:1:8",
=======
                      "src": "2865:1:6",
>>>>>>> dsla-incentivized-beta-phase-i
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                    "src": "2857:8:8"
=======
                    "src": "2858:8:6"
>>>>>>> dsla-incentivized-beta-phase-i
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
<<<<<<< HEAD
                      "id": 1948,
=======
                      "id": 1800,
>>>>>>> dsla-incentivized-beta-phase-i
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
<<<<<<< HEAD
                      "src": "2888:3:8",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1947,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1940,
                        "src": "2888:1:8",
=======
                      "src": "2889:3:6",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1799,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1792,
                        "src": "2889:1:6",
>>>>>>> dsla-incentivized-beta-phase-i
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "id": 1949,
                    "nodeType": "ExpressionStatement",
                    "src": "2888:3:8"
                  },
                  "nodeType": "ForStatement",
                  "src": "2853:225:8"
=======
                    "id": 1801,
                    "nodeType": "ExpressionStatement",
                    "src": "2889:3:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "2854:225:6"
>>>>>>> dsla-incentivized-beta-phase-i
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 1912,
              "nodeType": "StructuredDocumentation",
              "src": "2106:433:8",
              "text": "@notice the setAllowedAmounts function allows the admin to set \na claimable amounts of bDSLA for claimers. \n\n     * @dev allows the claim of `_amounts` for `_claimers`.\n\n     * @param _amounts an array of amounts to be claimed \n@param _claimers an array of addresses of the claimers    \n     *\nRequirements:\n     * - the caller must have the `(DEFAULT_ADMIN_ROLE)`."
            },
            "functionSelector": "b4986fc5",
            "id": 1980,
=======
              "id": 1764,
              "nodeType": "StructuredDocumentation",
              "src": "2107:433:6",
              "text": " @notice the setAllowedAmounts function allows the admin to set \n a claimable amounts of bDSLA for claimers. \n \n @dev allows the claim of `_amounts` for `_claimers`.\n \n @param _amounts an array of amounts to be claimed \n @param _claimers an array of addresses of the claimers    \n Requirements:\n - the caller must have the `(DEFAULT_ADMIN_ROLE)`."
            },
            "functionSelector": "b4986fc5",
            "id": 1832,
>>>>>>> dsla-incentivized-beta-phase-i
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAllowedAmounts",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
<<<<<<< HEAD
              "id": 1919,
=======
              "id": 1771,
>>>>>>> dsla-incentivized-beta-phase-i
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1915,
=======
                  "id": 1767,
>>>>>>> dsla-incentivized-beta-phase-i
                  "mutability": "mutable",
                  "name": "_amounts",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 1980,
                  "src": "2571:22:8",
=======
                  "scope": 1832,
                  "src": "2572:22:6",
>>>>>>> dsla-incentivized-beta-phase-i
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
<<<<<<< HEAD
                      "id": 1913,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "2571:4:8",
=======
                      "id": 1765,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "2572:4:6",
>>>>>>> dsla-incentivized-beta-phase-i
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "id": 1914,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2571:6:8",
=======
                    "id": 1766,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2572:6:6",
>>>>>>> dsla-incentivized-beta-phase-i
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1918,
=======
                  "id": 1770,
>>>>>>> dsla-incentivized-beta-phase-i
                  "mutability": "mutable",
                  "name": "_claimers",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 1980,
                  "src": "2595:26:8",
=======
                  "scope": 1832,
                  "src": "2596:26:6",
>>>>>>> dsla-incentivized-beta-phase-i
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
<<<<<<< HEAD
                      "id": 1916,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2595:7:8",
=======
                      "id": 1768,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2596:7:6",
>>>>>>> dsla-incentivized-beta-phase-i
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
<<<<<<< HEAD
                    "id": 1917,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2595:9:8",
=======
                    "id": 1769,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2596:9:6",
>>>>>>> dsla-incentivized-beta-phase-i
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "2570:52:8"
            },
            "returnParameters": {
              "id": 1920,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2630:0:8"
            },
            "scope": 2027,
            "src": "2544:540:8",
=======
              "src": "2571:52:6"
            },
            "returnParameters": {
              "id": 1772,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2631:0:6"
            },
            "scope": 1879,
            "src": "2545:540:6",
>>>>>>> dsla-incentivized-beta-phase-i
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 2025,
              "nodeType": "Block",
              "src": "3582:374:8",
=======
              "id": 1877,
              "nodeType": "Block",
              "src": "3583:374:6",
>>>>>>> dsla-incentivized-beta-phase-i
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
<<<<<<< HEAD
                            "id": 1988,
                            "name": "MINTER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2677,
                            "src": "3608:11:8",
=======
                            "id": 1840,
                            "name": "MINTER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2529,
                            "src": "3609:11:6",
>>>>>>> dsla-incentivized-beta-phase-i
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
<<<<<<< HEAD
                              "id": 1989,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2056,
                              "src": "3621:10:8",
=======
                              "id": 1841,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1908,
                              "src": "3622:10:6",
>>>>>>> dsla-incentivized-beta-phase-i
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
<<<<<<< HEAD
                            "id": 1990,
=======
                            "id": 1842,
>>>>>>> dsla-incentivized-beta-phase-i
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "3621:12:8",
=======
                            "src": "3622:12:6",
>>>>>>> dsla-incentivized-beta-phase-i
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
<<<<<<< HEAD
                          "id": 1987,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2140,
                          "src": "3600:7:8",
=======
                          "id": 1839,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1992,
                          "src": "3601:7:6",
>>>>>>> dsla-incentivized-beta-phase-i
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
<<<<<<< HEAD
                        "id": 1991,
=======
                        "id": 1843,
>>>>>>> dsla-incentivized-beta-phase-i
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "3600:34:8",
=======
                        "src": "3601:34:6",
>>>>>>> dsla-incentivized-beta-phase-i
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332305072657365744d696e7465725061757365723a206d7573742068617665206d696e74657220726f6c65",
<<<<<<< HEAD
                        "id": 1992,
=======
                        "id": 1844,
>>>>>>> dsla-incentivized-beta-phase-i
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "3636:48:8",
=======
                        "src": "3637:48:6",
>>>>>>> dsla-incentivized-beta-phase-i
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ec077d98b318f0b88382705905b7bb11882e663120044d946c57be523bd3d202",
                          "typeString": "literal_string \"ERC20PresetMinterPauser: must have minter role\""
                        },
                        "value": "ERC20PresetMinterPauser: must have minter role"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ec077d98b318f0b88382705905b7bb11882e663120044d946c57be523bd3d202",
                          "typeString": "literal_string \"ERC20PresetMinterPauser: must have minter role\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 1986,
=======
                      "id": 1838,
>>>>>>> dsla-incentivized-beta-phase-i
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
<<<<<<< HEAD
                      "src": "3592:7:8",
=======
                      "src": "3593:7:6",
>>>>>>> dsla-incentivized-beta-phase-i
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 1993,
=======
                    "id": 1845,
>>>>>>> dsla-incentivized-beta-phase-i
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3592:93:8",
=======
                    "src": "3593:93:6",
>>>>>>> dsla-incentivized-beta-phase-i
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1994,
                  "nodeType": "ExpressionStatement",
                  "src": "3592:93:8"
=======
                  "id": 1846,
                  "nodeType": "ExpressionStatement",
                  "src": "3593:93:6"
>>>>>>> dsla-incentivized-beta-phase-i
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
<<<<<<< HEAD
                        "id": 2000,
=======
                        "id": 1852,
>>>>>>> dsla-incentivized-beta-phase-i
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
<<<<<<< HEAD
                            "id": 1996,
                            "name": "_allowedBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1855,
                            "src": "3703:16:8",
=======
                            "id": 1848,
                            "name": "_allowedBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1707,
                            "src": "3704:16:6",
>>>>>>> dsla-incentivized-beta-phase-i
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
<<<<<<< HEAD
                          "id": 1998,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1997,
                            "name": "_claimer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1983,
                            "src": "3720:8:8",
=======
                          "id": 1850,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1849,
                            "name": "_claimer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1835,
                            "src": "3721:8:6",
>>>>>>> dsla-incentivized-beta-phase-i
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
<<<<<<< HEAD
                          "src": "3703:26:8",
=======
                          "src": "3704:26:6",
>>>>>>> dsla-incentivized-beta-phase-i
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
<<<<<<< HEAD
                          "id": 1999,
=======
                          "id": 1851,
>>>>>>> dsla-incentivized-beta-phase-i
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "3732:1:8",
=======
                          "src": "3733:1:6",
>>>>>>> dsla-incentivized-beta-phase-i
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
<<<<<<< HEAD
                        "src": "3703:30:8",
=======
                        "src": "3704:30:6",
>>>>>>> dsla-incentivized-beta-phase-i
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6244534c41546f6b656e3a206d757374206861766520616e20616c6c6f77656420616d6f756e20746f20636c61696d",
<<<<<<< HEAD
                        "id": 2001,
=======
                        "id": 1853,
>>>>>>> dsla-incentivized-beta-phase-i
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "3735:49:8",
=======
                        "src": "3736:49:6",
>>>>>>> dsla-incentivized-beta-phase-i
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3d164fab85c08edf622e79efb6f142f882329b9dc58cb926e92f196289ff3783",
                          "typeString": "literal_string \"bDSLAToken: must have an allowed amoun to claim\""
                        },
                        "value": "bDSLAToken: must have an allowed amoun to claim"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3d164fab85c08edf622e79efb6f142f882329b9dc58cb926e92f196289ff3783",
                          "typeString": "literal_string \"bDSLAToken: must have an allowed amoun to claim\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 1995,
=======
                      "id": 1847,
>>>>>>> dsla-incentivized-beta-phase-i
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
<<<<<<< HEAD
                      "src": "3695:7:8",
=======
                      "src": "3696:7:6",
>>>>>>> dsla-incentivized-beta-phase-i
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 2002,
=======
                    "id": 1854,
>>>>>>> dsla-incentivized-beta-phase-i
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3695:90:8",
=======
                    "src": "3696:90:6",
>>>>>>> dsla-incentivized-beta-phase-i
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 2003,
                  "nodeType": "ExpressionStatement",
                  "src": "3695:90:8"
=======
                  "id": 1855,
                  "nodeType": "ExpressionStatement",
                  "src": "3696:90:6"
>>>>>>> dsla-incentivized-beta-phase-i
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 2008,
=======
                        "id": 1860,
>>>>>>> dsla-incentivized-beta-phase-i
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
<<<<<<< HEAD
                        "src": "3803:19:8",
=======
                        "src": "3804:19:6",
>>>>>>> dsla-incentivized-beta-phase-i
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
<<<<<<< HEAD
                            "id": 2005,
                            "name": "_claimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1859,
                            "src": "3804:8:8",
=======
                            "id": 1857,
                            "name": "_claimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1711,
                            "src": "3805:8:6",
>>>>>>> dsla-incentivized-beta-phase-i
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
<<<<<<< HEAD
                          "id": 2007,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2006,
                            "name": "_claimer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1983,
                            "src": "3813:8:8",
=======
                          "id": 1859,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1858,
                            "name": "_claimer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1835,
                            "src": "3814:8:6",
>>>>>>> dsla-incentivized-beta-phase-i
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
<<<<<<< HEAD
                          "src": "3804:18:8",
=======
                          "src": "3805:18:6",
>>>>>>> dsla-incentivized-beta-phase-i
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6244534c41546f6b656e3a20746f6b656e7320616c726561647920636c61696d6564",
<<<<<<< HEAD
                        "id": 2009,
=======
                        "id": 1861,
>>>>>>> dsla-incentivized-beta-phase-i
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "3824:36:8",
=======
                        "src": "3825:36:6",
>>>>>>> dsla-incentivized-beta-phase-i
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c85c62ca35affe0b9092bce01165096b06701b26b9c09c0398b1799e70f1e706",
                          "typeString": "literal_string \"bDSLAToken: tokens already claimed\""
                        },
                        "value": "bDSLAToken: tokens already claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c85c62ca35affe0b9092bce01165096b06701b26b9c09c0398b1799e70f1e706",
                          "typeString": "literal_string \"bDSLAToken: tokens already claimed\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 2004,
=======
                      "id": 1856,
>>>>>>> dsla-incentivized-beta-phase-i
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
<<<<<<< HEAD
                      "src": "3795:7:8",
=======
                      "src": "3796:7:6",
>>>>>>> dsla-incentivized-beta-phase-i
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 2010,
=======
                    "id": 1862,
>>>>>>> dsla-incentivized-beta-phase-i
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3795:66:8",
=======
                    "src": "3796:66:6",
>>>>>>> dsla-incentivized-beta-phase-i
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 2011,
                  "nodeType": "ExpressionStatement",
                  "src": "3795:66:8"
=======
                  "id": 1863,
                  "nodeType": "ExpressionStatement",
                  "src": "3796:66:6"
>>>>>>> dsla-incentivized-beta-phase-i
                },
                {
                  "expression": {
                    "argumentTypes": null,
<<<<<<< HEAD
                    "id": 2016,
=======
                    "id": 1868,
>>>>>>> dsla-incentivized-beta-phase-i
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 2012,
                        "name": "_claimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1859,
                        "src": "3871:8:8",
=======
                        "id": 1864,
                        "name": "_claimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1711,
                        "src": "3872:8:6",
>>>>>>> dsla-incentivized-beta-phase-i
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
<<<<<<< HEAD
                      "id": 2014,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2013,
                        "name": "_claimer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1983,
                        "src": "3880:8:8",
=======
                      "id": 1866,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1865,
                        "name": "_claimer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1835,
                        "src": "3881:8:6",
>>>>>>> dsla-incentivized-beta-phase-i
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "3871:18:8",
=======
                      "src": "3872:18:6",
>>>>>>> dsla-incentivized-beta-phase-i
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
<<<<<<< HEAD
                      "id": 2015,
=======
                      "id": 1867,
>>>>>>> dsla-incentivized-beta-phase-i
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "3892:4:8",
=======
                      "src": "3893:4:6",
>>>>>>> dsla-incentivized-beta-phase-i
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
<<<<<<< HEAD
                    "src": "3871:25:8",
=======
                    "src": "3872:25:6",
>>>>>>> dsla-incentivized-beta-phase-i
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "id": 2017,
                  "nodeType": "ExpressionStatement",
                  "src": "3871:25:8"
=======
                  "id": 1869,
                  "nodeType": "ExpressionStatement",
                  "src": "3872:25:6"
>>>>>>> dsla-incentivized-beta-phase-i
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 2019,
                        "name": "_claimer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1983,
                        "src": "3912:8:8",
=======
                        "id": 1871,
                        "name": "_claimer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1835,
                        "src": "3913:8:6",
>>>>>>> dsla-incentivized-beta-phase-i
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
<<<<<<< HEAD
                          "id": 2020,
                          "name": "_allowedBalances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1855,
                          "src": "3922:16:8",
=======
                          "id": 1872,
                          "name": "_allowedBalances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1707,
                          "src": "3923:16:6",
>>>>>>> dsla-incentivized-beta-phase-i
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
<<<<<<< HEAD
                        "id": 2022,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2021,
                          "name": "_claimer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1983,
                          "src": "3939:8:8",
=======
                        "id": 1874,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1873,
                          "name": "_claimer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1835,
                          "src": "3940:8:6",
>>>>>>> dsla-incentivized-beta-phase-i
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
<<<<<<< HEAD
                        "src": "3922:26:8",
=======
                        "src": "3923:26:6",
>>>>>>> dsla-incentivized-beta-phase-i
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
<<<<<<< HEAD
                      "id": 2018,
                      "name": "mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2736,
                      "src": "3907:4:8",
=======
                      "id": 1870,
                      "name": "mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2588,
                      "src": "3908:4:6",
>>>>>>> dsla-incentivized-beta-phase-i
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
<<<<<<< HEAD
                    "id": 2023,
=======
                    "id": 1875,
>>>>>>> dsla-incentivized-beta-phase-i
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3907:42:8",
=======
                    "src": "3908:42:6",
>>>>>>> dsla-incentivized-beta-phase-i
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 2024,
                  "nodeType": "ExpressionStatement",
                  "src": "3907:42:8"
=======
                  "id": 1876,
                  "nodeType": "ExpressionStatement",
                  "src": "3908:42:6"
>>>>>>> dsla-incentivized-beta-phase-i
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 1981,
              "nodeType": "StructuredDocumentation",
              "src": "3094:443:8",
              "text": "@notice the setAllowedAmounts function allows the admin to set \na claimable amounts of bDSLA for claimers. \n\n     * @dev creates new 'bDSLA' tokens for the `_claimer`.\n\n     * @param _claimer address of the claimer \n     *\nRequirements:\n     * - the caller must have the `(MINTER_ROLE)`.\n- the claimer should have an allowed balance \n- the claim can be done just once "
            },
            "functionSelector": "1e83409a",
            "id": 2026,
=======
              "id": 1833,
              "nodeType": "StructuredDocumentation",
              "src": "3095:443:6",
              "text": " @notice the setAllowedAmounts function allows the admin to set \n a claimable amounts of bDSLA for claimers. \n \n @dev creates new 'bDSLA' tokens for the `_claimer`.\n \n @param _claimer address of the claimer \n Requirements:\n - the caller must have the `(MINTER_ROLE)`.\n - the claimer should have an allowed balance \n - the claim can be done just once "
            },
            "functionSelector": "1e83409a",
            "id": 1878,
>>>>>>> dsla-incentivized-beta-phase-i
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
<<<<<<< HEAD
              "id": 1984,
=======
              "id": 1836,
>>>>>>> dsla-incentivized-beta-phase-i
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1983,
=======
                  "id": 1835,
>>>>>>> dsla-incentivized-beta-phase-i
                  "mutability": "mutable",
                  "name": "_claimer",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 2026,
                  "src": "3557:16:8",
=======
                  "scope": 1878,
                  "src": "3558:16:6",
>>>>>>> dsla-incentivized-beta-phase-i
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1982,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3557:7:8",
=======
                    "id": 1834,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3558:7:6",
>>>>>>> dsla-incentivized-beta-phase-i
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "3556:18:8"
            },
            "returnParameters": {
              "id": 1985,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3582:0:8"
            },
            "scope": 2027,
            "src": "3542:414:8",
=======
              "src": "3557:18:6"
            },
            "returnParameters": {
              "id": 1837,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3583:0:6"
            },
            "scope": 1879,
            "src": "3543:414:6",
>>>>>>> dsla-incentivized-beta-phase-i
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
<<<<<<< HEAD
        "scope": 2028,
        "src": "714:3244:8"
      }
    ],
    "src": "50:3908:8"
  },
  "legacyAST": {
    "absolutePath": "/Users/matiasbn/Desktop/stacktical-dsla-contracts/contracts/bDSLA/bDSLAToken.sol",
    "exportedSymbols": {
      "bDSLAToken": [
        2027
      ]
    },
    "id": 2028,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1847,
        "literals": [
          "solidity",
          "0.6",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "50:22:8"
=======
        "scope": 1880,
        "src": "715:3244:6"
      }
    ],
    "src": "50:3909:6"
  },
  "legacyAST": {
    "absolutePath": "/Users/wilhempujar/Development/stacktical-dsla-contracts/contracts/bDSLA/bDSLAToken.sol",
    "exportedSymbols": {
      "bDSLAToken": [
        1879
      ]
    },
    "id": 1880,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1699,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "50:23:6"
>>>>>>> dsla-incentivized-beta-phase-i
      },
      {
        "absolutePath": "@openzeppelin/contracts/presets/ERC20PresetMinterPauser.sol",
        "file": "@openzeppelin/contracts/presets/ERC20PresetMinterPauser.sol",
<<<<<<< HEAD
        "id": 1848,
        "nodeType": "ImportDirective",
        "scope": 2028,
        "sourceUnit": 2793,
        "src": "74:69:8",
=======
        "id": 1700,
        "nodeType": "ImportDirective",
        "scope": 1880,
        "sourceUnit": 2645,
        "src": "75:69:6",
>>>>>>> dsla-incentivized-beta-phase-i
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
<<<<<<< HEAD
              "id": 1850,
              "name": "ERC20PresetMinterPauser",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2792,
              "src": "737:23:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20PresetMinterPauser_$2792",
                "typeString": "contract ERC20PresetMinterPauser"
              }
            },
            "id": 1851,
            "nodeType": "InheritanceSpecifier",
            "src": "737:23:8"
          }
        ],
        "contractDependencies": [
          2068,
          2351,
          2792,
          3299,
          3355,
          3392,
          3470,
          4150
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1849,
          "nodeType": "StructuredDocumentation",
          "src": "145:566:8",
          "text": "@dev {bDSLA} token, including:\n *  - ability for holders to burn (destroy) their tokens\n - a minter role that allows for token minting (creation)\n - a pauser role that allows to stop all token transfers\n - a claim procces for DSLA owners \n * This contract uses {AccessControl} to lock permissioned functions using the\ndifferent roles. \n * The account that deploys the contract will be granted the minter and pauser\nroles, as well as the default admin role, which will let it grant both minter\nand pauser roles to other accounts."
        },
        "fullyImplemented": true,
        "id": 2027,
        "linearizedBaseContracts": [
          2027,
          2792,
          3392,
          4150,
          3355,
          3299,
          3470,
          2351,
          2068
=======
              "id": 1702,
              "name": "ERC20PresetMinterPauser",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2644,
              "src": "738:23:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20PresetMinterPauser_$2644",
                "typeString": "contract ERC20PresetMinterPauser"
              }
            },
            "id": 1703,
            "nodeType": "InheritanceSpecifier",
            "src": "738:23:6"
          }
        ],
        "contractDependencies": [
          1920,
          2203,
          2644,
          3151,
          3207,
          3244,
          3322,
          4002
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1701,
          "nodeType": "StructuredDocumentation",
          "src": "146:566:6",
          "text": " @dev {bDSLA} token, including:\n  - ability for holders to burn (destroy) their tokens\n  - a minter role that allows for token minting (creation)\n  - a pauser role that allows to stop all token transfers\n  - a claim procces for DSLA owners \n This contract uses {AccessControl} to lock permissioned functions using the\n different roles. \n The account that deploys the contract will be granted the minter and pauser\n roles, as well as the default admin role, which will let it grant both minter\n and pauser roles to other accounts."
        },
        "fullyImplemented": true,
        "id": 1879,
        "linearizedBaseContracts": [
          1879,
          2644,
          3244,
          4002,
          3207,
          3151,
          3322,
          2203,
          1920
>>>>>>> dsla-incentivized-beta-phase-i
        ],
        "name": "bDSLAToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
<<<<<<< HEAD
            "id": 1855,
=======
            "id": 1707,
>>>>>>> dsla-incentivized-beta-phase-i
            "mutability": "mutable",
            "name": "_allowedBalances",
            "nodeType": "VariableDeclaration",
            "overrides": null,
<<<<<<< HEAD
            "scope": 2027,
            "src": "767:53:8",
=======
            "scope": 1879,
            "src": "768:53:6",
>>>>>>> dsla-incentivized-beta-phase-i
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 1854,
              "keyType": {
                "id": 1852,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "776:7:8",
=======
              "id": 1706,
              "keyType": {
                "id": 1704,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "777:7:6",
>>>>>>> dsla-incentivized-beta-phase-i
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
<<<<<<< HEAD
              "src": "767:28:8",
=======
              "src": "768:28:6",
>>>>>>> dsla-incentivized-beta-phase-i
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
<<<<<<< HEAD
                "id": 1853,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "787:7:8",
=======
                "id": 1705,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "788:7:6",
>>>>>>> dsla-incentivized-beta-phase-i
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "id": 1859,
=======
            "id": 1711,
>>>>>>> dsla-incentivized-beta-phase-i
            "mutability": "mutable",
            "name": "_claimed",
            "nodeType": "VariableDeclaration",
            "overrides": null,
<<<<<<< HEAD
            "scope": 2027,
            "src": "826:42:8",
=======
            "scope": 1879,
            "src": "827:42:6",
>>>>>>> dsla-incentivized-beta-phase-i
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 1858,
              "keyType": {
                "id": 1856,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "835:7:8",
=======
              "id": 1710,
              "keyType": {
                "id": 1708,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "836:7:6",
>>>>>>> dsla-incentivized-beta-phase-i
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
<<<<<<< HEAD
              "src": "826:25:8",
=======
              "src": "827:25:6",
>>>>>>> dsla-incentivized-beta-phase-i
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
<<<<<<< HEAD
                "id": 1857,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "846:4:8",
=======
                "id": 1709,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "847:4:6",
>>>>>>> dsla-incentivized-beta-phase-i
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
<<<<<<< HEAD
            "id": 1865,
            "name": "Allowed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1864,
=======
            "id": 1717,
            "name": "Allowed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1716,
>>>>>>> dsla-incentivized-beta-phase-i
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1861,
=======
                  "id": 1713,
>>>>>>> dsla-incentivized-beta-phase-i
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 1865,
                  "src": "888:20:8",
=======
                  "scope": 1717,
                  "src": "889:20:6",
>>>>>>> dsla-incentivized-beta-phase-i
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1860,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "888:4:8",
=======
                    "id": 1712,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "889:4:6",
>>>>>>> dsla-incentivized-beta-phase-i
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1863,
=======
                  "id": 1715,
>>>>>>> dsla-incentivized-beta-phase-i
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_claimer",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 1865,
                  "src": "910:24:8",
=======
                  "scope": 1717,
                  "src": "911:24:6",
>>>>>>> dsla-incentivized-beta-phase-i
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1862,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "910:7:8",
=======
                    "id": 1714,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "911:7:6",
>>>>>>> dsla-incentivized-beta-phase-i
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "887:48:8"
            },
            "src": "874:62:8"
          },
          {
            "body": {
              "id": 1873,
              "nodeType": "Block",
              "src": "1248:7:8",
              "statements": []
            },
            "documentation": {
              "id": 1866,
              "nodeType": "StructuredDocumentation",
              "src": "947:227:8",
              "text": "@dev Sets the values for {name} and {symbol}, {decimals} have \na default value of 18.\n     *\nAll three of these values are immutable: they can only be set once during\nconstruction."
            },
            "id": 1874,
=======
              "src": "888:48:6"
            },
            "src": "875:62:6"
          },
          {
            "body": {
              "id": 1725,
              "nodeType": "Block",
              "src": "1249:7:6",
              "statements": []
            },
            "documentation": {
              "id": 1718,
              "nodeType": "StructuredDocumentation",
              "src": "948:227:6",
              "text": " @dev Sets the values for {name} and {symbol}, {decimals} have \n a default value of 18.\n All three of these values are immutable: they can only be set once during\n construction."
            },
            "id": 1726,
>>>>>>> dsla-incentivized-beta-phase-i
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "6244534c4120546f6b656e",
<<<<<<< HEAD
                    "id": 1869,
=======
                    "id": 1721,
>>>>>>> dsla-incentivized-beta-phase-i
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
<<<<<<< HEAD
                    "src": "1224:13:8",
=======
                    "src": "1225:13:6",
>>>>>>> dsla-incentivized-beta-phase-i
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_a0f8e7207a91eb87790243c7a099ba9f490f44961c2181a1a4c60fa5a6b01ece",
                      "typeString": "literal_string \"bDSLA Token\""
                    },
                    "value": "bDSLA Token"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "6244534c41",
<<<<<<< HEAD
                    "id": 1870,
=======
                    "id": 1722,
>>>>>>> dsla-incentivized-beta-phase-i
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
<<<<<<< HEAD
                    "src": "1239:7:8",
=======
                    "src": "1240:7:6",
>>>>>>> dsla-incentivized-beta-phase-i
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9437f0a135e20863c5708cf6dd64ee7503c7daf952c570e536e9f98f7db581bc",
                      "typeString": "literal_string \"bDSLA\""
                    },
                    "value": "bDSLA"
                  }
                ],
<<<<<<< HEAD
                "id": 1871,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1868,
                  "name": "ERC20PresetMinterPauser",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2792,
                  "src": "1200:23:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20PresetMinterPauser_$2792_$",
=======
                "id": 1723,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1720,
                  "name": "ERC20PresetMinterPauser",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2644,
                  "src": "1201:23:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20PresetMinterPauser_$2644_$",
>>>>>>> dsla-incentivized-beta-phase-i
                    "typeString": "type(contract ERC20PresetMinterPauser)"
                  }
                },
                "nodeType": "ModifierInvocation",
<<<<<<< HEAD
                "src": "1200:47:8"
=======
                "src": "1201:47:6"
>>>>>>> dsla-incentivized-beta-phase-i
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
<<<<<<< HEAD
              "id": 1867,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1190:2:8"
            },
            "returnParameters": {
              "id": 1872,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1248:0:8"
            },
            "scope": 2027,
            "src": "1179:76:8",
=======
              "id": 1719,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1191:2:6"
            },
            "returnParameters": {
              "id": 1724,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1249:0:6"
            },
            "scope": 1879,
            "src": "1180:76:6",
>>>>>>> dsla-incentivized-beta-phase-i
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 1910,
              "nodeType": "Block",
              "src": "1820:280:8",
=======
              "id": 1762,
              "nodeType": "Block",
              "src": "1821:280:6",
>>>>>>> dsla-incentivized-beta-phase-i
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
<<<<<<< HEAD
                            "id": 1884,
                            "name": "DEFAULT_ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2094,
                            "src": "1846:18:8",
=======
                            "id": 1736,
                            "name": "DEFAULT_ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1946,
                            "src": "1847:18:6",
>>>>>>> dsla-incentivized-beta-phase-i
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
<<<<<<< HEAD
                              "id": 1885,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2056,
                              "src": "1866:10:8",
=======
                              "id": 1737,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1908,
                              "src": "1867:10:6",
>>>>>>> dsla-incentivized-beta-phase-i
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
<<<<<<< HEAD
                            "id": 1886,
=======
                            "id": 1738,
>>>>>>> dsla-incentivized-beta-phase-i
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "1866:12:8",
=======
                            "src": "1867:12:6",
>>>>>>> dsla-incentivized-beta-phase-i
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
<<<<<<< HEAD
                          "id": 1883,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2140,
                          "src": "1838:7:8",
=======
                          "id": 1735,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1992,
                          "src": "1839:7:6",
>>>>>>> dsla-incentivized-beta-phase-i
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
<<<<<<< HEAD
                        "id": 1887,
=======
                        "id": 1739,
>>>>>>> dsla-incentivized-beta-phase-i
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "1838:41:8",
=======
                        "src": "1839:41:6",
>>>>>>> dsla-incentivized-beta-phase-i
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332305072657365744d696e7465725061757365723a206d75737420686176652061646d696e20726f6c65",
<<<<<<< HEAD
                        "id": 1888,
=======
                        "id": 1740,
>>>>>>> dsla-incentivized-beta-phase-i
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "1881:47:8",
=======
                        "src": "1882:47:6",
>>>>>>> dsla-incentivized-beta-phase-i
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f954e54666f4174b0688c0dd5f29469840042422fddd6a1edbf310926fe30273",
                          "typeString": "literal_string \"ERC20PresetMinterPauser: must have admin role\""
                        },
                        "value": "ERC20PresetMinterPauser: must have admin role"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f954e54666f4174b0688c0dd5f29469840042422fddd6a1edbf310926fe30273",
                          "typeString": "literal_string \"ERC20PresetMinterPauser: must have admin role\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 1882,
=======
                      "id": 1734,
>>>>>>> dsla-incentivized-beta-phase-i
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
<<<<<<< HEAD
                      "src": "1830:7:8",
=======
                      "src": "1831:7:6",
>>>>>>> dsla-incentivized-beta-phase-i
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 1889,
=======
                    "id": 1741,
>>>>>>> dsla-incentivized-beta-phase-i
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "1830:99:8",
=======
                    "src": "1831:99:6",
>>>>>>> dsla-incentivized-beta-phase-i
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1890,
                  "nodeType": "ExpressionStatement",
                  "src": "1830:99:8"
=======
                  "id": 1742,
                  "nodeType": "ExpressionStatement",
                  "src": "1831:99:6"
>>>>>>> dsla-incentivized-beta-phase-i
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 1895,
=======
                        "id": 1747,
>>>>>>> dsla-incentivized-beta-phase-i
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
<<<<<<< HEAD
                        "src": "1947:19:8",
=======
                        "src": "1948:19:6",
>>>>>>> dsla-incentivized-beta-phase-i
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
<<<<<<< HEAD
                            "id": 1892,
                            "name": "_claimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1859,
                            "src": "1948:8:8",
=======
                            "id": 1744,
                            "name": "_claimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1711,
                            "src": "1949:8:6",
>>>>>>> dsla-incentivized-beta-phase-i
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
<<<<<<< HEAD
                          "id": 1894,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1893,
                            "name": "_claimer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1879,
                            "src": "1957:8:8",
=======
                          "id": 1746,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1745,
                            "name": "_claimer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1731,
                            "src": "1958:8:6",
>>>>>>> dsla-incentivized-beta-phase-i
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
<<<<<<< HEAD
                          "src": "1948:18:8",
=======
                          "src": "1949:18:6",
>>>>>>> dsla-incentivized-beta-phase-i
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6244534c41546f6b656e3a20746f6b656e7320616c726561647920636c61696d6564",
<<<<<<< HEAD
                        "id": 1896,
=======
                        "id": 1748,
>>>>>>> dsla-incentivized-beta-phase-i
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "1968:36:8",
=======
                        "src": "1969:36:6",
>>>>>>> dsla-incentivized-beta-phase-i
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c85c62ca35affe0b9092bce01165096b06701b26b9c09c0398b1799e70f1e706",
                          "typeString": "literal_string \"bDSLAToken: tokens already claimed\""
                        },
                        "value": "bDSLAToken: tokens already claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c85c62ca35affe0b9092bce01165096b06701b26b9c09c0398b1799e70f1e706",
                          "typeString": "literal_string \"bDSLAToken: tokens already claimed\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 1891,
=======
                      "id": 1743,
>>>>>>> dsla-incentivized-beta-phase-i
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
<<<<<<< HEAD
                      "src": "1939:7:8",
=======
                      "src": "1940:7:6",
>>>>>>> dsla-incentivized-beta-phase-i
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 1897,
=======
                    "id": 1749,
>>>>>>> dsla-incentivized-beta-phase-i
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "1939:66:8",
=======
                    "src": "1940:66:6",
>>>>>>> dsla-incentivized-beta-phase-i
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1898,
                  "nodeType": "ExpressionStatement",
                  "src": "1939:66:8"
=======
                  "id": 1750,
                  "nodeType": "ExpressionStatement",
                  "src": "1940:66:6"
>>>>>>> dsla-incentivized-beta-phase-i
                },
                {
                  "expression": {
                    "argumentTypes": null,
<<<<<<< HEAD
                    "id": 1903,
=======
                    "id": 1755,
>>>>>>> dsla-incentivized-beta-phase-i
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 1899,
                        "name": "_allowedBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1855,
                        "src": "2015:16:8",
=======
                        "id": 1751,
                        "name": "_allowedBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1707,
                        "src": "2016:16:6",
>>>>>>> dsla-incentivized-beta-phase-i
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
<<<<<<< HEAD
                      "id": 1901,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1900,
                        "name": "_claimer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1879,
                        "src": "2032:8:8",
=======
                      "id": 1753,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1752,
                        "name": "_claimer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1731,
                        "src": "2033:8:6",
>>>>>>> dsla-incentivized-beta-phase-i
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "2015:26:8",
=======
                      "src": "2016:26:6",
>>>>>>> dsla-incentivized-beta-phase-i
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
<<<<<<< HEAD
                      "id": 1902,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1877,
                      "src": "2044:7:8",
=======
                      "id": 1754,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1729,
                      "src": "2045:7:6",
>>>>>>> dsla-incentivized-beta-phase-i
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "2015:36:8",
=======
                    "src": "2016:36:6",
>>>>>>> dsla-incentivized-beta-phase-i
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "id": 1904,
                  "nodeType": "ExpressionStatement",
                  "src": "2015:36:8"
=======
                  "id": 1756,
                  "nodeType": "ExpressionStatement",
                  "src": "2016:36:6"
>>>>>>> dsla-incentivized-beta-phase-i
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 1906,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1877,
                        "src": "2075:7:8",
=======
                        "id": 1758,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1729,
                        "src": "2076:7:6",
>>>>>>> dsla-incentivized-beta-phase-i
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 1907,
                        "name": "_claimer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1879,
                        "src": "2084:8:8",
=======
                        "id": 1759,
                        "name": "_claimer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1731,
                        "src": "2085:8:6",
>>>>>>> dsla-incentivized-beta-phase-i
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
<<<<<<< HEAD
                      "id": 1905,
                      "name": "Allowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1865,
                      "src": "2067:7:8",
=======
                      "id": 1757,
                      "name": "Allowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1717,
                      "src": "2068:7:6",
>>>>>>> dsla-incentivized-beta-phase-i
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
<<<<<<< HEAD
                    "id": 1908,
=======
                    "id": 1760,
>>>>>>> dsla-incentivized-beta-phase-i
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2067:26:8",
=======
                    "src": "2068:26:6",
>>>>>>> dsla-incentivized-beta-phase-i
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1909,
                  "nodeType": "EmitStatement",
                  "src": "2062:31:8"
=======
                  "id": 1761,
                  "nodeType": "EmitStatement",
                  "src": "2063:31:6"
>>>>>>> dsla-incentivized-beta-phase-i
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 1875,
              "nodeType": "StructuredDocumentation",
              "src": "1265:485:8",
              "text": "@notice the setAllowedAmount function allows the admin to set an amount \nof claimable bDSLA based on the balanceOf DSLA token of the claimer on the\nmainnet. \n@dev allows the claim of `_amount` for `_claimer`.\n\n     * @param _amount uint the equivalent amount of DSLA tokens on the mainnet \n@param _claimer address of the claimer   \n     *\nRequirements:\n     * - the caller must have the `(DEFAULT_ADMIN_ROLE)`."
            },
            "functionSelector": "522fe133",
            "id": 1911,
=======
              "id": 1727,
              "nodeType": "StructuredDocumentation",
              "src": "1266:485:6",
              "text": " @notice the setAllowedAmount function allows the admin to set an amount \n of claimable bDSLA based on the balanceOf DSLA token of the claimer on the\n mainnet. \n @dev allows the claim of `_amount` for `_claimer`.\n \n @param _amount uint the equivalent amount of DSLA tokens on the mainnet \n @param _claimer address of the claimer   \n Requirements:\n - the caller must have the `(DEFAULT_ADMIN_ROLE)`."
            },
            "functionSelector": "522fe133",
            "id": 1763,
>>>>>>> dsla-incentivized-beta-phase-i
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAllowedAmount",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
<<<<<<< HEAD
              "id": 1880,
=======
              "id": 1732,
>>>>>>> dsla-incentivized-beta-phase-i
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1877,
=======
                  "id": 1729,
>>>>>>> dsla-incentivized-beta-phase-i
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 1911,
                  "src": "1781:12:8",
=======
                  "scope": 1763,
                  "src": "1782:12:6",
>>>>>>> dsla-incentivized-beta-phase-i
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1876,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1781:4:8",
=======
                    "id": 1728,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1782:4:6",
>>>>>>> dsla-incentivized-beta-phase-i
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1879,
=======
                  "id": 1731,
>>>>>>> dsla-incentivized-beta-phase-i
                  "mutability": "mutable",
                  "name": "_claimer",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 1911,
                  "src": "1795:16:8",
=======
                  "scope": 1763,
                  "src": "1796:16:6",
>>>>>>> dsla-incentivized-beta-phase-i
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1878,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1795:7:8",
=======
                    "id": 1730,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1796:7:6",
>>>>>>> dsla-incentivized-beta-phase-i
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1780:32:8"
            },
            "returnParameters": {
              "id": 1881,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1820:0:8"
            },
            "scope": 2027,
            "src": "1755:345:8",
=======
              "src": "1781:32:6"
            },
            "returnParameters": {
              "id": 1733,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1821:0:6"
            },
            "scope": 1879,
            "src": "1756:345:6",
>>>>>>> dsla-incentivized-beta-phase-i
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 1979,
              "nodeType": "Block",
              "src": "2630:454:8",
=======
              "id": 1831,
              "nodeType": "Block",
              "src": "2631:454:6",
>>>>>>> dsla-incentivized-beta-phase-i
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
<<<<<<< HEAD
                            "id": 1923,
                            "name": "DEFAULT_ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2094,
                            "src": "2656:18:8",
=======
                            "id": 1775,
                            "name": "DEFAULT_ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1946,
                            "src": "2657:18:6",
>>>>>>> dsla-incentivized-beta-phase-i
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
<<<<<<< HEAD
                              "id": 1924,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2056,
                              "src": "2676:10:8",
=======
                              "id": 1776,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1908,
                              "src": "2677:10:6",
>>>>>>> dsla-incentivized-beta-phase-i
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
<<<<<<< HEAD
                            "id": 1925,
=======
                            "id": 1777,
>>>>>>> dsla-incentivized-beta-phase-i
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "2676:12:8",
=======
                            "src": "2677:12:6",
>>>>>>> dsla-incentivized-beta-phase-i
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
<<<<<<< HEAD
                          "id": 1922,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2140,
                          "src": "2648:7:8",
=======
                          "id": 1774,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1992,
                          "src": "2649:7:6",
>>>>>>> dsla-incentivized-beta-phase-i
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
<<<<<<< HEAD
                        "id": 1926,
=======
                        "id": 1778,
>>>>>>> dsla-incentivized-beta-phase-i
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "2648:41:8",
=======
                        "src": "2649:41:6",
>>>>>>> dsla-incentivized-beta-phase-i
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332305072657365744d696e7465725061757365723a206d75737420686176652061646d696e20726f6c65",
<<<<<<< HEAD
                        "id": 1927,
=======
                        "id": 1779,
>>>>>>> dsla-incentivized-beta-phase-i
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "2691:47:8",
=======
                        "src": "2692:47:6",
>>>>>>> dsla-incentivized-beta-phase-i
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f954e54666f4174b0688c0dd5f29469840042422fddd6a1edbf310926fe30273",
                          "typeString": "literal_string \"ERC20PresetMinterPauser: must have admin role\""
                        },
                        "value": "ERC20PresetMinterPauser: must have admin role"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f954e54666f4174b0688c0dd5f29469840042422fddd6a1edbf310926fe30273",
                          "typeString": "literal_string \"ERC20PresetMinterPauser: must have admin role\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 1921,
=======
                      "id": 1773,
>>>>>>> dsla-incentivized-beta-phase-i
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
<<<<<<< HEAD
                      "src": "2640:7:8",
=======
                      "src": "2641:7:6",
>>>>>>> dsla-incentivized-beta-phase-i
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 1928,
=======
                    "id": 1780,
>>>>>>> dsla-incentivized-beta-phase-i
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2640:99:8",
=======
                    "src": "2641:99:6",
>>>>>>> dsla-incentivized-beta-phase-i
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1929,
                  "nodeType": "ExpressionStatement",
                  "src": "2640:99:8"
=======
                  "id": 1781,
                  "nodeType": "ExpressionStatement",
                  "src": "2641:99:6"
>>>>>>> dsla-incentivized-beta-phase-i
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
<<<<<<< HEAD
                        "id": 1935,
=======
                        "id": 1787,
>>>>>>> dsla-incentivized-beta-phase-i
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
<<<<<<< HEAD
                            "id": 1931,
                            "name": "_amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1915,
                            "src": "2757:8:8",
=======
                            "id": 1783,
                            "name": "_amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1767,
                            "src": "2758:8:6",
>>>>>>> dsla-incentivized-beta-phase-i
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
<<<<<<< HEAD
                          "id": 1932,
=======
                          "id": 1784,
>>>>>>> dsla-incentivized-beta-phase-i
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
<<<<<<< HEAD
                          "src": "2757:15:8",
=======
                          "src": "2758:15:6",
>>>>>>> dsla-incentivized-beta-phase-i
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
<<<<<<< HEAD
                            "id": 1933,
                            "name": "_claimers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1918,
                            "src": "2776:9:8",
=======
                            "id": 1785,
                            "name": "_claimers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1770,
                            "src": "2777:9:6",
>>>>>>> dsla-incentivized-beta-phase-i
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
<<<<<<< HEAD
                          "id": 1934,
=======
                          "id": 1786,
>>>>>>> dsla-incentivized-beta-phase-i
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
<<<<<<< HEAD
                          "src": "2776:16:8",
=======
                          "src": "2777:16:6",
>>>>>>> dsla-incentivized-beta-phase-i
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD
                        "src": "2757:35:8",
=======
                        "src": "2758:35:6",
>>>>>>> dsla-incentivized-beta-phase-i
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6244534c41546f6b656e3a206d7573742068617665207468652073616d65206e756d626572206f66206974656d73",
<<<<<<< HEAD
                        "id": 1936,
=======
                        "id": 1788,
>>>>>>> dsla-incentivized-beta-phase-i
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "2794:48:8",
=======
                        "src": "2795:48:6",
>>>>>>> dsla-incentivized-beta-phase-i
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_31aa12f01a00bc9daa87ac305ce5cfcbc7d92d0300105d10e46dc53f1aee30ee",
                          "typeString": "literal_string \"bDSLAToken: must have the same number of items\""
                        },
                        "value": "bDSLAToken: must have the same number of items"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_31aa12f01a00bc9daa87ac305ce5cfcbc7d92d0300105d10e46dc53f1aee30ee",
                          "typeString": "literal_string \"bDSLAToken: must have the same number of items\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 1930,
=======
                      "id": 1782,
>>>>>>> dsla-incentivized-beta-phase-i
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
<<<<<<< HEAD
                      "src": "2749:7:8",
=======
                      "src": "2750:7:6",
>>>>>>> dsla-incentivized-beta-phase-i
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 1937,
=======
                    "id": 1789,
>>>>>>> dsla-incentivized-beta-phase-i
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2749:94:8",
=======
                    "src": "2750:94:6",
>>>>>>> dsla-incentivized-beta-phase-i
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1938,
                  "nodeType": "ExpressionStatement",
                  "src": "2749:94:8"
                },
                {
                  "body": {
                    "id": 1977,
                    "nodeType": "Block",
                    "src": "2892:186:8",
=======
                  "id": 1790,
                  "nodeType": "ExpressionStatement",
                  "src": "2750:94:6"
                },
                {
                  "body": {
                    "id": 1829,
                    "nodeType": "Block",
                    "src": "2893:186:6",
>>>>>>> dsla-incentivized-beta-phase-i
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
<<<<<<< HEAD
                          "id": 1955,
=======
                          "id": 1807,
>>>>>>> dsla-incentivized-beta-phase-i
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
<<<<<<< HEAD
                          "src": "2909:23:8",
=======
                          "src": "2910:23:6",
>>>>>>> dsla-incentivized-beta-phase-i
                          "subExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
<<<<<<< HEAD
                              "id": 1950,
                              "name": "_claimed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1859,
                              "src": "2910:8:8",
=======
                              "id": 1802,
                              "name": "_claimed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1711,
                              "src": "2911:8:6",
>>>>>>> dsla-incentivized-beta-phase-i
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
<<<<<<< HEAD
                            "id": 1954,
=======
                            "id": 1806,
>>>>>>> dsla-incentivized-beta-phase-i
                            "indexExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
<<<<<<< HEAD
                                "id": 1951,
                                "name": "_claimers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1918,
                                "src": "2919:9:8",
=======
                                "id": 1803,
                                "name": "_claimers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1770,
                                "src": "2920:9:6",
>>>>>>> dsla-incentivized-beta-phase-i
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
<<<<<<< HEAD
                              "id": 1953,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1952,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1940,
                                "src": "2929:1:8",
=======
                              "id": 1805,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1804,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1792,
                                "src": "2930:1:6",
>>>>>>> dsla-incentivized-beta-phase-i
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
<<<<<<< HEAD
                              "src": "2919:12:8",
=======
                              "src": "2920:12:6",
>>>>>>> dsla-incentivized-beta-phase-i
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "2910:22:8",
=======
                            "src": "2911:22:6",
>>>>>>> dsla-incentivized-beta-phase-i
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
<<<<<<< HEAD
                        "id": 1976,
                        "nodeType": "IfStatement",
                        "src": "2906:162:8",
                        "trueBody": {
                          "id": 1975,
                          "nodeType": "Block",
                          "src": "2933:135:8",
=======
                        "id": 1828,
                        "nodeType": "IfStatement",
                        "src": "2907:162:6",
                        "trueBody": {
                          "id": 1827,
                          "nodeType": "Block",
                          "src": "2934:135:6",
>>>>>>> dsla-incentivized-beta-phase-i
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
<<<<<<< HEAD
                                "id": 1964,
=======
                                "id": 1816,
>>>>>>> dsla-incentivized-beta-phase-i
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
<<<<<<< HEAD
                                    "id": 1956,
                                    "name": "_allowedBalances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1855,
                                    "src": "2951:16:8",
=======
                                    "id": 1808,
                                    "name": "_allowedBalances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1707,
                                    "src": "2952:16:6",
>>>>>>> dsla-incentivized-beta-phase-i
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
<<<<<<< HEAD
                                  "id": 1960,
=======
                                  "id": 1812,
>>>>>>> dsla-incentivized-beta-phase-i
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
<<<<<<< HEAD
                                      "id": 1957,
                                      "name": "_claimers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1918,
                                      "src": "2968:9:8",
=======
                                      "id": 1809,
                                      "name": "_claimers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1770,
                                      "src": "2969:9:6",
>>>>>>> dsla-incentivized-beta-phase-i
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
<<<<<<< HEAD
                                    "id": 1959,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 1958,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1940,
                                      "src": "2978:1:8",
=======
                                    "id": 1811,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 1810,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1792,
                                      "src": "2979:1:6",
>>>>>>> dsla-incentivized-beta-phase-i
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                                    "src": "2968:12:8",
=======
                                    "src": "2969:12:6",
>>>>>>> dsla-incentivized-beta-phase-i
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
<<<<<<< HEAD
                                  "src": "2951:30:8",
=======
                                  "src": "2952:30:6",
>>>>>>> dsla-incentivized-beta-phase-i
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
<<<<<<< HEAD
                                    "id": 1961,
                                    "name": "_amounts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1915,
                                    "src": "2984:8:8",
=======
                                    "id": 1813,
                                    "name": "_amounts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1767,
                                    "src": "2985:8:6",
>>>>>>> dsla-incentivized-beta-phase-i
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
<<<<<<< HEAD
                                  "id": 1963,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 1962,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1940,
                                    "src": "2993:1:8",
=======
                                  "id": 1815,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 1814,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1792,
                                    "src": "2994:1:6",
>>>>>>> dsla-incentivized-beta-phase-i
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
<<<<<<< HEAD
                                  "src": "2984:11:8",
=======
                                  "src": "2985:11:6",
>>>>>>> dsla-incentivized-beta-phase-i
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
<<<<<<< HEAD
                                "src": "2951:44:8",
=======
                                "src": "2952:44:6",
>>>>>>> dsla-incentivized-beta-phase-i
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
<<<<<<< HEAD
                              "id": 1965,
                              "nodeType": "ExpressionStatement",
                              "src": "2951:44:8"
=======
                              "id": 1817,
                              "nodeType": "ExpressionStatement",
                              "src": "2952:44:6"
>>>>>>> dsla-incentivized-beta-phase-i
                            },
                            {
                              "eventCall": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
<<<<<<< HEAD
                                      "id": 1967,
                                      "name": "_amounts",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1915,
                                      "src": "3027:8:8",
=======
                                      "id": 1819,
                                      "name": "_amounts",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1767,
                                      "src": "3028:8:6",
>>>>>>> dsla-incentivized-beta-phase-i
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
<<<<<<< HEAD
                                    "id": 1969,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 1968,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1940,
                                      "src": "3036:1:8",
=======
                                    "id": 1821,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 1820,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1792,
                                      "src": "3037:1:6",
>>>>>>> dsla-incentivized-beta-phase-i
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                                    "src": "3027:11:8",
=======
                                    "src": "3028:11:6",
>>>>>>> dsla-incentivized-beta-phase-i
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
<<<<<<< HEAD
                                      "id": 1970,
                                      "name": "_claimers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1918,
                                      "src": "3040:9:8",
=======
                                      "id": 1822,
                                      "name": "_claimers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1770,
                                      "src": "3041:9:6",
>>>>>>> dsla-incentivized-beta-phase-i
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
<<<<<<< HEAD
                                    "id": 1972,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 1971,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1940,
                                      "src": "3050:1:8",
=======
                                    "id": 1824,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 1823,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1792,
                                      "src": "3051:1:6",
>>>>>>> dsla-incentivized-beta-phase-i
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                                    "src": "3040:12:8",
=======
                                    "src": "3041:12:6",
>>>>>>> dsla-incentivized-beta-phase-i
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
<<<<<<< HEAD
                                  "id": 1966,
                                  "name": "Allowed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1865,
                                  "src": "3019:7:8",
=======
                                  "id": 1818,
                                  "name": "Allowed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1717,
                                  "src": "3020:7:6",
>>>>>>> dsla-incentivized-beta-phase-i
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                                    "typeString": "function (uint256,address)"
                                  }
                                },
<<<<<<< HEAD
                                "id": 1973,
=======
                                "id": 1825,
>>>>>>> dsla-incentivized-beta-phase-i
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
<<<<<<< HEAD
                                "src": "3019:34:8",
=======
                                "src": "3020:34:6",
>>>>>>> dsla-incentivized-beta-phase-i
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
<<<<<<< HEAD
                              "id": 1974,
                              "nodeType": "EmitStatement",
                              "src": "3014:39:8"
=======
                              "id": 1826,
                              "nodeType": "EmitStatement",
                              "src": "3015:39:6"
>>>>>>> dsla-incentivized-beta-phase-i
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
<<<<<<< HEAD
                    "id": 1946,
=======
                    "id": 1798,
>>>>>>> dsla-incentivized-beta-phase-i
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
<<<<<<< HEAD
                      "id": 1943,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1940,
                      "src": "2867:1:8",
=======
                      "id": 1795,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1792,
                      "src": "2868:1:6",
>>>>>>> dsla-incentivized-beta-phase-i
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 1944,
                        "name": "_amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1915,
                        "src": "2871:8:8",
=======
                        "id": 1796,
                        "name": "_amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1767,
                        "src": "2872:8:6",
>>>>>>> dsla-incentivized-beta-phase-i
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
<<<<<<< HEAD
                      "id": 1945,
=======
                      "id": 1797,
>>>>>>> dsla-incentivized-beta-phase-i
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
<<<<<<< HEAD
                      "src": "2871:15:8",
=======
                      "src": "2872:15:6",
>>>>>>> dsla-incentivized-beta-phase-i
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "2867:19:8",
=======
                    "src": "2868:19:6",
>>>>>>> dsla-incentivized-beta-phase-i
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "id": 1978,
                  "initializationExpression": {
                    "assignments": [
                      1940
=======
                  "id": 1830,
                  "initializationExpression": {
                    "assignments": [
                      1792
>>>>>>> dsla-incentivized-beta-phase-i
                    ],
                    "declarations": [
                      {
                        "constant": false,
<<<<<<< HEAD
                        "id": 1940,
=======
                        "id": 1792,
>>>>>>> dsla-incentivized-beta-phase-i
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
<<<<<<< HEAD
                        "scope": 1978,
                        "src": "2857:6:8",
=======
                        "scope": 1830,
                        "src": "2858:6:6",
>>>>>>> dsla-incentivized-beta-phase-i
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
<<<<<<< HEAD
                          "id": 1939,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2857:4:8",
=======
                          "id": 1791,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2858:4:6",
>>>>>>> dsla-incentivized-beta-phase-i
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
<<<<<<< HEAD
                    "id": 1942,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1941,
=======
                    "id": 1794,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1793,
>>>>>>> dsla-incentivized-beta-phase-i
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "2864:1:8",
=======
                      "src": "2865:1:6",
>>>>>>> dsla-incentivized-beta-phase-i
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                    "src": "2857:8:8"
=======
                    "src": "2858:8:6"
>>>>>>> dsla-incentivized-beta-phase-i
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
<<<<<<< HEAD
                      "id": 1948,
=======
                      "id": 1800,
>>>>>>> dsla-incentivized-beta-phase-i
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
<<<<<<< HEAD
                      "src": "2888:3:8",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1947,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1940,
                        "src": "2888:1:8",
=======
                      "src": "2889:3:6",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1799,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1792,
                        "src": "2889:1:6",
>>>>>>> dsla-incentivized-beta-phase-i
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "id": 1949,
                    "nodeType": "ExpressionStatement",
                    "src": "2888:3:8"
                  },
                  "nodeType": "ForStatement",
                  "src": "2853:225:8"
=======
                    "id": 1801,
                    "nodeType": "ExpressionStatement",
                    "src": "2889:3:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "2854:225:6"
>>>>>>> dsla-incentivized-beta-phase-i
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 1912,
              "nodeType": "StructuredDocumentation",
              "src": "2106:433:8",
              "text": "@notice the setAllowedAmounts function allows the admin to set \na claimable amounts of bDSLA for claimers. \n\n     * @dev allows the claim of `_amounts` for `_claimers`.\n\n     * @param _amounts an array of amounts to be claimed \n@param _claimers an array of addresses of the claimers    \n     *\nRequirements:\n     * - the caller must have the `(DEFAULT_ADMIN_ROLE)`."
            },
            "functionSelector": "b4986fc5",
            "id": 1980,
=======
              "id": 1764,
              "nodeType": "StructuredDocumentation",
              "src": "2107:433:6",
              "text": " @notice the setAllowedAmounts function allows the admin to set \n a claimable amounts of bDSLA for claimers. \n \n @dev allows the claim of `_amounts` for `_claimers`.\n \n @param _amounts an array of amounts to be claimed \n @param _claimers an array of addresses of the claimers    \n Requirements:\n - the caller must have the `(DEFAULT_ADMIN_ROLE)`."
            },
            "functionSelector": "b4986fc5",
            "id": 1832,
>>>>>>> dsla-incentivized-beta-phase-i
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAllowedAmounts",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
<<<<<<< HEAD
              "id": 1919,
=======
              "id": 1771,
>>>>>>> dsla-incentivized-beta-phase-i
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1915,
=======
                  "id": 1767,
>>>>>>> dsla-incentivized-beta-phase-i
                  "mutability": "mutable",
                  "name": "_amounts",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 1980,
                  "src": "2571:22:8",
=======
                  "scope": 1832,
                  "src": "2572:22:6",
>>>>>>> dsla-incentivized-beta-phase-i
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
<<<<<<< HEAD
                      "id": 1913,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "2571:4:8",
=======
                      "id": 1765,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "2572:4:6",
>>>>>>> dsla-incentivized-beta-phase-i
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "id": 1914,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2571:6:8",
=======
                    "id": 1766,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2572:6:6",
>>>>>>> dsla-incentivized-beta-phase-i
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1918,
=======
                  "id": 1770,
>>>>>>> dsla-incentivized-beta-phase-i
                  "mutability": "mutable",
                  "name": "_claimers",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 1980,
                  "src": "2595:26:8",
=======
                  "scope": 1832,
                  "src": "2596:26:6",
>>>>>>> dsla-incentivized-beta-phase-i
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
<<<<<<< HEAD
                      "id": 1916,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2595:7:8",
=======
                      "id": 1768,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2596:7:6",
>>>>>>> dsla-incentivized-beta-phase-i
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
<<<<<<< HEAD
                    "id": 1917,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2595:9:8",
=======
                    "id": 1769,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2596:9:6",
>>>>>>> dsla-incentivized-beta-phase-i
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "2570:52:8"
            },
            "returnParameters": {
              "id": 1920,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2630:0:8"
            },
            "scope": 2027,
            "src": "2544:540:8",
=======
              "src": "2571:52:6"
            },
            "returnParameters": {
              "id": 1772,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2631:0:6"
            },
            "scope": 1879,
            "src": "2545:540:6",
>>>>>>> dsla-incentivized-beta-phase-i
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 2025,
              "nodeType": "Block",
              "src": "3582:374:8",
=======
              "id": 1877,
              "nodeType": "Block",
              "src": "3583:374:6",
>>>>>>> dsla-incentivized-beta-phase-i
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
<<<<<<< HEAD
                            "id": 1988,
                            "name": "MINTER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2677,
                            "src": "3608:11:8",
=======
                            "id": 1840,
                            "name": "MINTER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2529,
                            "src": "3609:11:6",
>>>>>>> dsla-incentivized-beta-phase-i
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
<<<<<<< HEAD
                              "id": 1989,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2056,
                              "src": "3621:10:8",
=======
                              "id": 1841,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1908,
                              "src": "3622:10:6",
>>>>>>> dsla-incentivized-beta-phase-i
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
<<<<<<< HEAD
                            "id": 1990,
=======
                            "id": 1842,
>>>>>>> dsla-incentivized-beta-phase-i
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "3621:12:8",
=======
                            "src": "3622:12:6",
>>>>>>> dsla-incentivized-beta-phase-i
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
<<<<<<< HEAD
                          "id": 1987,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2140,
                          "src": "3600:7:8",
=======
                          "id": 1839,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1992,
                          "src": "3601:7:6",
>>>>>>> dsla-incentivized-beta-phase-i
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
<<<<<<< HEAD
                        "id": 1991,
=======
                        "id": 1843,
>>>>>>> dsla-incentivized-beta-phase-i
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "3600:34:8",
=======
                        "src": "3601:34:6",
>>>>>>> dsla-incentivized-beta-phase-i
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332305072657365744d696e7465725061757365723a206d7573742068617665206d696e74657220726f6c65",
<<<<<<< HEAD
                        "id": 1992,
=======
                        "id": 1844,
>>>>>>> dsla-incentivized-beta-phase-i
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "3636:48:8",
=======
                        "src": "3637:48:6",
>>>>>>> dsla-incentivized-beta-phase-i
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ec077d98b318f0b88382705905b7bb11882e663120044d946c57be523bd3d202",
                          "typeString": "literal_string \"ERC20PresetMinterPauser: must have minter role\""
                        },
                        "value": "ERC20PresetMinterPauser: must have minter role"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ec077d98b318f0b88382705905b7bb11882e663120044d946c57be523bd3d202",
                          "typeString": "literal_string \"ERC20PresetMinterPauser: must have minter role\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 1986,
=======
                      "id": 1838,
>>>>>>> dsla-incentivized-beta-phase-i
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
<<<<<<< HEAD
                      "src": "3592:7:8",
=======
                      "src": "3593:7:6",
>>>>>>> dsla-incentivized-beta-phase-i
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 1993,
=======
                    "id": 1845,
>>>>>>> dsla-incentivized-beta-phase-i
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3592:93:8",
=======
                    "src": "3593:93:6",
>>>>>>> dsla-incentivized-beta-phase-i
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1994,
                  "nodeType": "ExpressionStatement",
                  "src": "3592:93:8"
=======
                  "id": 1846,
                  "nodeType": "ExpressionStatement",
                  "src": "3593:93:6"
>>>>>>> dsla-incentivized-beta-phase-i
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
<<<<<<< HEAD
                        "id": 2000,
=======
                        "id": 1852,
>>>>>>> dsla-incentivized-beta-phase-i
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
<<<<<<< HEAD
                            "id": 1996,
                            "name": "_allowedBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1855,
                            "src": "3703:16:8",
=======
                            "id": 1848,
                            "name": "_allowedBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1707,
                            "src": "3704:16:6",
>>>>>>> dsla-incentivized-beta-phase-i
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
<<<<<<< HEAD
                          "id": 1998,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1997,
                            "name": "_claimer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1983,
                            "src": "3720:8:8",
=======
                          "id": 1850,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1849,
                            "name": "_claimer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1835,
                            "src": "3721:8:6",
>>>>>>> dsla-incentivized-beta-phase-i
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
<<<<<<< HEAD
                          "src": "3703:26:8",
=======
                          "src": "3704:26:6",
>>>>>>> dsla-incentivized-beta-phase-i
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
<<<<<<< HEAD
                          "id": 1999,
=======
                          "id": 1851,
>>>>>>> dsla-incentivized-beta-phase-i
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "3732:1:8",
=======
                          "src": "3733:1:6",
>>>>>>> dsla-incentivized-beta-phase-i
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
<<<<<<< HEAD
                        "src": "3703:30:8",
=======
                        "src": "3704:30:6",
>>>>>>> dsla-incentivized-beta-phase-i
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6244534c41546f6b656e3a206d757374206861766520616e20616c6c6f77656420616d6f756e20746f20636c61696d",
<<<<<<< HEAD
                        "id": 2001,
=======
                        "id": 1853,
>>>>>>> dsla-incentivized-beta-phase-i
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "3735:49:8",
=======
                        "src": "3736:49:6",
>>>>>>> dsla-incentivized-beta-phase-i
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3d164fab85c08edf622e79efb6f142f882329b9dc58cb926e92f196289ff3783",
                          "typeString": "literal_string \"bDSLAToken: must have an allowed amoun to claim\""
                        },
                        "value": "bDSLAToken: must have an allowed amoun to claim"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3d164fab85c08edf622e79efb6f142f882329b9dc58cb926e92f196289ff3783",
                          "typeString": "literal_string \"bDSLAToken: must have an allowed amoun to claim\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 1995,
=======
                      "id": 1847,
>>>>>>> dsla-incentivized-beta-phase-i
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
<<<<<<< HEAD
                      "src": "3695:7:8",
=======
                      "src": "3696:7:6",
>>>>>>> dsla-incentivized-beta-phase-i
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 2002,
=======
                    "id": 1854,
>>>>>>> dsla-incentivized-beta-phase-i
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3695:90:8",
=======
                    "src": "3696:90:6",
>>>>>>> dsla-incentivized-beta-phase-i
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 2003,
                  "nodeType": "ExpressionStatement",
                  "src": "3695:90:8"
=======
                  "id": 1855,
                  "nodeType": "ExpressionStatement",
                  "src": "3696:90:6"
>>>>>>> dsla-incentivized-beta-phase-i
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 2008,
=======
                        "id": 1860,
>>>>>>> dsla-incentivized-beta-phase-i
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
<<<<<<< HEAD
                        "src": "3803:19:8",
=======
                        "src": "3804:19:6",
>>>>>>> dsla-incentivized-beta-phase-i
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
<<<<<<< HEAD
                            "id": 2005,
                            "name": "_claimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1859,
                            "src": "3804:8:8",
=======
                            "id": 1857,
                            "name": "_claimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1711,
                            "src": "3805:8:6",
>>>>>>> dsla-incentivized-beta-phase-i
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
<<<<<<< HEAD
                          "id": 2007,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2006,
                            "name": "_claimer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1983,
                            "src": "3813:8:8",
=======
                          "id": 1859,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1858,
                            "name": "_claimer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1835,
                            "src": "3814:8:6",
>>>>>>> dsla-incentivized-beta-phase-i
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
<<<<<<< HEAD
                          "src": "3804:18:8",
=======
                          "src": "3805:18:6",
>>>>>>> dsla-incentivized-beta-phase-i
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6244534c41546f6b656e3a20746f6b656e7320616c726561647920636c61696d6564",
<<<<<<< HEAD
                        "id": 2009,
=======
                        "id": 1861,
>>>>>>> dsla-incentivized-beta-phase-i
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "3824:36:8",
=======
                        "src": "3825:36:6",
>>>>>>> dsla-incentivized-beta-phase-i
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c85c62ca35affe0b9092bce01165096b06701b26b9c09c0398b1799e70f1e706",
                          "typeString": "literal_string \"bDSLAToken: tokens already claimed\""
                        },
                        "value": "bDSLAToken: tokens already claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c85c62ca35affe0b9092bce01165096b06701b26b9c09c0398b1799e70f1e706",
                          "typeString": "literal_string \"bDSLAToken: tokens already claimed\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 2004,
=======
                      "id": 1856,
>>>>>>> dsla-incentivized-beta-phase-i
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
<<<<<<< HEAD
                      "src": "3795:7:8",
=======
                      "src": "3796:7:6",
>>>>>>> dsla-incentivized-beta-phase-i
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 2010,
=======
                    "id": 1862,
>>>>>>> dsla-incentivized-beta-phase-i
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3795:66:8",
=======
                    "src": "3796:66:6",
>>>>>>> dsla-incentivized-beta-phase-i
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 2011,
                  "nodeType": "ExpressionStatement",
                  "src": "3795:66:8"
=======
                  "id": 1863,
                  "nodeType": "ExpressionStatement",
                  "src": "3796:66:6"
>>>>>>> dsla-incentivized-beta-phase-i
                },
                {
                  "expression": {
                    "argumentTypes": null,
<<<<<<< HEAD
                    "id": 2016,
=======
                    "id": 1868,
>>>>>>> dsla-incentivized-beta-phase-i
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 2012,
                        "name": "_claimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1859,
                        "src": "3871:8:8",
=======
                        "id": 1864,
                        "name": "_claimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1711,
                        "src": "3872:8:6",
>>>>>>> dsla-incentivized-beta-phase-i
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
<<<<<<< HEAD
                      "id": 2014,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2013,
                        "name": "_claimer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1983,
                        "src": "3880:8:8",
=======
                      "id": 1866,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1865,
                        "name": "_claimer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1835,
                        "src": "3881:8:6",
>>>>>>> dsla-incentivized-beta-phase-i
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "3871:18:8",
=======
                      "src": "3872:18:6",
>>>>>>> dsla-incentivized-beta-phase-i
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
<<<<<<< HEAD
                      "id": 2015,
=======
                      "id": 1867,
>>>>>>> dsla-incentivized-beta-phase-i
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "3892:4:8",
=======
                      "src": "3893:4:6",
>>>>>>> dsla-incentivized-beta-phase-i
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
<<<<<<< HEAD
                    "src": "3871:25:8",
=======
                    "src": "3872:25:6",
>>>>>>> dsla-incentivized-beta-phase-i
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "id": 2017,
                  "nodeType": "ExpressionStatement",
                  "src": "3871:25:8"
=======
                  "id": 1869,
                  "nodeType": "ExpressionStatement",
                  "src": "3872:25:6"
>>>>>>> dsla-incentivized-beta-phase-i
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 2019,
                        "name": "_claimer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1983,
                        "src": "3912:8:8",
=======
                        "id": 1871,
                        "name": "_claimer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1835,
                        "src": "3913:8:6",
>>>>>>> dsla-incentivized-beta-phase-i
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
<<<<<<< HEAD
                          "id": 2020,
                          "name": "_allowedBalances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1855,
                          "src": "3922:16:8",
=======
                          "id": 1872,
                          "name": "_allowedBalances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1707,
                          "src": "3923:16:6",
>>>>>>> dsla-incentivized-beta-phase-i
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
<<<<<<< HEAD
                        "id": 2022,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2021,
                          "name": "_claimer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1983,
                          "src": "3939:8:8",
=======
                        "id": 1874,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1873,
                          "name": "_claimer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1835,
                          "src": "3940:8:6",
>>>>>>> dsla-incentivized-beta-phase-i
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
<<<<<<< HEAD
                        "src": "3922:26:8",
=======
                        "src": "3923:26:6",
>>>>>>> dsla-incentivized-beta-phase-i
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
<<<<<<< HEAD
                      "id": 2018,
                      "name": "mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2736,
                      "src": "3907:4:8",
=======
                      "id": 1870,
                      "name": "mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2588,
                      "src": "3908:4:6",
>>>>>>> dsla-incentivized-beta-phase-i
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
<<<<<<< HEAD
                    "id": 2023,
=======
                    "id": 1875,
>>>>>>> dsla-incentivized-beta-phase-i
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3907:42:8",
=======
                    "src": "3908:42:6",
>>>>>>> dsla-incentivized-beta-phase-i
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 2024,
                  "nodeType": "ExpressionStatement",
                  "src": "3907:42:8"
=======
                  "id": 1876,
                  "nodeType": "ExpressionStatement",
                  "src": "3908:42:6"
>>>>>>> dsla-incentivized-beta-phase-i
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 1981,
              "nodeType": "StructuredDocumentation",
              "src": "3094:443:8",
              "text": "@notice the setAllowedAmounts function allows the admin to set \na claimable amounts of bDSLA for claimers. \n\n     * @dev creates new 'bDSLA' tokens for the `_claimer`.\n\n     * @param _claimer address of the claimer \n     *\nRequirements:\n     * - the caller must have the `(MINTER_ROLE)`.\n- the claimer should have an allowed balance \n- the claim can be done just once "
            },
            "functionSelector": "1e83409a",
            "id": 2026,
=======
              "id": 1833,
              "nodeType": "StructuredDocumentation",
              "src": "3095:443:6",
              "text": " @notice the setAllowedAmounts function allows the admin to set \n a claimable amounts of bDSLA for claimers. \n \n @dev creates new 'bDSLA' tokens for the `_claimer`.\n \n @param _claimer address of the claimer \n Requirements:\n - the caller must have the `(MINTER_ROLE)`.\n - the claimer should have an allowed balance \n - the claim can be done just once "
            },
            "functionSelector": "1e83409a",
            "id": 1878,
>>>>>>> dsla-incentivized-beta-phase-i
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
<<<<<<< HEAD
              "id": 1984,
=======
              "id": 1836,
>>>>>>> dsla-incentivized-beta-phase-i
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1983,
=======
                  "id": 1835,
>>>>>>> dsla-incentivized-beta-phase-i
                  "mutability": "mutable",
                  "name": "_claimer",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 2026,
                  "src": "3557:16:8",
=======
                  "scope": 1878,
                  "src": "3558:16:6",
>>>>>>> dsla-incentivized-beta-phase-i
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1982,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3557:7:8",
=======
                    "id": 1834,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3558:7:6",
>>>>>>> dsla-incentivized-beta-phase-i
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "3556:18:8"
            },
            "returnParameters": {
              "id": 1985,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3582:0:8"
            },
            "scope": 2027,
            "src": "3542:414:8",
=======
              "src": "3557:18:6"
            },
            "returnParameters": {
              "id": 1837,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3583:0:6"
            },
            "scope": 1879,
            "src": "3543:414:6",
>>>>>>> dsla-incentivized-beta-phase-i
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
<<<<<<< HEAD
        "scope": 2028,
        "src": "714:3244:8"
      }
    ],
    "src": "50:3908:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.6+commit.6c089d02.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.5",
  "updatedAt": "2020-11-29T13:40:21.629Z",
  "devdoc": {
    "details": "{bDSLA} token, including: *  - ability for holders to burn (destroy) their tokens - a minter role that allows for token minting (creation) - a pauser role that allows to stop all token transfers - a claim procces for DSLA owners  * This contract uses {AccessControl} to lock permissioned functions using the different roles.  * The account that deploys the contract will be granted the minter and pauser roles, as well as the default admin role, which will let it grant both minter and pauser roles to other accounts.",
=======
        "scope": 1880,
        "src": "715:3244:6"
      }
    ],
    "src": "50:3909:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.5",
  "updatedAt": "2020-10-17T00:08:07.912Z",
  "devdoc": {
    "details": "{bDSLA} token, including:  - ability for holders to burn (destroy) their tokens  - a minter role that allows for token minting (creation)  - a pauser role that allows to stop all token transfers  - a claim procces for DSLA owners  This contract uses {AccessControl} to lock permissioned functions using the different roles.  The account that deploys the contract will be granted the minter and pauser roles, as well as the default admin role, which will let it grant both minter and pauser roles to other accounts.",
    "kind": "dev",
>>>>>>> dsla-incentivized-beta-phase-i
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
<<<<<<< HEAD
        "details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
=======
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
>>>>>>> dsla-incentivized-beta-phase-i
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(uint256)": {
<<<<<<< HEAD
        "details": "Destroys `amount` tokens from the caller.     * See {ERC20-_burn}."
      },
      "burnFrom(address,uint256)": {
        "details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance.     * See {ERC20-_burn} and {ERC20-allowance}.     * Requirements:     * - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
=======
        "details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
      },
      "burnFrom(address,uint256)": {
        "details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
>>>>>>> dsla-incentivized-beta-phase-i
      },
      "claim(address)": {
        "details": "creates new 'bDSLA' tokens for the `_claimer`. ",
        "params": {
<<<<<<< HEAD
          "_claimer": "address of the claimer      * Requirements:     * - the caller must have the `(MINTER_ROLE)`. - the claimer should have an allowed balance  - the claim can be done just once "
        }
      },
      "constructor": {
        "details": "Sets the values for {name} and {symbol}, {decimals} have  a default value of 18.     * All three of these values are immutable: they can only be set once during construction."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}.     * To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive.     * Role bearers are not sorted in any particular way, and their ordering may change at any point.     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
=======
          "_claimer": "address of the claimer  Requirements: - the caller must have the `(MINTER_ROLE)`. - the claimer should have an allowed balance  - the claim can be done just once "
        }
      },
      "constructor": {
        "details": "Sets the values for {name} and {symbol}, {decimals} have  a default value of 18. All three of these values are immutable: they can only be set once during construction."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
>>>>>>> dsla-incentivized-beta-phase-i
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "grantRole(bytes32,address)": {
<<<<<<< HEAD
        "details": "Grants `role` to `account`.     * If `account` had not been already granted `role`, emits a {RoleGranted} event.     * Requirements:     * - the caller must have ``role``'s admin role."
=======
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
>>>>>>> dsla-incentivized-beta-phase-i
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "increaseAllowance(address,uint256)": {
<<<<<<< HEAD
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "mint(address,uint256)": {
        "details": "Creates `amount` new tokens for `to`.     * See {ERC20-_mint}.     * Requirements:     * - the caller must have the `MINTER_ROLE`."
=======
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "mint(address,uint256)": {
        "details": "Creates `amount` new tokens for `to`. See {ERC20-_mint}. Requirements: - the caller must have the `MINTER_ROLE`."
>>>>>>> dsla-incentivized-beta-phase-i
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "pause()": {
<<<<<<< HEAD
        "details": "Pauses all token transfers.     * See {ERC20Pausable} and {Pausable-_pause}.     * Requirements:     * - the caller must have the `PAUSER_ROLE`."
=======
        "details": "Pauses all token transfers. See {ERC20Pausable} and {Pausable-_pause}. Requirements: - the caller must have the `PAUSER_ROLE`."
>>>>>>> dsla-incentivized-beta-phase-i
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceRole(bytes32,address)": {
<<<<<<< HEAD
        "details": "Revokes `role` from the calling account.     * Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced).     * If the calling account had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`.     * If `account` had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must have ``role``'s admin role."
=======
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
>>>>>>> dsla-incentivized-beta-phase-i
      },
      "setAllowedAmount(uint256,address)": {
        "details": "allows the claim of `_amount` for `_claimer`. ",
        "params": {
          "_amount": "uint the equivalent amount of DSLA tokens on the mainnet ",
<<<<<<< HEAD
          "_claimer": "address of the claimer        * Requirements:     * - the caller must have the `(DEFAULT_ADMIN_ROLE)`."
=======
          "_claimer": "address of the claimer    Requirements: - the caller must have the `(DEFAULT_ADMIN_ROLE)`."
>>>>>>> dsla-incentivized-beta-phase-i
        }
      },
      "setAllowedAmounts(uint256[],address[])": {
        "details": "allows the claim of `_amounts` for `_claimers`. ",
        "params": {
          "_amounts": "an array of amounts to be claimed ",
<<<<<<< HEAD
          "_claimers": "an array of addresses of the claimers         * Requirements:     * - the caller must have the `(DEFAULT_ADMIN_ROLE)`."
=======
          "_claimers": "an array of addresses of the claimers     Requirements: - the caller must have the `(DEFAULT_ADMIN_ROLE)`."
>>>>>>> dsla-incentivized-beta-phase-i
        }
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
<<<<<<< HEAD
        "details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "unpause()": {
        "details": "Unpauses all token transfers.     * See {ERC20Pausable} and {Pausable-_unpause}.     * Requirements:     * - the caller must have the `PAUSER_ROLE`."
      }
    }
  },
  "userdoc": {
=======
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "unpause()": {
        "details": "Unpauses all token transfers. See {ERC20Pausable} and {Pausable-_unpause}. Requirements: - the caller must have the `PAUSER_ROLE`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
>>>>>>> dsla-incentivized-beta-phase-i
    "methods": {
      "claim(address)": {
        "notice": "the setAllowedAmounts function allows the admin to set  a claimable amounts of bDSLA for claimers.  "
      },
      "setAllowedAmount(uint256,address)": {
        "notice": "the setAllowedAmount function allows the admin to set an amount  of claimable bDSLA based on the balanceOf DSLA token of the claimer on the mainnet. "
      },
      "setAllowedAmounts(uint256[],address[])": {
        "notice": "the setAllowedAmounts function allows the admin to set  a claimable amounts of bDSLA for claimers.  "
      }
<<<<<<< HEAD
    }
=======
    },
    "version": 1
>>>>>>> dsla-incentivized-beta-phase-i
  }
}