{
  "contractName": "bDSLA",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        }
      ],
      "name": "Allowed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "MINTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "PAUSER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        }
      ],
      "name": "setAllowedAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "address[]",
          "name": "_claimers",
          "type": "address[]"
        }
      ],
      "name": "setAllowedAmounts",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"}],\"name\":\"Allowed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"}],\"name\":\"setAllowedAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"_claimers\",\"type\":\"address[]\"}],\"name\":\"setAllowedAmounts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"{bDSLA} token, including: *  - ability for holders to burn (destroy) their tokens - a minter role that allows for token minting (creation) - a pauser role that allows to stop all token transfers - a claim procces for DSLA owners * This contract uses {AccessControl} to lock permissioned functions using the different roles. * The account that deploys the contract will be granted the minter and pauser roles, as well as the default admin role, which will let it grant both minter and pauser roles to other accounts.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller.     * See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance.     * See {ERC20-_burn} and {ERC20-allowance}.     * Requirements:     * - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"claim(address)\":{\"details\":\"creates new 'bDSLA' tokens for the `_claimer`.\",\"params\":{\"_claimer\":\"1. address of the claimer     * Requirements:     * - the caller must have the `(MINTER_ROLE)`. - the claimer should have an allowed balance - the claim can be done just once\"}},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}, {decimals} have a default value of 18.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}.     * To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive.     * Role bearers are not sorted in any particular way, and their ordering may change at any point.     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`.     * If `account` had not been already granted `role`, emits a {RoleGranted} event.     * Requirements:     * - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"details\":\"Creates `amount` new tokens for `to`.\",\"params\":{\"amount\":\"2. minted amount\",\"to\":\"1. address of receiver\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"pause()\":{\"details\":\"Pauses all token transfers.     * See {ERC20Pausable} and {Pausable-_pause}.     * Requirements:     * - the caller must have the `PAUSER_ROLE`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account.     * Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced).     * If the calling account had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`.     * If `account` had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must have ``role``'s admin role.\"},\"setAllowedAmount(uint256,address)\":{\"details\":\"allows the claim of `_amount` for `_claimer`.\",\"params\":{\"_amount\":\"1. uint the equivalent amount of DSLA tokens on the mainnet\",\"_claimer\":\"2. address of the claimer     * Requirements:     * - the caller must have the `(DEFAULT_ADMIN_ROLE)`.\"}},\"setAllowedAmounts(uint256[],address[])\":{\"details\":\"allows the claim of `_amounts` for `_claimers`.\",\"params\":{\"_amounts\":\"1. an array of amounts to be claimed\",\"_claimers\":\"2. an array of addresses of the claimers     * Requirements:     * - the caller must have the `(DEFAULT_ADMIN_ROLE)`.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"unpause()\":{\"details\":\"Unpauses all token transfers.     * See {ERC20Pausable} and {Pausable-_unpause}.     * Requirements:     * - the caller must have the `PAUSER_ROLE`.\"}}},\"userdoc\":{\"methods\":{\"claim(address)\":{\"notice\":\"the setAllowedAmounts function allows the admin to set a claimable amounts of bDSLA for claimers.\"},\"constructor\":\"token name: bDSLA , token symbol: bDSLA\",\"setAllowedAmount(uint256,address)\":{\"notice\":\"the setAllowedAmount function allows the admin to set an amount of claimable bDSLA based on the balanceOf DSLA token of the claimer on the mainnet.\"},\"setAllowedAmounts(uint256[],address[])\":{\"notice\":\"the setAllowedAmounts function allows the admin to set a claimable amounts of bDSLA for claimers.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/tokens/bDSLA.sol\":\"bDSLA\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/tokens/bDSLA.sol\":{\"keccak256\":\"0x252b46ed1ddf0ac0b1030e3f2a672e869bc3d8a5a045179acb039dcc36eaba63\",\"urls\":[\"bzz-raw://8902dde28ff8d7852cbd8a82fbf56bddd9ee38688a6932fa61dbcd89893e87e9\",\"dweb:/ipfs/QmQRGvMFaVT1nNgKdRKdt1woKawfzd1gqUJMFyPz6BT63a\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x92f7900d382761c7faefeaced81c6b4f1aae909ed0551803bfe8f27101956360\",\"urls\":[\"bzz-raw://407c0864143968542e5cf5aa7556916d2cf292b201e3dadb65662e9a3aa24187\",\"dweb:/ipfs/QmSnXzYAUaGLGr7uofRbgQraTJvatbjQLBPhyYiMd18oUJ\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"@openzeppelin/contracts/presets/ERC20PresetMinterPauser.sol\":{\"keccak256\":\"0xe30213b0851987b0455057cdfb65660c05805cbb05b12c0d61b0ff7a99cc36cc\",\"urls\":[\"bzz-raw://1c61711ecc3ad53890dded63c27909a315ba3053c553be29acaa239bc6a7a0cf\",\"dweb:/ipfs/QmQjriBzSyAYQTm4NfWpnnoH8RhZrayyXm2zvpeHkxQnAk\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x91e0bd6a6762d2a1700dab0849de8422611355100576c4beef1e80d82a4104a0\",\"urls\":[\"bzz-raw://73bbd77af0a8b07255d2ffa20728bcf13b116007c9ddac5d37046cfabb0e1e02\",\"dweb:/ipfs/QmRgZgWCWCSMTTaok6o4QvWA6MgB4goS8qpb3sN7bAvaZ9\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0x657b0d90be17331364211d74359df2a734fac864f6e88c80de7626fa33090ffb\",\"urls\":[\"bzz-raw://09cca25fefa2354a424d55a97930c76b11dc50697ba62c85d7affc27a37e830c\",\"dweb:/ipfs/QmPTQBYXxQDSNmMKqwe4WnM8E7NwnpLnkFLSRH8hZRvrVK\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol\":{\"keccak256\":\"0xbab4a97af2a6810a8ffc187205dfb331284949ea5b30caa5b9052828853bb149\",\"urls\":[\"bzz-raw://f53c98e31ed415c2a6f03d99809cd4f2f5fff92a13ee85022922a09df82ee459\",\"dweb:/ipfs/QmXiv4ysuQSRfoXqPpwA1QCreEnqfkrHDGyJTmifoni7dK\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\",\"urls\":[\"bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017\",\"dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390\",\"urls\":[\"bzz-raw://774e78a9ff32792cc95db4d2ceaf3a7965bb7f0bea5e6cb7cff182b450d44b37\",\"dweb:/ipfs/QmRRMC4uj7eAcLW7chynA3sNEYULMFazdLwQHKHQPyzAbA\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xb2a11b236f073662f5a196995863f51c11d006bf7c3de158b316dfa1506c4b79\",\"urls\":[\"bzz-raw://8651649cf0b9efa18c3b01c030276fa320d41adbdc286833417e7f36e357b2f3\",\"dweb:/ipfs/QmafhM2Nd1aP43QVB1eRRZaqRXQKswNfQcWi8U8xjrxCfN\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0x5d1b1dcbc0396f44c1c8d554857f71e3187503bf1e54062bf9ec6782e21f3a08\",\"urls\":[\"bzz-raw://9aa7fa580393aab7ca3d9f606f5ab7434d51e1c0f3632a593fca82c80ef8cc4c\",\"dweb:/ipfs/QmRy84N7QfkwBM2AeR7UB5G1PPHdRLi6s1iyzAwCzevcHe\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040805180820182526005808252646244534c4160d81b6020808401828152855180870190965292855284015281519192918391839162000056916004916200025c565b5080516200006c9060059060208401906200025c565b50506006805461ff001960ff1990911660121716905550620000ab60006200009c6001600160e01b036200012316565b6001600160e01b036200012816565b604080516a4d494e5445525f524f4c4560a81b8152905190819003600b019020620000e3906200009c6001600160e01b036200012316565b604080516a5041555345525f524f4c4560a81b8152905190819003600b0190206200011b906200009c6001600160e01b036200012316565b5050620002fe565b335b90565b6200013d82826001600160e01b036200014116565b5050565b600082815260208181526040909120620001669183906200181a620001c3821b17901c565b156200013d576200017f6001600160e01b036200012316565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000620001e3836001600160a01b0384166001600160e01b03620001ec16565b90505b92915050565b60006200020383836001600160e01b036200024416565b6200023b57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155620001e6565b506000620001e6565b60009081526001919091016020526040902054151590565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200029f57805160ff1916838001178555620002cf565b82800160010185558215620002cf579182015b82811115620002cf578251825591602001919060010190620002b2565b50620002dd929150620002e1565b5090565b6200012591905b80821115620002dd5760008155600101620002e8565b611e47806200030e6000396000f3fe608060405234801561001057600080fd5b506004361061019a5760003560e01c806370a08231116100e4578063a457c2d711610092578063a457c2d7146104ed578063a9059cbb14610519578063b4986fc514610545578063ca15c87314610668578063d539139314610685578063d547741f1461068d578063dd62ed3e146106b9578063e63ab1e9146106e75761019a565b806370a082311461041857806379cc67901461043e5780638456cb591461046a5780639010d07c1461047257806391d14854146104b157806395d89b41146104dd578063a217fddf146104e55761019a565b8063313ce5671161014c578063313ce5671461031d57806336568abe1461033b57806339509351146103675780633f4ba83a1461039357806340c10f191461039b57806342966c68146103c7578063522fe133146103e45780635c975abb146104105761019a565b806306fdde031461019f578063095ea7b31461021c57806318160ddd1461025c5780631e83409a1461027657806323b872dd1461029e578063248a9ca3146102d45780632f2ff15d146102f1575b600080fd5b6101a76106ef565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101e15781810151838201526020016101c9565b50505050905090810190601f16801561020e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102486004803603604081101561023257600080fd5b506001600160a01b038135169060200135610785565b604080519115158252519081900360200190f35b6102646107a3565b60408051918252519081900360200190f35b61029c6004803603602081101561028c57600080fd5b50356001600160a01b03166107a9565b005b610248600480360360608110156102b457600080fd5b506001600160a01b038135811691602081013590911690604001356108fd565b610264600480360360208110156102ea57600080fd5b503561098a565b61029c6004803603604081101561030757600080fd5b50803590602001356001600160a01b031661099f565b610325610a06565b6040805160ff9092168252519081900360200190f35b61029c6004803603604081101561035157600080fd5b50803590602001356001600160a01b0316610a0f565b6102486004803603604081101561037d57600080fd5b506001600160a01b038135169060200135610a70565b61029c610ac4565b61029c600480360360408110156103b157600080fd5b506001600160a01b038135169060200135610b35565b61029c600480360360208110156103dd57600080fd5b5035610b3f565b61029c600480360360408110156103fa57600080fd5b50803590602001356001600160a01b0316610b50565b610248610c36565b6102646004803603602081101561042e57600080fd5b50356001600160a01b0316610c44565b61029c6004803603604081101561045457600080fd5b506001600160a01b038135169060200135610c5f565b61029c610cbf565b6104956004803603604081101561048857600080fd5b5080359060200135610d2e565b604080516001600160a01b039092168252519081900360200190f35b610248600480360360408110156104c757600080fd5b50803590602001356001600160a01b0316610d53565b6101a7610d71565b610264610dd2565b6102486004803603604081101561050357600080fd5b506001600160a01b038135169060200135610dd7565b6102486004803603604081101561052f57600080fd5b506001600160a01b038135169060200135610e45565b61029c6004803603604081101561055b57600080fd5b810190602081018135600160201b81111561057557600080fd5b82018360208201111561058757600080fd5b803590602001918460208302840111600160201b831117156105a857600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156105f757600080fd5b82018360208201111561060957600080fd5b803590602001918460208302840111600160201b8311171561062a57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610e59945050505050565b6102646004803603602081101561067e57600080fd5b5035610fde565b610264610ff5565b61029c600480360360408110156106a357600080fd5b50803590602001356001600160a01b0316611018565b610264600480360360408110156106cf57600080fd5b506001600160a01b0381358116916020013516611071565b61026461109c565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561077b5780601f106107505761010080835404028352916020019161077b565b820191906000526020600020905b81548152906001019060200180831161075e57829003601f168201915b5050505050905090565b60006107996107926110bf565b84846110c3565b5060015b92915050565b60035490565b604080516a4d494e5445525f524f4c4560a81b8152905190819003600b0190206107da906107d56110bf565b610d53565b6108155760405162461bcd60e51b815260040180806020018281038252602e815260200180611d39602e913960400191505060405180910390fd5b6001600160a01b0381166000908152600760205260409020546108695760405162461bcd60e51b815260040180806020018281038252602f815260200180611b85602f913960400191505060405180910390fd5b6001600160a01b03811660009081526008602052604090205460ff16156108c15760405162461bcd60e51b8152600401808060200182810382526022815260200180611cbc6022913960400191505060405180910390fd5b6001600160a01b0381166000908152600860209081526040808320805460ff1916600117905560079091529020546108fa908290610b35565b50565b600061090a8484846111af565b610980846109166110bf565b61097b85604051806060016040528060288152602001611c0a602891396001600160a01b038a166000908152600260205260408120906109546110bf565b6001600160a01b03168152602081019190915260400160002054919063ffffffff61130616565b6110c3565b5060019392505050565b60009081526020819052604090206002015490565b6000828152602081905260409020600201546109bd906107d56110bf565b6109f85760405162461bcd60e51b815260040180806020018281038252602f815260200180611aab602f913960400191505060405180910390fd5b610a02828261139d565b5050565b60065460ff1690565b610a176110bf565b6001600160a01b0316816001600160a01b031614610a665760405162461bcd60e51b815260040180806020018281038252602f815260200180611db9602f913960400191505060405180910390fd5b610a02828261140c565b6000610799610a7d6110bf565b8461097b8560026000610a8e6110bf565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff61147b16565b604080516a5041555345525f524f4c4560a81b8152905190819003600b019020610af0906107d56110bf565b610b2b5760405162461bcd60e51b8152600401808060200182810382526039815260200180611afc6039913960400191505060405180910390fd5b610b336114d5565b565b610a028282611579565b6108fa610b4a6110bf565b82611665565b610b5d60006107d56110bf565b610b985760405162461bcd60e51b815260040180806020018281038252602d815260200180611d8c602d913960400191505060405180910390fd5b6001600160a01b03811660009081526008602052604090205460ff1615610bf05760405162461bcd60e51b8152600401808060200182810382526022815260200180611cbc6022913960400191505060405180910390fd5b6001600160a01b0381166000818152600760205260408082208590555184917fd982c9a0e4f3e18aad52d8d036ad2c1320d034b37f7bb681c7ba61a283226d7991a35050565b600654610100900460ff1690565b6001600160a01b031660009081526001602052604090205490565b6000610c9c82604051806060016040528060248152602001611c3260249139610c8f86610c8a6110bf565b611071565b919063ffffffff61130616565b9050610cb083610caa6110bf565b836110c3565b610cba8383611665565b505050565b604080516a5041555345525f524f4c4560a81b8152905190819003600b019020610ceb906107d56110bf565b610d265760405162461bcd60e51b8152600401808060200182810382526037815260200180611d026037913960400191505060405180910390fd5b610b3361175b565b6000828152602081905260408120610d4c908363ffffffff6117e316565b9392505050565b6000828152602081905260408120610d4c908363ffffffff6117ef16565b60058054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561077b5780601f106107505761010080835404028352916020019161077b565b600081565b6000610799610de46110bf565b8461097b85604051806060016040528060258152602001611d676025913960026000610e0e6110bf565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff61130616565b6000610799610e526110bf565b84846111af565b610e6660006107d56110bf565b610ea15760405162461bcd60e51b815260040180806020018281038252602d815260200180611d8c602d913960400191505060405180910390fd5b8051825114610ee15760405162461bcd60e51b815260040180806020018281038252602e815260200180611b57602e913960400191505060405180910390fd5b60005b8251811015610cba5760086000838381518110610efd57fe5b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff16610fd657828181518110610f3457fe5b602002602001015160076000848481518110610f4c57fe5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002081905550818181518110610f8457fe5b60200260200101516001600160a01b0316838281518110610fa157fe5b60200260200101517fd982c9a0e4f3e18aad52d8d036ad2c1320d034b37f7bb681c7ba61a283226d7960405160405180910390a35b600101610ee4565b600081815260208190526040812061079d90611804565b604080516a4d494e5445525f524f4c4560a81b8152905190819003600b01902081565b600082815260208190526040902060020154611036906107d56110bf565b610a665760405162461bcd60e51b8152600401808060200182810382526030815260200180611bda6030913960400191505060405180910390fd5b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b604080516a5041555345525f524f4c4560a81b8152905190819003600b01902081565b3390565b6001600160a01b0383166111085760405162461bcd60e51b8152600401808060200182810382526024815260200180611cde6024913960400191505060405180910390fd5b6001600160a01b03821661114d5760405162461bcd60e51b8152600401808060200182810382526022815260200180611b356022913960400191505060405180910390fd5b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166111f45760405162461bcd60e51b8152600401808060200182810382526025815260200180611c976025913960400191505060405180910390fd5b6001600160a01b0382166112395760405162461bcd60e51b8152600401808060200182810382526023815260200180611a886023913960400191505060405180910390fd5b61124483838361180f565b61128781604051806060016040528060268152602001611bb4602691396001600160a01b038616600090815260016020526040902054919063ffffffff61130616565b6001600160a01b0380851660009081526001602052604080822093909355908416815220546112bc908263ffffffff61147b16565b6001600160a01b038084166000818152600160209081526040918290209490945580518581529051919392871692600080516020611c5683398151915292918290030190a3505050565b600081848411156113955760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561135a578181015183820152602001611342565b50505050905090810190601f1680156113875780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60008281526020819052604090206113bb908263ffffffff61181a16565b15610a02576113c86110bf565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600082815260208190526040902061142a908263ffffffff61182f16565b15610a02576114376110bf565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b600082820183811015610d4c576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600654610100900460ff16611528576040805162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015290519081900360640190fd5b6006805461ff00191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61155c6110bf565b604080516001600160a01b039092168252519081900360200190a1565b6001600160a01b0382166115d4576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6115e06000838361180f565b6003546115f3908263ffffffff61147b16565b6003556001600160a01b03821660009081526001602052604090205461161f908263ffffffff61147b16565b6001600160a01b0383166000818152600160209081526040808320949094558351858152935192939192600080516020611c568339815191529281900390910190a35050565b6001600160a01b0382166116aa5760405162461bcd60e51b8152600401808060200182810382526021815260200180611c766021913960400191505060405180910390fd5b6116b68260008361180f565b6116f981604051806060016040528060228152602001611ada602291396001600160a01b038516600090815260016020526040902054919063ffffffff61130616565b6001600160a01b038316600090815260016020526040902055600354611725908263ffffffff61184416565b6003556040805182815290516000916001600160a01b03851691600080516020611c568339815191529181900360200190a35050565b600654610100900460ff16156117ab576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6006805461ff0019166101001790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861155c6110bf565b6000610d4c8383611886565b6000610d4c836001600160a01b0384166118ea565b600061079d82611902565b610cba838383611906565b6000610d4c836001600160a01b038416611955565b6000610d4c836001600160a01b03841661199f565b6000610d4c83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611306565b815460009082106118c85760405162461bcd60e51b8152600401808060200182810382526022815260200180611a666022913960400191505060405180910390fd5b8260000182815481106118d757fe5b9060005260206000200154905092915050565b60009081526001919091016020526040902054151590565b5490565b611911838383610cba565b611919610c36565b15610cba5760405162461bcd60e51b815260040180806020018281038252602a815260200180611de8602a913960400191505060405180910390fd5b600061196183836118ea565b6119975750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561079d565b50600061079d565b60008181526001830160205260408120548015611a5b57835460001980830191908101906000908790839081106119d257fe5b90600052602060002001549050808760000184815481106119ef57fe5b600091825260208083209091019290925582815260018981019092526040902090840190558654879080611a1f57fe5b6001900381819060005260206000200160009055905586600101600087815260200190815260200160002060009055600194505050505061079d565b600091505061079d56fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e647345524332303a207472616e7366657220746f20746865207a65726f2061646472657373416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e7445524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332305072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f20756e706175736545524332303a20617070726f766520746f20746865207a65726f20616464726573736244534c41546f6b656e3a206d7573742068617665207468652073616d65206e756d626572206f66206974656d736244534c41546f6b656e3a206d757374206861766520616e20616c6c6f77656420616d6f756e20746f20636c61696d45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef45524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f20616464726573736244534c41546f6b656e3a20746f6b656e7320616c726561647920636c61696d656445524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332305072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f20706175736545524332305072657365744d696e7465725061757365723a206d7573742068617665206d696e74657220726f6c6545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f45524332305072657365744d696e7465725061757365723a206d75737420686176652061646d696e20726f6c65416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c6645524332305061757361626c653a20746f6b656e207472616e73666572207768696c6520706175736564a2646970667358221220868e61b0e7b1b7638ddef4e23744e6e1d0750d74ad338923d1ff2e0e9f737ddb64736f6c63430006060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061019a5760003560e01c806370a08231116100e4578063a457c2d711610092578063a457c2d7146104ed578063a9059cbb14610519578063b4986fc514610545578063ca15c87314610668578063d539139314610685578063d547741f1461068d578063dd62ed3e146106b9578063e63ab1e9146106e75761019a565b806370a082311461041857806379cc67901461043e5780638456cb591461046a5780639010d07c1461047257806391d14854146104b157806395d89b41146104dd578063a217fddf146104e55761019a565b8063313ce5671161014c578063313ce5671461031d57806336568abe1461033b57806339509351146103675780633f4ba83a1461039357806340c10f191461039b57806342966c68146103c7578063522fe133146103e45780635c975abb146104105761019a565b806306fdde031461019f578063095ea7b31461021c57806318160ddd1461025c5780631e83409a1461027657806323b872dd1461029e578063248a9ca3146102d45780632f2ff15d146102f1575b600080fd5b6101a76106ef565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101e15781810151838201526020016101c9565b50505050905090810190601f16801561020e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102486004803603604081101561023257600080fd5b506001600160a01b038135169060200135610785565b604080519115158252519081900360200190f35b6102646107a3565b60408051918252519081900360200190f35b61029c6004803603602081101561028c57600080fd5b50356001600160a01b03166107a9565b005b610248600480360360608110156102b457600080fd5b506001600160a01b038135811691602081013590911690604001356108fd565b610264600480360360208110156102ea57600080fd5b503561098a565b61029c6004803603604081101561030757600080fd5b50803590602001356001600160a01b031661099f565b610325610a06565b6040805160ff9092168252519081900360200190f35b61029c6004803603604081101561035157600080fd5b50803590602001356001600160a01b0316610a0f565b6102486004803603604081101561037d57600080fd5b506001600160a01b038135169060200135610a70565b61029c610ac4565b61029c600480360360408110156103b157600080fd5b506001600160a01b038135169060200135610b35565b61029c600480360360208110156103dd57600080fd5b5035610b3f565b61029c600480360360408110156103fa57600080fd5b50803590602001356001600160a01b0316610b50565b610248610c36565b6102646004803603602081101561042e57600080fd5b50356001600160a01b0316610c44565b61029c6004803603604081101561045457600080fd5b506001600160a01b038135169060200135610c5f565b61029c610cbf565b6104956004803603604081101561048857600080fd5b5080359060200135610d2e565b604080516001600160a01b039092168252519081900360200190f35b610248600480360360408110156104c757600080fd5b50803590602001356001600160a01b0316610d53565b6101a7610d71565b610264610dd2565b6102486004803603604081101561050357600080fd5b506001600160a01b038135169060200135610dd7565b6102486004803603604081101561052f57600080fd5b506001600160a01b038135169060200135610e45565b61029c6004803603604081101561055b57600080fd5b810190602081018135600160201b81111561057557600080fd5b82018360208201111561058757600080fd5b803590602001918460208302840111600160201b831117156105a857600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156105f757600080fd5b82018360208201111561060957600080fd5b803590602001918460208302840111600160201b8311171561062a57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610e59945050505050565b6102646004803603602081101561067e57600080fd5b5035610fde565b610264610ff5565b61029c600480360360408110156106a357600080fd5b50803590602001356001600160a01b0316611018565b610264600480360360408110156106cf57600080fd5b506001600160a01b0381358116916020013516611071565b61026461109c565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561077b5780601f106107505761010080835404028352916020019161077b565b820191906000526020600020905b81548152906001019060200180831161075e57829003601f168201915b5050505050905090565b60006107996107926110bf565b84846110c3565b5060015b92915050565b60035490565b604080516a4d494e5445525f524f4c4560a81b8152905190819003600b0190206107da906107d56110bf565b610d53565b6108155760405162461bcd60e51b815260040180806020018281038252602e815260200180611d39602e913960400191505060405180910390fd5b6001600160a01b0381166000908152600760205260409020546108695760405162461bcd60e51b815260040180806020018281038252602f815260200180611b85602f913960400191505060405180910390fd5b6001600160a01b03811660009081526008602052604090205460ff16156108c15760405162461bcd60e51b8152600401808060200182810382526022815260200180611cbc6022913960400191505060405180910390fd5b6001600160a01b0381166000908152600860209081526040808320805460ff1916600117905560079091529020546108fa908290610b35565b50565b600061090a8484846111af565b610980846109166110bf565b61097b85604051806060016040528060288152602001611c0a602891396001600160a01b038a166000908152600260205260408120906109546110bf565b6001600160a01b03168152602081019190915260400160002054919063ffffffff61130616565b6110c3565b5060019392505050565b60009081526020819052604090206002015490565b6000828152602081905260409020600201546109bd906107d56110bf565b6109f85760405162461bcd60e51b815260040180806020018281038252602f815260200180611aab602f913960400191505060405180910390fd5b610a02828261139d565b5050565b60065460ff1690565b610a176110bf565b6001600160a01b0316816001600160a01b031614610a665760405162461bcd60e51b815260040180806020018281038252602f815260200180611db9602f913960400191505060405180910390fd5b610a02828261140c565b6000610799610a7d6110bf565b8461097b8560026000610a8e6110bf565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff61147b16565b604080516a5041555345525f524f4c4560a81b8152905190819003600b019020610af0906107d56110bf565b610b2b5760405162461bcd60e51b8152600401808060200182810382526039815260200180611afc6039913960400191505060405180910390fd5b610b336114d5565b565b610a028282611579565b6108fa610b4a6110bf565b82611665565b610b5d60006107d56110bf565b610b985760405162461bcd60e51b815260040180806020018281038252602d815260200180611d8c602d913960400191505060405180910390fd5b6001600160a01b03811660009081526008602052604090205460ff1615610bf05760405162461bcd60e51b8152600401808060200182810382526022815260200180611cbc6022913960400191505060405180910390fd5b6001600160a01b0381166000818152600760205260408082208590555184917fd982c9a0e4f3e18aad52d8d036ad2c1320d034b37f7bb681c7ba61a283226d7991a35050565b600654610100900460ff1690565b6001600160a01b031660009081526001602052604090205490565b6000610c9c82604051806060016040528060248152602001611c3260249139610c8f86610c8a6110bf565b611071565b919063ffffffff61130616565b9050610cb083610caa6110bf565b836110c3565b610cba8383611665565b505050565b604080516a5041555345525f524f4c4560a81b8152905190819003600b019020610ceb906107d56110bf565b610d265760405162461bcd60e51b8152600401808060200182810382526037815260200180611d026037913960400191505060405180910390fd5b610b3361175b565b6000828152602081905260408120610d4c908363ffffffff6117e316565b9392505050565b6000828152602081905260408120610d4c908363ffffffff6117ef16565b60058054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561077b5780601f106107505761010080835404028352916020019161077b565b600081565b6000610799610de46110bf565b8461097b85604051806060016040528060258152602001611d676025913960026000610e0e6110bf565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff61130616565b6000610799610e526110bf565b84846111af565b610e6660006107d56110bf565b610ea15760405162461bcd60e51b815260040180806020018281038252602d815260200180611d8c602d913960400191505060405180910390fd5b8051825114610ee15760405162461bcd60e51b815260040180806020018281038252602e815260200180611b57602e913960400191505060405180910390fd5b60005b8251811015610cba5760086000838381518110610efd57fe5b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff16610fd657828181518110610f3457fe5b602002602001015160076000848481518110610f4c57fe5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002081905550818181518110610f8457fe5b60200260200101516001600160a01b0316838281518110610fa157fe5b60200260200101517fd982c9a0e4f3e18aad52d8d036ad2c1320d034b37f7bb681c7ba61a283226d7960405160405180910390a35b600101610ee4565b600081815260208190526040812061079d90611804565b604080516a4d494e5445525f524f4c4560a81b8152905190819003600b01902081565b600082815260208190526040902060020154611036906107d56110bf565b610a665760405162461bcd60e51b8152600401808060200182810382526030815260200180611bda6030913960400191505060405180910390fd5b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b604080516a5041555345525f524f4c4560a81b8152905190819003600b01902081565b3390565b6001600160a01b0383166111085760405162461bcd60e51b8152600401808060200182810382526024815260200180611cde6024913960400191505060405180910390fd5b6001600160a01b03821661114d5760405162461bcd60e51b8152600401808060200182810382526022815260200180611b356022913960400191505060405180910390fd5b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166111f45760405162461bcd60e51b8152600401808060200182810382526025815260200180611c976025913960400191505060405180910390fd5b6001600160a01b0382166112395760405162461bcd60e51b8152600401808060200182810382526023815260200180611a886023913960400191505060405180910390fd5b61124483838361180f565b61128781604051806060016040528060268152602001611bb4602691396001600160a01b038616600090815260016020526040902054919063ffffffff61130616565b6001600160a01b0380851660009081526001602052604080822093909355908416815220546112bc908263ffffffff61147b16565b6001600160a01b038084166000818152600160209081526040918290209490945580518581529051919392871692600080516020611c5683398151915292918290030190a3505050565b600081848411156113955760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561135a578181015183820152602001611342565b50505050905090810190601f1680156113875780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60008281526020819052604090206113bb908263ffffffff61181a16565b15610a02576113c86110bf565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600082815260208190526040902061142a908263ffffffff61182f16565b15610a02576114376110bf565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b600082820183811015610d4c576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600654610100900460ff16611528576040805162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015290519081900360640190fd5b6006805461ff00191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61155c6110bf565b604080516001600160a01b039092168252519081900360200190a1565b6001600160a01b0382166115d4576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6115e06000838361180f565b6003546115f3908263ffffffff61147b16565b6003556001600160a01b03821660009081526001602052604090205461161f908263ffffffff61147b16565b6001600160a01b0383166000818152600160209081526040808320949094558351858152935192939192600080516020611c568339815191529281900390910190a35050565b6001600160a01b0382166116aa5760405162461bcd60e51b8152600401808060200182810382526021815260200180611c766021913960400191505060405180910390fd5b6116b68260008361180f565b6116f981604051806060016040528060228152602001611ada602291396001600160a01b038516600090815260016020526040902054919063ffffffff61130616565b6001600160a01b038316600090815260016020526040902055600354611725908263ffffffff61184416565b6003556040805182815290516000916001600160a01b03851691600080516020611c568339815191529181900360200190a35050565b600654610100900460ff16156117ab576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6006805461ff0019166101001790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861155c6110bf565b6000610d4c8383611886565b6000610d4c836001600160a01b0384166118ea565b600061079d82611902565b610cba838383611906565b6000610d4c836001600160a01b038416611955565b6000610d4c836001600160a01b03841661199f565b6000610d4c83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611306565b815460009082106118c85760405162461bcd60e51b8152600401808060200182810382526022815260200180611a666022913960400191505060405180910390fd5b8260000182815481106118d757fe5b9060005260206000200154905092915050565b60009081526001919091016020526040902054151590565b5490565b611911838383610cba565b611919610c36565b15610cba5760405162461bcd60e51b815260040180806020018281038252602a815260200180611de8602a913960400191505060405180910390fd5b600061196183836118ea565b6119975750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561079d565b50600061079d565b60008181526001830160205260408120548015611a5b57835460001980830191908101906000908790839081106119d257fe5b90600052602060002001549050808760000184815481106119ef57fe5b600091825260208083209091019290925582815260018981019092526040902090840190558654879080611a1f57fe5b6001900381819060005260206000200160009055905586600101600087815260200190815260200160002060009055600194505050505061079d565b600091505061079d56fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e647345524332303a207472616e7366657220746f20746865207a65726f2061646472657373416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e7445524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332305072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f20756e706175736545524332303a20617070726f766520746f20746865207a65726f20616464726573736244534c41546f6b656e3a206d7573742068617665207468652073616d65206e756d626572206f66206974656d736244534c41546f6b656e3a206d757374206861766520616e20616c6c6f77656420616d6f756e20746f20636c61696d45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef45524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f20616464726573736244534c41546f6b656e3a20746f6b656e7320616c726561647920636c61696d656445524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332305072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f20706175736545524332305072657365744d696e7465725061757365723a206d7573742068617665206d696e74657220726f6c6545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f45524332305072657365744d696e7465725061757365723a206d75737420686176652061646d696e20726f6c65416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c6645524332305061757361626c653a20746f6b656e207472616e73666572207768696c6520706175736564a2646970667358221220868e61b0e7b1b7638ddef4e23744e6e1d0750d74ad338923d1ff2e0e9f737ddb64736f6c63430006060033",
  "immutableReferences": {},
  "sourceMap": "711:3592:16:-:0;;;1105:65;5:9:-1;2:2;;;27:1;24;17:12;2:2;-1:-1;1223:237:36;;;;;;;;;;;;-1:-1:-1;;;1223:237:36;;;;;;;;;;;;;;;;;;;;;2085:12:37;;1223:237:36;;;;;;;2085:12:37;;:5;;:12;:::i;:::-;-1:-1:-1;2107:16:37;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;;2133:9:37;:14;;-1:-1:-1;;;;2133:14:37;;;2145:2;2133:14;923:15:44;;;-1:-1:-1;1314:44:36::1;2133:9:37::0;1345:12:36::1;-1:-1:-1::0;;;;;1345:10:36::1;:12:::0;:::i:1;:::-;-1:-1:-1::0;;;;;1314:10:36::1;:44:::0;:::i:1;:::-;947:24;::::0;;-1:-1:-1;;;947:24:36;;;;;;;;::::1;::::0;;;1369:37:::1;::::0;1393:12:::1;-1:-1:-1::0;;;;;1393:10:36::1;:12:::0;:::i:1;1369:37::-;1015:24;::::0;;-1:-1:-1;;;1015:24:36;;;;;;;;::::1;::::0;;;1416:37:::1;::::0;1440:12:::1;-1:-1:-1::0;;;;;1440:10:36::1;:12:::0;:::i:1;1416:37::-;1223:237:::0;;711:3592:16;;590:104:32;677:10;590:104;;:::o;6578:110:33:-;6656:25;6667:4;6673:7;-1:-1:-1;;;;;6656:10:33;:25;:::i;:::-;6578:110;;:::o;7015:184::-;7088:6;:12;;;;;;;;;;;:33;;7113:7;;7088:24;;;;;:33;;:::i;:::-;7084:109;;;7169:12;-1:-1:-1;;;;;7169:10:33;:12;:::i;:::-;-1:-1:-1;;;;;7142:40:33;7160:7;-1:-1:-1;;;;;7142:40:33;7154:4;7142:40;;;;;;;;;;7015:184;;:::o;4864:141:43:-;4934:4;4957:41;4962:3;-1:-1:-1;;;;;4982:14:43;;-1:-1:-1;;;;;4957:4:43;:41;:::i;:::-;4950:48;;4864:141;;;;;:::o;1611:404::-;1674:4;1695:21;1705:3;1710:5;-1:-1:-1;;;;;1695:9:43;:21;:::i;:::-;1690:319;;-1:-1:-1;27:10;;39:1;23:18;;;45:23;;1732:11:43;:23;;;;;;;;;;;;;1912:18;;1890:19;;;:12;;;:19;;;;;;:40;;;;1944:11;;1690:319;-1:-1:-1;1993:5:43;1986:12;;3776:127;3849:4;3872:19;;;:12;;;;;:19;;;;;;:24;;;3776:127::o;711:3592:16:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;711:3592:16;;;-1:-1:-1;711:3592:16;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "711:3592:16:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;711:3592:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;2219:81:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2219:81:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4255:166;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;4255:166:37;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3262:98;;;:::i;:::-;;;;;;;;;;;;;;;;3578:481:16;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3578:481:16;-1:-1:-1;;;;;3578:481:16;;:::i;:::-;;4881:317:37;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;4881:317:37;;;;;;;;;;;;;;;;;:::i;4272:112:33:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;4272:112:33;;:::i;4634:223::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;4634:223:33;;;;;;-1:-1:-1;;;;;4634:223:33;;:::i;3121:81:37:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5808:205:33;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;5808:205:33;;;;;;-1:-1:-1;;;;;5808:205:33;;:::i;5593:215:37:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;5593:215:37;;;;;;;;:::i;2430:175:36:-;;;:::i;4209:92:16:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;4209:92:16;;;;;;;;:::i;481:89:38:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;481:89:38;;:::i;1665:381:16:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1665:381:16;;;;;;-1:-1:-1;;;;;1665:381:16;;:::i;1040:76:44:-;;;:::i;3418:117:37:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3418:117:37;-1:-1:-1;;;;;3418:117:37;;:::i;876:290:38:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;876:290:38;;;;;;;;:::i;2054:169:36:-;;;:::i;3955:136:33:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3955:136:33;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;3955:136:33;;;;;;;;;;;;;;2940:137;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2940:137:33;;;;;;-1:-1:-1;;;;;2940:137:33;;:::i;2413:85:37:-;;;:::i;1717:49:33:-;;;:::i;6295:266:37:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;6295:266:37;;;;;;;;:::i;3738:172::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;3738:172:37;;;;;;;;:::i;2487:641:16:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;2487:641:16;;;;;;;;-1:-1:-1;;;11:28;;8:2;;;52:1;49;42:12;8:2;2487:641:16;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;2487:641:16;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;2487:641:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2487:641:16;;;;;;;;-1:-1:-1;2487:641:16;;-1:-1:-1;;;;;11:28;;8:2;;;52:1;49;42:12;8:2;2487:641:16;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;2487:641:16;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;2487:641:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2487:641:16;;-1:-1:-1;2487:641:16;;-1:-1:-1;;;;;2487:641:16:i;3245:125:33:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3245:125:33;;:::i;909:62:36:-;;;:::i;5091:226:33:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;5091:226:33;;;;;;-1:-1:-1;;;;;5091:226:33;;:::i;3968:149:37:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;3968:149:37;;;;;;;;;;:::i;977:62:36:-;;;:::i;2219:81:37:-;2288:5;2281:12;;;;;;;;-1:-1:-1;;2281:12:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2256:13;;2281:12;;2288:5;;2281:12;;2288:5;2281:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2219:81;:::o;4255:166::-;4338:4;4354:39;4363:12;:10;:12::i;:::-;4377:7;4386:6;4354:8;:39::i;:::-;-1:-1:-1;4410:4:37;4255:166;;;;;:::o;3262:98::-;3341:12;;3262:98;:::o;3578:481:16:-;947:24:36;;;-1:-1:-1;;;947:24:36;;;;;;;;;;;;3649:34:16;;3670:12;:10;:12::i;:::-;3649:7;:34::i;:::-;3628:127;;;;-1:-1:-1;;;3628:127:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3786:26:16;;3815:1;3786:26;;;:16;:26;;;;;;3765:124;;;;-1:-1:-1;;;3765:124:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3908:18:16;;;;;;:8;:18;;;;;;;;3907:19;3899:66;;;;-1:-1:-1;;;3899:66:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3975:18:16;;;;;;:8;:18;;;;;;;;:25;;-1:-1:-1;;3975:25:16;3996:4;3975:25;;;4025:16;:26;;;;;;4010:42;;3984:8;;4010:4;:42::i;:::-;3578:481;:::o;4881:317:37:-;4987:4;5003:36;5013:6;5021:9;5032:6;5003:9;:36::i;:::-;5049:121;5058:6;5066:12;:10;:12::i;:::-;5080:89;5118:6;5080:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5080:19:37;;;;;;:11;:19;;;;;;5100:12;:10;:12::i;:::-;-1:-1:-1;;;;;5080:33:37;;;;;;;;;;;;-1:-1:-1;5080:33:37;;;:89;;:37;:89;:::i;:::-;5049:8;:121::i;:::-;-1:-1:-1;5187:4:37;4881:317;;;;;:::o;4272:112:33:-;4329:7;4355:12;;;;;;;;;;:22;;;;4272:112::o;4634:223::-;4725:6;:12;;;;;;;;;;:22;;;4717:45;;4749:12;:10;:12::i;4717:45::-;4709:105;;;;-1:-1:-1;;;4709:105:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4825:25;4836:4;4842:7;4825:10;:25::i;:::-;4634:223;;:::o;3121:81:37:-;3186:9;;;;3121:81;:::o;5808:205:33:-;5905:12;:10;:12::i;:::-;-1:-1:-1;;;;;5894:23:33;:7;-1:-1:-1;;;;;5894:23:33;;5886:83;;;;-1:-1:-1;;;5886:83:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5980:26;5992:4;5998:7;5980:11;:26::i;5593:215:37:-;5681:4;5697:83;5706:12;:10;:12::i;:::-;5720:7;5729:50;5768:10;5729:11;:25;5741:12;:10;:12::i;:::-;-1:-1:-1;;;;;5729:25:37;;;;;;;;;;;;;;;;;-1:-1:-1;5729:25:37;;;:34;;;;;;;;;;;:50;:38;:50;:::i;2430:175:36:-;1015:24;;;-1:-1:-1;;;1015:24:36;;;;;;;;;;;;2482:34;;2503:12;:10;:12::i;2482:34::-;2474:104;;;;-1:-1:-1;;;2474:104:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2588:10;:8;:10::i;:::-;2430:175::o;4209:92:16:-;4277:17;4283:2;4287:6;4277:5;:17::i;481:89:38:-;536:27;542:12;:10;:12::i;:::-;556:6;536:5;:27::i;1665:381:16:-;1764:41;1762:4:33;1792:12:16;:10;:12::i;1764:41::-;1743:133;;;;-1:-1:-1;;;1743:133:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1895:18:16;;;;;;:8;:18;;;;;;;;1894:19;1886:66;;;;-1:-1:-1;;;1886:66:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1962:26:16;;;;;;:16;:26;;;;;;:36;;;2013:26;1991:7;;2013:26;;;1665:381;;:::o;1040:76:44:-;1102:7;;;;;;;;1040:76::o;3418:117:37:-;-1:-1:-1;;;;;3510:18:37;3484:7;3510:18;;;:9;:18;;;;;;;3418:117::o;876:290:38:-;952:26;981:84;1018:6;981:84;;;;;;;;;;;;;;;;;:32;991:7;1000:12;:10;:12::i;:::-;981:9;:32::i;:::-;:36;:84;;:36;:84;:::i;:::-;952:113;;1076:51;1085:7;1094:12;:10;:12::i;:::-;1108:18;1076:8;:51::i;:::-;1137:22;1143:7;1152:6;1137:5;:22::i;:::-;876:290;;;:::o;2054:169:36:-;1015:24;;;-1:-1:-1;;;1015:24:36;;;;;;;;;;;;2104:34;;2125:12;:10;:12::i;2104:34::-;2096:102;;;;-1:-1:-1;;;2096:102:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2208:8;:6;:8::i;3955:136:33:-;4028:7;4054:12;;;;;;;;;;:30;;4078:5;4054:30;:23;:30;:::i;:::-;4047:37;3955:136;-1:-1:-1;;;3955:136:33:o;2940:137::-;3009:4;3032:12;;;;;;;;;;:38;;3062:7;3032:38;:29;:38;:::i;2413:85:37:-;2484:7;2477:14;;;;;;;;-1:-1:-1;;2477:14:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2452:13;;2477:14;;2484:7;;2477:14;;2484:7;2477:14;;;;;;;;;;;;;;;;;;;;;;;;1717:49:33;1762:4;1717:49;:::o;6295:266:37:-;6388:4;6404:129;6413:12;:10;:12::i;:::-;6427:7;6436:96;6475:15;6436:96;;;;;;;;;;;;;;;;;:11;:25;6448:12;:10;:12::i;:::-;-1:-1:-1;;;;;6436:25:37;;;;;;;;;;;;;;;;;-1:-1:-1;6436:25:37;;;:34;;;;;;;;;;;:96;;:38;:96;:::i;3738:172::-;3824:4;3840:42;3850:12;:10;:12::i;:::-;3864:9;3875:6;3840:9;:42::i;2487:641:16:-;2629:41;1762:4:33;2657:12:16;:10;:12::i;2629:41::-;2608:133;;;;-1:-1:-1;;;2608:133:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2791:9;:16;2772:8;:15;:35;2751:128;;;;-1:-1:-1;;;2751:128:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2894:9;2889:233;2913:8;:15;2909:1;:19;2889:233;;;2954:8;:22;2963:9;2973:1;2963:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2954:22:16;;;;;;;;;;;-1:-1:-1;2954:22:16;;;;2949:163;;3029:8;3038:1;3029:11;;;;;;;;;;;;;;2996:16;:30;3013:9;3023:1;3013:12;;;;;;;;;;;;;;-1:-1:-1;;;;;2996:30:16;-1:-1:-1;;;;;2996:30:16;;;;;;;;;;;;:44;;;;3084:9;3094:1;3084:12;;;;;;;;;;;;;;-1:-1:-1;;;;;3063:34:16;3071:8;3080:1;3071:11;;;;;;;;;;;;;;3063:34;;;;;;;;;;2949:163;2930:3;;2889:233;;3245:125:33;3308:7;3334:12;;;;;;;;;;:29;;:27;:29::i;909:62:36:-;947:24;;;-1:-1:-1;;;947:24:36;;;;;;;;;;;;909:62;:::o;5091:226:33:-;5183:6;:12;;;;;;;;;;:22;;;5175:45;;5207:12;:10;:12::i;5175:45::-;5167:106;;;;-1:-1:-1;;;5167:106:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3968:149:37;-1:-1:-1;;;;;4083:18:37;;;4057:7;4083:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3968:149::o;977:62:36:-;1015:24;;;-1:-1:-1;;;1015:24:36;;;;;;;;;;;;977:62;:::o;590:104:32:-;677:10;590:104;:::o;9357:340:37:-;-1:-1:-1;;;;;9458:19:37;;9450:68;;;;-1:-1:-1;;;9450:68:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9536:21:37;;9528:68;;;;-1:-1:-1;;;9528:68:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9607:18:37;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9658:32;;;;;;;;;;;;;;;;;9357:340;;;:::o;7035:530::-;-1:-1:-1;;;;;7140:20:37;;7132:70;;;;-1:-1:-1;;;7132:70:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7220:23:37;;7212:71;;;;-1:-1:-1;;;7212:71:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7294:47;7315:6;7323:9;7334:6;7294:20;:47::i;:::-;7372:71;7394:6;7372:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7372:17:37;;;;;;:9;:17;;;;;;;:71;;:21;:71;:::i;:::-;-1:-1:-1;;;;;7352:17:37;;;;;;;:9;:17;;;;;;:91;;;;7476:20;;;;;;;:32;;7501:6;7476:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;7453:20:37;;;;;;;:9;:20;;;;;;;;;:55;;;;7523:35;;;;;;;7453:20;;7523:35;;;;-1:-1:-1;;;;;;;;;;;7523:35:37;;;;;;;;7035:530;;;:::o;1746:187:35:-;1832:7;1867:12;1859:6;;;;1851:29;;;;-1:-1:-1;;;1851:29:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1851:29:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1902:5:35;;;1746:187::o;7015:184:33:-;7088:6;:12;;;;;;;;;;:33;;7113:7;7088:33;:24;:33;:::i;:::-;7084:109;;;7169:12;:10;:12::i;:::-;-1:-1:-1;;;;;7142:40:33;7160:7;-1:-1:-1;;;;;7142:40:33;7154:4;7142:40;;;;;;;;;;7015:184;;:::o;7205:188::-;7279:6;:12;;;;;;;;;;:36;;7307:7;7279:36;:27;:36;:::i;:::-;7275:112;;;7363:12;:10;:12::i;:::-;-1:-1:-1;;;;;7336:40:33;7354:7;-1:-1:-1;;;;;7336:40:33;7348:4;7336:40;;;;;;;;;;7205:188;;:::o;874:176:35:-;932:7;963:5;;;986:6;;;;978:46;;;;;-1:-1:-1;;;978:46:35;;;;;;;;;;;;;;;;;;;;;;;;;;;2042:117:44;1610:7;;;;;;;1602:40;;;;;-1:-1:-1;;;1602:40:44;;;;;;;;;;;;-1:-1:-1;;;1602:40:44;;;;;;;;;;;;;;;2100:7:::1;:15:::0;;-1:-1:-1;;2100:15:44::1;::::0;;2130:22:::1;2139:12;:10;:12::i;:::-;2130:22;::::0;;-1:-1:-1;;;;;2130:22:44;;::::1;::::0;;;;;;;::::1;::::0;;::::1;2042:117::o:0;7835:370:37:-;-1:-1:-1;;;;;7918:21:37;;7910:65;;;;;-1:-1:-1;;;7910:65:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;7986:49;8015:1;8019:7;8028:6;7986:20;:49::i;:::-;8061:12;;:24;;8078:6;8061:24;:16;:24;:::i;:::-;8046:12;:39;-1:-1:-1;;;;;8116:18:37;;;;;;:9;:18;;;;;;:30;;8139:6;8116:30;:22;:30;:::i;:::-;-1:-1:-1;;;;;8095:18:37;;;;;;:9;:18;;;;;;;;:51;;;;8161:37;;;;;;;8095:18;;;;-1:-1:-1;;;;;;;;;;;8161:37:37;;;;;;;;;7835:370;;:::o;8524:410::-;-1:-1:-1;;;;;8607:21:37;;8599:67;;;;-1:-1:-1;;;8599:67:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8677:49;8698:7;8715:1;8719:6;8677:20;:49::i;:::-;8758:68;8781:6;8758:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8758:18:37;;;;;;:9;:18;;;;;;;:68;;:22;:68;:::i;:::-;-1:-1:-1;;;;;8737:18:37;;;;;;:9;:18;;;;;:89;8851:12;;:24;;8868:6;8851:24;:16;:24;:::i;:::-;8836:12;:39;8890:37;;;;;;;;8916:1;;-1:-1:-1;;;;;8890:37:37;;;-1:-1:-1;;;;;;;;;;;8890:37:37;;;;;;;;8524:410;;:::o;1795:115:44:-;1346:7;;;;;;;1345:8;1337:37;;;;;-1:-1:-1;;;1337:37:44;;;;;;;;;;;;-1:-1:-1;;;1337:37:44;;;;;;;;;;;;;;;1854:7:::1;:14:::0;;-1:-1:-1;;1854:14:44::1;;;::::0;;1883:20:::1;1890:12;:10;:12::i;6085:147:43:-:0;6159:7;6201:22;6205:3;6217:5;6201:3;:22::i;5401:156::-;5481:4;5504:46;5514:3;-1:-1:-1;;;;;5534:14:43;;5504:9;:46::i;5638:115::-;5701:7;5727:19;5735:3;5727:7;:19::i;2611:181:36:-;2741:44;2768:4;2774:2;2778:6;2741:26;:44::i;4864:141:43:-;4934:4;4957:41;4962:3;-1:-1:-1;;;;;4982:14:43;;4957:4;:41::i;5173:147::-;5246:4;5269:44;5277:3;-1:-1:-1;;;;;5297:14:43;;5269:7;:44::i;1321:134:35:-;1379:7;1405:43;1409:1;1412;1405:43;;;;;;;;;;;;;;;;;:3;:43::i;4423:201:43:-;4517:18;;4490:7;;4517:26;-1:-1:-1;4509:73:43;;;;-1:-1:-1;;;4509:73:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4599:3;:11;;4611:5;4599:18;;;;;;;;;;;;;;;;4592:25;;4423:201;;;;:::o;3776:127::-;3849:4;3872:19;;;:12;;;;;:19;;;;;;:24;;;3776:127::o;3984:107::-;4066:18;;3984:107::o;582:234:39:-;690:44;717:4;723:2;727:6;690:26;:44::i;:::-;754:8;:6;:8::i;:::-;753:9;745:64;;;;-1:-1:-1;;;745:64:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1611:404:43;1674:4;1695:21;1705:3;1710:5;1695:9;:21::i;:::-;1690:319;;-1:-1:-1;27:10;;39:1;23:18;;;45:23;;1732:11:43;:23;;;;;;;;;;;;;1912:18;;1890:19;;;:12;;;:19;;;;;;:40;;;;1944:11;;1690:319;-1:-1:-1;1993:5:43;1986:12;;2183:1512;2249:4;2386:19;;;:12;;;:19;;;;;;2420:15;;2416:1273;;2849:18;;-1:-1:-1;;2801:14:43;;;;2849:22;;;;2777:21;;2849:3;;:22;;3131;;;;;;;;;;;;;;3111:42;;3274:9;3245:3;:11;;3257:13;3245:26;;;;;;;;;;;;;;;;;;;:38;;;;3349:23;;;3391:1;3349:12;;;:23;;;;;;3375:17;;;3349:43;;3498:17;;3349:3;;3498:17;;;;;;;;;;;;;;;;;;;;;;3590:3;:12;;:19;3603:5;3590:19;;;;;;;;;;;3583:26;;;3631:4;3624:11;;;;;;;;2416:1273;3673:5;3666:12;;;;",
  "source": "// bDSLAToken.sol\n// SPDX-License-Identifier: MIT\npragma solidity 0.6.6;\n\nimport \"@openzeppelin/contracts/presets/ERC20PresetMinterPauser.sol\";\n\n/**\n * @dev {bDSLA} token, including:\n *\n *  - ability for holders to burn (destroy) their tokens\n *  - a minter role that allows for token minting (creation)\n *  - a pauser role that allows to stop all token transfers\n *  - a claim procces for DSLA owners\n *\n * This contract uses {AccessControl} to lock permissioned functions using the\n * different roles.\n *\n * The account that deploys the contract will be granted the minter and pauser\n * roles, as well as the default admin role, which will let it grant both minter\n * and pauser roles to other accounts.\n */\n\ncontract bDSLA is ERC20PresetMinterPauser {\n    mapping(address => uint256) private _allowedBalances;\n    mapping(address => bool) private _claimed;\n    event Allowed(uint256 indexed _amount, address indexed _claimer);\n\n    /**\n     * @dev Sets the values for {name} and {symbol}, {decimals} have\n     * a default value of 18.\n     * @notice token name: bDSLA , token symbol: bDSLA\n     */\n    constructor() public ERC20PresetMinterPauser(\"bDSLA\", \"bDSLA\") {}\n\n    /**\n     * @notice the setAllowedAmount function allows the admin to set an amount\n     * of claimable bDSLA based on the balanceOf DSLA token of the claimer on the\n     * mainnet.\n     * @dev allows the claim of `_amount` for `_claimer`.\n     *\n     * @param _amount 1. uint the equivalent amount of DSLA tokens on the mainnet\n     * @param _claimer 2. address of the claimer\n     *\n     *\n     * Requirements:\n     *\n     * - the caller must have the `(DEFAULT_ADMIN_ROLE)`.\n     */\n    function setAllowedAmount(uint256 _amount, address _claimer) public {\n        require(\n            hasRole(DEFAULT_ADMIN_ROLE, _msgSender()),\n            \"ERC20PresetMinterPauser: must have admin role\"\n        );\n        require(!_claimed[_claimer], \"bDSLAToken: tokens already claimed\");\n        _allowedBalances[_claimer] = _amount;\n        emit Allowed(_amount, _claimer);\n    }\n\n    /**\n     * @notice the setAllowedAmounts function allows the admin to set\n     * a claimable amounts of bDSLA for claimers.\n     *\n     * @dev allows the claim of `_amounts` for `_claimers`.\n     *\n     * @param _amounts 1. an array of amounts to be claimed\n     * @param _claimers 2. an array of addresses of the claimers\n     *\n     *\n     * Requirements:\n     *\n     * - the caller must have the `(DEFAULT_ADMIN_ROLE)`.\n     */\n    function setAllowedAmounts(\n        uint256[] memory _amounts,\n        address[] memory _claimers\n    ) public {\n        require(\n            hasRole(DEFAULT_ADMIN_ROLE, _msgSender()),\n            \"ERC20PresetMinterPauser: must have admin role\"\n        );\n        require(\n            _amounts.length == _claimers.length,\n            \"bDSLAToken: must have the same number of items\"\n        );\n        for (uint256 i = 0; i < _amounts.length; i++) {\n            if (!_claimed[_claimers[i]]) {\n                _allowedBalances[_claimers[i]] = _amounts[i];\n                emit Allowed(_amounts[i], _claimers[i]);\n            }\n        }\n    }\n\n    /**\n     * @notice the setAllowedAmounts function allows the admin to set\n     * a claimable amounts of bDSLA for claimers.\n     *\n     * @dev creates new 'bDSLA' tokens for the `_claimer`.\n     *\n     * @param _claimer 1. address of the claimer\n     *\n     *\n     * Requirements:\n     *\n     * - the caller must have the `(MINTER_ROLE)`.\n     * - the claimer should have an allowed balance\n     * - the claim can be done just once\n     */\n    function claim(address _claimer) public {\n        require(\n            hasRole(MINTER_ROLE, _msgSender()),\n            \"ERC20PresetMinterPauser: must have minter role\"\n        );\n        require(\n            _allowedBalances[_claimer] > 0,\n            \"bDSLAToken: must have an allowed amoun to claim\"\n        );\n        require(!_claimed[_claimer], \"bDSLAToken: tokens already claimed\");\n        _claimed[_claimer] = true;\n        mint(_claimer, _allowedBalances[_claimer]);\n    }\n\n    /**\n     * @dev Creates `amount` new tokens for `to`.\n     * @param to 1. address of receiver\n     * @param amount 2. minted amount\n     */\n    function mint(address to, uint256 amount) public override {\n        _mint(to, amount);\n    }\n}\n",
  "sourcePath": "/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/tokens/bDSLA.sol",
  "ast": {
    "absolutePath": "/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/tokens/bDSLA.sol",
    "exportedSymbols": {
      "bDSLA": [
        6773
      ]
    },
    "id": 6774,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6578,
        "literals": [
          "solidity",
          "0.6",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "50:22:16"
      },
      {
        "absolutePath": "@openzeppelin/contracts/presets/ERC20PresetMinterPauser.sol",
        "file": "@openzeppelin/contracts/presets/ERC20PresetMinterPauser.sol",
        "id": 6579,
        "nodeType": "ImportDirective",
        "scope": 6774,
        "sourceUnit": 11535,
        "src": "74:69:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6581,
              "name": "ERC20PresetMinterPauser",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11534,
              "src": "729:23:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20PresetMinterPauser_$11534",
                "typeString": "contract ERC20PresetMinterPauser"
              }
            },
            "id": 6582,
            "nodeType": "InheritanceSpecifier",
            "src": "729:23:16"
          }
        ],
        "contractDependencies": [
          10810,
          11093,
          11534,
          12041,
          12097,
          12134,
          12212,
          13105
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 6580,
          "nodeType": "StructuredDocumentation",
          "src": "145:564:16",
          "text": "@dev {bDSLA} token, including:\n *  - ability for holders to burn (destroy) their tokens\n - a minter role that allows for token minting (creation)\n - a pauser role that allows to stop all token transfers\n - a claim procces for DSLA owners\n * This contract uses {AccessControl} to lock permissioned functions using the\ndifferent roles.\n * The account that deploys the contract will be granted the minter and pauser\nroles, as well as the default admin role, which will let it grant both minter\nand pauser roles to other accounts."
        },
        "fullyImplemented": true,
        "id": 6773,
        "linearizedBaseContracts": [
          6773,
          11534,
          12134,
          13105,
          12097,
          12041,
          12212,
          11093,
          10810
        ],
        "name": "bDSLA",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6586,
            "mutability": "mutable",
            "name": "_allowedBalances",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 6773,
            "src": "759:52:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 6585,
              "keyType": {
                "id": 6583,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "767:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "759:27:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 6584,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "778:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 6590,
            "mutability": "mutable",
            "name": "_claimed",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 6773,
            "src": "817:41:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 6589,
              "keyType": {
                "id": 6587,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "825:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "817:24:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 6588,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "836:4:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 6596,
            "name": "Allowed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6595,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6592,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6596,
                  "src": "878:23:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6591,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "878:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6594,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_claimer",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6596,
                  "src": "903:24:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6593,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "903:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "877:51:16"
            },
            "src": "864:65:16"
          },
          {
            "body": {
              "id": 6604,
              "nodeType": "Block",
              "src": "1168:2:16",
              "statements": []
            },
            "documentation": {
              "id": 6597,
              "nodeType": "StructuredDocumentation",
              "src": "935:165:16",
              "text": "@dev Sets the values for {name} and {symbol}, {decimals} have\na default value of 18.\n@notice token name: bDSLA , token symbol: bDSLA"
            },
            "id": 6605,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "6244534c41",
                    "id": 6600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1150:7:16",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9437f0a135e20863c5708cf6dd64ee7503c7daf952c570e536e9f98f7db581bc",
                      "typeString": "literal_string \"bDSLA\""
                    },
                    "value": "bDSLA"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "6244534c41",
                    "id": 6601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1159:7:16",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9437f0a135e20863c5708cf6dd64ee7503c7daf952c570e536e9f98f7db581bc",
                      "typeString": "literal_string \"bDSLA\""
                    },
                    "value": "bDSLA"
                  }
                ],
                "id": 6602,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6599,
                  "name": "ERC20PresetMinterPauser",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11534,
                  "src": "1126:23:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20PresetMinterPauser_$11534_$",
                    "typeString": "type(contract ERC20PresetMinterPauser)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1126:41:16"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6598,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1116:2:16"
            },
            "returnParameters": {
              "id": 6603,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1168:0:16"
            },
            "scope": 6773,
            "src": "1105:65:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6641,
              "nodeType": "Block",
              "src": "1733:313:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 6615,
                            "name": "DEFAULT_ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10836,
                            "src": "1772:18:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 6616,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10798,
                              "src": "1792:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 6617,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1792:12:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 6614,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10882,
                          "src": "1764:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 6618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1764:41:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332305072657365744d696e7465725061757365723a206d75737420686176652061646d696e20726f6c65",
                        "id": 6619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1819:47:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f954e54666f4174b0688c0dd5f29469840042422fddd6a1edbf310926fe30273",
                          "typeString": "literal_string \"ERC20PresetMinterPauser: must have admin role\""
                        },
                        "value": "ERC20PresetMinterPauser: must have admin role"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f954e54666f4174b0688c0dd5f29469840042422fddd6a1edbf310926fe30273",
                          "typeString": "literal_string \"ERC20PresetMinterPauser: must have admin role\""
                        }
                      ],
                      "id": 6613,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1743:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1743:133:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6621,
                  "nodeType": "ExpressionStatement",
                  "src": "1743:133:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1894:19:16",
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 6623,
                            "name": "_claimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6590,
                            "src": "1895:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 6625,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 6624,
                            "name": "_claimer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6610,
                            "src": "1904:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1895:18:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6244534c41546f6b656e3a20746f6b656e7320616c726561647920636c61696d6564",
                        "id": 6627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1915:36:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c85c62ca35affe0b9092bce01165096b06701b26b9c09c0398b1799e70f1e706",
                          "typeString": "literal_string \"bDSLAToken: tokens already claimed\""
                        },
                        "value": "bDSLAToken: tokens already claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c85c62ca35affe0b9092bce01165096b06701b26b9c09c0398b1799e70f1e706",
                          "typeString": "literal_string \"bDSLAToken: tokens already claimed\""
                        }
                      ],
                      "id": 6622,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1886:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1886:66:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6629,
                  "nodeType": "ExpressionStatement",
                  "src": "1886:66:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 6630,
                        "name": "_allowedBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6586,
                        "src": "1962:16:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 6632,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 6631,
                        "name": "_claimer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6610,
                        "src": "1979:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1962:26:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 6633,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6608,
                      "src": "1991:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1962:36:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6635,
                  "nodeType": "ExpressionStatement",
                  "src": "1962:36:16"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6637,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6608,
                        "src": "2021:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6638,
                        "name": "_claimer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6610,
                        "src": "2030:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6636,
                      "name": "Allowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6596,
                      "src": "2013:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 6639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2013:26:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6640,
                  "nodeType": "EmitStatement",
                  "src": "2008:31:16"
                }
              ]
            },
            "documentation": {
              "id": 6606,
              "nodeType": "StructuredDocumentation",
              "src": "1176:484:16",
              "text": "@notice the setAllowedAmount function allows the admin to set an amount\nof claimable bDSLA based on the balanceOf DSLA token of the claimer on the\nmainnet.\n@dev allows the claim of `_amount` for `_claimer`.\n     * @param _amount 1. uint the equivalent amount of DSLA tokens on the mainnet\n@param _claimer 2. address of the claimer\n     *\nRequirements:\n     * - the caller must have the `(DEFAULT_ADMIN_ROLE)`."
            },
            "functionSelector": "522fe133",
            "id": 6642,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAllowedAmount",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6611,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6608,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6642,
                  "src": "1691:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6607,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1691:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6610,
                  "mutability": "mutable",
                  "name": "_claimer",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6642,
                  "src": "1708:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6609,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1708:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1690:35:16"
            },
            "returnParameters": {
              "id": 6612,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1733:0:16"
            },
            "scope": 6773,
            "src": "1665:381:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6710,
              "nodeType": "Block",
              "src": "2598:530:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 6654,
                            "name": "DEFAULT_ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10836,
                            "src": "2637:18:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 6655,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10798,
                              "src": "2657:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 6656,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2657:12:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 6653,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10882,
                          "src": "2629:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 6657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2629:41:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332305072657365744d696e7465725061757365723a206d75737420686176652061646d696e20726f6c65",
                        "id": 6658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2684:47:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f954e54666f4174b0688c0dd5f29469840042422fddd6a1edbf310926fe30273",
                          "typeString": "literal_string \"ERC20PresetMinterPauser: must have admin role\""
                        },
                        "value": "ERC20PresetMinterPauser: must have admin role"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f954e54666f4174b0688c0dd5f29469840042422fddd6a1edbf310926fe30273",
                          "typeString": "literal_string \"ERC20PresetMinterPauser: must have admin role\""
                        }
                      ],
                      "id": 6652,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2608:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2608:133:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6660,
                  "nodeType": "ExpressionStatement",
                  "src": "2608:133:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 6662,
                            "name": "_amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6646,
                            "src": "2772:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 6663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2772:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 6664,
                            "name": "_claimers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6649,
                            "src": "2791:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 6665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2791:16:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2772:35:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6244534c41546f6b656e3a206d7573742068617665207468652073616d65206e756d626572206f66206974656d73",
                        "id": 6667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2821:48:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_31aa12f01a00bc9daa87ac305ce5cfcbc7d92d0300105d10e46dc53f1aee30ee",
                          "typeString": "literal_string \"bDSLAToken: must have the same number of items\""
                        },
                        "value": "bDSLAToken: must have the same number of items"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_31aa12f01a00bc9daa87ac305ce5cfcbc7d92d0300105d10e46dc53f1aee30ee",
                          "typeString": "literal_string \"bDSLAToken: must have the same number of items\""
                        }
                      ],
                      "id": 6661,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2751:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2751:128:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6669,
                  "nodeType": "ExpressionStatement",
                  "src": "2751:128:16"
                },
                {
                  "body": {
                    "id": 6708,
                    "nodeType": "Block",
                    "src": "2935:187:16",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "id": 6686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "2953:23:16",
                          "subExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 6681,
                              "name": "_claimed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6590,
                              "src": "2954:8:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 6685,
                            "indexExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 6682,
                                "name": "_claimers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6649,
                                "src": "2963:9:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 6684,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 6683,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6671,
                                "src": "2973:1:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2963:12:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2954:22:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 6707,
                        "nodeType": "IfStatement",
                        "src": "2949:163:16",
                        "trueBody": {
                          "id": 6706,
                          "nodeType": "Block",
                          "src": "2978:134:16",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 6695,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 6687,
                                    "name": "_allowedBalances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6586,
                                    "src": "2996:16:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 6691,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 6688,
                                      "name": "_claimers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6649,
                                      "src": "3013:9:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 6690,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 6689,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6671,
                                      "src": "3023:1:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3013:12:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "2996:30:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 6692,
                                    "name": "_amounts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6646,
                                    "src": "3029:8:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 6694,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 6693,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6671,
                                    "src": "3038:1:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3029:11:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2996:44:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 6696,
                              "nodeType": "ExpressionStatement",
                              "src": "2996:44:16"
                            },
                            {
                              "eventCall": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 6698,
                                      "name": "_amounts",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6646,
                                      "src": "3071:8:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 6700,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 6699,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6671,
                                      "src": "3080:1:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3071:11:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 6701,
                                      "name": "_claimers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6649,
                                      "src": "3084:9:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 6703,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 6702,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6671,
                                      "src": "3094:1:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3084:12:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 6697,
                                  "name": "Allowed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6596,
                                  "src": "3063:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                                    "typeString": "function (uint256,address)"
                                  }
                                },
                                "id": 6704,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3063:34:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 6705,
                              "nodeType": "EmitStatement",
                              "src": "3058:39:16"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 6674,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6671,
                      "src": "2909:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 6675,
                        "name": "_amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6646,
                        "src": "2913:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 6676,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2913:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2909:19:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6709,
                  "initializationExpression": {
                    "assignments": [
                      6671
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 6671,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 6709,
                        "src": "2894:9:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 6670,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2894:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 6673,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 6672,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2906:1:16",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2894:13:16"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 6679,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2930:3:16",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 6678,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6671,
                        "src": "2930:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6680,
                    "nodeType": "ExpressionStatement",
                    "src": "2930:3:16"
                  },
                  "nodeType": "ForStatement",
                  "src": "2889:233:16"
                }
              ]
            },
            "documentation": {
              "id": 6643,
              "nodeType": "StructuredDocumentation",
              "src": "2052:430:16",
              "text": "@notice the setAllowedAmounts function allows the admin to set\na claimable amounts of bDSLA for claimers.\n     * @dev allows the claim of `_amounts` for `_claimers`.\n     * @param _amounts 1. an array of amounts to be claimed\n@param _claimers 2. an array of addresses of the claimers\n     *\nRequirements:\n     * - the caller must have the `(DEFAULT_ADMIN_ROLE)`."
            },
            "functionSelector": "b4986fc5",
            "id": 6711,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAllowedAmounts",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6650,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6646,
                  "mutability": "mutable",
                  "name": "_amounts",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6711,
                  "src": "2523:25:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6644,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2523:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6645,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2523:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6649,
                  "mutability": "mutable",
                  "name": "_claimers",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6711,
                  "src": "2558:26:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6647,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2558:7:16",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 6648,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2558:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2513:77:16"
            },
            "returnParameters": {
              "id": 6651,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2598:0:16"
            },
            "scope": 6773,
            "src": "2487:641:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6756,
              "nodeType": "Block",
              "src": "3618:441:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 6719,
                            "name": "MINTER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11419,
                            "src": "3657:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 6720,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10798,
                              "src": "3670:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 6721,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3670:12:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 6718,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10882,
                          "src": "3649:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 6722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3649:34:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332305072657365744d696e7465725061757365723a206d7573742068617665206d696e74657220726f6c65",
                        "id": 6723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3697:48:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ec077d98b318f0b88382705905b7bb11882e663120044d946c57be523bd3d202",
                          "typeString": "literal_string \"ERC20PresetMinterPauser: must have minter role\""
                        },
                        "value": "ERC20PresetMinterPauser: must have minter role"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ec077d98b318f0b88382705905b7bb11882e663120044d946c57be523bd3d202",
                          "typeString": "literal_string \"ERC20PresetMinterPauser: must have minter role\""
                        }
                      ],
                      "id": 6717,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3628:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3628:127:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6725,
                  "nodeType": "ExpressionStatement",
                  "src": "3628:127:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 6727,
                            "name": "_allowedBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6586,
                            "src": "3786:16:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 6729,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 6728,
                            "name": "_claimer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6714,
                            "src": "3803:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3786:26:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 6730,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3815:1:16",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3786:30:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6244534c41546f6b656e3a206d757374206861766520616e20616c6c6f77656420616d6f756e20746f20636c61696d",
                        "id": 6732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3830:49:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3d164fab85c08edf622e79efb6f142f882329b9dc58cb926e92f196289ff3783",
                          "typeString": "literal_string \"bDSLAToken: must have an allowed amoun to claim\""
                        },
                        "value": "bDSLAToken: must have an allowed amoun to claim"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3d164fab85c08edf622e79efb6f142f882329b9dc58cb926e92f196289ff3783",
                          "typeString": "literal_string \"bDSLAToken: must have an allowed amoun to claim\""
                        }
                      ],
                      "id": 6726,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3765:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3765:124:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6734,
                  "nodeType": "ExpressionStatement",
                  "src": "3765:124:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3907:19:16",
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 6736,
                            "name": "_claimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6590,
                            "src": "3908:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 6738,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 6737,
                            "name": "_claimer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6714,
                            "src": "3917:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3908:18:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6244534c41546f6b656e3a20746f6b656e7320616c726561647920636c61696d6564",
                        "id": 6740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3928:36:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c85c62ca35affe0b9092bce01165096b06701b26b9c09c0398b1799e70f1e706",
                          "typeString": "literal_string \"bDSLAToken: tokens already claimed\""
                        },
                        "value": "bDSLAToken: tokens already claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c85c62ca35affe0b9092bce01165096b06701b26b9c09c0398b1799e70f1e706",
                          "typeString": "literal_string \"bDSLAToken: tokens already claimed\""
                        }
                      ],
                      "id": 6735,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3899:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3899:66:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6742,
                  "nodeType": "ExpressionStatement",
                  "src": "3899:66:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 6743,
                        "name": "_claimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6590,
                        "src": "3975:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 6745,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 6744,
                        "name": "_claimer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6714,
                        "src": "3984:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3975:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 6746,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3996:4:16",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3975:25:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6748,
                  "nodeType": "ExpressionStatement",
                  "src": "3975:25:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6750,
                        "name": "_claimer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6714,
                        "src": "4015:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 6751,
                          "name": "_allowedBalances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6586,
                          "src": "4025:16:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 6753,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 6752,
                          "name": "_claimer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6714,
                          "src": "4042:8:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4025:26:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6749,
                      "name": "mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6772
                      ],
                      "referencedDeclaration": 6772,
                      "src": "4010:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 6754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4010:42:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6755,
                  "nodeType": "ExpressionStatement",
                  "src": "4010:42:16"
                }
              ]
            },
            "documentation": {
              "id": 6712,
              "nodeType": "StructuredDocumentation",
              "src": "3134:439:16",
              "text": "@notice the setAllowedAmounts function allows the admin to set\na claimable amounts of bDSLA for claimers.\n     * @dev creates new 'bDSLA' tokens for the `_claimer`.\n     * @param _claimer 1. address of the claimer\n     *\nRequirements:\n     * - the caller must have the `(MINTER_ROLE)`.\n- the claimer should have an allowed balance\n- the claim can be done just once"
            },
            "functionSelector": "1e83409a",
            "id": 6757,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6715,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6714,
                  "mutability": "mutable",
                  "name": "_claimer",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6757,
                  "src": "3593:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6713,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3593:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3592:18:16"
            },
            "returnParameters": {
              "id": 6716,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3618:0:16"
            },
            "scope": 6773,
            "src": "3578:481:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              11478
            ],
            "body": {
              "id": 6771,
              "nodeType": "Block",
              "src": "4267:34:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6767,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6760,
                        "src": "4283:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6768,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6762,
                        "src": "4287:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6766,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11917,
                      "src": "4277:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 6769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4277:17:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6770,
                  "nodeType": "ExpressionStatement",
                  "src": "4277:17:16"
                }
              ]
            },
            "documentation": {
              "id": 6758,
              "nodeType": "StructuredDocumentation",
              "src": "4065:139:16",
              "text": "@dev Creates `amount` new tokens for `to`.\n@param to 1. address of receiver\n@param amount 2. minted amount"
            },
            "functionSelector": "40c10f19",
            "id": 6772,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 6764,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4258:8:16"
            },
            "parameters": {
              "id": 6763,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6760,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6772,
                  "src": "4223:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6759,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4223:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6762,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6772,
                  "src": "4235:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6761,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4235:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4222:28:16"
            },
            "returnParameters": {
              "id": 6765,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4267:0:16"
            },
            "scope": 6773,
            "src": "4209:92:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 6774,
        "src": "711:3592:16"
      }
    ],
    "src": "50:4254:16"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/matiasbn/Desktop/stacktical/stacktical-dsla-contracts/contracts/tokens/bDSLA.sol",
      "exportedSymbols": {
        "bDSLA": [
          6773
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "0.6",
            ".6"
          ]
        },
        "id": 6578,
        "name": "PragmaDirective",
        "src": "50:22:16"
      },
      {
        "attributes": {
          "SourceUnit": 11535,
          "absolutePath": "@openzeppelin/contracts/presets/ERC20PresetMinterPauser.sol",
          "file": "@openzeppelin/contracts/presets/ERC20PresetMinterPauser.sol",
          "scope": 6774,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 6579,
        "name": "ImportDirective",
        "src": "74:69:16"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            10810,
            11093,
            11534,
            12041,
            12097,
            12134,
            12212,
            13105
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            6773,
            11534,
            12134,
            13105,
            12097,
            12041,
            12212,
            11093,
            10810
          ],
          "name": "bDSLA",
          "scope": 6774
        },
        "children": [
          {
            "attributes": {
              "text": "@dev {bDSLA} token, including:\n *  - ability for holders to burn (destroy) their tokens\n - a minter role that allows for token minting (creation)\n - a pauser role that allows to stop all token transfers\n - a claim procces for DSLA owners\n * This contract uses {AccessControl} to lock permissioned functions using the\ndifferent roles.\n * The account that deploys the contract will be granted the minter and pauser\nroles, as well as the default admin role, which will let it grant both minter\nand pauser roles to other accounts."
            },
            "id": 6580,
            "name": "StructuredDocumentation",
            "src": "145:564:16"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC20PresetMinterPauser",
                  "referencedDeclaration": 11534,
                  "type": "contract ERC20PresetMinterPauser"
                },
                "id": 6581,
                "name": "UserDefinedTypeName",
                "src": "729:23:16"
              }
            ],
            "id": 6582,
            "name": "InheritanceSpecifier",
            "src": "729:23:16"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "_allowedBalances",
              "overrides": null,
              "scope": 6773,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => uint256)",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => uint256)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 6583,
                    "name": "ElementaryTypeName",
                    "src": "767:7:16"
                  },
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 6584,
                    "name": "ElementaryTypeName",
                    "src": "778:7:16"
                  }
                ],
                "id": 6585,
                "name": "Mapping",
                "src": "759:27:16"
              }
            ],
            "id": 6586,
            "name": "VariableDeclaration",
            "src": "759:52:16"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "_claimed",
              "overrides": null,
              "scope": 6773,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => bool)",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => bool)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 6587,
                    "name": "ElementaryTypeName",
                    "src": "825:7:16"
                  },
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 6588,
                    "name": "ElementaryTypeName",
                    "src": "836:4:16"
                  }
                ],
                "id": 6589,
                "name": "Mapping",
                "src": "817:24:16"
              }
            ],
            "id": 6590,
            "name": "VariableDeclaration",
            "src": "817:41:16"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "Allowed"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "_amount",
                      "overrides": null,
                      "scope": 6596,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 6591,
                        "name": "ElementaryTypeName",
                        "src": "878:7:16"
                      }
                    ],
                    "id": 6592,
                    "name": "VariableDeclaration",
                    "src": "878:23:16"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "_claimer",
                      "overrides": null,
                      "scope": 6596,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 6593,
                        "name": "ElementaryTypeName",
                        "src": "903:7:16"
                      }
                    ],
                    "id": 6594,
                    "name": "VariableDeclaration",
                    "src": "903:24:16"
                  }
                ],
                "id": 6595,
                "name": "ParameterList",
                "src": "877:51:16"
              }
            ],
            "id": 6596,
            "name": "EventDefinition",
            "src": "864:65:16"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "overrides": null,
              "scope": 6773,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": "@dev Sets the values for {name} and {symbol}, {decimals} have\na default value of 18.\n@notice token name: bDSLA , token symbol: bDSLA"
                },
                "id": 6597,
                "name": "StructuredDocumentation",
                "src": "935:165:16"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 6598,
                "name": "ParameterList",
                "src": "1116:2:16"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 6603,
                "name": "ParameterList",
                "src": "1168:0:16"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 11534,
                      "type": "type(contract ERC20PresetMinterPauser)",
                      "value": "ERC20PresetMinterPauser"
                    },
                    "id": 6599,
                    "name": "Identifier",
                    "src": "1126:23:16"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "6244534c41",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "string",
                      "type": "literal_string \"bDSLA\"",
                      "value": "bDSLA"
                    },
                    "id": 6600,
                    "name": "Literal",
                    "src": "1150:7:16"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "6244534c41",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "string",
                      "type": "literal_string \"bDSLA\"",
                      "value": "bDSLA"
                    },
                    "id": 6601,
                    "name": "Literal",
                    "src": "1159:7:16"
                  }
                ],
                "id": 6602,
                "name": "ModifierInvocation",
                "src": "1126:41:16"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 6604,
                "name": "Block",
                "src": "1168:2:16"
              }
            ],
            "id": 6605,
            "name": "FunctionDefinition",
            "src": "1105:65:16"
          },
          {
            "attributes": {
              "functionSelector": "522fe133",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "setAllowedAmount",
              "overrides": null,
              "scope": 6773,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice the setAllowedAmount function allows the admin to set an amount\nof claimable bDSLA based on the balanceOf DSLA token of the claimer on the\nmainnet.\n@dev allows the claim of `_amount` for `_claimer`.\n     * @param _amount 1. uint the equivalent amount of DSLA tokens on the mainnet\n@param _claimer 2. address of the claimer\n     *\nRequirements:\n     * - the caller must have the `(DEFAULT_ADMIN_ROLE)`."
                },
                "id": 6606,
                "name": "StructuredDocumentation",
                "src": "1176:484:16"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_amount",
                      "overrides": null,
                      "scope": 6642,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 6607,
                        "name": "ElementaryTypeName",
                        "src": "1691:7:16"
                      }
                    ],
                    "id": 6608,
                    "name": "VariableDeclaration",
                    "src": "1691:15:16"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_claimer",
                      "overrides": null,
                      "scope": 6642,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 6609,
                        "name": "ElementaryTypeName",
                        "src": "1708:7:16"
                      }
                    ],
                    "id": 6610,
                    "name": "VariableDeclaration",
                    "src": "1708:16:16"
                  }
                ],
                "id": 6611,
                "name": "ParameterList",
                "src": "1690:35:16"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 6612,
                "name": "ParameterList",
                "src": "1733:0:16"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_f954e54666f4174b0688c0dd5f29469840042422fddd6a1edbf310926fe30273",
                                  "typeString": "literal_string \"ERC20PresetMinterPauser: must have admin role\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 6613,
                            "name": "Identifier",
                            "src": "1743:7:16"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10882,
                                  "type": "function (bytes32,address) view returns (bool)",
                                  "value": "hasRole"
                                },
                                "id": 6614,
                                "name": "Identifier",
                                "src": "1764:7:16"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10836,
                                  "type": "bytes32",
                                  "value": "DEFAULT_ADMIN_ROLE"
                                },
                                "id": 6615,
                                "name": "Identifier",
                                "src": "1772:18:16"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 10798,
                                      "type": "function () view returns (address payable)",
                                      "value": "_msgSender"
                                    },
                                    "id": 6616,
                                    "name": "Identifier",
                                    "src": "1792:10:16"
                                  }
                                ],
                                "id": 6617,
                                "name": "FunctionCall",
                                "src": "1792:12:16"
                              }
                            ],
                            "id": 6618,
                            "name": "FunctionCall",
                            "src": "1764:41:16"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "45524332305072657365744d696e7465725061757365723a206d75737420686176652061646d696e20726f6c65",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"ERC20PresetMinterPauser: must have admin role\"",
                              "value": "ERC20PresetMinterPauser: must have admin role"
                            },
                            "id": 6619,
                            "name": "Literal",
                            "src": "1819:47:16"
                          }
                        ],
                        "id": 6620,
                        "name": "FunctionCall",
                        "src": "1743:133:16"
                      }
                    ],
                    "id": 6621,
                    "name": "ExpressionStatement",
                    "src": "1743:133:16"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c85c62ca35affe0b9092bce01165096b06701b26b9c09c0398b1799e70f1e706",
                                  "typeString": "literal_string \"bDSLAToken: tokens already claimed\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 6622,
                            "name": "Identifier",
                            "src": "1886:7:16"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!",
                              "prefix": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 6590,
                                      "type": "mapping(address => bool)",
                                      "value": "_claimed"
                                    },
                                    "id": 6623,
                                    "name": "Identifier",
                                    "src": "1895:8:16"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 6610,
                                      "type": "address",
                                      "value": "_claimer"
                                    },
                                    "id": 6624,
                                    "name": "Identifier",
                                    "src": "1904:8:16"
                                  }
                                ],
                                "id": 6625,
                                "name": "IndexAccess",
                                "src": "1895:18:16"
                              }
                            ],
                            "id": 6626,
                            "name": "UnaryOperation",
                            "src": "1894:19:16"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "6244534c41546f6b656e3a20746f6b656e7320616c726561647920636c61696d6564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"bDSLAToken: tokens already claimed\"",
                              "value": "bDSLAToken: tokens already claimed"
                            },
                            "id": 6627,
                            "name": "Literal",
                            "src": "1915:36:16"
                          }
                        ],
                        "id": 6628,
                        "name": "FunctionCall",
                        "src": "1886:66:16"
                      }
                    ],
                    "id": 6629,
                    "name": "ExpressionStatement",
                    "src": "1886:66:16"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 6586,
                                  "type": "mapping(address => uint256)",
                                  "value": "_allowedBalances"
                                },
                                "id": 6630,
                                "name": "Identifier",
                                "src": "1962:16:16"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 6610,
                                  "type": "address",
                                  "value": "_claimer"
                                },
                                "id": 6631,
                                "name": "Identifier",
                                "src": "1979:8:16"
                              }
                            ],
                            "id": 6632,
                            "name": "IndexAccess",
                            "src": "1962:26:16"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 6608,
                              "type": "uint256",
                              "value": "_amount"
                            },
                            "id": 6633,
                            "name": "Identifier",
                            "src": "1991:7:16"
                          }
                        ],
                        "id": 6634,
                        "name": "Assignment",
                        "src": "1962:36:16"
                      }
                    ],
                    "id": 6635,
                    "name": "ExpressionStatement",
                    "src": "1962:36:16"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 6596,
                              "type": "function (uint256,address)",
                              "value": "Allowed"
                            },
                            "id": 6636,
                            "name": "Identifier",
                            "src": "2013:7:16"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 6608,
                              "type": "uint256",
                              "value": "_amount"
                            },
                            "id": 6637,
                            "name": "Identifier",
                            "src": "2021:7:16"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 6610,
                              "type": "address",
                              "value": "_claimer"
                            },
                            "id": 6638,
                            "name": "Identifier",
                            "src": "2030:8:16"
                          }
                        ],
                        "id": 6639,
                        "name": "FunctionCall",
                        "src": "2013:26:16"
                      }
                    ],
                    "id": 6640,
                    "name": "EmitStatement",
                    "src": "2008:31:16"
                  }
                ],
                "id": 6641,
                "name": "Block",
                "src": "1733:313:16"
              }
            ],
            "id": 6642,
            "name": "FunctionDefinition",
            "src": "1665:381:16"
          },
          {
            "attributes": {
              "functionSelector": "b4986fc5",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "setAllowedAmounts",
              "overrides": null,
              "scope": 6773,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice the setAllowedAmounts function allows the admin to set\na claimable amounts of bDSLA for claimers.\n     * @dev allows the claim of `_amounts` for `_claimers`.\n     * @param _amounts 1. an array of amounts to be claimed\n@param _claimers 2. an array of addresses of the claimers\n     *\nRequirements:\n     * - the caller must have the `(DEFAULT_ADMIN_ROLE)`."
                },
                "id": 6643,
                "name": "StructuredDocumentation",
                "src": "2052:430:16"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_amounts",
                      "overrides": null,
                      "scope": 6711,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "uint256[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 6644,
                            "name": "ElementaryTypeName",
                            "src": "2523:7:16"
                          }
                        ],
                        "id": 6645,
                        "name": "ArrayTypeName",
                        "src": "2523:9:16"
                      }
                    ],
                    "id": 6646,
                    "name": "VariableDeclaration",
                    "src": "2523:25:16"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_claimers",
                      "overrides": null,
                      "scope": 6711,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "address[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "address[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 6647,
                            "name": "ElementaryTypeName",
                            "src": "2558:7:16"
                          }
                        ],
                        "id": 6648,
                        "name": "ArrayTypeName",
                        "src": "2558:9:16"
                      }
                    ],
                    "id": 6649,
                    "name": "VariableDeclaration",
                    "src": "2558:26:16"
                  }
                ],
                "id": 6650,
                "name": "ParameterList",
                "src": "2513:77:16"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 6651,
                "name": "ParameterList",
                "src": "2598:0:16"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_f954e54666f4174b0688c0dd5f29469840042422fddd6a1edbf310926fe30273",
                                  "typeString": "literal_string \"ERC20PresetMinterPauser: must have admin role\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 6652,
                            "name": "Identifier",
                            "src": "2608:7:16"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10882,
                                  "type": "function (bytes32,address) view returns (bool)",
                                  "value": "hasRole"
                                },
                                "id": 6653,
                                "name": "Identifier",
                                "src": "2629:7:16"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10836,
                                  "type": "bytes32",
                                  "value": "DEFAULT_ADMIN_ROLE"
                                },
                                "id": 6654,
                                "name": "Identifier",
                                "src": "2637:18:16"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 10798,
                                      "type": "function () view returns (address payable)",
                                      "value": "_msgSender"
                                    },
                                    "id": 6655,
                                    "name": "Identifier",
                                    "src": "2657:10:16"
                                  }
                                ],
                                "id": 6656,
                                "name": "FunctionCall",
                                "src": "2657:12:16"
                              }
                            ],
                            "id": 6657,
                            "name": "FunctionCall",
                            "src": "2629:41:16"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "45524332305072657365744d696e7465725061757365723a206d75737420686176652061646d696e20726f6c65",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"ERC20PresetMinterPauser: must have admin role\"",
                              "value": "ERC20PresetMinterPauser: must have admin role"
                            },
                            "id": 6658,
                            "name": "Literal",
                            "src": "2684:47:16"
                          }
                        ],
                        "id": 6659,
                        "name": "FunctionCall",
                        "src": "2608:133:16"
                      }
                    ],
                    "id": 6660,
                    "name": "ExpressionStatement",
                    "src": "2608:133:16"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_31aa12f01a00bc9daa87ac305ce5cfcbc7d92d0300105d10e46dc53f1aee30ee",
                                  "typeString": "literal_string \"bDSLAToken: must have the same number of items\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 6661,
                            "name": "Identifier",
                            "src": "2751:7:16"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "length",
                                  "referencedDeclaration": null,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 6646,
                                      "type": "uint256[] memory",
                                      "value": "_amounts"
                                    },
                                    "id": 6662,
                                    "name": "Identifier",
                                    "src": "2772:8:16"
                                  }
                                ],
                                "id": 6663,
                                "name": "MemberAccess",
                                "src": "2772:15:16"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "length",
                                  "referencedDeclaration": null,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 6649,
                                      "type": "address[] memory",
                                      "value": "_claimers"
                                    },
                                    "id": 6664,
                                    "name": "Identifier",
                                    "src": "2791:9:16"
                                  }
                                ],
                                "id": 6665,
                                "name": "MemberAccess",
                                "src": "2791:16:16"
                              }
                            ],
                            "id": 6666,
                            "name": "BinaryOperation",
                            "src": "2772:35:16"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "6244534c41546f6b656e3a206d7573742068617665207468652073616d65206e756d626572206f66206974656d73",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"bDSLAToken: must have the same number of items\"",
                              "value": "bDSLAToken: must have the same number of items"
                            },
                            "id": 6667,
                            "name": "Literal",
                            "src": "2821:48:16"
                          }
                        ],
                        "id": 6668,
                        "name": "FunctionCall",
                        "src": "2751:128:16"
                      }
                    ],
                    "id": 6669,
                    "name": "ExpressionStatement",
                    "src": "2751:128:16"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "assignments": [
                            6671
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "mutability": "mutable",
                              "name": "i",
                              "overrides": null,
                              "scope": 6709,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "value": null,
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 6670,
                                "name": "ElementaryTypeName",
                                "src": "2894:7:16"
                              }
                            ],
                            "id": 6671,
                            "name": "VariableDeclaration",
                            "src": "2894:9:16"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 6672,
                            "name": "Literal",
                            "src": "2906:1:16"
                          }
                        ],
                        "id": 6673,
                        "name": "VariableDeclarationStatement",
                        "src": "2894:13:16"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 6671,
                              "type": "uint256",
                              "value": "i"
                            },
                            "id": 6674,
                            "name": "Identifier",
                            "src": "2909:1:16"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "length",
                              "referencedDeclaration": null,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 6646,
                                  "type": "uint256[] memory",
                                  "value": "_amounts"
                                },
                                "id": 6675,
                                "name": "Identifier",
                                "src": "2913:8:16"
                              }
                            ],
                            "id": 6676,
                            "name": "MemberAccess",
                            "src": "2913:15:16"
                          }
                        ],
                        "id": 6677,
                        "name": "BinaryOperation",
                        "src": "2909:19:16"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "++",
                              "prefix": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 6671,
                                  "type": "uint256",
                                  "value": "i"
                                },
                                "id": 6678,
                                "name": "Identifier",
                                "src": "2930:1:16"
                              }
                            ],
                            "id": 6679,
                            "name": "UnaryOperation",
                            "src": "2930:3:16"
                          }
                        ],
                        "id": 6680,
                        "name": "ExpressionStatement",
                        "src": "2930:3:16"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "falseBody": null
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "!",
                                  "prefix": true,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 6590,
                                          "type": "mapping(address => bool)",
                                          "value": "_claimed"
                                        },
                                        "id": 6681,
                                        "name": "Identifier",
                                        "src": "2954:8:16"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "address"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 6649,
                                              "type": "address[] memory",
                                              "value": "_claimers"
                                            },
                                            "id": 6682,
                                            "name": "Identifier",
                                            "src": "2963:9:16"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 6671,
                                              "type": "uint256",
                                              "value": "i"
                                            },
                                            "id": 6683,
                                            "name": "Identifier",
                                            "src": "2973:1:16"
                                          }
                                        ],
                                        "id": 6684,
                                        "name": "IndexAccess",
                                        "src": "2963:12:16"
                                      }
                                    ],
                                    "id": 6685,
                                    "name": "IndexAccess",
                                    "src": "2954:22:16"
                                  }
                                ],
                                "id": 6686,
                                "name": "UnaryOperation",
                                "src": "2953:23:16"
                              },
                              {
                                "children": [
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "=",
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "type": "uint256"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 6586,
                                                  "type": "mapping(address => uint256)",
                                                  "value": "_allowedBalances"
                                                },
                                                "id": 6687,
                                                "name": "Identifier",
                                                "src": "2996:16:16"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "type": "address"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 6649,
                                                      "type": "address[] memory",
                                                      "value": "_claimers"
                                                    },
                                                    "id": 6688,
                                                    "name": "Identifier",
                                                    "src": "3013:9:16"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 6671,
                                                      "type": "uint256",
                                                      "value": "i"
                                                    },
                                                    "id": 6689,
                                                    "name": "Identifier",
                                                    "src": "3023:1:16"
                                                  }
                                                ],
                                                "id": 6690,
                                                "name": "IndexAccess",
                                                "src": "3013:12:16"
                                              }
                                            ],
                                            "id": 6691,
                                            "name": "IndexAccess",
                                            "src": "2996:30:16"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "uint256"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 6646,
                                                  "type": "uint256[] memory",
                                                  "value": "_amounts"
                                                },
                                                "id": 6692,
                                                "name": "Identifier",
                                                "src": "3029:8:16"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 6671,
                                                  "type": "uint256",
                                                  "value": "i"
                                                },
                                                "id": 6693,
                                                "name": "Identifier",
                                                "src": "3038:1:16"
                                              }
                                            ],
                                            "id": 6694,
                                            "name": "IndexAccess",
                                            "src": "3029:11:16"
                                          }
                                        ],
                                        "id": 6695,
                                        "name": "Assignment",
                                        "src": "2996:44:16"
                                      }
                                    ],
                                    "id": 6696,
                                    "name": "ExpressionStatement",
                                    "src": "2996:44:16"
                                  },
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "tryCall": false,
                                          "type": "tuple()",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 6596,
                                              "type": "function (uint256,address)",
                                              "value": "Allowed"
                                            },
                                            "id": 6697,
                                            "name": "Identifier",
                                            "src": "3063:7:16"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "uint256"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 6646,
                                                  "type": "uint256[] memory",
                                                  "value": "_amounts"
                                                },
                                                "id": 6698,
                                                "name": "Identifier",
                                                "src": "3071:8:16"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 6671,
                                                  "type": "uint256",
                                                  "value": "i"
                                                },
                                                "id": 6699,
                                                "name": "Identifier",
                                                "src": "3080:1:16"
                                              }
                                            ],
                                            "id": 6700,
                                            "name": "IndexAccess",
                                            "src": "3071:11:16"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "address"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 6649,
                                                  "type": "address[] memory",
                                                  "value": "_claimers"
                                                },
                                                "id": 6701,
                                                "name": "Identifier",
                                                "src": "3084:9:16"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 6671,
                                                  "type": "uint256",
                                                  "value": "i"
                                                },
                                                "id": 6702,
                                                "name": "Identifier",
                                                "src": "3094:1:16"
                                              }
                                            ],
                                            "id": 6703,
                                            "name": "IndexAccess",
                                            "src": "3084:12:16"
                                          }
                                        ],
                                        "id": 6704,
                                        "name": "FunctionCall",
                                        "src": "3063:34:16"
                                      }
                                    ],
                                    "id": 6705,
                                    "name": "EmitStatement",
                                    "src": "3058:39:16"
                                  }
                                ],
                                "id": 6706,
                                "name": "Block",
                                "src": "2978:134:16"
                              }
                            ],
                            "id": 6707,
                            "name": "IfStatement",
                            "src": "2949:163:16"
                          }
                        ],
                        "id": 6708,
                        "name": "Block",
                        "src": "2935:187:16"
                      }
                    ],
                    "id": 6709,
                    "name": "ForStatement",
                    "src": "2889:233:16"
                  }
                ],
                "id": 6710,
                "name": "Block",
                "src": "2598:530:16"
              }
            ],
            "id": 6711,
            "name": "FunctionDefinition",
            "src": "2487:641:16"
          },
          {
            "attributes": {
              "functionSelector": "1e83409a",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "claim",
              "overrides": null,
              "scope": 6773,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice the setAllowedAmounts function allows the admin to set\na claimable amounts of bDSLA for claimers.\n     * @dev creates new 'bDSLA' tokens for the `_claimer`.\n     * @param _claimer 1. address of the claimer\n     *\nRequirements:\n     * - the caller must have the `(MINTER_ROLE)`.\n- the claimer should have an allowed balance\n- the claim can be done just once"
                },
                "id": 6712,
                "name": "StructuredDocumentation",
                "src": "3134:439:16"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_claimer",
                      "overrides": null,
                      "scope": 6757,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 6713,
                        "name": "ElementaryTypeName",
                        "src": "3593:7:16"
                      }
                    ],
                    "id": 6714,
                    "name": "VariableDeclaration",
                    "src": "3593:16:16"
                  }
                ],
                "id": 6715,
                "name": "ParameterList",
                "src": "3592:18:16"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 6716,
                "name": "ParameterList",
                "src": "3618:0:16"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_ec077d98b318f0b88382705905b7bb11882e663120044d946c57be523bd3d202",
                                  "typeString": "literal_string \"ERC20PresetMinterPauser: must have minter role\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 6717,
                            "name": "Identifier",
                            "src": "3628:7:16"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10882,
                                  "type": "function (bytes32,address) view returns (bool)",
                                  "value": "hasRole"
                                },
                                "id": 6718,
                                "name": "Identifier",
                                "src": "3649:7:16"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 11419,
                                  "type": "bytes32",
                                  "value": "MINTER_ROLE"
                                },
                                "id": 6719,
                                "name": "Identifier",
                                "src": "3657:11:16"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 10798,
                                      "type": "function () view returns (address payable)",
                                      "value": "_msgSender"
                                    },
                                    "id": 6720,
                                    "name": "Identifier",
                                    "src": "3670:10:16"
                                  }
                                ],
                                "id": 6721,
                                "name": "FunctionCall",
                                "src": "3670:12:16"
                              }
                            ],
                            "id": 6722,
                            "name": "FunctionCall",
                            "src": "3649:34:16"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "45524332305072657365744d696e7465725061757365723a206d7573742068617665206d696e74657220726f6c65",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"ERC20PresetMinterPauser: must have minter role\"",
                              "value": "ERC20PresetMinterPauser: must have minter role"
                            },
                            "id": 6723,
                            "name": "Literal",
                            "src": "3697:48:16"
                          }
                        ],
                        "id": 6724,
                        "name": "FunctionCall",
                        "src": "3628:127:16"
                      }
                    ],
                    "id": 6725,
                    "name": "ExpressionStatement",
                    "src": "3628:127:16"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_3d164fab85c08edf622e79efb6f142f882329b9dc58cb926e92f196289ff3783",
                                  "typeString": "literal_string \"bDSLAToken: must have an allowed amoun to claim\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 6726,
                            "name": "Identifier",
                            "src": "3765:7:16"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 6586,
                                      "type": "mapping(address => uint256)",
                                      "value": "_allowedBalances"
                                    },
                                    "id": 6727,
                                    "name": "Identifier",
                                    "src": "3786:16:16"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 6714,
                                      "type": "address",
                                      "value": "_claimer"
                                    },
                                    "id": 6728,
                                    "name": "Identifier",
                                    "src": "3803:8:16"
                                  }
                                ],
                                "id": 6729,
                                "name": "IndexAccess",
                                "src": "3786:26:16"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 6730,
                                "name": "Literal",
                                "src": "3815:1:16"
                              }
                            ],
                            "id": 6731,
                            "name": "BinaryOperation",
                            "src": "3786:30:16"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "6244534c41546f6b656e3a206d757374206861766520616e20616c6c6f77656420616d6f756e20746f20636c61696d",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"bDSLAToken: must have an allowed amoun to claim\"",
                              "value": "bDSLAToken: must have an allowed amoun to claim"
                            },
                            "id": 6732,
                            "name": "Literal",
                            "src": "3830:49:16"
                          }
                        ],
                        "id": 6733,
                        "name": "FunctionCall",
                        "src": "3765:124:16"
                      }
                    ],
                    "id": 6734,
                    "name": "ExpressionStatement",
                    "src": "3765:124:16"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c85c62ca35affe0b9092bce01165096b06701b26b9c09c0398b1799e70f1e706",
                                  "typeString": "literal_string \"bDSLAToken: tokens already claimed\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 6735,
                            "name": "Identifier",
                            "src": "3899:7:16"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!",
                              "prefix": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 6590,
                                      "type": "mapping(address => bool)",
                                      "value": "_claimed"
                                    },
                                    "id": 6736,
                                    "name": "Identifier",
                                    "src": "3908:8:16"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 6714,
                                      "type": "address",
                                      "value": "_claimer"
                                    },
                                    "id": 6737,
                                    "name": "Identifier",
                                    "src": "3917:8:16"
                                  }
                                ],
                                "id": 6738,
                                "name": "IndexAccess",
                                "src": "3908:18:16"
                              }
                            ],
                            "id": 6739,
                            "name": "UnaryOperation",
                            "src": "3907:19:16"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "6244534c41546f6b656e3a20746f6b656e7320616c726561647920636c61696d6564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"bDSLAToken: tokens already claimed\"",
                              "value": "bDSLAToken: tokens already claimed"
                            },
                            "id": 6740,
                            "name": "Literal",
                            "src": "3928:36:16"
                          }
                        ],
                        "id": 6741,
                        "name": "FunctionCall",
                        "src": "3899:66:16"
                      }
                    ],
                    "id": 6742,
                    "name": "ExpressionStatement",
                    "src": "3899:66:16"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 6590,
                                  "type": "mapping(address => bool)",
                                  "value": "_claimed"
                                },
                                "id": 6743,
                                "name": "Identifier",
                                "src": "3975:8:16"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 6714,
                                  "type": "address",
                                  "value": "_claimer"
                                },
                                "id": 6744,
                                "name": "Identifier",
                                "src": "3984:8:16"
                              }
                            ],
                            "id": 6745,
                            "name": "IndexAccess",
                            "src": "3975:18:16"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 6746,
                            "name": "Literal",
                            "src": "3996:4:16"
                          }
                        ],
                        "id": 6747,
                        "name": "Assignment",
                        "src": "3975:25:16"
                      }
                    ],
                    "id": 6748,
                    "name": "ExpressionStatement",
                    "src": "3975:25:16"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                6772
                              ],
                              "referencedDeclaration": 6772,
                              "type": "function (address,uint256)",
                              "value": "mint"
                            },
                            "id": 6749,
                            "name": "Identifier",
                            "src": "4010:4:16"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 6714,
                              "type": "address",
                              "value": "_claimer"
                            },
                            "id": 6750,
                            "name": "Identifier",
                            "src": "4015:8:16"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 6586,
                                  "type": "mapping(address => uint256)",
                                  "value": "_allowedBalances"
                                },
                                "id": 6751,
                                "name": "Identifier",
                                "src": "4025:16:16"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 6714,
                                  "type": "address",
                                  "value": "_claimer"
                                },
                                "id": 6752,
                                "name": "Identifier",
                                "src": "4042:8:16"
                              }
                            ],
                            "id": 6753,
                            "name": "IndexAccess",
                            "src": "4025:26:16"
                          }
                        ],
                        "id": 6754,
                        "name": "FunctionCall",
                        "src": "4010:42:16"
                      }
                    ],
                    "id": 6755,
                    "name": "ExpressionStatement",
                    "src": "4010:42:16"
                  }
                ],
                "id": 6756,
                "name": "Block",
                "src": "3618:441:16"
              }
            ],
            "id": 6757,
            "name": "FunctionDefinition",
            "src": "3578:481:16"
          },
          {
            "attributes": {
              "baseFunctions": [
                11478
              ],
              "functionSelector": "40c10f19",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mint",
              "scope": 6773,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": "@dev Creates `amount` new tokens for `to`.\n@param to 1. address of receiver\n@param amount 2. minted amount"
                },
                "id": 6758,
                "name": "StructuredDocumentation",
                "src": "4065:139:16"
              },
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 6764,
                "name": "OverrideSpecifier",
                "src": "4258:8:16"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "to",
                      "overrides": null,
                      "scope": 6772,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 6759,
                        "name": "ElementaryTypeName",
                        "src": "4223:7:16"
                      }
                    ],
                    "id": 6760,
                    "name": "VariableDeclaration",
                    "src": "4223:10:16"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amount",
                      "overrides": null,
                      "scope": 6772,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 6761,
                        "name": "ElementaryTypeName",
                        "src": "4235:7:16"
                      }
                    ],
                    "id": 6762,
                    "name": "VariableDeclaration",
                    "src": "4235:14:16"
                  }
                ],
                "id": 6763,
                "name": "ParameterList",
                "src": "4222:28:16"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 6765,
                "name": "ParameterList",
                "src": "4267:0:16"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 11917,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 6766,
                            "name": "Identifier",
                            "src": "4277:5:16"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 6760,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 6767,
                            "name": "Identifier",
                            "src": "4283:2:16"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 6762,
                              "type": "uint256",
                              "value": "amount"
                            },
                            "id": 6768,
                            "name": "Identifier",
                            "src": "4287:6:16"
                          }
                        ],
                        "id": 6769,
                        "name": "FunctionCall",
                        "src": "4277:17:16"
                      }
                    ],
                    "id": 6770,
                    "name": "ExpressionStatement",
                    "src": "4277:17:16"
                  }
                ],
                "id": 6771,
                "name": "Block",
                "src": "4267:34:16"
              }
            ],
            "id": 6772,
            "name": "FunctionDefinition",
            "src": "4209:92:16"
          }
        ],
        "id": 6773,
        "name": "ContractDefinition",
        "src": "711:3592:16"
      }
    ],
    "id": 6774,
    "name": "SourceUnit",
    "src": "50:4254:16"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.6+commit.6c089d02.Emscripten.clang"
  },
  "networks": {
    "1337": {
      "events": {
        "0xd982c9a0e4f3e18aad52d8d036ad2c1320d034b37f7bb681c7ba61a283226d79": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            }
          ],
          "name": "Allowed",
          "type": "event"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Paused",
          "type": "event"
        },
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Unpaused",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x308CC725450ddaE0AE49233a3c31b17638d85Aec",
      "transactionHash": "0xcce6b136cc80923fde7096117a04b864f8be7ec208520e84c544df6fe11d88d2"
    }
  },
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-03-18T20:38:11.358Z",
  "networkType": "ethereum",
  "devdoc": {
    "details": "{bDSLA} token, including: *  - ability for holders to burn (destroy) their tokens - a minter role that allows for token minting (creation) - a pauser role that allows to stop all token transfers - a claim procces for DSLA owners * This contract uses {AccessControl} to lock permissioned functions using the different roles. * The account that deploys the contract will be granted the minter and pauser roles, as well as the default admin role, which will let it grant both minter and pauser roles to other accounts.",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(uint256)": {
        "details": "Destroys `amount` tokens from the caller.     * See {ERC20-_burn}."
      },
      "burnFrom(address,uint256)": {
        "details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance.     * See {ERC20-_burn} and {ERC20-allowance}.     * Requirements:     * - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
      },
      "claim(address)": {
        "details": "creates new 'bDSLA' tokens for the `_claimer`.",
        "params": {
          "_claimer": "1. address of the claimer     * Requirements:     * - the caller must have the `(MINTER_ROLE)`. - the claimer should have an allowed balance - the claim can be done just once"
        }
      },
      "constructor": {
        "details": "Sets the values for {name} and {symbol}, {decimals} have a default value of 18."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}.     * To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive.     * Role bearers are not sorted in any particular way, and their ordering may change at any point.     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`.     * If `account` had not been already granted `role`, emits a {RoleGranted} event.     * Requirements:     * - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "mint(address,uint256)": {
        "details": "Creates `amount` new tokens for `to`.",
        "params": {
          "amount": "2. minted amount",
          "to": "1. address of receiver"
        }
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "pause()": {
        "details": "Pauses all token transfers.     * See {ERC20Pausable} and {Pausable-_pause}.     * Requirements:     * - the caller must have the `PAUSER_ROLE`."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account.     * Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced).     * If the calling account had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`.     * If `account` had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must have ``role``'s admin role."
      },
      "setAllowedAmount(uint256,address)": {
        "details": "allows the claim of `_amount` for `_claimer`.",
        "params": {
          "_amount": "1. uint the equivalent amount of DSLA tokens on the mainnet",
          "_claimer": "2. address of the claimer     * Requirements:     * - the caller must have the `(DEFAULT_ADMIN_ROLE)`."
        }
      },
      "setAllowedAmounts(uint256[],address[])": {
        "details": "allows the claim of `_amounts` for `_claimers`.",
        "params": {
          "_amounts": "1. an array of amounts to be claimed",
          "_claimers": "2. an array of addresses of the claimers     * Requirements:     * - the caller must have the `(DEFAULT_ADMIN_ROLE)`."
        }
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "unpause()": {
        "details": "Unpauses all token transfers.     * See {ERC20Pausable} and {Pausable-_unpause}.     * Requirements:     * - the caller must have the `PAUSER_ROLE`."
      }
    }
  },
  "userdoc": {
    "methods": {
      "claim(address)": {
        "notice": "the setAllowedAmounts function allows the admin to set a claimable amounts of bDSLA for claimers."
      },
      "constructor": "token name: bDSLA , token symbol: bDSLA",
      "setAllowedAmount(uint256,address)": {
        "notice": "the setAllowedAmount function allows the admin to set an amount of claimable bDSLA based on the balanceOf DSLA token of the claimer on the mainnet."
      },
      "setAllowedAmounts(uint256[],address[])": {
        "notice": "the setAllowedAmounts function allows the admin to set a claimable amounts of bDSLA for claimers."
      }
    }
  }
}