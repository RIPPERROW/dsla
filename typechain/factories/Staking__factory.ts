/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Staking, StakingInterface } from "../Staking";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract SLARegistry",
        name: "_slaRegistry",
        type: "address",
      },
      {
        internalType: "enum PeriodRegistry.PeriodType",
        name: "_periodType",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "_whitelistedContract",
        type: "bool",
      },
      {
        internalType: "uint128",
        name: "_slaID",
        type: "uint128",
      },
      {
        internalType: "uint64",
        name: "_leverage",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "_contractOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "dpTokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "dpTokenName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "dpTokenSymbol",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "duTokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "duTokenName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "duTokenSymbol",
        type: "string",
      },
    ],
    name: "DTokensCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "periodId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardPercentage",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardPercentagePrecision",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardAmount",
        type: "uint256",
      },
    ],
    name: "ProviderRewardGenerated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "periodId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "usersStake",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "leverage",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "compensation",
        type: "uint256",
      },
    ],
    name: "UserCompensationGenerated",
    type: "event",
  },
  {
    inputs: [],
    name: "DSLAburnRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "addAllowedTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_userAddresses",
        type: "address[]",
      },
    ],
    name: "addUsersToWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allowedTokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "dpTokenRegistry",
    outputs: [
      {
        internalType: "contract ERC20PresetMinterPauser",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dslaTokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "duTokenRegistry",
    outputs: [
      {
        internalType: "contract ERC20PresetMinterPauser",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllowedTokensLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_allowedTokenIndex",
        type: "uint256",
      },
    ],
    name: "getTokenStake",
    outputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "stake",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "isAllowedToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "leverage",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "providerPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registeredStakers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_userAddresses",
        type: "address[]",
      },
    ],
    name: "removeUsersFromWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "slaID",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "usersPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistedContract",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101606040523480156200001257600080fd5b5060405162001cec38038062001cec833981810160405260c08110156200003857600080fd5b508051602082015160408301516060840151608085015160a09095015193949293919290916000620000726001600160e01b03620003b716565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350856001600160a01b031663683048356040518163ffffffff1660e01b815260040160206040518083038186803b158015620000f657600080fd5b505afa1580156200010b573d6000803e3d6000fd5b505050506040513d60208110156200012257600080fd5b5051600180546001600160a01b0319166001600160a01b0392831617905560408051639fc4caa560e01b8152905191881691639fc4caa591600480820192602092909190829003018186803b1580156200017b57600080fd5b505afa15801562000190573d6000803e3d6000fd5b505050506040513d6020811015620001a757600080fd5b505160601b6001600160601b031916608052846005811115620001c657fe5b610100816005811115620001d657fe5b60f890811b909152851515901b61012090815260015460408051637b8041cf60e11b815290516000945084936001600160a01b039093169263f700839e9260048082019391829003018186803b1580156200023057600080fd5b505afa15801562000245573d6000803e3d6000fd5b505050506040513d6101208110156200025d57600080fd5b50805160e09091015160015460408051638b8e530960e01b815290519395509193506001600160a01b031691638b8e530991600480820192602092909190829003018186803b158015620002b057600080fd5b505afa158015620002c5573d6000803e3d6000fd5b505050506040513d6020811015620002dc57600080fd5b505160601b6001600160601b03191660c05260e08290526001600160a01b03831660009081526009602052604090208054600160ff19909116179055608085901b6001600160801b03191660a0526001600160401b03818116908516118015906200035157506001846001600160401b031610155b62000398576040805162461bcd60e51b8152602060048201526012602482015271696e636f7272656374206c6576657261676560701b604482015290519081900360640190fd5b50505060c01b6001600160c01b0319166101405250620003bb92505050565b3390565b60805160601c60a05160801c60c05160601c60e0516101005160f81c6101205160f81c6101405160c01c6118d06200041c6000398061100e525080610fea5250508061135652508061173752508061078352806116115250506118d06000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c8063715018a6116100b8578063b7bc347e1161007c578063b7bc347e14610459578063cbe230c314610461578063f2db10fe14610487578063f2fde38b146104ab578063f7e9dfff146104d1578063fd5e6dd1146104d957610142565b8063715018a61461038d5780638d21c770146103955780638da5cb5b146104055780639b19251a1461040d578063a7e8d8d41461043357610142565b80634fb2647e1161010a5780634fb2647e1461022a57806357ac94f0146102505780635ae698ff1461029f5780635c1c20de146103425780635e5f2e261461034a578063639b6fc31461036757610142565b8063171e44ea1461014757806318e454271461016f5780632c86d98e1461018b578063484fbf2b146101b05780634e0c91f6146101e8575b600080fd5b61016d6004803603602081101561015d57600080fd5b50356001600160a01b03166104f6565b005b610177610fe8565b604080519115158252519081900360200190f35b61019361100c565b6040805167ffffffffffffffff9092168252519081900360200190f35b6101d6600480360360208110156101c657600080fd5b50356001600160a01b0316611030565b60408051918252519081900360200190f35b61020e600480360360208110156101fe57600080fd5b50356001600160a01b0316611042565b604080516001600160a01b039092168252519081900360200190f35b61020e6004803603602081101561024057600080fd5b50356001600160a01b031661105d565b61027c6004803603604081101561026657600080fd5b506001600160a01b038135169060200135611078565b604080516001600160a01b03909316835260208301919091528051918290030190f35b61016d600480360360208110156102b557600080fd5b8101906020810181356401000000008111156102d057600080fd5b8201836020820111156102e257600080fd5b8035906020019184602083028401116401000000008311171561030457600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955061124d945050505050565b6101d6611354565b61020e6004803603602081101561036057600080fd5b5035611378565b6101d66004803603602081101561037d57600080fd5b50356001600160a01b031661139f565b61016d6113b1565b61016d600480360360208110156103ab57600080fd5b8101906020810181356401000000008111156103c657600080fd5b8201836020820111156103d857600080fd5b803590602001918460208302840111640100000000831117156103fa57600080fd5b50909250905061145d565b61020e611573565b6101776004803603602081101561042357600080fd5b50356001600160a01b0316611582565b6101776004803603602081101561044957600080fd5b50356001600160a01b0316611597565b6101d66115ac565b6101776004803603602081101561047757600080fd5b50356001600160a01b03166115b2565b61048f61160f565b604080516001600160801b039092168252519081900360200190f35b61016d600480360360208110156104c157600080fd5b50356001600160a01b0316611633565b61020e611735565b61020e600480360360208110156104ef57600080fd5b5035611759565b6104fe611766565b6001600160a01b031661050f611573565b6001600160a01b031614610558576040805162461bcd60e51b8152602060048201819052602482015260008051602061187b833981519152604482015290519081900360640190fd5b60015460408051637b8041cf60e11b815290516000926001600160a01b03169163f700839e91600480830192610120929190829003018186803b15801561059e57600080fd5b505afa1580156105b2573d6000803e3d6000fd5b505050506040513d6101208110156105c957600080fd5b5060c0015190506105d9826115b2565b1561061b576040805162461bcd60e51b815260206004820152600d60248201526c185b1c9958591e481859191959609a1b604482015290519081900360640190fd5b6001546040805163cbe230c360e01b81526001600160a01b0385811660048301529151919092169163cbe230c3916024808301926020929190829003018186803b15801561066857600080fd5b505afa15801561067c573d6000803e3d6000fd5b505050506040513d602081101561069257600080fd5b50516106d3576040805162461bcd60e51b815260206004820152600b60248201526a1b9bdd08185b1b1bddd95960aa1b604482015290519081900360640190fd5b6008805460018101825560008290527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30180546001600160a01b0319166001600160a01b03851617905554811015610765576040805162461bcd60e51b815260206004820152601060248201526f0dac2f040e8ded6cadc40d8cadccee8d60831b604482015290519081900360640190fd5b606073__$7481ba9d958a8dd8ef3f2e538c165f711b$__63fc966d457f00000000000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b815260040180826001600160801b0316815260200191505060006040518083038186803b1580156107df57600080fd5b505af41580156107f3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561081c57600080fd5b810190808051604051939291908464010000000082111561083c57600080fd5b90830190602082018581111561085157600080fd5b825164010000000081118282018810171561086b57600080fd5b82525081516020918201929091019080838360005b83811015610898578181015183820152602001610880565b50505050905090810190601f1680156108c55780820380516001836020036101000a031916815260200191505b50604052505050905060608160405160200180806a44534c412d53484f52542d60a81b815250600b0182805190602001908083835b602083106109195780518252601f1990920191602091820191016108fa565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052905060608260405160200180806744534c412d53502d60c01b81525060080182805190602001908083835b602083106109975780518252601f199092019160209182019101610978565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052905060608360405160200180806944534c412d4c4f4e472d60b01b815250600a0182805190602001908083835b60208310610a175780518252601f1990920191602091820191016109f8565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052905060608460405160200180806744534c412d4c502d60c01b81525060080182805190602001908083835b60208310610a955780518252601f199092019160209182019101610a76565b51815160209384036101000a60001901801990921691161790526040805192909401828103601f19018352808552600154633350214760e11b8252600482019586528b5160448301528b51939850600097506001600160a01b031695506366a0428e948b94508a939092839260248101926064909101918701908083838d5b83811015610b2c578181015183820152602001610b14565b50505050905090810190601f168015610b595780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b83811015610b8c578181015183820152602001610b74565b50505050905090810190601f168015610bb95780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b158015610bda57600080fd5b505af1158015610bee573d6000803e3d6000fd5b505050506040513d6020811015610c0457600080fd5b505160015460408051633350214760e11b8152600481019182528651604482015286519394506000936001600160a01b03909316926366a0428e92889288928291602481019160649091019060208701908083838d5b83811015610c72578181015183820152602001610c5a565b50505050905090810190601f168015610c9f5780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b83811015610cd2578181015183820152602001610cba565b50505050905090810190601f168015610cff5780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b158015610d2057600080fd5b505af1158015610d34573d6000803e3d6000fd5b505050506040513d6020811015610d4a57600080fd5b8101908080519060200190929190505050905080600560008b6001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b0316021790555081600460008b6001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550816001600160a01b0316816001600160a01b03168a6001600160a01b03167fce8c390dc55dbcd418078f1391fbb7d471c01c228fc4464926095354cb27c02987888b8c6040518080602001806020018060200180602001858103855289818151815260200191508051906020019080838360005b83811015610e7d578181015183820152602001610e65565b50505050905090810190601f168015610eaa5780820380516001836020036101000a031916815260200191505b5085810384528851815288516020918201918a019080838360005b83811015610edd578181015183820152602001610ec5565b50505050905090810190601f168015610f0a5780820380516001836020036101000a031916815260200191505b50858103835287518152875160209182019189019080838360005b83811015610f3d578181015183820152602001610f25565b50505050905090810190601f168015610f6a5780820380516001836020036101000a031916815260200191505b50858103825286518152865160209182019188019080838360005b83811015610f9d578181015183820152602001610f85565b50505050905090810190601f168015610fca5780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390a4505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60036020526000908152604090205481565b6004602052600090815260409020546001600160a01b031681565b6005602052600090815260409020546001600160a01b031681565b60008060006008848154811061108a57fe5b6000918252602090912001546001600160a01b031690506110a9611573565b6001600160a01b0316856001600160a01b031614156110e5576001600160a01b0381166000908152600260205260409020549092509050611246565b6001600160a01b0380821660009081526004602081815260408084205481516318160ddd60e01b8152915195169485936318160ddd938382019390929190829003018186803b15801561113757600080fd5b505afa15801561114b573d6000803e3d6000fd5b505050506040513d602081101561116157600080fd5b50519050806111795750909250600091506112469050565b6000826001600160a01b03166370a08231896040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b1580156111d157600080fd5b505afa1580156111e5573d6000803e3d6000fd5b505050506040513d60208110156111fb57600080fd5b50516001600160a01b038516600090815260036020526040902054909150849061123d908490611231908563ffffffff61176a16565b9063ffffffff6117cc16565b95509550505050505b9250929050565b611255611766565b6001600160a01b0316611266611573565b6001600160a01b0316146112af576040805162461bcd60e51b8152602060048201819052602482015260008051602061187b833981519152604482015290519081900360640190fd5b60005b815181101561135057600960008383815181106112cb57fe5b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff166113485760016009600084848151811061130857fe5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff0219169083151502179055505b6001016112b2565b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6008818154811061138557fe5b6000918252602090912001546001600160a01b0316905081565b60026020526000908152604090205481565b6113b9611766565b6001600160a01b03166113ca611573565b6001600160a01b031614611413576040805162461bcd60e51b8152602060048201819052602482015260008051602061187b833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b611465611766565b6001600160a01b0316611476611573565b6001600160a01b0316146114bf576040805162461bcd60e51b8152602060048201819052602482015260008051602061187b833981519152604482015290519081900360640190fd5b60005b8181101561156e57600960008484848181106114da57fe5b602090810292909201356001600160a01b031683525081019190915260400160002054600160ff909116151514156115665760006009600085858581811061151e57fe5b905060200201356001600160a01b03166001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff0219169083151502179055505b6001016114c2565b505050565b6000546001600160a01b031690565b60096020526000908152604090205460ff1681565b60076020526000908152604090205460ff1681565b60085490565b6000805b60085481101561160457826001600160a01b0316600882815481106115d757fe5b6000918252602090912001546001600160a01b031614156115fc57600191505061160a565b6001016115b6565b50600090505b919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b61163b611766565b6001600160a01b031661164c611573565b6001600160a01b031614611695576040805162461bcd60e51b8152602060048201819052602482015260008051602061187b833981519152604482015290519081900360640190fd5b6001600160a01b0381166116da5760405162461bcd60e51b81526004018080602001828103825260268152602001806118346026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b7f000000000000000000000000000000000000000000000000000000000000000081565b6006818154811061138557fe5b3390565b600082611779575060006117c6565b8282028284828161178657fe5b04146117c35760405162461bcd60e51b815260040180806020018281038252602181526020018061185a6021913960400191505060405180910390fd5b90505b92915050565b6000808211611822576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b81838161182b57fe5b04939250505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a2646970667358221220ea0db6635f0b05461b2e268578d6b389ef44a47055082fe451d180b88bab4d9e64736f6c63430006060033";

export class Staking__factory extends ContractFactory {
  constructor(linkLibraryAddresses: StakingLibraryAddresses, signer?: Signer) {
    super(_abi, Staking__factory.linkBytecode(linkLibraryAddresses), signer);
  }

  static linkBytecode(linkLibraryAddresses: StakingLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$7481ba9d958a8dd8ef3f2e538c165f711b\\$__", "g"),
      linkLibraryAddresses["__$7481ba9d958a8dd8ef3f2e538c165f711b$__"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    _slaRegistry: string,
    _periodType: BigNumberish,
    _whitelistedContract: boolean,
    _slaID: BigNumberish,
    _leverage: BigNumberish,
    _contractOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Staking> {
    return super.deploy(
      _slaRegistry,
      _periodType,
      _whitelistedContract,
      _slaID,
      _leverage,
      _contractOwner,
      overrides || {}
    ) as Promise<Staking>;
  }
  getDeployTransaction(
    _slaRegistry: string,
    _periodType: BigNumberish,
    _whitelistedContract: boolean,
    _slaID: BigNumberish,
    _leverage: BigNumberish,
    _contractOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _slaRegistry,
      _periodType,
      _whitelistedContract,
      _slaID,
      _leverage,
      _contractOwner,
      overrides || {}
    );
  }
  attach(address: string): Staking {
    return super.attach(address) as Staking;
  }
  connect(signer: Signer): Staking__factory {
    return super.connect(signer) as Staking__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new utils.Interface(_abi) as StakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Staking {
    return new Contract(address, _abi, signerOrProvider) as Staking;
  }
}

export interface StakingLibraryAddresses {
  ["__$7481ba9d958a8dd8ef3f2e538c165f711b$__"]: string;
}
